<?xml version="1.0" encoding="utf-8"?>
<assembly name="Unity.Abstractions">
  <member name="M:Unity.UnityContainerExtensions.RegisterType``1(Unity.IUnityContainer,Unity.Registration.InjectionMember[])">
    <typeparameter name="T"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </typeparameter>
  </member>
  <member name="M:Unity.UnityContainerExtensions.RegisterType``1(Unity.IUnityContainer,Unity.Lifetime.LifetimeManager,Unity.Registration.InjectionMember[])">
    <typeparameter name="T"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </typeparameter>
  </member>
  <member name="M:Unity.UnityContainerExtensions.RegisterType``1(Unity.IUnityContainer,System.String,Unity.Registration.InjectionMember[])">
    <typeparameter name="T"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </typeparameter>
  </member>
  <member name="M:Unity.UnityContainerExtensions.RegisterType``1(Unity.IUnityContainer,System.String,Unity.Lifetime.LifetimeManager,Unity.Registration.InjectionMember[])">
    <typeparameter name="T"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </typeparameter>
  </member>
  <member name="M:Unity.UnityContainerExtensions.RegisterType``2(Unity.IUnityContainer,Unity.Registration.InjectionMember[])">
    <typeparameter name="TTo"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </typeparameter>
  </member>
  <member name="M:Unity.UnityContainerExtensions.RegisterType``2(Unity.IUnityContainer,Unity.Lifetime.LifetimeManager,Unity.Registration.InjectionMember[])">
    <typeparameter name="TTo"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </typeparameter>
  </member>
  <member name="M:Unity.UnityContainerExtensions.RegisterType``2(Unity.IUnityContainer,System.String,Unity.Registration.InjectionMember[])">
    <typeparameter name="TTo"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </typeparameter>
  </member>
  <member name="M:Unity.UnityContainerExtensions.RegisterType``2(Unity.IUnityContainer,System.String,Unity.Lifetime.LifetimeManager,Unity.Registration.InjectionMember[])">
    <typeparameter name="TTo"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </typeparameter>
  </member>
  <member name="M:Unity.UnityContainerExtensions.RegisterSingleton``1(Unity.IUnityContainer,Unity.Registration.InjectionMember[])">
    <typeparameter name="T"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </typeparameter>
  </member>
  <member name="M:Unity.UnityContainerExtensions.RegisterSingleton``1(Unity.IUnityContainer,System.String,Unity.Registration.InjectionMember[])">
    <typeparameter name="T"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </typeparameter>
  </member>
  <member name="M:Unity.UnityContainerExtensions.RegisterSingleton``2(Unity.IUnityContainer,Unity.Registration.InjectionMember[])">
    <typeparameter name="TTo"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </typeparameter>
  </member>
  <member name="M:Unity.UnityContainerExtensions.RegisterSingleton``2(Unity.IUnityContainer,System.String,Unity.Registration.InjectionMember[])">
    <typeparameter name="TTo"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </typeparameter>
  </member>
  <member name="M:Unity.UnityContainerExtensions.RegisterType(Unity.IUnityContainer,System.Type,Unity.Registration.InjectionMember[])">
    <parameter name="t"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </parameter>
  </member>
  <member name="M:Unity.UnityContainerExtensions.RegisterType(Unity.IUnityContainer,System.Type,Unity.Lifetime.LifetimeManager,Unity.Registration.InjectionMember[])">
    <parameter name="t"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </parameter>
  </member>
  <member name="M:Unity.UnityContainerExtensions.RegisterType(Unity.IUnityContainer,System.Type,System.String,Unity.Registration.InjectionMember[])">
    <parameter name="t"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </parameter>
  </member>
  <member name="M:Unity.UnityContainerExtensions.RegisterType(Unity.IUnityContainer,System.Type,System.String,Unity.Lifetime.LifetimeManager,Unity.Registration.InjectionMember[])">
    <parameter name="t"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </parameter>
  </member>
  <member name="M:Unity.UnityContainerExtensions.RegisterType(Unity.IUnityContainer,System.Type,System.Type,Unity.Registration.InjectionMember[])">
    <parameter name="to"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </parameter>
  </member>
  <member name="M:Unity.UnityContainerExtensions.RegisterType(Unity.IUnityContainer,System.Type,System.Type,System.String,Unity.Registration.InjectionMember[])">
    <parameter name="to"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </parameter>
  </member>
  <member name="M:Unity.UnityContainerExtensions.RegisterType(Unity.IUnityContainer,System.Type,System.Type,Unity.Lifetime.LifetimeManager,Unity.Registration.InjectionMember[])">
    <parameter name="to"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </parameter>
  </member>
  <member name="M:Unity.UnityContainerExtensions.RegisterSingleton(Unity.IUnityContainer,System.Type,Unity.Registration.InjectionMember[])">
    <parameter name="t"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </parameter>
  </member>
  <member name="M:Unity.UnityContainerExtensions.RegisterSingleton(Unity.IUnityContainer,System.Type,System.String,Unity.Registration.InjectionMember[])">
    <parameter name="t"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </parameter>
  </member>
  <member name="M:Unity.UnityContainerExtensions.RegisterSingleton(Unity.IUnityContainer,System.Type,System.Type,Unity.Registration.InjectionMember[])">
    <parameter name="to"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </parameter>
  </member>
  <member name="M:Unity.UnityContainerExtensions.RegisterSingleton(Unity.IUnityContainer,System.Type,System.Type,System.String,Unity.Registration.InjectionMember[])">
    <parameter name="to"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </parameter>
  </member>
  <member name="M:Unity.IUnityContainer.RegisterType(System.Type,System.Type,System.String,Unity.Lifetime.LifetimeManager,Unity.Registration.InjectionMember[])">
    <parameter name="typeTo"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </parameter>
  </member>
</assembly>