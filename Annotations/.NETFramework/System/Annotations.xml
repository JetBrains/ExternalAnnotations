<?xml version="1.0" encoding="utf-8"?>
<assembly name="System">
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.CmdArgsFromParameters(System.CodeDom.Compiler.CompilerParameters)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="options">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.Compile(System.CodeDom.Compiler.CompilerParameters,System.String,System.String,System.String,System.String@,System.Int32@,System.String)">
    <parameter name="options">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="compilerDirectory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="compilerExe">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:Microsoft.CSharp.CSharpCodeGenerator.CompilerName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.ContinueOnNewLine(System.String)">
    <parameter name="st">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.CreateEscapedIdentifier(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.CreateValidIdentifier(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:Microsoft.CSharp.CSharpCodeGenerator.FileExtension">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.FromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="options">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.FromDomBatch(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="options">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ea">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.FromFile(System.CodeDom.Compiler.CompilerParameters,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="options">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.FromFileBatch(System.CodeDom.Compiler.CompilerParameters,System.String[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="options">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="fileNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.FromSource(System.CodeDom.Compiler.CompilerParameters,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="options">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.FromSourceBatch(System.CodeDom.Compiler.CompilerParameters,System.String[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="options">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="sources">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateArgumentReferenceExpression(System.CodeDom.CodeArgumentReferenceExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateArrayCreateExpression(System.CodeDom.CodeArrayCreateExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateArrayIndexerExpression(System.CodeDom.CodeArrayIndexerExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateAssignStatement(System.CodeDom.CodeAssignStatement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateAttachEventStatement(System.CodeDom.CodeAttachEventStatement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateAttributes(System.CodeDom.CodeAttributeDeclarationCollection)">
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateAttributes(System.CodeDom.CodeAttributeDeclarationCollection,System.String)">
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateAttributes(System.CodeDom.CodeAttributeDeclarationCollection,System.String,System.Boolean)">
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateBinaryOperatorExpression(System.CodeDom.CodeBinaryOperatorExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateCastExpression(System.CodeDom.CodeCastExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateChecksumPragma(System.CodeDom.CodeChecksumPragma)">
    <parameter name="checksumPragma">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateCodeRegionDirective(System.CodeDom.CodeRegionDirective)">
    <parameter name="regionDirective">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateComment(System.CodeDom.CodeComment)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateCommentStatement(System.CodeDom.CodeCommentStatement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateCommentStatements(System.CodeDom.CodeCommentStatementCollection)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateCompileUnit(System.CodeDom.CodeCompileUnit)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateCompileUnitEnd(System.CodeDom.CodeCompileUnit)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateCompileUnitStart(System.CodeDom.CodeCompileUnit)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateConditionStatement(System.CodeDom.CodeConditionStatement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateConstructor(System.CodeDom.CodeConstructor,System.CodeDom.CodeTypeDeclaration)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateConstructors(System.CodeDom.CodeTypeDeclaration)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateDefaultValueExpression(System.CodeDom.CodeDefaultValueExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateDelegateCreateExpression(System.CodeDom.CodeDelegateCreateExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateDelegateInvokeExpression(System.CodeDom.CodeDelegateInvokeExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateDirectionExpression(System.CodeDom.CodeDirectionExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateDirectives(System.CodeDom.CodeDirectiveCollection)">
    <parameter name="directives">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateEntryPointMethod(System.CodeDom.CodeEntryPointMethod,System.CodeDom.CodeTypeDeclaration)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateEvent(System.CodeDom.CodeMemberEvent,System.CodeDom.CodeTypeDeclaration)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateEventReferenceExpression(System.CodeDom.CodeEventReferenceExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateEvents(System.CodeDom.CodeTypeDeclaration)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateExpression(System.CodeDom.CodeExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateExpressionStatement(System.CodeDom.CodeExpressionStatement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateField(System.CodeDom.CodeMemberField)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateFieldReferenceExpression(System.CodeDom.CodeFieldReferenceExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateFields(System.CodeDom.CodeTypeDeclaration)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateGotoStatement(System.CodeDom.CodeGotoStatement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateIndexerExpression(System.CodeDom.CodeIndexerExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateIterationStatement(System.CodeDom.CodeIterationStatement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateLabeledStatement(System.CodeDom.CodeLabeledStatement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateLinePragmaStart(System.CodeDom.CodeLinePragma)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateMethod(System.CodeDom.CodeMemberMethod,System.CodeDom.CodeTypeDeclaration)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateMethodInvokeExpression(System.CodeDom.CodeMethodInvokeExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateMethodReferenceExpression(System.CodeDom.CodeMethodReferenceExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateMethodReturnStatement(System.CodeDom.CodeMethodReturnStatement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateMethods(System.CodeDom.CodeTypeDeclaration)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateNamespace(System.CodeDom.CodeNamespace)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateNamespaceEnd(System.CodeDom.CodeNamespace)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateNamespaceImport(System.CodeDom.CodeNamespaceImport)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateNamespaceImports(System.CodeDom.CodeNamespace)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateNamespaces(System.CodeDom.CodeCompileUnit)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateNamespaceStart(System.CodeDom.CodeNamespace)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateNestedTypes(System.CodeDom.CodeTypeDeclaration)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateObjectCreateExpression(System.CodeDom.CodeObjectCreateExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateParameterDeclarationExpression(System.CodeDom.CodeParameterDeclarationExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GeneratePrimitiveExpression(System.CodeDom.CodePrimitiveExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GeneratePrimitiveExpressionBase(System.CodeDom.CodePrimitiveExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateProperties(System.CodeDom.CodeTypeDeclaration)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateProperty(System.CodeDom.CodeMemberProperty,System.CodeDom.CodeTypeDeclaration)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GeneratePropertyReferenceExpression(System.CodeDom.CodePropertyReferenceExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateRemoveEventStatement(System.CodeDom.CodeRemoveEventStatement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateSnippetCompileUnit(System.CodeDom.CodeSnippetCompileUnit)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateSnippetExpression(System.CodeDom.CodeSnippetExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateSnippetMember(System.CodeDom.CodeSnippetTypeMember)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateSnippetMembers(System.CodeDom.CodeTypeDeclaration)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateSnippetStatement(System.CodeDom.CodeSnippetStatement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateStatement(System.CodeDom.CodeStatement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateStatements(System.CodeDom.CodeStatementCollection)">
    <parameter name="stms">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateThrowExceptionStatement(System.CodeDom.CodeThrowExceptionStatement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateTryCatchFinallyStatement(System.CodeDom.CodeTryCatchFinallyStatement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateType(System.CodeDom.CodeTypeDeclaration)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateTypeConstructor(System.CodeDom.CodeTypeConstructor)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateTypeConstructors(System.CodeDom.CodeTypeDeclaration)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateTypeMember(System.CodeDom.CodeTypeMember,System.CodeDom.CodeTypeDeclaration)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateTypeOfExpression(System.CodeDom.CodeTypeOfExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateTypeReferenceExpression(System.CodeDom.CodeTypeReferenceExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateTypes(System.CodeDom.CodeNamespace)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateTypeStart(System.CodeDom.CodeTypeDeclaration)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateVariableDeclarationStatement(System.CodeDom.CodeVariableDeclarationStatement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GenerateVariableReferenceExpression(System.CodeDom.CodeVariableReferenceExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GetBaseTypeOutput(System.CodeDom.CodeTypeReference)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="typeRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GetResponseFileCmdArgs(System.CodeDom.Compiler.CompilerParameters,System.String)">
    <parameter name="options">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GetTypeArgumentsOutput(System.CodeDom.CodeTypeReferenceCollection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="typeArguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GetTypeArgumentsOutput(System.CodeDom.CodeTypeReferenceCollection,System.Int32,System.Int32,System.Text.StringBuilder)">
    <parameter name="typeArguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="sb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GetTypeOutput(System.CodeDom.CodeTypeReference)">
    <parameter name="typeRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.GetUserData(System.CodeDom.CodeObject,System.String,System.Boolean)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.IsKeyword(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.IsPrefixTwoUnderscore(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:Microsoft.CSharp.CSharpCodeGenerator.NullToken">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.OutputAttributeArgument(System.CodeDom.CodeAttributeArgument)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.OutputExpressionList(System.CodeDom.CodeExpressionCollection)">
    <parameter name="expressions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.OutputExpressionList(System.CodeDom.CodeExpressionCollection,System.Boolean)">
    <parameter name="expressions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.OutputIdentifier(System.String)">
    <parameter name="ident">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.OutputParameters(System.CodeDom.CodeParameterDeclarationExpressionCollection)">
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.OutputType(System.CodeDom.CodeTypeReference)">
    <parameter name="typeRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.OutputTypeAttributes(System.CodeDom.CodeTypeDeclaration)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.OutputTypeNamePair(System.CodeDom.CodeTypeReference,System.String)">
    <parameter name="typeRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.OutputTypeParameterConstraints(System.CodeDom.CodeTypeParameterCollection)">
    <parameter name="typeParameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.OutputTypeParameters(System.CodeDom.CodeTypeParameterCollection)">
    <parameter name="typeParameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.ProcessCompilerOutputLine(System.CodeDom.Compiler.CompilerResults,System.String)">
    <parameter name="results">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="line">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.QuoteSnippetString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.QuoteSnippetStringCStyle(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.QuoteSnippetStringVerbatimStyle(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.ResolveReferencedAssemblies(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit)">
    <parameter name="options">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.System#CodeDom#Compiler#ICodeCompiler#CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="options">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.System#CodeDom#Compiler#ICodeCompiler#CompileAssemblyFromDomBatch(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="ea">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="options">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.System#CodeDom#Compiler#ICodeCompiler#CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="options">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.System#CodeDom#Compiler#ICodeCompiler#CompileAssemblyFromFileBatch(System.CodeDom.Compiler.CompilerParameters,System.String[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="fileNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="options">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.System#CodeDom#Compiler#ICodeCompiler#CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="options">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.System#CodeDom#Compiler#ICodeCompiler#CompileAssemblyFromSourceBatch(System.CodeDom.Compiler.CompilerParameters,System.String[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="sources">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="options">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpCodeProvider.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
    <parameter name="providerOptions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpModifierAttributeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:Microsoft.CSharp.CSharpModifierAttributeConverter.DefaultValue">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:Microsoft.CSharp.CSharpModifierAttributeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.CSharpModifierAttributeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.VisualBasic.VBCodeGenerator.AllowLateBound(System.CodeDom.CodeCompileUnit)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.VisualBasic.VBCodeGenerator.AppendEscapedChar(System.Text.StringBuilder,System.Char)">
    <parameter name="b">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.VisualBasic.VBCodeGenerator.EnsureInDoubleQuotes(System.Boolean@,System.Text.StringBuilder)">
    <parameter name="b">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.VisualBasic.VBCodeGenerator.EnsureNotInDoubleQuotes(System.Boolean@,System.Text.StringBuilder)">
    <parameter name="b">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.VisualBasic.VBCodeGenerator.GenerateChecksumPragma(System.CodeDom.CodeChecksumPragma)">
    <parameter name="checksumPragma">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.VisualBasic.VBCodeGenerator.GenerateCodeRegionDirective(System.CodeDom.CodeRegionDirective)">
    <parameter name="regionDirective">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.VisualBasic.VBCodeGenerator.GenerateFormalEventReferenceExpression(System.CodeDom.CodeEventReferenceExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.VisualBasic.VBCodeGenerator.GenerateNotIsNullExpression(System.CodeDom.CodeExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.VisualBasic.VBCodeGenerator.GenerateVBStatements(System.CodeDom.CodeStatementCollection)">
    <parameter name="stms">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.VisualBasic.VBCodeGenerator.GetArrayPostfix(System.CodeDom.CodeTypeReference)">
    <parameter name="typeRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.VisualBasic.VBCodeGenerator.GetBaseTypeOutput(System.CodeDom.CodeTypeReference)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="typeRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.VisualBasic.VBCodeGenerator.GetTypeArgumentsOutput(System.CodeDom.CodeTypeReferenceCollection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="typeArguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.VisualBasic.VBCodeGenerator.GetTypeArgumentsOutput(System.CodeDom.CodeTypeReferenceCollection,System.Int32,System.Int32,System.Text.StringBuilder)">
    <parameter name="typeArguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="sb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.VisualBasic.VBCodeGenerator.GetTypeOutputWithoutArrayPostFix(System.CodeDom.CodeTypeReference)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="typeRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.VisualBasic.VBCodeGenerator.GetUserData(System.CodeDom.CodeObject,System.String,System.Boolean)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.VisualBasic.VBCodeGenerator.IsKeyword(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.VisualBasic.VBCodeGenerator.MethodIsOverloaded(System.CodeDom.CodeMemberMethod,System.CodeDom.CodeTypeDeclaration)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="c">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.VisualBasic.VBCodeGenerator.OutputArrayPostfix(System.CodeDom.CodeTypeReference)">
    <parameter name="typeRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.VisualBasic.VBCodeGenerator.OutputAttributes(System.CodeDom.CodeAttributeDeclarationCollection,System.Boolean)">
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.VisualBasic.VBCodeGenerator.OutputAttributes(System.CodeDom.CodeAttributeDeclarationCollection,System.Boolean,System.String,System.Boolean)">
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.VisualBasic.VBCodeGenerator.OutputTypeAttributes(System.CodeDom.CodeTypeDeclaration)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.VisualBasic.VBCodeGenerator.OutputTypeNamePair(System.CodeDom.CodeTypeReference,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.VisualBasic.VBCodeGenerator.OutputTypeParameterConstraints(System.CodeDom.CodeTypeParameter)">
    <parameter name="typeParameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.VisualBasic.VBCodeGenerator.OutputTypeParameters(System.CodeDom.CodeTypeParameterCollection)">
    <parameter name="typeParameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.VisualBasic.VBCodeGenerator.PropertyIsOverloaded(System.CodeDom.CodeMemberProperty,System.CodeDom.CodeTypeDeclaration)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="c">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.VisualBasic.VBCodeGenerator.RequireVariableDeclaration(System.CodeDom.CodeCompileUnit)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.VisualBasic.VBCodeProvider.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
    <parameter name="providerOptions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:Microsoft.VisualBasic.VBModifierAttributeConverter.DefaultValue">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:Microsoft.VisualBasic.VBModifierAttributeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.VisualBasic.VBModifierAttributeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.Win32.IntranetZoneCredentialPolicy.ShouldSendCredential(System.Uri,System.Net.WebRequest,System.Net.NetworkCredential,System.Net.IAuthenticationModule)">
    <parameter name="challengeUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.Win32.NativeMethods.GetLocalPath(System.String)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.Win32.SystemEvents.AddEventHandler(System.Object,System.Delegate)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.Win32.SystemEvents.OnGenericEvent(System.Object)">
    <parameter name="eventKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.Win32.SystemEvents.OnShutdown(System.Object)">
    <parameter name="eventKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:Microsoft.Win32.SystemEvents.ProductVersionInternal">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:Microsoft.Win32.SystemEvents.RaiseEvent(System.Boolean,System.Object,System.Object[])">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.Win32.SystemEvents.RaiseEvent(System.Object,System.Object[])">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.Win32.SystemEvents.RemoveEventHandler(System.Object,System.Delegate)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.Win32.SystemEvents.SystemEventInvokeInfo.Equals(System.Object)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.Win32.WinInetCache.CombineMetaInfo(System.Collections.Specialized.StringCollection,System.Collections.Specialized.StringCollection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:Microsoft.Win32.WinInetCache.GetWriteStream(System.String,System.Int64,System.DateTime,System.DateTime,System.TimeSpan,System.Collections.Specialized.StringCollection,System.Collections.Specialized.StringCollection,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.Win32.WinInetCache.Lookup(System.String,System.Net.Cache.RequestCacheEntry@,System.Boolean)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.Win32.WinInetCache.ReadStream.#ctor(System.Net.Cache._WinInetCache.Entry,System.Net.SafeUnlockUrlCacheEntryFile,System.Boolean)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.Win32.WinInetCache.TryRemove(System.String,System.Boolean)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.Win32.WinInetCache.UpdateInfo(System.String,System.DateTime,System.DateTime,System.DateTime,System.TimeSpan,System.Collections.Specialized.StringCollection,System.Collections.Specialized.StringCollection,System.Boolean)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.Win32.WinInetCache.WriteStream.#ctor(System.Net.Cache._WinInetCache.Entry,System.Boolean,System.Int64,System.Boolean)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ClientUtils.IsEnumValid_NotSequential(System.Enum,System.Int32,System.Int32[])">
    <parameter name="enumValues">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeArrayCreateExpression.#ctor(System.CodeDom.CodeTypeReference,System.CodeDom.CodeExpression[])">
    <parameter name="initializers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeArrayCreateExpression.#ctor(System.String,System.CodeDom.CodeExpression[])">
    <parameter name="initializers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeArrayCreateExpression.#ctor(System.Type,System.CodeDom.CodeExpression)">
    <parameter name="createType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeArrayCreateExpression.#ctor(System.Type,System.CodeDom.CodeExpression[])">
    <parameter name="createType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="initializers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeArrayCreateExpression.#ctor(System.Type,System.Int32)">
    <parameter name="createType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeArrayIndexerExpression.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression[])">
    <parameter name="indices">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.CodeDom.CodeArrayIndexerExpression.Indices">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.CodeDom.CodeAttributeArgumentCollection.#ctor(System.CodeDom.CodeAttributeArgument[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeAttributeArgumentCollection.#ctor(System.CodeDom.CodeAttributeArgumentCollection)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeAttributeArgumentCollection.Add(System.CodeDom.CodeAttributeArgument)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeAttributeArgumentCollection.AddRange(System.CodeDom.CodeAttributeArgument[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeAttributeArgumentCollection.AddRange(System.CodeDom.CodeAttributeArgumentCollection)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeAttributeArgumentCollection.Contains(System.CodeDom.CodeAttributeArgument)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeAttributeArgumentCollection.CopyTo(System.CodeDom.CodeAttributeArgument[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeAttributeArgumentCollection.IndexOf(System.CodeDom.CodeAttributeArgument)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeAttributeArgumentCollection.Insert(System.Int32,System.CodeDom.CodeAttributeArgument)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeAttributeArgumentCollection.Remove(System.CodeDom.CodeAttributeArgument)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeAttributeDeclaration.#ctor(System.String,System.CodeDom.CodeAttributeArgument[])">
    <parameter name="arguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeAttributeDeclarationCollection.#ctor(System.CodeDom.CodeAttributeDeclaration[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeAttributeDeclarationCollection.#ctor(System.CodeDom.CodeAttributeDeclarationCollection)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeAttributeDeclarationCollection.Add(System.CodeDom.CodeAttributeDeclaration)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeAttributeDeclarationCollection.AddRange(System.CodeDom.CodeAttributeDeclaration[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeAttributeDeclarationCollection.AddRange(System.CodeDom.CodeAttributeDeclarationCollection)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeAttributeDeclarationCollection.Contains(System.CodeDom.CodeAttributeDeclaration)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeAttributeDeclarationCollection.CopyTo(System.CodeDom.CodeAttributeDeclaration[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeAttributeDeclarationCollection.IndexOf(System.CodeDom.CodeAttributeDeclaration)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeAttributeDeclarationCollection.Insert(System.Int32,System.CodeDom.CodeAttributeDeclaration)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeAttributeDeclarationCollection.Remove(System.CodeDom.CodeAttributeDeclaration)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeCastExpression.#ctor(System.Type,System.CodeDom.CodeExpression)">
    <parameter name="targetType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeCatchClause.#ctor(System.String,System.CodeDom.CodeTypeReference,System.CodeDom.CodeStatement[])">
    <parameter name="statements">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.CodeDom.CodeCatchClause.Statements">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.CodeDom.CodeCatchClauseCollection.#ctor(System.CodeDom.CodeCatchClause[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeCatchClauseCollection.#ctor(System.CodeDom.CodeCatchClauseCollection)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeCatchClauseCollection.Add(System.CodeDom.CodeCatchClause)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeCatchClauseCollection.AddRange(System.CodeDom.CodeCatchClause[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeCatchClauseCollection.AddRange(System.CodeDom.CodeCatchClauseCollection)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeCatchClauseCollection.Contains(System.CodeDom.CodeCatchClause)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeCatchClauseCollection.CopyTo(System.CodeDom.CodeCatchClause[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeCatchClauseCollection.IndexOf(System.CodeDom.CodeCatchClause)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeCatchClauseCollection.Insert(System.Int32,System.CodeDom.CodeCatchClause)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeCatchClauseCollection.Remove(System.CodeDom.CodeCatchClause)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeCommentStatementCollection.#ctor(System.CodeDom.CodeCommentStatement[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeCommentStatementCollection.#ctor(System.CodeDom.CodeCommentStatementCollection)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeCommentStatementCollection.Add(System.CodeDom.CodeCommentStatement)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeCommentStatementCollection.AddRange(System.CodeDom.CodeCommentStatement[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeCommentStatementCollection.AddRange(System.CodeDom.CodeCommentStatementCollection)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeCommentStatementCollection.Contains(System.CodeDom.CodeCommentStatement)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeCommentStatementCollection.CopyTo(System.CodeDom.CodeCommentStatement[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeCommentStatementCollection.IndexOf(System.CodeDom.CodeCommentStatement)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeCommentStatementCollection.Insert(System.Int32,System.CodeDom.CodeCommentStatement)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeCommentStatementCollection.Remove(System.CodeDom.CodeCommentStatement)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.CodeDom.CodeCompileUnit.AssemblyCustomAttributes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.CodeDom.CodeCompileUnit.EndDirectives">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.CodeDom.CodeCompileUnit.ReferencedAssemblies">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.CodeDom.CodeCompileUnit.StartDirectives">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.CodeDom.CodeConditionStatement.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeStatement[])">
    <parameter name="trueStatements">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeConditionStatement.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeStatement[],System.CodeDom.CodeStatement[])">
    <parameter name="falseStatements">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="trueStatements">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeDelegateInvokeExpression.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression[])">
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeDirectiveCollection.#ctor(System.CodeDom.CodeDirective[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeDirectiveCollection.#ctor(System.CodeDom.CodeDirectiveCollection)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeDirectiveCollection.Add(System.CodeDom.CodeDirective)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeDirectiveCollection.AddRange(System.CodeDom.CodeDirective[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeDirectiveCollection.AddRange(System.CodeDom.CodeDirectiveCollection)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeDirectiveCollection.Contains(System.CodeDom.CodeDirective)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeDirectiveCollection.CopyTo(System.CodeDom.CodeDirective[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeDirectiveCollection.IndexOf(System.CodeDom.CodeDirective)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeDirectiveCollection.Insert(System.Int32,System.CodeDom.CodeDirective)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeDirectiveCollection.Remove(System.CodeDom.CodeDirective)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeExpressionCollection.#ctor(System.CodeDom.CodeExpression[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeExpressionCollection.#ctor(System.CodeDom.CodeExpressionCollection)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeExpressionCollection.Add(System.CodeDom.CodeExpression)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeExpressionCollection.AddRange(System.CodeDom.CodeExpression[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeExpressionCollection.AddRange(System.CodeDom.CodeExpressionCollection)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeExpressionCollection.Contains(System.CodeDom.CodeExpression)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeExpressionCollection.CopyTo(System.CodeDom.CodeExpression[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeExpressionCollection.IndexOf(System.CodeDom.CodeExpression)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeExpressionCollection.Insert(System.Int32,System.CodeDom.CodeExpression)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeExpressionCollection.Remove(System.CodeDom.CodeExpression)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeIndexerExpression.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression[])">
    <parameter name="indices">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.CodeDom.CodeIndexerExpression.Indices">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.CodeDom.CodeIterationStatement.#ctor(System.CodeDom.CodeStatement,System.CodeDom.CodeExpression,System.CodeDom.CodeStatement,System.CodeDom.CodeStatement[])">
    <parameter name="statements">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.CodeDom.CodeMemberEvent.ImplementationTypes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.CodeDom.CodeMemberField.#ctor(System.Type,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.CodeDom.CodeMemberMethod.ReturnTypeCustomAttributes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.CodeDom.CodeMemberMethod.TypeParameters">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.CodeDom.CodeMemberProperty.ImplementationTypes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.CodeDom.CodeMethodInvokeExpression.#ctor(System.CodeDom.CodeExpression,System.String,System.CodeDom.CodeExpression[])">
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeMethodInvokeExpression.#ctor(System.CodeDom.CodeMethodReferenceExpression,System.CodeDom.CodeExpression[])">
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.CodeDom.CodeMethodReferenceExpression.TypeArguments">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.CodeDom.CodeNamespaceCollection.#ctor(System.CodeDom.CodeNamespace[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeNamespaceCollection.#ctor(System.CodeDom.CodeNamespaceCollection)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeNamespaceCollection.Add(System.CodeDom.CodeNamespace)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeNamespaceCollection.AddRange(System.CodeDom.CodeNamespace[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeNamespaceCollection.AddRange(System.CodeDom.CodeNamespaceCollection)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeNamespaceCollection.Contains(System.CodeDom.CodeNamespace)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeNamespaceCollection.CopyTo(System.CodeDom.CodeNamespace[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeNamespaceCollection.IndexOf(System.CodeDom.CodeNamespace)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeNamespaceCollection.Insert(System.Int32,System.CodeDom.CodeNamespace)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeNamespaceCollection.Remove(System.CodeDom.CodeNamespace)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeNamespaceImportCollection.Add(System.CodeDom.CodeNamespaceImport)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeNamespaceImportCollection.AddRange(System.CodeDom.CodeNamespaceImport[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeNamespaceImportCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.CodeDom.CodeNamespaceImportCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.CodeDom.CodeNamespaceImportCollection.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.CodeDom.CodeNamespaceImportCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.CodeDom.CodeNamespaceImportCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeNamespaceImportCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeNamespaceImportCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeNamespaceImportCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeNamespaceImportCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.CodeDom.CodeObject.UserData">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.CodeDom.CodeObjectCreateExpression.#ctor(System.CodeDom.CodeTypeReference,System.CodeDom.CodeExpression[])">
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeObjectCreateExpression.#ctor(System.String,System.CodeDom.CodeExpression[])">
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeObjectCreateExpression.#ctor(System.Type,System.CodeDom.CodeExpression[])">
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="createType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeParameterDeclarationExpression.#ctor(System.Type,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeParameterDeclarationExpressionCollection.#ctor(System.CodeDom.CodeParameterDeclarationExpression[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeParameterDeclarationExpressionCollection.#ctor(System.CodeDom.CodeParameterDeclarationExpressionCollection)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeParameterDeclarationExpressionCollection.Add(System.CodeDom.CodeParameterDeclarationExpression)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeParameterDeclarationExpressionCollection.AddRange(System.CodeDom.CodeParameterDeclarationExpression[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeParameterDeclarationExpressionCollection.AddRange(System.CodeDom.CodeParameterDeclarationExpressionCollection)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeParameterDeclarationExpressionCollection.Contains(System.CodeDom.CodeParameterDeclarationExpression)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeParameterDeclarationExpressionCollection.CopyTo(System.CodeDom.CodeParameterDeclarationExpression[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeParameterDeclarationExpressionCollection.IndexOf(System.CodeDom.CodeParameterDeclarationExpression)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeParameterDeclarationExpressionCollection.Insert(System.Int32,System.CodeDom.CodeParameterDeclarationExpression)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeParameterDeclarationExpressionCollection.Remove(System.CodeDom.CodeParameterDeclarationExpression)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.CodeDom.CodeStatement.EndDirectives">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.CodeDom.CodeStatement.StartDirectives">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.CodeDom.CodeStatementCollection.#ctor(System.CodeDom.CodeStatement[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeStatementCollection.#ctor(System.CodeDom.CodeStatementCollection)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeStatementCollection.Add(System.CodeDom.CodeStatement)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeStatementCollection.AddRange(System.CodeDom.CodeStatement[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeStatementCollection.AddRange(System.CodeDom.CodeStatementCollection)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeStatementCollection.Contains(System.CodeDom.CodeStatement)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeStatementCollection.CopyTo(System.CodeDom.CodeStatement[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeStatementCollection.IndexOf(System.CodeDom.CodeStatement)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeStatementCollection.Insert(System.Int32,System.CodeDom.CodeStatement)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeStatementCollection.Remove(System.CodeDom.CodeStatement)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeTryCatchFinallyStatement.#ctor(System.CodeDom.CodeStatement[],System.CodeDom.CodeCatchClause[])">
    <parameter name="tryStatements">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="catchClauses">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeTryCatchFinallyStatement.#ctor(System.CodeDom.CodeStatement[],System.CodeDom.CodeCatchClause[],System.CodeDom.CodeStatement[])">
    <parameter name="tryStatements">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="catchClauses">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="finallyStatements">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.CodeDom.CodeTypeDeclaration.TypeParameters">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.CodeDom.CodeTypeDeclarationCollection.#ctor(System.CodeDom.CodeTypeDeclaration[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeTypeDeclarationCollection.#ctor(System.CodeDom.CodeTypeDeclarationCollection)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeTypeDeclarationCollection.Add(System.CodeDom.CodeTypeDeclaration)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeTypeDeclarationCollection.AddRange(System.CodeDom.CodeTypeDeclaration[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeTypeDeclarationCollection.AddRange(System.CodeDom.CodeTypeDeclarationCollection)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeTypeDeclarationCollection.Contains(System.CodeDom.CodeTypeDeclaration)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeTypeDeclarationCollection.CopyTo(System.CodeDom.CodeTypeDeclaration[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeTypeDeclarationCollection.IndexOf(System.CodeDom.CodeTypeDeclaration)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeTypeDeclarationCollection.Insert(System.Int32,System.CodeDom.CodeTypeDeclaration)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeTypeDeclarationCollection.Remove(System.CodeDom.CodeTypeDeclaration)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.CodeDom.CodeTypeMember.EndDirectives">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.CodeDom.CodeTypeMember.StartDirectives">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.CodeDom.CodeTypeMemberCollection.#ctor(System.CodeDom.CodeTypeMember[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeTypeMemberCollection.#ctor(System.CodeDom.CodeTypeMemberCollection)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeTypeMemberCollection.Add(System.CodeDom.CodeTypeMember)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeTypeMemberCollection.AddRange(System.CodeDom.CodeTypeMember[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeTypeMemberCollection.AddRange(System.CodeDom.CodeTypeMemberCollection)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeTypeMemberCollection.Contains(System.CodeDom.CodeTypeMember)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeTypeMemberCollection.CopyTo(System.CodeDom.CodeTypeMember[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeTypeMemberCollection.IndexOf(System.CodeDom.CodeTypeMember)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeTypeMemberCollection.Insert(System.Int32,System.CodeDom.CodeTypeMember)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeTypeMemberCollection.Remove(System.CodeDom.CodeTypeMember)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeTypeOfExpression.#ctor(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.CodeDom.CodeTypeParameter.Constraints">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.CodeDom.CodeTypeParameter.CustomAttributes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.CodeDom.CodeTypeParameterCollection.#ctor(System.CodeDom.CodeTypeParameter[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeTypeParameterCollection.#ctor(System.CodeDom.CodeTypeParameterCollection)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeTypeParameterCollection.Add(System.CodeDom.CodeTypeParameter)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeTypeParameterCollection.AddRange(System.CodeDom.CodeTypeParameter[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeTypeParameterCollection.AddRange(System.CodeDom.CodeTypeParameterCollection)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeTypeParameterCollection.Contains(System.CodeDom.CodeTypeParameter)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeTypeParameterCollection.CopyTo(System.CodeDom.CodeTypeParameter[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeTypeParameterCollection.IndexOf(System.CodeDom.CodeTypeParameter)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeTypeParameterCollection.Insert(System.Int32,System.CodeDom.CodeTypeParameter)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeTypeParameterCollection.Remove(System.CodeDom.CodeTypeParameter)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeTypeReference.#ctor(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeTypeReference.#ctor(System.Type,System.CodeDom.CodeTypeReferenceOptions)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeTypeReference.RipOffAssemblyInformationFromTypeName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeTypeReferenceCollection.#ctor(System.CodeDom.CodeTypeReference[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeTypeReferenceCollection.#ctor(System.CodeDom.CodeTypeReferenceCollection)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeTypeReferenceCollection.Add(System.CodeDom.CodeTypeReference)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeTypeReferenceCollection.Add(System.Type)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeTypeReferenceCollection.AddRange(System.CodeDom.CodeTypeReference[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeTypeReferenceCollection.AddRange(System.CodeDom.CodeTypeReferenceCollection)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeTypeReferenceCollection.Contains(System.CodeDom.CodeTypeReference)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeTypeReferenceCollection.CopyTo(System.CodeDom.CodeTypeReference[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeTypeReferenceCollection.IndexOf(System.CodeDom.CodeTypeReference)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeTypeReferenceCollection.Insert(System.Int32,System.CodeDom.CodeTypeReference)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeTypeReferenceCollection.Remove(System.CodeDom.CodeTypeReference)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeTypeReferenceExpression.#ctor(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeVariableDeclarationStatement.#ctor(System.Type,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.CodeVariableDeclarationStatement.#ctor(System.Type,System.String,System.CodeDom.CodeExpression)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeCompiler.CmdArgsFromParameters(System.CodeDom.Compiler.CompilerParameters)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="options">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeCompiler.Compile(System.CodeDom.Compiler.CompilerParameters,System.String,System.String,System.String,System.String@,System.Int32@,System.String)">
    <parameter name="options">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="compilerDirectory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="compilerExe">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.CodeDom.Compiler.CodeCompiler.CompilerName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.CodeDom.Compiler.CodeCompiler.FileExtension">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeCompiler.FromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="options">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeCompiler.FromDomBatch(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="options">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ea">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeCompiler.FromFile(System.CodeDom.Compiler.CompilerParameters,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="options">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeCompiler.FromFileBatch(System.CodeDom.Compiler.CompilerParameters,System.String[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="options">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="fileNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeCompiler.FromSource(System.CodeDom.Compiler.CompilerParameters,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="options">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeCompiler.FromSourceBatch(System.CodeDom.Compiler.CompilerParameters,System.String[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="options">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="sources">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeCompiler.GetResponseFileCmdArgs(System.CodeDom.Compiler.CompilerParameters,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="options">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeCompiler.ProcessCompilerOutputLine(System.CodeDom.Compiler.CompilerResults,System.String)">
    <parameter name="results">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="line">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeCompiler.ResolveReferencedAssemblies(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit)">
    <parameter name="options">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeCompiler.System#CodeDom#Compiler#ICodeCompiler#CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="options">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeCompiler.System#CodeDom#Compiler#ICodeCompiler#CompileAssemblyFromDomBatch(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="ea">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="options">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeCompiler.System#CodeDom#Compiler#ICodeCompiler#CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="options">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeCompiler.System#CodeDom#Compiler#ICodeCompiler#CompileAssemblyFromFileBatch(System.CodeDom.Compiler.CompilerParameters,System.String[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="fileNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="options">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeCompiler.System#CodeDom#Compiler#ICodeCompiler#CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="options">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeCompiler.System#CodeDom#Compiler#ICodeCompiler#CompileAssemblyFromSourceBatch(System.CodeDom.Compiler.CompilerParameters,System.String[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="sources">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="options">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeDomCompilationConfiguration.#ctor(System.CodeDom.Compiler.CodeDomCompilationConfiguration)">
    <parameter name="original">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeDomCompilationConfiguration.AddCompilerInfo(System.CodeDom.Compiler.CompilerInfo)">
    <parameter name="compilerInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeDomCompilationConfiguration.FindExistingCompilerInfo(System.String[],System.String[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="languageList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="extensionList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeDomCompilationConfiguration.SectionHandler.CreateStatic(System.Object,System.Xml.XmlNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeDomCompilationConfiguration.SectionHandler.GetProviderOptions(System.Xml.XmlNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="compilerNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeDomCompilationConfiguration.SectionHandler.ProcessCompilersElement(System.CodeDom.Compiler.CodeDomCompilationConfiguration,System.Xml.XmlNode)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeDomConfigurationHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="configContextObj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="options">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="compilationUnits">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="fileNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="options">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeDomProvider.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="sources">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="options">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeDomProvider.CreateCompilerHelper">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeDomProvider.CreateEscapedIdentifier(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeDomProvider.CreateGeneratorHelper">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeDomProvider.CreateParser">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeDomProvider.CreateParserHelper">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String)">
    <parameter name="language">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeDomProvider.CreateValidIdentifier(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.CodeDom.Compiler.CodeDomProvider.FileExtension">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
    <parameter name="compileUnit">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
    <parameter name="codeNamespace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
    <parameter name="statement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeDomProvider.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
    <parameter name="codeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="language">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfoForExtensionNoThrow(System.String)">
    <parameter name="extension">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfoForLanguageNoThrow(System.String)">
    <parameter name="language">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeDomProvider.GetConverter(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeDomProvider.GetLanguageFromExtension(System.String)">
    <parameter name="extension">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeDomProvider.GetTypeOutput(System.CodeDom.CodeTypeReference)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)">
    <parameter name="extension">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)">
    <parameter name="language">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeDomProvider.Parse(System.IO.TextReader)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.ContinueOnNewLine(System.String)">
    <parameter name="st">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.CreateEscapedIdentifier(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.CreateValidIdentifier(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateArgumentReferenceExpression(System.CodeDom.CodeArgumentReferenceExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateArrayCreateExpression(System.CodeDom.CodeArrayCreateExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateArrayIndexerExpression(System.CodeDom.CodeArrayIndexerExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateAssignStatement(System.CodeDom.CodeAssignStatement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateAttachEventStatement(System.CodeDom.CodeAttachEventStatement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateBinaryOperatorExpression(System.CodeDom.CodeBinaryOperatorExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateCastExpression(System.CodeDom.CodeCastExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateCodeFromMember(System.CodeDom.CodeTypeMember,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateComment(System.CodeDom.CodeComment)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateCommentStatement(System.CodeDom.CodeCommentStatement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateCommentStatements(System.CodeDom.CodeCommentStatementCollection)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnit(System.CodeDom.CodeCompileUnit)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnitEnd(System.CodeDom.CodeCompileUnit)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateCompileUnitStart(System.CodeDom.CodeCompileUnit)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateConditionStatement(System.CodeDom.CodeConditionStatement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateConstructor(System.CodeDom.CodeConstructor,System.CodeDom.CodeTypeDeclaration)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateConstructors(System.CodeDom.CodeTypeDeclaration)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateDefaultValueExpression(System.CodeDom.CodeDefaultValueExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateDelegateCreateExpression(System.CodeDom.CodeDelegateCreateExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateDelegateInvokeExpression(System.CodeDom.CodeDelegateInvokeExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateDirectionExpression(System.CodeDom.CodeDirectionExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateDirectives(System.CodeDom.CodeDirectiveCollection)">
    <parameter name="directives">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateEntryPointMethod(System.CodeDom.CodeEntryPointMethod,System.CodeDom.CodeTypeDeclaration)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateEvent(System.CodeDom.CodeMemberEvent,System.CodeDom.CodeTypeDeclaration)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateEventReferenceExpression(System.CodeDom.CodeEventReferenceExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateEvents(System.CodeDom.CodeTypeDeclaration)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateExpression(System.CodeDom.CodeExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateExpressionStatement(System.CodeDom.CodeExpressionStatement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateField(System.CodeDom.CodeMemberField)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateFieldReferenceExpression(System.CodeDom.CodeFieldReferenceExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateFields(System.CodeDom.CodeTypeDeclaration)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateGotoStatement(System.CodeDom.CodeGotoStatement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateIndexerExpression(System.CodeDom.CodeIndexerExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateIterationStatement(System.CodeDom.CodeIterationStatement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateLabeledStatement(System.CodeDom.CodeLabeledStatement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateLinePragmaStart(System.CodeDom.CodeLinePragma)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateMethod(System.CodeDom.CodeMemberMethod,System.CodeDom.CodeTypeDeclaration)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="c">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateMethodInvokeExpression(System.CodeDom.CodeMethodInvokeExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateMethodReferenceExpression(System.CodeDom.CodeMethodReferenceExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateMethodReturnStatement(System.CodeDom.CodeMethodReturnStatement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateMethods(System.CodeDom.CodeTypeDeclaration)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespace(System.CodeDom.CodeNamespace)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceEnd(System.CodeDom.CodeNamespace)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceImport(System.CodeDom.CodeNamespaceImport)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceImports(System.CodeDom.CodeNamespace)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespaces(System.CodeDom.CodeCompileUnit)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateNamespaceStart(System.CodeDom.CodeNamespace)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateNestedTypes(System.CodeDom.CodeTypeDeclaration)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateObjectCreateExpression(System.CodeDom.CodeObjectCreateExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateParameterDeclarationExpression(System.CodeDom.CodeParameterDeclarationExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GeneratePrimitiveExpression(System.CodeDom.CodePrimitiveExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateProperties(System.CodeDom.CodeTypeDeclaration)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateProperty(System.CodeDom.CodeMemberProperty,System.CodeDom.CodeTypeDeclaration)">
    <parameter name="c">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GeneratePropertyReferenceExpression(System.CodeDom.CodePropertyReferenceExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateRemoveEventStatement(System.CodeDom.CodeRemoveEventStatement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateSnippetCompileUnit(System.CodeDom.CodeSnippetCompileUnit)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateSnippetExpression(System.CodeDom.CodeSnippetExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateSnippetMember(System.CodeDom.CodeSnippetTypeMember)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateSnippetMembers(System.CodeDom.CodeTypeDeclaration)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateSnippetStatement(System.CodeDom.CodeSnippetStatement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateStatement(System.CodeDom.CodeStatement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateStatements(System.CodeDom.CodeStatementCollection)">
    <parameter name="stms">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateThrowExceptionStatement(System.CodeDom.CodeThrowExceptionStatement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateTryCatchFinallyStatement(System.CodeDom.CodeTryCatchFinallyStatement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateType(System.CodeDom.CodeTypeDeclaration)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeConstructor(System.CodeDom.CodeTypeConstructor)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeConstructors(System.CodeDom.CodeTypeDeclaration)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeEnd(System.CodeDom.CodeTypeDeclaration)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeMember(System.CodeDom.CodeTypeMember,System.CodeDom.CodeTypeDeclaration)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="declaredType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeOfExpression(System.CodeDom.CodeTypeOfExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeReferenceExpression(System.CodeDom.CodeTypeReferenceExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypes(System.CodeDom.CodeNamespace)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateTypeStart(System.CodeDom.CodeTypeDeclaration)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateVariableDeclarationStatement(System.CodeDom.CodeVariableDeclarationStatement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GenerateVariableReferenceExpression(System.CodeDom.CodeVariableReferenceExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.GetTypeOutput(System.CodeDom.CodeTypeReference)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.IsValidLanguageIndependentIdentifier(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.IsValidLanguageIndependentTypeName(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.IsValidTypeNameOrIdentifier(System.String,System.Boolean)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.CodeDom.Compiler.CodeGenerator.NullToken">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.OutputAttributeArgument(System.CodeDom.CodeAttributeArgument)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.OutputAttributeDeclarations(System.CodeDom.CodeAttributeDeclarationCollection)">
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.OutputExpressionList(System.CodeDom.CodeExpressionCollection)">
    <parameter name="expressions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.OutputExpressionList(System.CodeDom.CodeExpressionCollection,System.Boolean)">
    <parameter name="expressions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.OutputIdentifier(System.String)">
    <parameter name="ident">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.OutputParameters(System.CodeDom.CodeParameterDeclarationExpressionCollection)">
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.OutputType(System.CodeDom.CodeTypeReference)">
    <parameter name="typeRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.OutputTypeNamePair(System.CodeDom.CodeTypeReference,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="typeRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.QuoteSnippetString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#CreateEscapedIdentifier(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#CreateValidIdentifier(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.System#CodeDom#Compiler#ICodeGenerator#GetTypeOutput(System.CodeDom.CodeTypeReference)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeGenerator.ValidateIdentifiers(System.CodeDom.CodeObject)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.CodeDom.Compiler.CodeGeneratorOptions.Item(System.String)">
    <parameter name="index">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeParser.Parse(System.IO.TextReader)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateArgumentReferenceExpression(System.CodeDom.CodeArgumentReferenceExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateArity(System.CodeDom.CodeTypeReference)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateArrayCreateExpression(System.CodeDom.CodeArrayCreateExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateArrayIndexerExpression(System.CodeDom.CodeArrayIndexerExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateAssignStatement(System.CodeDom.CodeAssignStatement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateAttachEventStatement(System.CodeDom.CodeAttachEventStatement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateAttributeArgument(System.CodeDom.CodeAttributeArgument)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateAttributes(System.CodeDom.CodeAttributeDeclarationCollection)">
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateBinaryOperatorExpression(System.CodeDom.CodeBinaryOperatorExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateCastExpression(System.CodeDom.CodeCastExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateChecksumPragma(System.CodeDom.CodeChecksumPragma)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateCodeCompileUnit(System.CodeDom.CodeCompileUnit)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateCodeDirective(System.CodeDom.CodeDirective)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateCodeDirectives(System.CodeDom.CodeDirectiveCollection)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateCommentStatement(System.CodeDom.CodeCommentStatement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateCommentStatements(System.CodeDom.CodeCommentStatementCollection)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateCompileUnitStart(System.CodeDom.CodeCompileUnit)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateConditionStatement(System.CodeDom.CodeConditionStatement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateConstructor(System.CodeDom.CodeConstructor)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateDefaultValueExpression(System.CodeDom.CodeDefaultValueExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateDelegateCreateExpression(System.CodeDom.CodeDelegateCreateExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateDelegateInvokeExpression(System.CodeDom.CodeDelegateInvokeExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateDirectionExpression(System.CodeDom.CodeDirectionExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateEvent(System.CodeDom.CodeMemberEvent)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateEventReferenceExpression(System.CodeDom.CodeEventReferenceExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateExpression(System.CodeDom.CodeExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateExpressionList(System.CodeDom.CodeExpressionCollection)">
    <parameter name="expressions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateExpressionStatement(System.CodeDom.CodeExpressionStatement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateField(System.CodeDom.CodeMemberField)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateFieldReferenceExpression(System.CodeDom.CodeFieldReferenceExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateGotoStatement(System.CodeDom.CodeGotoStatement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateIdentifier(System.Object,System.String,System.String)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="identifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateIdentifiers(System.CodeDom.CodeObject)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateIndexerExpression(System.CodeDom.CodeIndexerExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateIterationStatement(System.CodeDom.CodeIterationStatement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateLabeledStatement(System.CodeDom.CodeLabeledStatement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateMemberMethod(System.CodeDom.CodeMemberMethod)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateMethod(System.CodeDom.CodeMemberMethod)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateMethodInvokeExpression(System.CodeDom.CodeMethodInvokeExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateMethodReferenceExpression(System.CodeDom.CodeMethodReferenceExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateMethodReturnStatement(System.CodeDom.CodeMethodReturnStatement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateNamespace(System.CodeDom.CodeNamespace)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateNamespaceImport(System.CodeDom.CodeNamespaceImport)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateNamespaceImports(System.CodeDom.CodeNamespace)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateNamespaces(System.CodeDom.CodeCompileUnit)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateNamespaceStart(System.CodeDom.CodeNamespace)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateObjectCreateExpression(System.CodeDom.CodeObjectCreateExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateParameterDeclarationExpression(System.CodeDom.CodeParameterDeclarationExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateParameters(System.CodeDom.CodeParameterDeclarationExpressionCollection)">
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateProperty(System.CodeDom.CodeMemberProperty)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidatePropertyReferenceExpression(System.CodeDom.CodePropertyReferenceExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateRegionDirective(System.CodeDom.CodeRegionDirective)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateRemoveEventStatement(System.CodeDom.CodeRemoveEventStatement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateSnippetCompileUnit(System.CodeDom.CodeSnippetCompileUnit)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateStatement(System.CodeDom.CodeStatement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateStatements(System.CodeDom.CodeStatementCollection)">
    <parameter name="stms">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateThrowExceptionStatement(System.CodeDom.CodeThrowExceptionStatement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateTryCatchFinallyStatement(System.CodeDom.CodeTryCatchFinallyStatement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateTypeConstructor(System.CodeDom.CodeTypeConstructor)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateTypeDeclaration(System.CodeDom.CodeTypeDeclaration)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateTypeMember(System.CodeDom.CodeTypeMember)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateTypeMembers(System.CodeDom.CodeTypeDeclaration)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateTypeName(System.Object,System.String,System.String)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateTypeOfExpression(System.CodeDom.CodeTypeOfExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateTypeParameter(System.CodeDom.CodeTypeParameter)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateTypeParameters(System.CodeDom.CodeTypeParameterCollection)">
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateTypeReference(System.CodeDom.CodeTypeReference)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateTypeReferences(System.CodeDom.CodeTypeReferenceCollection)">
    <parameter name="refs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateTypes(System.CodeDom.CodeNamespace)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateTypeStart(System.CodeDom.CodeTypeDeclaration)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateVariableDeclarationStatement(System.CodeDom.CodeVariableDeclarationStatement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeValidator.ValidateVariableReferenceExpression(System.CodeDom.CodeVariableReferenceExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CompilerErrorCollection.#ctor(System.CodeDom.Compiler.CompilerError[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CompilerErrorCollection.#ctor(System.CodeDom.Compiler.CompilerErrorCollection)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CompilerErrorCollection.Add(System.CodeDom.Compiler.CompilerError)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CompilerErrorCollection.AddRange(System.CodeDom.Compiler.CompilerError[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CompilerErrorCollection.AddRange(System.CodeDom.Compiler.CompilerErrorCollection)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CompilerErrorCollection.Contains(System.CodeDom.Compiler.CompilerError)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CompilerErrorCollection.CopyTo(System.CodeDom.Compiler.CompilerError[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CompilerErrorCollection.IndexOf(System.CodeDom.Compiler.CompilerError)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CompilerErrorCollection.Insert(System.Int32,System.CodeDom.Compiler.CompilerError)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CompilerErrorCollection.Remove(System.CodeDom.Compiler.CompilerError)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CompilerInfo.CloneCompilerExtensions">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.CodeDom.Compiler.CompilerInfo.CloneCompilerLanguages">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.CodeDom.Compiler.CompilerInfo.CloneCompilerParameters">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.CodeDom.Compiler.CompilerInfo.Equals(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CompilerInfo.GetExtensions">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.CodeDom.Compiler.CompilerInfo.GetLanguages">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.CodeDom.Compiler.CompilerResults.CloneEvidence(System.Security.Policy.Evidence)">
    <parameter name="ev">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.Executor.CreateInheritedFile(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="file">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.Executor.ExecWait(System.String,System.CodeDom.Compiler.TempFileCollection)">
    <parameter name="tempFiles">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="cmd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.Executor.ExecWaitWithCapture(Microsoft.Win32.SafeHandles.SafeUserTokenHandle,System.String,System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@,System.String)">
    <parameter name="tempFiles">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="cmd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.IntPtr,System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)">
    <parameter name="tempFiles">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="cmd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.IntPtr,System.String,System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)">
    <parameter name="tempFiles">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="cmd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)">
    <parameter name="cmd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="tempFiles">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.Executor.ExecWaitWithCapture(System.String,System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@)">
    <parameter name="cmd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="tempFiles">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.Executor.ExecWaitWithCaptureUnimpersonated(Microsoft.Win32.SafeHandles.SafeUserTokenHandle,System.String,System.String,System.CodeDom.Compiler.TempFileCollection,System.String@,System.String@,System.String)">
    <parameter name="tempFiles">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="cmd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.Executor.ReImpersonate(System.Security.Principal.WindowsImpersonationContext)">
    <parameter name="impersonation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.Executor.RevertImpersonation">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.CodeDom.Compiler.HandlerBase.CheckForChildNodes(System.Xml.XmlNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.HandlerBase.CheckForNonElement(System.Xml.XmlNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.HandlerBase.CheckForUnrecognizedAttributes(System.Xml.XmlNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.HandlerBase.GetAndRemoveAttribute(System.Xml.XmlNode,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.HandlerBase.GetAndRemoveIntegerAttributeInternal(System.Xml.XmlNode,System.String,System.Boolean,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.HandlerBase.GetAndRemoveNonEmptyStringAttributeInternal(System.Xml.XmlNode,System.String,System.Boolean,System.String@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.HandlerBase.GetAndRemoveNonNegativeAttributeInternal(System.Xml.XmlNode,System.String,System.Boolean,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.HandlerBase.GetAndRemoveNonNegativeIntegerAttribute(System.Xml.XmlNode,System.String,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.HandlerBase.GetAndRemoveRequiredNonEmptyStringAttribute(System.Xml.XmlNode,System.String,System.String@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.HandlerBase.GetAndRemoveStringAttribute(System.Xml.XmlNode,System.String,System.String@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.HandlerBase.GetAndRemoveStringAttributeInternal(System.Xml.XmlNode,System.String,System.Boolean,System.String@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.HandlerBase.IsIgnorableAlsoCheckForNonElement(System.Xml.XmlNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.CodeDom.Compiler.Indentation.IndentationString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.CodeDom.Compiler.IndentedTextWriter.WriteLineNoTabs(System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.RedistVersionInfo.GetCompilerPath(System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.CodeDom.Compiler.TempFileCollection.AddExtension(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="fileExtension">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.TempFileCollection.AddExtension(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="fileExtension">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.TempFileCollection.AddFile(System.String,System.Boolean)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.TempFileCollection.CopyTo(System.String[],System.Int32)">
    <parameter name="fileNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.TempFileCollection.Delete(System.String)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.TempFileCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.CodeDom.Compiler.TempFileCollection.KeepFile(System.String)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.CodeDom.Compiler.TempFileCollection.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.CodeDom.Compiler.TempFileCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.CodeDom.Compiler.TempFileCollection.TempDir">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},`0)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},`0)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.LinkedList`1.AddFirst(`0)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.LinkedList`1.AddLast(`0)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.LinkedList`1.Contains(`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.LinkedList`1.Enumerator.#ctor(System.Collections.Generic.LinkedList{`0})">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Generic.LinkedList`1.Enumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Generic.LinkedList`1.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.LinkedList`1.Enumerator.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.LinkedList`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.LinkedList`1.InternalInsertNodeBefore(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="newNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.LinkedList`1.InternalInsertNodeToEmptyList(System.Collections.Generic.LinkedListNode{`0})">
    <parameter name="newNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.LinkedList`1.Remove(`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection{T}#Add(`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Generic.LinkedList`1.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.LinkedList`1.ValidateNewNode(System.Collections.Generic.LinkedListNode{`0})">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.LinkedList`1.ValidateNode(System.Collections.Generic.LinkedListNode{`0})">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Generic.LinkedListNode`1.Next">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Generic.LinkedListNode`1.Previous">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.Queue`1.CopyTo(`0[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.Queue`1.Enumerator.#ctor(System.Collections.Generic.Queue{`0})">
    <parameter name="q">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Generic.Queue`1.Enumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Generic.Queue`1.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Generic.Queue`1.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.Queue`1.ToArray">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
    <parameter name="dictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})">
    <parameter name="dictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedDictionary`2.Add(`0,`1)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedDictionary`2.ContainsKey(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedDictionary`2.Enumerator.#ctor(System.Collections.Generic.SortedDictionary{`0,`1},System.Int32)">
    <parameter name="dictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Key">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Value">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Generic.SortedDictionary`2.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.SortedDictionary`2.IsCompatibleKey(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Generic.SortedDictionary`2.Item(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.#ctor(System.Collections.Generic.SortedDictionary{`0,`1})">
    <parameter name="dictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.CopyTo(`0[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator.#ctor(System.Collections.Generic.SortedDictionary{`0,`1})">
    <parameter name="dictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Add(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Contains(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Remove(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#Generic#IEnumerable{TKey}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.SortedDictionary`2.KeyCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Generic.SortedDictionary`2.Keys">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.SortedDictionary`2.Remove(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IDictionary{TKey@TValue}#Keys">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IDictionary{TKey@TValue}#Values">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey@TValue}}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Contains(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Item(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Keys">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Remove(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Generic.SortedDictionary`2.System#Collections#IDictionary#Values">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.SortedDictionary`2.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.SortedDictionary`2.TryGetValue(`0,`1@)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.#ctor(System.Collections.Generic.SortedDictionary{`0,`1})">
    <parameter name="dictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.CopyTo(`1[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.#ctor(System.Collections.Generic.SortedDictionary{`0,`1})">
    <parameter name="dictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Generic.SortedDictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Add(`1)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Contains(`1)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Remove(`1)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#Generic#IEnumerable{TValue}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.SortedDictionary`2.ValueCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Generic.SortedDictionary`2.Values">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.SortedDictionary`2.VerifyKey(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
    <parameter name="dictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedList`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IComparer{`0})">
    <parameter name="dictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedList`2.Add(`0,`1)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedList`2.ContainsKey(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedList`2.Enumerator.#ctor(System.Collections.Generic.SortedList{`0,`1},System.Int32)">
    <parameter name="sortedList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Generic.SortedList`2.Enumerator.System#Collections#IDictionaryEnumerator#Key">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Generic.SortedList`2.Enumerator.System#Collections#IDictionaryEnumerator#Value">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Generic.SortedList`2.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.SortedList`2.GetKeyListHelper">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.SortedList`2.GetValueListHelper">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.SortedList`2.IndexOfKey(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedList`2.IsCompatibleKey(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Generic.SortedList`2.Item(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedList`2.KeyList.Add(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedList`2.KeyList.Contains(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedList`2.KeyList.CopyTo(`0[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedList`2.KeyList.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.SortedList`2.KeyList.IndexOf(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedList`2.KeyList.Insert(System.Int32,`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedList`2.KeyList.Remove(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedList`2.KeyList.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Generic.SortedList`2.KeyList.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.SortedList`2.KeyList.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Generic.SortedList`2.Keys">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.SortedList`2.Remove(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedList`2.SortedListKeyEnumerator.#ctor(System.Collections.Generic.SortedList{`0,`1})">
    <parameter name="sortedList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Generic.SortedList`2.SortedListKeyEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Generic.SortedList`2.SortedListKeyEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.SortedList`2.SortedListValueEnumerator.#ctor(System.Collections.Generic.SortedList{`0,`1})">
    <parameter name="sortedList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Generic.SortedList`2.SortedListValueEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Generic.SortedList`2.SortedListValueEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.SortedList`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Generic.SortedList`2.System#Collections#Generic#IDictionary{TKey@TValue}#Keys">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Generic.SortedList`2.System#Collections#Generic#IDictionary{TKey@TValue}#Values">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.SortedList`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey@TValue}}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.SortedList`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Generic.SortedList`2.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Contains(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Item(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Keys">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Remove(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Generic.SortedList`2.System#Collections#IDictionary#Values">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.SortedList`2.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.SortedList`2.TryGetValue(`0,`1@)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedList`2.ValueList.Add(`1)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedList`2.ValueList.Contains(`1)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedList`2.ValueList.CopyTo(`1[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedList`2.ValueList.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.SortedList`2.ValueList.IndexOf(`1)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedList`2.ValueList.Insert(System.Int32,`1)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedList`2.ValueList.Remove(`1)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedList`2.ValueList.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Generic.SortedList`2.ValueList.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.SortedList`2.ValueList.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Generic.SortedList`2.Values">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.SortedList`2.VerifyKey(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.Stack`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.Stack`1.CopyTo(`0[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.Stack`1.Enumerator.#ctor(System.Collections.Generic.Stack{`0})">
    <parameter name="stack">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Generic.Stack`1.Enumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Generic.Stack`1.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.Stack`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.Stack`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Generic.Stack`1.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.Stack`1.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.System_CollectionDebugView`1.#ctor(System.Collections.Generic.ICollection{`0})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Generic.System_CollectionDebugView`1.Items">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.System_DictionaryDebugView`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
    <parameter name="dictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Generic.System_DictionaryDebugView`2.Items">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.System_DictionaryKeyCollectionDebugView`2.#ctor(System.Collections.Generic.ICollection{`0})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Generic.System_DictionaryKeyCollectionDebugView`2.Items">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.System_DictionaryValueCollectionDebugView`2.#ctor(System.Collections.Generic.ICollection{`1})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Generic.System_DictionaryValueCollectionDebugView`2.Items">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.System_QueueDebugView`1.#ctor(System.Collections.Generic.Queue{`0})">
    <parameter name="queue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Generic.System_QueueDebugView`1.Items">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.System_StackDebugView`1.#ctor(System.Collections.Generic.Stack{`0})">
    <parameter name="stack">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Generic.System_StackDebugView`1.Items">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.TreeSet`1.Add(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.TreeSet`1.Contains(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.TreeSet`1.CopyTo(`0[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.TreeSet`1.Enumerator.#ctor(System.Collections.Generic.TreeSet{`0})">
    <parameter name="set">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Generic.TreeSet`1.Enumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Generic.TreeSet`1.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.TreeSet`1.FindNode(`0)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.TreeSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.TreeSet`1.GetSibling(System.Collections.Generic.TreeSet{`0}.Node,System.Collections.Generic.TreeSet{`0}.Node)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.TreeSet`1.InOrderTreeWalk(System.Collections.Generic.TreeWalkAction{`0})">
    <parameter name="action">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.TreeSet`1.InsertionBalance(System.Collections.Generic.TreeSet{`0}.Node,System.Collections.Generic.TreeSet{`0}.Node@,System.Collections.Generic.TreeSet{`0}.Node,System.Collections.Generic.TreeSet{`0}.Node)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="grandParent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="greatGrandParent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.TreeSet`1.Is2Node(System.Collections.Generic.TreeSet{`0}.Node)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.TreeSet`1.Is4Node(System.Collections.Generic.TreeSet{`0}.Node)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.TreeSet`1.Merge2Nodes(System.Collections.Generic.TreeSet{`0}.Node,System.Collections.Generic.TreeSet{`0}.Node,System.Collections.Generic.TreeSet{`0}.Node)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="child1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="child2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.TreeSet`1.Remove(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.TreeSet`1.ReplaceNode(System.Collections.Generic.TreeSet{`0}.Node,System.Collections.Generic.TreeSet{`0}.Node,System.Collections.Generic.TreeSet{`0}.Node,System.Collections.Generic.TreeSet{`0}.Node)">
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="succesor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="parentOfSuccesor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.TreeSet`1.RotateLeft(System.Collections.Generic.TreeSet{`0}.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.TreeSet`1.RotateLeftRight(System.Collections.Generic.TreeSet{`0}.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.TreeSet`1.RotateRight(System.Collections.Generic.TreeSet{`0}.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.TreeSet`1.RotateRightLeft(System.Collections.Generic.TreeSet{`0}.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.TreeSet`1.RotationNeeded(System.Collections.Generic.TreeSet{`0}.Node,System.Collections.Generic.TreeSet{`0}.Node,System.Collections.Generic.TreeSet{`0}.Node)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="sibling">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.TreeSet`1.Split4Node(System.Collections.Generic.TreeSet{`0}.Node)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.TreeSet`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.TreeSet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Generic.TreeSet`1.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.TreeSet`1.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.TreeSet`1.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.BackCompatibleStringComparer.GetHashCode(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.BackCompatibleStringComparer.GetHashCode(System.String)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.BackCompatibleStringComparer.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)">
    <parameter name="b">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.BitVector32.Equals(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.BitVector32.Section.Equals(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.BitVector32.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Specialized.BitVector32.ToString(System.Collections.Specialized.BitVector32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Collections.IDictionary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveHashtable(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Specialized.CollectionsUtil.CreateCaseInsensitiveSortedList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Specialized.CompatibleComparer.Equals(System.Object,System.Object)">
    <parameter name="b">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.CompatibleComparer.GetHashCode(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.FixedStringLookup.Contains(System.String[],System.String,System.Boolean)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.FixedStringLookup.Contains(System.String[][],System.String,System.Boolean)">
    <parameter name="lookupTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.FixedStringLookup.FindCharacter(System.String[],System.Char,System.Int32,System.Int32@,System.Int32@)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.HybridDictionary.Add(System.Object,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.HybridDictionary.Contains(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.HybridDictionary.CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.HybridDictionary.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Specialized.HybridDictionary.Item(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Specialized.HybridDictionary.Keys">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Specialized.HybridDictionary.List">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Specialized.HybridDictionary.Remove(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Specialized.HybridDictionary.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Specialized.HybridDictionary.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Specialized.HybridDictionary.Values">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Specialized.ListDictionary.Add(System.Object,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.ListDictionary.Contains(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.ListDictionary.CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.ListDictionary.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Specialized.ListDictionary.Item(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Specialized.ListDictionary.Keys">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Specialized.ListDictionary.NodeEnumerator.#ctor(System.Collections.Specialized.ListDictionary)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Specialized.ListDictionary.NodeEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Specialized.ListDictionary.NodeEnumerator.Key">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Specialized.ListDictionary.NodeEnumerator.Value">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Specialized.ListDictionary.NodeKeyValueCollection.NodeKeyValueEnumerator.#ctor(System.Collections.Specialized.ListDictionary,System.Boolean)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Specialized.ListDictionary.NodeKeyValueCollection.NodeKeyValueEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Specialized.ListDictionary.NodeKeyValueCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Specialized.ListDictionary.NodeKeyValueCollection.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Specialized.ListDictionary.NodeKeyValueCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Specialized.ListDictionary.Remove(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Specialized.ListDictionary.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Specialized.ListDictionary.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Specialized.ListDictionary.Values">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Specialized.NameObjectCollectionBase.NameObjectKeysEnumerator.#ctor(System.Collections.Specialized.NameObjectCollectionBase)">
    <parameter name="coll">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Specialized.NameObjectCollectionBase.NameObjectKeysEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Specialized.NameValueCollection.Add(System.String,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.NameValueCollection.GetAsStringArray(System.Collections.ArrayList)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Specialized.NameValueCollection.GetValues(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Specialized.NameValueCollection.GetValues(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Specialized.NameValueCollection.Set(System.String,System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.OrderedDictionary.#ctor(System.Collections.Specialized.OrderedDictionary)">
    <parameter name="dictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.OrderedDictionary.Add(System.Object,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.OrderedDictionary.AsReadOnly">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Specialized.OrderedDictionary.Contains(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.OrderedDictionary.CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.OrderedDictionary.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Specialized.OrderedDictionary.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.OrderedDictionary.IndexOfKey(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.OrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Specialized.OrderedDictionary.Item(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Specialized.OrderedDictionary.Keys">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Specialized.OrderedDictionary.objectsArray">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Specialized.OrderedDictionary.objectsTable">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Specialized.OrderedDictionary.OrderedDictionaryEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Specialized.OrderedDictionary.OrderedDictionaryEnumerator.Key">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Specialized.OrderedDictionary.OrderedDictionaryEnumerator.Value">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Specialized.OrderedDictionary.OrderedDictionaryKeyValueCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Specialized.OrderedDictionary.OrderedDictionaryKeyValueCollection.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Specialized.OrderedDictionary.OrderedDictionaryKeyValueCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Specialized.OrderedDictionary.Remove(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Specialized.OrderedDictionary.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Specialized.OrderedDictionary.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Specialized.OrderedDictionary.Values">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Specialized.StringCollection.AddRange(System.String[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.StringCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Specialized.StringCollection.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.StringCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.StringDictionary.Add(System.String,System.String)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.StringDictionary.ContainsKey(System.String)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.StringDictionary.CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.StringDictionary.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Specialized.StringDictionary.Item(System.String)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.StringDictionary.Remove(System.String)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.StringEnumerator.#ctor(System.Collections.Specialized.StringCollection)">
    <parameter name="mappings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Specialized.StringEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.AmbientValueAttribute.#ctor(System.Type,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ArrayConverter.ArrayPropertyDescriptor.GetValue(System.Object)">
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ArrayConverter.ArrayPropertyDescriptor.SetValue(System.Object,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ArrayConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.ComponentModel.ArraySubsetEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.AsyncOperation.#ctor(System.Object,System.Threading.SynchronizationContext)">
    <parameter name="syncContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.AsyncOperation.CreateOperation(System.Object,System.Threading.SynchronizationContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="syncContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.AsyncOperation.Post(System.Threading.SendOrPostCallback,System.Object)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.AsyncOperation.PostOperationCompleted(System.Threading.SendOrPostCallback,System.Object)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.AsyncOperation.VerifyDelegateNotNull(System.Threading.SendOrPostCallback)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.AsyncOperationManager.CreateOperation(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.AttributeCollection.Contains(System.Attribute)">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.AttributeCollection.CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.AttributeCollection.FromExisting(System.ComponentModel.AttributeCollection,System.Attribute[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="existing">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.AttributeCollection.GetDefaultAttribute(System.Type)">
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.AttributeCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.ComponentModel.AttributeCollection.Item(System.Type)">
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.AttributeCollection.Matches(System.Attribute[])">
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.ComponentModel.AttributeCollection.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.AttributeCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.AttributeProviderAttribute.#ctor(System.String)">
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.AttributeProviderAttribute.#ctor(System.String,System.String)">
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.AttributeProviderAttribute.#ctor(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.BaseNumberConverter.FromString(System.String,System.Globalization.CultureInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.BaseNumberConverter.FromString(System.String,System.Globalization.NumberFormatInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.BaseNumberConverter.FromString(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.BaseNumberConverter.FromStringError(System.String,System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.ComponentModel.BaseNumberConverter.TargetType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.BaseNumberConverter.ToString(System.Object,System.Globalization.NumberFormatInfo)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.BindingList`1.#ctor(System.Collections.Generic.IList{`0})">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.BindingList`1.AddNew">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.BindingList`1.ApplySortCore(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
    <parameter name="prop">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.ComponentModel.BindingList`1.SortPropertyCore">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
    <parameter name="prop">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#AddNew">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
    <parameter name="prop">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
    <parameter name="prop">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.ComponentModel.BindingList`1.System#ComponentModel#IBindingList#SortProperty">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.BooleanConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.CategoryAttribute.GetLocalizedString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.CollectionConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.ComponentModel.Component.Container">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.ComponentModel.Component.Events">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.Component.GetService(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="service">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ComponentCollection.#ctor(System.ComponentModel.IComponent[])">
    <parameter name="components">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.ComponentModel.ComponentCollection.Item(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.ComponentConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ComponentEditor.EditComponent(System.ComponentModel.ITypeDescriptorContext,System.Object)">
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ComponentEditor.EditComponent(System.Object)">
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ComponentResourceManager.#ctor(System.Type)">
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ComponentResourceManager.ApplyResources(System.Object,System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="objectName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ComponentResourceManager.ApplyResources(System.Object,System.String,System.Globalization.CultureInfo)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="objectName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ComponentResourceManager.FillResources(System.Globalization.CultureInfo,System.Resources.ResourceSet@)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent)">
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)">
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Container.CreateSite(System.ComponentModel.IComponent,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Container.GetService(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="service">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Container.Remove(System.ComponentModel.IComponent)">
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.ComponentModel.Container.Site.Component">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.ComponentModel.Container.Site.Container">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.Container.Site.GetService(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="service">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Container.ValidateName(System.ComponentModel.IComponent,System.String)">
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.CultureInfoConverter.CultureComparer.Compare(System.Object,System.Object)">
    <parameter name="item2">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="item1">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.ComponentModel.CultureInfoConverter.DefaultCultureString">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.CultureInfoConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.CultureInfoConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.CustomTypeDescriptor.GetClassName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.CustomTypeDescriptor.GetComponentName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.CustomTypeDescriptor.GetConverter">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultProperty">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.CustomTypeDescriptor.GetEditor(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="editorBaseType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.CustomTypeDescriptor.GetEvents">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.CustomTypeDescriptor.GetEvents(System.Attribute[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.CustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.DecimalConverter.ToString(System.Object,System.Globalization.NumberFormatInfo)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Type,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.ComponentModel.DelegatingTypeDescriptionProvider.Provider">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.Design.CheckoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.CommandID.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.DesignerCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.Design.DesignerCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.ComponentModel.Design.DesignerCollection.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.Design.DesignerCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.Design.DesignerOptionService.CreateOptionCollection(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection,System.String,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.Item(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.Properties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.RecurseFindValue(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="options">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.WrappedPropertyDescriptor.#ctor(System.ComponentModel.PropertyDescriptor,System.Object)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.WrappedPropertyDescriptor.CanResetValue(System.Object)">
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.WrappedPropertyDescriptor.GetValue(System.Object)">
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.WrappedPropertyDescriptor.ResetValue(System.Object)">
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.WrappedPropertyDescriptor.SetValue(System.Object,System.Object)">
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.WrappedPropertyDescriptor.ShouldSerializeValue(System.Object)">
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionConverter.OptionPropertyDescriptor.#ctor(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection)">
    <parameter name="option">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionConverter.OptionPropertyDescriptor.CanResetValue(System.Object)">
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionConverter.OptionPropertyDescriptor.GetValue(System.Object)">
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionConverter.OptionPropertyDescriptor.ResetValue(System.Object)">
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionConverter.OptionPropertyDescriptor.SetValue(System.Object,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionConverter.OptionPropertyDescriptor.ShouldSerializeValue(System.Object)">
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.DesignerOptionService.GetOptionProperty(System.String,System.String)">
    <parameter name="pageName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="valueName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.ComponentModel.Design.DesignerOptionService.Options">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.Design.DesignerOptionService.PopulateOptionCollection(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection)">
    <parameter name="options">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.DesignerOptionService.System#ComponentModel#Design#IDesignerOptionService#GetOptionValue(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="valueName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pageName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.DesignerOptionService.System#ComponentModel#Design#IDesignerOptionService#SetOptionValue(System.String,System.String,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="valueName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pageName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.ComponentModel.Design.DesignerVerb.Text">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.Design.DesignerVerbCollection.#ctor(System.ComponentModel.Design.DesignerVerb[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.DesignerVerbCollection.Add(System.ComponentModel.Design.DesignerVerb)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.DesignerVerbCollection.AddRange(System.ComponentModel.Design.DesignerVerb[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.DesignerVerbCollection.AddRange(System.ComponentModel.Design.DesignerVerbCollection)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.DesignerVerbCollection.Contains(System.ComponentModel.Design.DesignerVerb)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.DesignerVerbCollection.CopyTo(System.ComponentModel.Design.DesignerVerb[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.DesignerVerbCollection.IndexOf(System.ComponentModel.Design.DesignerVerb)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.DesignerVerbCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerVerb)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.DesignerVerbCollection.OnInsert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.DesignerVerbCollection.OnRemove(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.DesignerVerbCollection.OnSet(System.Int32,System.Object,System.Object)">
    <parameter name="newValue">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="oldValue">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.DesignerVerbCollection.Remove(System.ComponentModel.Design.DesignerVerb)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.DesigntimeLicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.DesigntimeLicenseContextSerializer.Deserialize(System.IO.Stream,System.String,System.ComponentModel.Design.RuntimeLicenseContext)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.DesigntimeLicenseContextSerializer.Serialize(System.IO.Stream,System.String,System.ComponentModel.Design.DesigntimeLicenseContext)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.HelpKeywordAttribute.#ctor(System.String)">
    <parameter name="keyword">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.HelpKeywordAttribute.#ctor(System.Type)">
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.ComponentModel.Design.MenuCommand.Properties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.Design.RuntimeLicenseContext.CaseInsensitiveManifestResourceStreamLookup(System.Reflection.Assembly,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="satellite">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.RuntimeLicenseContext.GetLocalPath(System.String)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.RuntimeLicenseContext.OpenRead(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="resourceUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="store">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="container">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="store">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)">
    <parameter name="container">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="store">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean)">
    <parameter name="container">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="store">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)">
    <parameter name="container">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="store">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore(System.IO.Stream)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="store">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="store">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)">
    <parameter name="store">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="owningObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="owningObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="store">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.Serialization.ContextStack.Append(System.Object)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.ComponentModel.Design.Serialization.ContextStack.Item(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.Serialization.ContextStack.Push(System.Object)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.Serialization.DefaultSerializationProviderAttribute.#ctor(System.String)">
    <parameter name="providerTypeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.Serialization.DefaultSerializationProviderAttribute.#ctor(System.Type)">
    <parameter name="providerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)">
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor(System.String,System.Type)">
    <parameter name="baseSerializerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializerAttribute.#ctor(System.Type,System.Type)">
    <parameter name="serializerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="baseSerializerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.Serialization.MemberRelationship.#ctor(System.Object,System.ComponentModel.MemberDescriptor)">
    <parameter name="owner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.Serialization.MemberRelationship.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.ComponentModel.Design.Serialization.MemberRelationshipService.Item(System.Object,System.ComponentModel.MemberDescriptor)">
    <parameter name="sourceOwner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="sourceMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.Serialization.MemberRelationshipService.RelationshipEntry.Equals(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.String,System.Type,System.Boolean)">
    <parameter name="baseSerializerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.Serialization.RootDesignerSerializerAttribute.#ctor(System.Type,System.Type,System.Boolean)">
    <parameter name="serializerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="baseSerializerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.ComponentModel.Design.Serialization.SerializationStore.Errors">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.Design.Serialization.SerializationStore.Save(System.IO.Stream)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.ComponentModel.Design.ServiceContainer.Container">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.Design.ServiceContainer.GetService(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="serviceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.ComponentModel.Design.ServiceContainer.Services">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.DesignerAttribute.#ctor(System.String)">
    <parameter name="designerTypeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.DesignerAttribute.#ctor(System.String,System.String)">
    <parameter name="designerTypeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.DesignerAttribute.#ctor(System.String,System.Type)">
    <parameter name="designerTypeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="designerBaseType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.DesignerAttribute.#ctor(System.Type)">
    <parameter name="designerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.DesignerAttribute.#ctor(System.Type,System.Type)">
    <parameter name="designerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="designerBaseType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.String)">
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.EditorAttribute.#ctor(System.String,System.Type)">
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="baseType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.EditorAttribute.#ctor(System.Type,System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="baseType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.EnumConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.EnumConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor)">
    <parameter name="descr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
    <parameter name="descr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.EventDescriptor.#ctor(System.String,System.Attribute[])">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.EventDescriptorCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.EventDescriptorCollection.Sort">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.EventDescriptorCollection.Sort(System.Collections.IComparer)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.EventDescriptorCollection.Sort(System.String[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.EventDescriptorCollection.Sort(System.String[],System.Collections.IComparer)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.EventDescriptorCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.ComponentModel.EventDescriptorCollection.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.EventDescriptorCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.EventHandlerList.AddHandlers(System.ComponentModel.EventHandlerList)">
    <parameter name="listToAddFrom">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.EventHandlerList.Find(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.ExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ExtendedPropertyDescriptor.#ctor(System.ComponentModel.PropertyDescriptor,System.Attribute[])">
    <parameter name="extender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ExtendedPropertyDescriptor.#ctor(System.ComponentModel.ReflectPropertyDescriptor,System.Type,System.ComponentModel.IExtenderProvider,System.Attribute[])">
    <parameter name="extenderInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ExtendedPropertyDescriptor.CanResetValue(System.Object)">
    <parameter name="comp">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ExtendedPropertyDescriptor.GetValue(System.Object)">
    <parameter name="comp">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ExtendedPropertyDescriptor.ResetValue(System.Object)">
    <parameter name="comp">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ExtendedPropertyDescriptor.SetValue(System.Object,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ExtendedPropertyDescriptor.ShouldSerializeValue(System.Object)">
    <parameter name="comp">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ExtenderProvidedPropertyAttribute.Create(System.ComponentModel.PropertyDescriptor,System.Type,System.ComponentModel.IExtenderProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.InheritanceAttribute.ToString">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.InstallerTypeAttribute.#ctor(System.Type)">
    <parameter name="installerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.ComponentModel.InstanceCreationEditor.Text">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.IntSecurity.UnsafeGetFullPath(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.InvalidAsynchronousStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.InvalidEnumArgumentException.#ctor(System.String,System.Int32,System.Type)">
    <parameter name="enumClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.LicenseContext.GetService(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.LicenseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.LicenseException.#ctor(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.LicenseException.#ctor(System.Type,System.Object)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.LicenseManager.CacheProvider(System.Type,System.ComponentModel.LicenseProvider)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.LicenseManager.CreateWithContext(System.Type,System.ComponentModel.LicenseContext)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.LicenseManager.CreateWithContext(System.Type,System.ComponentModel.LicenseContext,System.Object[])">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.LicenseManager.GetCachedNoLicenseProvider(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.LicenseManager.GetCachedProvider(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.LicenseManager.GetCachedProviderInstance(System.Type)">
    <parameter name="providerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.LicenseManager.IsLicensed(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.LicenseManager.IsValid(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.LicenseManager.IsValid(System.Type,System.Object,System.ComponentModel.License@)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.LicenseManager.LicenseInteropHelper.CLRLicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.LicenseManager.LicenseInteropHelper.CLRLicenseContext.SetSavedLicenseKey(System.Type,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.LicenseManager.Validate(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.LicenseManager.Validate(System.Type,System.Object)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.LicenseManager.ValidateInternal(System.Type,System.Object,System.Boolean,System.ComponentModel.License@)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.LicenseManager.ValidateInternalRecursive(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean,System.ComponentModel.License@,System.String@)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.LicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.LicFileLicenseProvider.GetKey(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.LicFileLicenseProvider.IsKeyValid(System.String,System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ListSortDescriptionCollection.Contains(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ListSortDescriptionCollection.CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.ComponentModel.ListSortDescriptionCollection.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ListSortDescriptionCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.ComponentModel.MarshalByValueComponent.Container">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.ComponentModel.MarshalByValueComponent.Events">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.MarshalByValueComponent.GetService(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="service">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String)">
    <parameter name="mask">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Boolean)">
    <parameter name="mask">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Char,System.Boolean)">
    <parameter name="mask">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo)">
    <parameter name="mask">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean)">
    <parameter name="mask">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Boolean,System.Char,System.Char,System.Boolean)">
    <parameter name="mask">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.MaskedTextProvider.#ctor(System.String,System.Globalization.CultureInfo,System.Char,System.Boolean)">
    <parameter name="mask">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.MaskedTextProvider.Add(System.String)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.MaskedTextProvider.Add(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.MaskedTextProvider.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.ComponentModel.MaskedTextProvider.EditPositions">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.MaskedTextProvider.InsertAt(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.MaskedTextProvider.InsertAtInt(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@,System.Boolean)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.MaskedTextProvider.IsEditPosition(System.ComponentModel.MaskedTextProvider.CharDescriptor)">
    <parameter name="charDescriptor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.MaskedTextProvider.IsLiteralPosition(System.ComponentModel.MaskedTextProvider.CharDescriptor)">
    <parameter name="charDescriptor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.MaskedTextProvider.Replace(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.MaskedTextProvider.Set(System.String)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.MaskedTextProvider.Set(System.String,System.Int32@,System.ComponentModel.MaskedTextResultHint@)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.MaskedTextProvider.SetChar(System.Char,System.Int32,System.ComponentModel.MaskedTextProvider.CharDescriptor)">
    <parameter name="charDescriptor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.MaskedTextProvider.SetString(System.String,System.Int32)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.MaskedTextProvider.TestEscapeChar(System.Char,System.Int32,System.ComponentModel.MaskedTextProvider.CharDescriptor)">
    <parameter name="charDex">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.MaskedTextProvider.TestSetString(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.MaskedTextProvider.TestString(System.String,System.Int32,System.Int32@,System.ComponentModel.MaskedTextResultHint@)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.MaskedTextProvider.ToDisplayString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Boolean,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.MaskedTextProvider.ToString(System.Boolean,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.MaskedTextProvider.ToString(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.MemberDescriptor.#ctor(System.ComponentModel.MemberDescriptor)">
    <parameter name="descr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.MemberDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
    <parameter name="oldMemberDescriptor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.MemberDescriptor.#ctor(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.MemberDescriptor.#ctor(System.String,System.Attribute[])">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.ComponentModel.MemberDescriptor.Attributes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.ComponentModel.MemberDescriptor.Category">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.MemberDescriptor.CreateAttributeCollection">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.ComponentModel.MemberDescriptor.Description">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.MemberDescriptor.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="componentClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="componentClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.MemberDescriptor.GetInvokee(System.Type,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="componentClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.ComponentModel.MemberDescriptor.Name">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.MultilineStringConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.NestedContainer.#ctor(System.ComponentModel.IComponent)">
    <parameter name="owner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.ComponentModel.NestedContainer.Site.Component">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.ComponentModel.NestedContainer.Site.Container">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.ComponentModel.NestedContainer.Site.FullName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.NestedContainer.Site.GetService(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="service">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.NullableConverter.#ctor(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.NullableConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor)">
    <parameter name="descr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])">
    <parameter name="descr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.PropertyDescriptor.#ctor(System.String,System.Attribute[])">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)">
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.ComponentModel.PropertyDescriptor.Converter">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="editorBaseType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)">
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)">
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.PropertyDescriptorCollection.CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.PropertyDescriptorCollection.Find(System.String,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.PropertyDescriptorCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.ComponentModel.PropertyDescriptorCollection.Item(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.ComponentModel.PropertyDescriptorCollection.PropertyDescriptorEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.ComponentModel.PropertyDescriptorCollection.PropertyDescriptorEnumerator.Key">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.ComponentModel.PropertyDescriptorCollection.PropertyDescriptorEnumerator.Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.PropertyDescriptorCollection.Sort">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.PropertyDescriptorCollection.Sort(System.Collections.IComparer)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.PropertyDescriptorCollection.Sort(System.String[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.PropertyDescriptorCollection.Sort(System.String[],System.Collections.IComparer)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Add(System.Object,System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Contains(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Item(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Keys">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Remove(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IDictionary#Values">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.PropertyDescriptorCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.PropertyTabAttribute.Equals(System.ComponentModel.PropertyTabAttribute)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.ComponentModel.PropertyTabAttribute.TabClasses">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.ProvidePropertyAttribute.#ctor(System.String,System.Type)">
    <parameter name="receiverType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.ReferenceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReferenceConverter.ReferenceComparer.Compare(System.Object,System.Object)">
    <parameter name="item2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="item1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectEventDescriptor.#ctor(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])">
    <parameter name="oldReflectEventDescriptor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectEventDescriptor.#ctor(System.Type,System.Reflection.EventInfo)">
    <parameter name="componentClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="eventInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectEventDescriptor.#ctor(System.Type,System.String,System.Type,System.Attribute[])">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="componentClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectEventDescriptor.FillEventInfoAttribute(System.Reflection.EventInfo,System.Collections.IList)">
    <parameter name="realEventInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectEventDescriptor.FillSingleMethodAttribute(System.Reflection.MethodInfo,System.Collections.IList)">
    <parameter name="realMethodInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectPropertyDescriptor.#ctor(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])">
    <parameter name="componentClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="oldReflectPropertyDescriptor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectPropertyDescriptor.#ctor(System.Type,System.String,System.Type,System.Attribute[])">
    <parameter name="componentClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectPropertyDescriptor.#ctor(System.Type,System.String,System.Type,System.Reflection.PropertyInfo,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Attribute[])">
    <parameter name="componentClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectPropertyDescriptor.#ctor(System.Type,System.String,System.Type,System.Type,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Attribute[])">
    <parameter name="componentClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectPropertyDescriptor.ExtenderCanResetValue(System.ComponentModel.IExtenderProvider,System.Object)">
    <parameter name="provider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectPropertyDescriptor.ExtenderResetValue(System.ComponentModel.IExtenderProvider,System.Object,System.ComponentModel.PropertyDescriptor)">
    <parameter name="provider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectPropertyDescriptor.ExtenderShouldSerializeValue(System.ComponentModel.IExtenderProvider,System.Object)">
    <parameter name="provider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectPropertyDescriptor.GetValue(System.Object)">
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectPropertyDescriptor.OnINotifyPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectPropertyDescriptor.SetValue(System.Object,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectTypeDescriptionProvider.AddEditorTable(System.Type,System.Collections.Hashtable)">
    <parameter name="editorBaseType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectTypeDescriptionProvider.CreateInstance(System.Type,System.Type)">
    <parameter name="objectType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectTypeDescriptionProvider.GetAttributes(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectTypeDescriptionProvider.GetCache(System.Object)">
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectTypeDescriptionProvider.GetClassName(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectTypeDescriptionProvider.GetComponentName(System.Type,System.Object)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectTypeDescriptionProvider.GetConverter(System.Type,System.Object)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectTypeDescriptionProvider.GetDefaultEvent(System.Type,System.Object)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectTypeDescriptionProvider.GetDefaultProperty(System.Type,System.Object)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectTypeDescriptionProvider.GetEditor(System.Type,System.Object,System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="editorBaseType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectTypeDescriptionProvider.GetEditorTable(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="editorBaseType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectTypeDescriptionProvider.GetEvents(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectTypeDescriptionProvider.GetExtendedClassName(System.Object)">
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectTypeDescriptionProvider.GetExtendedComponentName(System.Object)">
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectTypeDescriptionProvider.GetExtendedConverter(System.Object)">
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectTypeDescriptionProvider.GetExtendedDefaultEvent(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.ReflectTypeDescriptionProvider.GetExtendedDefaultProperty(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.ReflectTypeDescriptionProvider.GetExtendedEditor(System.Object,System.Type)">
    <parameter name="editorBaseType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectTypeDescriptionProvider.GetExtendedProperties(System.Object)">
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectTypeDescriptionProvider.GetExtendedPropertyOwner(System.Object,System.ComponentModel.PropertyDescriptor)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectTypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectTypeDescriptionProvider.GetExtenders(System.Collections.ICollection,System.Object,System.Collections.IDictionary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectTypeDescriptionProvider.GetProperties(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectTypeDescriptionProvider.GetPropertyOwner(System.Type,System.Object,System.ComponentModel.PropertyDescriptor)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectTypeDescriptionProvider.GetReflectionType(System.Type,System.Object)">
    <parameter name="objectType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectTypeDescriptionProvider.GetTypeData(System.Type,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectTypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
    <parameter name="objectType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectTypeDescriptionProvider.GetTypeFromName(System.String)">
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectTypeDescriptionProvider.IsPopulated(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectTypeDescriptionProvider.ReflectedTypeData.GetAttributes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.ReflectTypeDescriptionProvider.ReflectedTypeData.GetEditor(System.Object,System.Type)">
    <parameter name="editorBaseType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectTypeDescriptionProvider.ReflectedTypeData.GetEditorAttribute(System.ComponentModel.AttributeCollection,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectTypeDescriptionProvider.ReflectedTypeData.GetEvents">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.ReflectTypeDescriptionProvider.ReflectedTypeData.GetProperties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.ReflectTypeDescriptionProvider.ReflectGetAttributes(System.Reflection.MemberInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectTypeDescriptionProvider.ReflectGetAttributes(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectTypeDescriptionProvider.ReflectGetEvents(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectTypeDescriptionProvider.ReflectGetExtendedProperties(System.ComponentModel.IExtenderProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="provider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectTypeDescriptionProvider.ReflectGetProperties(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectTypeDescriptionProvider.Refresh(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ReflectTypeDescriptionProvider.SearchIntrinsicTable(System.Collections.Hashtable,System.Type)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="callingType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.RefreshEventArgs.#ctor(System.Object)">
    <parameter name="componentChanged">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.StringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ToolboxItemAttribute.#ctor(System.String)">
    <parameter name="toolboxItemTypeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ToolboxItemAttribute.#ctor(System.Type)">
    <parameter name="toolboxItemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.ComponentModel.ToolboxItemAttribute.ToolboxItemTypeName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    <parameter name="sourceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)">
    <parameter name="sourceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="propertyValues">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="propertyValues">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeConverter.GetStandardValues">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeConverter.IsValid(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.#ctor(System.Type,System.String,System.Type)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.#ctor(System.Type,System.String,System.Type,System.Attribute[])">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeConverter.SimplePropertyDescriptor.ShouldSerializeValue(System.Object)">
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="props">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeConverter.StandardValuesCollection.CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeConverter.StandardValuesCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeConverter.StandardValuesCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.ComponentModel.TypeConverter.StandardValuesCollection.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeConverter.StandardValuesCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.String)">
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="objectType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)">
    <parameter name="objectType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="objectType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="objectType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptionProviderAttribute.#ctor(System.String)">
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptionProviderAttribute.#ctor(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)">
    <parameter name="editorBaseType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.AttributeFilterCacheItem.IsValid(System.Attribute[])">
    <parameter name="filter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.AttributeProvider.AttributeTypeDescriptor.GetAttributes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.AttributeProvider.GetTypeDescriptor(System.Type,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.CheckDefaultProvider(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.ComNativeDescriptionProvider.ComNativeTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.ComNativeDescriptionProvider.ComNativeTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.ComNativeDescriptionProvider.ComNativeTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.ComNativeDescriptionProvider.ComNativeTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.ComNativeDescriptionProvider.ComNativeTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.ComNativeDescriptionProvider.ComNativeTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="editorBaseType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.ComNativeDescriptionProvider.ComNativeTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.ComNativeDescriptionProvider.ComNativeTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.ComNativeDescriptionProvider.ComNativeTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)">
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="oldEventDescriptor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="componentType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="objectType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="argTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="componentType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="oldPropertyDescriptor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="componentType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.FilterMembers(System.Collections.IList,System.Attribute[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="members">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.GetCache(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>component:notnull =&gt; notnull</argument>
    </attribute>
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>component:notnull =&gt; notnull</argument>
    </attribute>
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.GetDescriptor(System.Object,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.GetDescriptor(System.Type,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="editorBaseType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="editorBaseType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="editorBaseType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.GetExtendedDescriptor(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.GetExtenderCollisionSuffix(System.ComponentModel.MemberDescriptor)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.GetPropertiesImpl(System.Object,System.Attribute[],System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.GetProviderRecursive(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.MemberDescriptorComparer.Compare(System.Object,System.Object)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.MergedTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.MergedTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.MergedTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.MergedTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.MergedTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.MergedTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="editorBaseType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.MergedTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.MergedTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.MergedTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.NodeFor(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.NodeFor(System.Object,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.NodeFor(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.NodeFor(System.Type,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.NodeRemove(System.Object,System.ComponentModel.TypeDescriptionProvider)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.PipelineAttributeFilter(System.Int32,System.Collections.ICollection,System.Attribute[],System.Object,System.Collections.IDictionary)">
    <parameter name="members">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.PipelineFilter(System.Int32,System.Collections.ICollection,System.Object,System.Collections.IDictionary)">
    <parameter name="members">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.PipelineInitialize(System.Int32,System.Collections.ICollection,System.Collections.IDictionary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="members">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.PipelineMerge(System.Int32,System.Collections.ICollection,System.Collections.ICollection,System.Object,System.Collections.IDictionary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="primary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.RaiseRefresh(System.Object)">
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.TypeDescriptionNode.DefaultExtendedTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.TypeDescriptionNode.DefaultExtendedTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.TypeDescriptionNode.DefaultExtendedTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.TypeDescriptionNode.DefaultExtendedTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.TypeDescriptionNode.DefaultExtendedTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.TypeDescriptionNode.DefaultExtendedTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="editorBaseType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.TypeDescriptionNode.DefaultExtendedTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.TypeDescriptionNode.DefaultExtendedTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.TypeDescriptionNode.DefaultExtendedTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.TypeDescriptionNode.DefaultTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.TypeDescriptionNode.DefaultTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.TypeDescriptionNode.DefaultTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.TypeDescriptionNode.DefaultTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.TypeDescriptionNode.DefaultTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.TypeDescriptionNode.DefaultTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.TypeDescriptionNode.DefaultTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="editorBaseType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.TypeDescriptionNode.DefaultTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.TypeDescriptionNode.DefaultTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.TypeDescriptionNode.DefaultTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.TypeDescriptionNode.DefaultTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.TypeDescriptionNode.DefaultTypeDescriptor.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.TypeDescriptionNode.GetExtendedTypeDescriptor(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.TypeDescriptionNode.GetTypeDescriptor(System.Type,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeListConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.WarningException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.WeakHashtable.EqualityWeakReference.#ctor(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.WeakHashtable.EqualityWeakReference.Equals(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.WeakHashtable.SetWeak(System.Object,System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.WeakHashtable.WeakKeyComparer.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.WeakHashtable.WeakKeyComparer.System#Collections#IEqualityComparer#GetHashCode(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Win32Exception.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Win32Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)">
    <parameter name="owner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)">
    <parameter name="owner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.ApplicationSettingsBase.CreateSetting(System.Reflection.PropertyInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="propInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.ApplicationSettingsBase.GetPropertiesForProvider(System.Configuration.SettingsProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Configuration.ApplicationSettingsBase.GetPropertyValue(System.String)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.ApplicationSettingsBase.GetSerializeAs(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Configuration.ApplicationSettingsBase.Initializer">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Configuration.ApplicationSettingsBase.IsClickOnceDeployed(System.AppDomain)">
    <parameter name="appDomain">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.ApplicationSettingsBase.SettingsFilter(System.Reflection.PropertyInfo[])">
    <parameter name="allProps">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.AppSettingsReader.GetNoneNesting(System.String)">
    <parameter name="val">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.AppSettingsReader.GetValue(System.String,System.Type)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.ClientSettingsStore.ClientSettingsConfigurationHost.Init(System.Configuration.Internal.IInternalConfigRoot,System.Object[])">
    <parameter name="hostInitParams">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="configRoot">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.ClientSettingsStore.ClientSettingsConfigurationHost.OpenExeConfiguration(System.Configuration.ConfigurationUserLevel)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Configuration.ClientSettingsStore.DeclareSection(System.Configuration.Configuration,System.String)">
    <parameter name="sectionName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="config">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.ClientSettingsStore.GetConfigSection(System.Configuration.Configuration,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="sectionName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.ClientSettingsStore.GetUserConfig(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Configuration.ClientSettingsStore.ReadSettings(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Configuration.ClientSettingsStore.ReadSettingsFromFile(System.String,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Configuration.ClientSettingsStore.RevertToParent(System.String,System.Boolean)">
    <parameter name="sectionName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.ClientSettingsStore.WriteSettings(System.String,System.Boolean,System.Collections.IDictionary)">
    <parameter name="newSettings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="sectionName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.CommonConfigurationStrings.GetSectionPath(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Configuration.CommonConfigurationStrings.GetSectionPath(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Configuration.CommonConfigurationStrings.UriSectionPath">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Configuration.ConfigurationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Configuration.ConfigurationException.BareMessage">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Configuration.ConfigurationException.FullPathWithAssert(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="filename">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Configuration.ConfigurationSettings.AppSettings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Configuration.ConfigXmlAttribute.#ctor(System.String,System.Int32,System.String,System.String,System.String,System.Xml.XmlDocument)">
    <parameter name="doc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.ConfigXmlCDataSection.#ctor(System.String,System.Int32,System.String,System.Xml.XmlDocument)">
    <parameter name="doc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.ConfigXmlComment.#ctor(System.String,System.Int32,System.String,System.Xml.XmlDocument)">
    <parameter name="doc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.ConfigXmlDocument.LoadSingleElement(System.String,System.Xml.XmlTextReader)">
    <parameter name="sourceReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.ConfigXmlElement.#ctor(System.String,System.Int32,System.String,System.String,System.String,System.Xml.XmlDocument)">
    <parameter name="doc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.ConfigXmlSignificantWhitespace.#ctor(System.String,System.Int32,System.String,System.Xml.XmlDocument)">
    <parameter name="doc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.ConfigXmlText.#ctor(System.String,System.Int32,System.String,System.Xml.XmlDocument)">
    <parameter name="doc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.ConfigXmlWhitespace.#ctor(System.String,System.Int32,System.String,System.Xml.XmlDocument)">
    <parameter name="doc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.DictionarySectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="section">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Configuration.DictionarySectionHandler.KeyAttributeName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Configuration.DictionarySectionHandler.ValueAttributeName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Configuration.HandlerBase.CheckForChildNodes(System.Xml.XmlNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.HandlerBase.CheckForNonElement(System.Xml.XmlNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.HandlerBase.CheckForUnrecognizedAttributes(System.Xml.XmlNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.HandlerBase.GetAndRemoveAttribute(System.Xml.XmlNode,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.HandlerBase.GetAndRemoveBooleanAttribute(System.Xml.XmlNode,System.String,System.Boolean@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.HandlerBase.GetAndRemoveBooleanAttributeInternal(System.Xml.XmlNode,System.String,System.Boolean,System.Boolean@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.HandlerBase.GetAndRemoveIntegerAttribute(System.Xml.XmlNode,System.String,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.HandlerBase.GetAndRemoveIntegerAttributeInternal(System.Xml.XmlNode,System.String,System.Boolean,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.HandlerBase.GetAndRemoveStringAttribute(System.Xml.XmlNode,System.String,System.String@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.HandlerBase.GetAndRemoveStringAttributeInternal(System.Xml.XmlNode,System.String,System.Boolean,System.String@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.HandlerBase.IsIgnorableAlsoCheckForNonElement(System.Xml.XmlNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.HandlerBase.RemoveAttribute(System.Xml.XmlNode,System.String)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.HandlerBase.RemoveRequiredAttribute(System.Xml.XmlNode,System.String)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.HandlerBase.RemoveRequiredAttribute(System.Xml.XmlNode,System.String,System.Boolean)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.IgnoreSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="section">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="configContext">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.LocalFileSettingsProvider.CreateVersion(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Configuration.LocalFileSettingsProvider.Escaper">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Configuration.LocalFileSettingsProvider.GetSectionName(System.Configuration.SettingsContext)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.LocalFileSettingsProvider.GetSettingValuesFromFile(System.String,System.String,System.Boolean,System.Configuration.SettingsPropertyCollection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.LocalFileSettingsProvider.IsRoamingSetting(System.Configuration.SettingsProperty)">
    <parameter name="setting">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.LocalFileSettingsProvider.IsUserSetting(System.Configuration.SettingsProperty)">
    <parameter name="setting">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.LocalFileSettingsProvider.SerializeToXmlElement(System.Configuration.SettingsProperty,System.Configuration.SettingsPropertyValue)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="setting">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Configuration.LocalFileSettingsProvider.Store">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Boolean)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.NameValueFileSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="configContext">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="section">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.NameValueSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="section">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.NameValueSectionHandler.CreateStatic(System.Object,System.Xml.XmlNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="section">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.NameValueSectionHandler.CreateStatic(System.Object,System.Xml.XmlNode,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="section">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Configuration.NameValueSectionHandler.KeyAttributeName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Configuration.NameValueSectionHandler.ValueAttributeName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Configuration.SettingElement.Equals(System.Object)">
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.SettingElementCollection.Add(System.Configuration.SettingElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.SettingElementCollection.CreateNewElement">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Configuration.SettingElementCollection.Get(System.String)">
    <parameter name="elementKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.SettingElementCollection.Remove(System.Configuration.SettingElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.SettingsAttributeDictionary.#ctor(System.Configuration.SettingsAttributeDictionary)">
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.SettingsBase.GetPropertiesFromProvider(System.Configuration.SettingsProvider)">
    <parameter name="provider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.SettingsBase.GetPropertyValueByName(System.String)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Configuration.SettingsBase.Item(System.String)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.SettingsBase.SetPropertyValueByName(System.String,System.Object)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.SettingsBase.Synchronized(System.Configuration.SettingsBase)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="settingsBase">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.SettingsProperty.#ctor(System.Configuration.SettingsProperty)">
    <parameter name="propertyToCopy">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.SettingsPropertyCollection.#ctor(System.Collections.Hashtable)">
    <parameter name="h">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.SettingsPropertyCollection.Add(System.Configuration.SettingsProperty)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.SettingsPropertyCollection.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Configuration.SettingsPropertyCollection.CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.SettingsPropertyCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Configuration.SettingsPropertyCollection.Item(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.SettingsPropertyCollection.Remove(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Configuration.SettingsPropertyCollection.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.SettingsPropertyNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.SettingsPropertyValue.ConvertObjectToString(System.Object,System.Type,System.Configuration.SettingsSerializeAs,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="propValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.SettingsPropertyValue.GetObjectFromString(System.Type,System.Configuration.SettingsSerializeAs,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.SettingsPropertyValue.SerializePropertyValue">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Configuration.SettingsPropertyValueCollection.#ctor(System.Collections.Hashtable,System.Collections.ArrayList)">
    <parameter name="indices">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.SettingsPropertyValueCollection.Add(System.Configuration.SettingsPropertyValue)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.SettingsPropertyValueCollection.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Configuration.SettingsPropertyValueCollection.CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.SettingsPropertyValueCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Configuration.SettingsPropertyValueCollection.Item(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.SettingsPropertyValueCollection.Remove(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Configuration.SettingsPropertyValueCollection.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Configuration.SettingsProviderCollection.Item(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.SettingValueElement.Equals(System.Object)">
    <parameter name="settingValue">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.SettingValueElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
    <parameter name="elementName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.SingleTagSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="section">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.TypeUtil.CreateInstanceWithReflectionPermission(System.String)">
    <parameter name="typeString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.UriSectionInternal.#ctor(System.Configuration.UriSection)">
    <parameter name="section">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.UriSectionInternal.GetSection">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.AssertWrapper.TruncateMessageToFitScreen(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.AsyncStreamReader.#ctor(System.Diagnostics.Process,System.IO.Stream,System.Diagnostics.UserCallBack,System.Text.Encoding)">
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.AsyncStreamReader.#ctor(System.Diagnostics.Process,System.IO.Stream,System.Diagnostics.UserCallBack,System.Text.Encoding,System.Int32)">
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.AsyncStreamReader.Init(System.Diagnostics.Process,System.IO.Stream,System.Diagnostics.UserCallBack,System.Text.Encoding,System.Int32)">
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.AsyncStreamReader.ReadBuffer(System.IAsyncResult)">
    <parameter name="ar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.CategoryEntry.#ctor(Microsoft.Win32.NativeMethods.PERF_OBJECT_TYPE)">
    <parameter name="perfObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.CategorySample.#ctor(System.Byte[],System.Diagnostics.CategoryEntry,System.Diagnostics.PerformanceCounterLib)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.CategorySample.GetCounterDefinitionSample(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.CategorySample.GetInstanceNamesFromIndex(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.CategorySample.ReadCategory">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.CorrelationManager.GetLogicalOperationStack">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Diagnostics.CorrelationManager.LogicalOperationStack">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.CorrelationManager.StartLogicalOperation(System.Object)">
    <parameter name="operationId">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.CounterCreationDataCollection.#ctor(System.Diagnostics.CounterCreationData[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.CounterCreationDataCollection.#ctor(System.Diagnostics.CounterCreationDataCollection)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.CounterCreationDataCollection.Add(System.Diagnostics.CounterCreationData)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.CounterCreationDataCollection.AddRange(System.Diagnostics.CounterCreationData[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.CounterCreationDataCollection.AddRange(System.Diagnostics.CounterCreationDataCollection)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.CounterCreationDataCollection.Contains(System.Diagnostics.CounterCreationData)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.CounterCreationDataCollection.CopyTo(System.Diagnostics.CounterCreationData[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.CounterCreationDataCollection.IndexOf(System.Diagnostics.CounterCreationData)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.CounterCreationDataCollection.Insert(System.Int32,System.Diagnostics.CounterCreationData)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.CounterCreationDataCollection.Remove(System.Diagnostics.CounterCreationData)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.CounterDefinitionSample.#ctor(Microsoft.Win32.NativeMethods.PERF_COUNTER_DEFINITION,System.Diagnostics.CategorySample,System.Int32)">
    <parameter name="perfCounter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.CounterDefinitionSample.GetInstanceValue(System.String)">
    <parameter name="instanceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.CounterDefinitionSample.ReadInstanceData(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="counterName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.CounterSample.Equals(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.CounterSampleCalculator.FillInValues(System.Diagnostics.CounterSample,System.Diagnostics.CounterSample,Microsoft.Win32.NativeMethods.PDH_RAW_COUNTER,Microsoft.Win32.NativeMethods.PDH_RAW_COUNTER)">
    <parameter name="oldPdhValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="newPdhValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="detailMessage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Debug.Fail(System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="detailMessage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Debug.Print(System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Debug.Write(System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Debug.Write(System.String,System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Debug.WriteLine(System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.DefaultTraceListener.Fail(System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.DefaultTraceListener.Fail(System.String,System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="detailMessage">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.DefaultTraceListener.StackTraceToString(System.Diagnostics.StackTrace,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="trace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.DefaultTraceListener.Write(System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.DefaultTraceListener.WriteLine(System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.DefaultTraceListener.WriteToLogFile(System.String,System.Boolean)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.Stream,System.String)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.DelimitedListTraceListener.#ctor(System.IO.TextWriter,System.String)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.DelimitedListTraceListener.GetSupportedAttributes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
    <parameter name="eventCache">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.DelimitedListTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
    <parameter name="eventCache">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
    <parameter name="eventCache">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.DelimitedListTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="eventCache">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.DelimitedListTraceListener.WriteStackEscaped(System.Collections.Stack)">
    <parameter name="stack">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Diagnostics.DiagnosticsConfiguration.Sources">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.DiagnosticsConfigurationHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="configContext">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="section">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.DiagnosticsConfigurationHandler.HandleAssert(System.Collections.Hashtable,System.Xml.XmlNode,System.Object)">
    <parameter name="config">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="assertNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.DiagnosticsConfigurationHandler.HandleCounters(System.Collections.Hashtable,System.Collections.Hashtable,System.Xml.XmlNode,System.Object)">
    <parameter name="config">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="countersNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.DiagnosticsConfigurationHandler.HandleListeners(System.Collections.Hashtable,System.Xml.XmlNode,System.Object)">
    <parameter name="listenersNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.DiagnosticsConfigurationHandler.HandleSwitches(System.Collections.Hashtable,System.Xml.XmlNode,System.Object)">
    <parameter name="config">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="switchesNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.DiagnosticsConfigurationHandler.HandleTrace(System.Collections.Hashtable,System.Xml.XmlNode,System.Object)">
    <parameter name="config">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="traceNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EnvironmentBlock.ToByteArray(System.Collections.Specialized.StringDictionary,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="sd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLog.#ctor(System.String)">
    <parameter name="logName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLog.#ctor(System.String,System.String)">
    <parameter name="logName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLog.#ctor(System.String,System.String,System.String)">
    <parameter name="logName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLog._GetAssertPermSet">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.EventLog.AddListenerComponent(System.Diagnostics.EventLog,System.String,System.String)">
    <parameter name="compLogName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLog.Close(System.String)">
    <parameter name="currentMachineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLog.CreateEventSource(System.Diagnostics.EventSourceCreationData)">
    <parameter name="sourceData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLog.Delete(System.String)">
    <parameter name="logName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLog.Delete(System.String,System.String)">
    <parameter name="machineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="logName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLog.DeleteEventSource(System.String)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLog.DeleteEventSource(System.String,System.String)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="machineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Diagnostics.EventLog.Entries">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.EventLog.EventLogWaitHandle.#ctor(Microsoft.Win32.SafeHandles.SafeEventHandle)">
    <parameter name="eventLogNativeHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLog.Exists(System.String,System.String)">
    <parameter name="machineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLog.FindSame8FirstCharsLog(Microsoft.Win32.RegistryKey,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="keyParent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="logName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLog.FindSourceRegistration(System.String,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="machineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLog.FixupPath(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLog.FormatMessageWrapper(System.String,System.UInt32,System.String[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.EventLog.GetAllEntries">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.EventLog.GetDllPath(System.String)">
    <parameter name="machineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLog.GetEntryAt(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.EventLog.GetEntryAtNoThrow(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.EventLog.GetEntryWithOldest(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.EventLog.GetEventLogRegKey(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="machine">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLog.GetEventLogs">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.EventLog.GetEventLogs(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="machineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLog.GetLogName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="currentMachineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLog.GetLogRegKey(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="currentMachineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLog.GetLogRegValue(System.String,System.String)">
    <parameter name="currentMachineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLog.IntFrom(System.Byte[],System.Int32)">
    <parameter name="buf">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLog.LogNameFromSourceName(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="machineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Diagnostics.EventLog.MessageLibraries">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.EventLog.OpenForRead(System.String)">
    <parameter name="currentMachineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLog.RegisterDisplayName(System.String,System.Int64)">
    <parameter name="resourceFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLog.RemoveListenerComponent(System.Diagnostics.EventLog,System.String)">
    <parameter name="compLogName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLog.Reset(System.String)">
    <parameter name="currentMachineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLog.SetLogName(System.String,System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="currentMachineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLog.SetSpecialLogRegValues(Microsoft.Win32.RegistryKey,System.String)">
    <parameter name="logKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="logName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLog.SetSpecialSourceRegValues(Microsoft.Win32.RegistryKey,System.Diagnostics.EventSourceCreationData)">
    <parameter name="sourceLogKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="sourceData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLog.SourceExists(System.String,System.String)">
    <parameter name="machineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLog.StartListening(System.String,System.String)">
    <parameter name="currentLogName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLog.StartRaisingEvents(System.String,System.String)">
    <parameter name="currentLogName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLog.StaticCompletionCallback(System.Object,System.Boolean)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLog.StopListening(System.String)">
    <parameter name="currentLogName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLog.StopRaisingEvents(System.String)">
    <parameter name="currentLogName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLog.TryFormatMessage(Microsoft.Win32.SafeHandles.SafeLibraryHandle,System.UInt32,System.String[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="insertionStrings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLog.ValidLogName(System.String,System.Boolean)">
    <parameter name="logName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLog.VerifyAndCreateSource(System.String,System.String)">
    <parameter name="currentMachineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLog.WriteEvent(System.Diagnostics.EventInstance,System.Byte[],System.Object[])">
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLog.WriteEvent(System.Diagnostics.EventInstance,System.Object[])">
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLog.WriteEvent(System.String,System.Diagnostics.EventInstance,System.Byte[],System.Object[])">
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLog.WriteEvent(System.String,System.Diagnostics.EventInstance,System.Object[])">
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLogEntry.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLogEntry.CharFrom(System.Byte[],System.Int32)">
    <parameter name="buf">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Diagnostics.EventLogEntry.Data">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.EventLogEntry.GetSourceRegKey(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="machineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLogEntry.IntFrom(System.Byte[],System.Int32)">
    <parameter name="buf">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Diagnostics.EventLogEntry.MachineName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Diagnostics.EventLogEntry.Message">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Diagnostics.EventLogEntry.ReplacementStrings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.EventLogEntry.ReplaceMessageParameters(System.String,System.String[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="msg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLogEntry.ShortFrom(System.Byte[],System.Int32)">
    <parameter name="buf">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Diagnostics.EventLogEntry.Source">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.EventLogEntry.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Diagnostics.EventLogEntry.UserName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.EventLogEntryCollection.CopyTo(System.Diagnostics.EventLogEntry[],System.Int32)">
    <parameter name="entries">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Diagnostics.EventLogEntryCollection.EntriesEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.EventLogEntryCollection.GetEntryAtNoThrow(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.EventLogEntryCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Diagnostics.EventLogEntryCollection.Item(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Diagnostics.EventLogEntryCollection.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.EventLogPermission.#ctor(System.Diagnostics.EventLogPermissionEntry[])">
    <parameter name="permissionAccessEntries">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLogPermission.AddPermissionAccess(System.Diagnostics.EventLogPermissionEntry)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Diagnostics.EventLogPermission.PermissionEntries">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.EventLogPermission.RemovePermissionAccess(System.Diagnostics.EventLogPermissionEntry)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLogPermissionAttribute.CreatePermission">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.EventLogPermissionEntry.#ctor(System.Security.Permissions.ResourcePermissionBaseEntry)">
    <parameter name="baseEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLogPermissionEntry.GetBaseEntry">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.#ctor(System.Diagnostics.EventLogPermission,System.Security.Permissions.ResourcePermissionBaseEntry[])">
    <parameter name="entries">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.Add(System.Diagnostics.EventLogPermissionEntry)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.AddRange(System.Diagnostics.EventLogPermissionEntry[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.AddRange(System.Diagnostics.EventLogPermissionEntryCollection)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.Contains(System.Diagnostics.EventLogPermissionEntry)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.CopyTo(System.Diagnostics.EventLogPermissionEntry[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.IndexOf(System.Diagnostics.EventLogPermissionEntry)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.Insert(System.Int32,System.Diagnostics.EventLogPermissionEntry)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLogPermissionEntryCollection.Remove(System.Diagnostics.EventLogPermissionEntry)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLogTraceListener.CreateEventInstance(System.Diagnostics.TraceEventType,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="eventCache">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
    <parameter name="eventCache">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
    <parameter name="eventCache">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="eventCache">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLogTraceListener.Write(System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLogTraceListener.WriteLine(System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventTypeFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.FileVersionInfo.ConvertTo8DigitHex(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.FileVersionInfo.GetFileVersionLanguage(System.IntPtr)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.FileVersionInfo.GetFileVersionString(System.IntPtr,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.FileVersionInfo.GetFixedFileInfo(System.IntPtr)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.FileVersionInfo.GetFullPathWithAssert(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.FileVersionInfo.GetVersionInfo(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.FilterElement.GetRuntimeObject">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.FilterElement.RefreshRuntimeObject(System.Diagnostics.TraceFilter)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="filter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.InstanceDataCollection.#ctor(System.String)">
    <parameter name="counterName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.InstanceDataCollection.Add(System.String,System.Diagnostics.InstanceData)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="instanceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.InstanceDataCollection.Contains(System.String)">
    <parameter name="instanceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.InstanceDataCollection.CopyTo(System.Diagnostics.InstanceData[],System.Int32)">
    <parameter name="instances">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Diagnostics.InstanceDataCollection.Item(System.String)">
    <parameter name="instanceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Diagnostics.InstanceDataCollection.Keys">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Diagnostics.InstanceDataCollection.Values">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.InstanceDataCollectionCollection.Add(System.String,System.Diagnostics.InstanceDataCollection)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="counterName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.InstanceDataCollectionCollection.Contains(System.String)">
    <parameter name="counterName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.InstanceDataCollectionCollection.CopyTo(System.Diagnostics.InstanceDataCollection[],System.Int32)">
    <parameter name="counters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Diagnostics.InstanceDataCollectionCollection.Item(System.String)">
    <parameter name="counterName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Diagnostics.InstanceDataCollectionCollection.Keys">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Diagnostics.InstanceDataCollectionCollection.Values">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Diagnostics.ListenerElement.Attributes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.ListenerElement.Equals(System.Object)">
    <parameter name="compareTo">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.ListenerElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.ListenerElement.RefreshRuntimeObject(System.Diagnostics.TraceListener)">
    <parameter name="listener">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.ListenerElementsCollection.BaseAdd(System.Configuration.ConfigurationElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.ListenerElementsCollection.CreateNewElement">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.ListenerElementsCollection.GetRuntimeObject">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Diagnostics.ListenerElementsCollection.Item(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.NtProcessInfoHelper.GetProcessInfos">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.NtProcessInfoHelper.GetProcessInfos(System.IntPtr)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.NtProcessInfoHelper.GetProcessShortName(System.Char*,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.NtProcessManager.GetModuleInfos(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.NtProcessManager.GetModuleInfos(System.Int32,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.NtProcessManager.GetProcessIds">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.NtProcessManager.GetProcessIds(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="machineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.NtProcessManager.GetProcessInfo(Microsoft.Win32.NativeMethods.PERF_OBJECT_TYPE,System.IntPtr,Microsoft.Win32.NativeMethods.PERF_COUNTER_DEFINITION[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="counters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.NtProcessManager.GetProcessInfos(System.Diagnostics.PerformanceCounterLib)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="library">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.NtProcessManager.GetProcessInfos(System.Diagnostics.PerformanceCounterLib,System.Int32,System.Int32,System.Byte[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="library">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.NtProcessManager.GetProcessInfos(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="machineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.NtProcessManager.GetThreadInfo(Microsoft.Win32.NativeMethods.PERF_OBJECT_TYPE,System.IntPtr,Microsoft.Win32.NativeMethods.PERF_COUNTER_DEFINITION[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="counters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.OrdinalCaseInsensitiveComparer.Compare(System.Object,System.Object)">
    <parameter name="b">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Diagnostics.PerformanceCounter.CounterHelp">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterCategory.#ctor(System.String)">
    <parameter name="categoryName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterCategory.#ctor(System.String,System.String)">
    <parameter name="categoryName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="machineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Diagnostics.PerformanceCounterCategory.CategoryHelp">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterCategory.CheckValidCategory(System.String)">
    <parameter name="categoryName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterCategory.CheckValidCounter(System.String)">
    <parameter name="counterName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterCategory.CheckValidCounterLayout(System.Diagnostics.CounterCreationDataCollection)">
    <parameter name="counterData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterCategory.CheckValidHelp(System.String)">
    <parameter name="help">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterCategory.CheckValidId(System.String)">
    <parameter name="id">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String)">
    <parameter name="counterName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String)">
    <parameter name="categoryName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="counterName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterCategory.CounterExists(System.String,System.String,System.String)">
    <parameter name="counterName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="categoryName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="machineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.CounterCreationDataCollection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="counterData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="categoryName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.Diagnostics.CounterCreationDataCollection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="categoryName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="counterData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.Diagnostics.PerformanceCounterCategoryType,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="categoryName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterCategory.Create(System.String,System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="categoryName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterCategory.Delete(System.String)">
    <parameter name="categoryName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String)">
    <parameter name="categoryName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterCategory.Exists(System.String,System.String)">
    <parameter name="categoryName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="machineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterCategory.GetCategories">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterCategory.GetCategories(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="machineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterCategory.GetCounterInstances(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="categoryName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="machineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterCategory.GetCounters">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterCategory.GetCounters(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="instanceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterCategory.GetInstanceNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String)">
    <parameter name="instanceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String)">
    <parameter name="categoryName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="instanceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterCategory.InstanceExists(System.String,System.String,System.String)">
    <parameter name="instanceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="categoryName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="machineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterCategory.ReadCategory">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterLib.CategoryExists(System.String)">
    <parameter name="category">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterLib.CategoryExists(System.String,System.String)">
    <parameter name="machine">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="category">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Diagnostics.PerformanceCounterLib.CategoryTable">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterLib.CounterExists(System.String,System.String,System.Boolean@)">
    <parameter name="category">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterLib.CounterExists(System.String,System.String,System.String)">
    <parameter name="machine">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="category">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterLib.CreateIniFile(System.String,System.String,System.Diagnostics.CounterCreationDataCollection,System.String[])">
    <parameter name="creationData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="languageIds">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="categoryName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterLib.CreateRegistryEntry(System.String,System.Diagnostics.PerformanceCounterCategoryType,System.Diagnostics.CounterCreationDataCollection,System.Boolean@)">
    <parameter name="creationData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterLib.CreateSymbolFile(System.Diagnostics.CounterCreationDataCollection)">
    <parameter name="creationData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterLib.DeleteRegistryEntry(System.String)">
    <parameter name="categoryName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterLib.FindCustomCategory(System.String,System.Diagnostics.PerformanceCounterCategoryType@)">
    <parameter name="category">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterLib.GetCategories">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterLib.GetCategories(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="machineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterLib.GetCategoryHelp(System.String)">
    <parameter name="category">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterLib.GetCategoryHelp(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="machine">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="category">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterLib.GetCategorySample(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="category">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterLib.GetCategorySample(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="category">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="machine">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterLib.GetCategoryType(System.String,System.String)">
    <parameter name="machine">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="category">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterLib.GetCounterHelp(System.String,System.String,System.Boolean@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="category">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterLib.GetCounterHelp(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="machine">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="category">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterLib.GetCounters(System.String,System.Boolean@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="category">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterLib.GetCounters(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="machine">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="category">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterLib.GetLanguageIds">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterLib.GetPerformanceCounterLib(System.String,System.Globalization.CultureInfo)">
    <parameter name="machineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterLib.GetStringTable(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Diagnostics.PerformanceCounterLib.HelpTable">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterLib.IsCustomCategory(System.String)">
    <parameter name="category">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterLib.IsCustomCategory(System.String,System.String)">
    <parameter name="machine">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="category">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Diagnostics.PerformanceCounterLib.NameTable">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterLib.RegisterCategory(System.String,System.Diagnostics.PerformanceCounterCategoryType,System.String,System.Diagnostics.CounterCreationDataCollection)">
    <parameter name="creationData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="categoryName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterLib.UnregisterCategory(System.String)">
    <parameter name="categoryName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterPermission.#ctor(System.Diagnostics.PerformanceCounterPermissionAccess,System.String,System.String)">
    <parameter name="categoryName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="machineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterPermission.#ctor(System.Diagnostics.PerformanceCounterPermissionEntry[])">
    <parameter name="permissionAccessEntries">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterPermission.AddPermissionAccess(System.Diagnostics.PerformanceCounterPermissionEntry)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Diagnostics.PerformanceCounterPermission.PermissionEntries">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterPermission.RemovePermissionAccess(System.Diagnostics.PerformanceCounterPermissionEntry)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterPermissionAttribute.CreatePermission">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterPermissionEntry.#ctor(System.Diagnostics.PerformanceCounterPermissionAccess,System.String,System.String)">
    <parameter name="machineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="categoryName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterPermissionEntry.#ctor(System.Security.Permissions.ResourcePermissionBaseEntry)">
    <parameter name="baseEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterPermissionEntry.GetBaseEntry">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.#ctor(System.Diagnostics.PerformanceCounterPermission,System.Security.Permissions.ResourcePermissionBaseEntry[])">
    <parameter name="entries">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Add(System.Diagnostics.PerformanceCounterPermissionEntry)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.AddRange(System.Diagnostics.PerformanceCounterPermissionEntry[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.AddRange(System.Diagnostics.PerformanceCounterPermissionEntryCollection)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Contains(System.Diagnostics.PerformanceCounterPermissionEntry)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.CopyTo(System.Diagnostics.PerformanceCounterPermissionEntry[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.IndexOf(System.Diagnostics.PerformanceCounterPermissionEntry)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Insert(System.Int32,System.Diagnostics.PerformanceCounterPermissionEntry)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PerformanceCounterPermissionEntryCollection.Remove(System.Diagnostics.PerformanceCounterPermissionEntry)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Process.BuildCommandLine(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="executableFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Process.GetProcessById(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.Process.GetProcessById(System.Int32,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="machineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Process.GetProcesses(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="machineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Process.GetProcessesByName(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="machineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Process.GetProcessTimes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Diagnostics.Process.Modules">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="startInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Process.Start(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Process.Start(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.Process.Start(System.String,System.String,System.Security.SecureString,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.Process.Start(System.String,System.String,System.String,System.Security.SecureString,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.Process.StartWithCreateProcess(System.Diagnostics.ProcessStartInfo)">
    <parameter name="startInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Process.StartWithShellExecuteEx(System.Diagnostics.ProcessStartInfo)">
    <parameter name="startInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.ProcessManager.GetMainWindowHandle(System.Diagnostics.ProcessInfo)">
    <parameter name="processInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.ProcessManager.GetModuleInfos(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.ProcessManager.GetProcessIds">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.ProcessManager.GetProcessIds(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="machineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.ProcessManager.GetProcessInfos(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="machineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.ProcessManager.IsProcessRunning(System.Int32,System.Int32[])">
    <parameter name="processIds">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.ProcessManager.IsProcessRunning(System.Int32,System.String)">
    <parameter name="machineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.ProcessManager.IsRemoteMachine(System.String)">
    <parameter name="machineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.ProcessManager.OpenThread(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Diagnostics.ProcessModule.FileVersionInfo">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.ProcessModule.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.ProcessModuleCollection.#ctor(System.Diagnostics.ProcessModule[])">
    <parameter name="processModules">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.ProcessThread.GetThreadTimes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.ProcessThread.OpenThreadHandle(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.ProcessThreadCollection.#ctor(System.Diagnostics.ProcessThread[])">
    <parameter name="processThreads">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.SharedPerformanceCounter.#ctor(System.String,System.String,System.String)">
    <parameter name="catName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.SharedPerformanceCounter.#ctor(System.String,System.String,System.String,System.Diagnostics.PerformanceCounterInstanceLifetime)">
    <parameter name="catName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.SharedPerformanceCounter.AddToValue(System.Diagnostics.SharedPerformanceCounter.CounterEntry*,System.Int64)">
    <parameter name="counterEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.SharedPerformanceCounter.CreateCategory(System.Diagnostics.SharedPerformanceCounter.CategoryEntry*,System.Int32,System.String,System.Diagnostics.PerformanceCounterInstanceLifetime)">
    <parameter name="instanceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.SharedPerformanceCounter.CreateCounter(System.Diagnostics.SharedPerformanceCounter.CounterEntry*,System.Int32,System.String)">
    <parameter name="counterName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.SharedPerformanceCounter.CreateInstance(System.Diagnostics.SharedPerformanceCounter.CategoryEntry*,System.Int32,System.String,System.Diagnostics.PerformanceCounterInstanceLifetime)">
    <parameter name="instanceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.SharedPerformanceCounter.DecrementUnaligned(System.Diagnostics.SharedPerformanceCounter.CounterEntry*)">
    <parameter name="counterEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.SharedPerformanceCounter.ExitCriticalSection(System.Int32*)">
    <parameter name="spinLockPointer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.SharedPerformanceCounter.FindCounter(System.Int32,System.String,System.Diagnostics.SharedPerformanceCounter.InstanceEntry*,System.Diagnostics.SharedPerformanceCounter.CounterEntry**)">
    <parameter name="counterName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.SharedPerformanceCounter.FindInstance(System.Int32,System.String,System.Diagnostics.SharedPerformanceCounter.CategoryEntry*,System.Diagnostics.SharedPerformanceCounter.InstanceEntry**,System.Boolean,System.Diagnostics.PerformanceCounterInstanceLifetime,System.Boolean@)">
    <parameter name="instanceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.SharedPerformanceCounter.GetCategoryData">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.SharedPerformanceCounter.GetCounter(System.String,System.String,System.Boolean,System.Diagnostics.PerformanceCounterInstanceLifetime)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="counterName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.SharedPerformanceCounter.GetStringLength(System.Char*)">
    <parameter name="startChar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.SharedPerformanceCounter.GetValue(System.Diagnostics.SharedPerformanceCounter.CounterEntry*)">
    <parameter name="counterEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.SharedPerformanceCounter.GetWstrHashCode(System.String)">
    <parameter name="wstr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.SharedPerformanceCounter.IncrementUnaligned(System.Diagnostics.SharedPerformanceCounter.CounterEntry*)">
    <parameter name="counterEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.SharedPerformanceCounter.IsMisaligned(System.Diagnostics.SharedPerformanceCounter.CounterEntry*)">
    <parameter name="counterEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.SharedPerformanceCounter.RemoveAllInstances(System.String)">
    <parameter name="categoryName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.SharedPerformanceCounter.RemoveCategoryData(System.String)">
    <parameter name="categoryName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.SharedPerformanceCounter.SetValue(System.Diagnostics.SharedPerformanceCounter.CounterEntry*,System.Int64)">
    <parameter name="counterEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.SharedPerformanceCounter.StringEquals(System.String,System.Int32)">
    <parameter name="stringA">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.SharedPerformanceCounter.TryReuseInstance(System.Int32,System.String,System.Diagnostics.SharedPerformanceCounter.CategoryEntry*,System.Diagnostics.SharedPerformanceCounter.InstanceEntry**,System.Diagnostics.PerformanceCounterInstanceLifetime,System.Diagnostics.SharedPerformanceCounter.InstanceEntry*)">
    <parameter name="instanceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="returnInstancePointerReference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.SharedPerformanceCounter.WaitAndEnterCriticalSection(System.Int32*,System.Boolean@)">
    <parameter name="spinLockPointer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.SharedPerformanceCounter.WaitForCriticalSection(System.Int32*)">
    <parameter name="spinLockPointer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.SharedUtils.CreateSafeWin32Exception">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.SharedUtils.CreateSafeWin32Exception(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.SharedUtils.GetLatestBuildDllDirectory(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="machineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.SharedUtils.GetLocalBuildDirectory">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.SharedUtils.SafeWaitForMutex(System.Threading.Mutex,System.Threading.Mutex@)">
    <parameter name="mutexIn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.SharedUtils.SafeWaitForMutexOnce(System.Threading.Mutex,System.Threading.Mutex@)">
    <parameter name="mutexIn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Diagnostics.SourceElement.Attributes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.SourceElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.SourceElementsCollection.CreateNewElement">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Diagnostics.SourceElementsCollection.Item(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Stopwatch.StartNew">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Diagnostics.Switch.Attributes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Diagnostics.Switch.Description">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.Switch.GetSupportedAttributes">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.SwitchAttribute.GetAll(System.Reflection.Assembly)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.SwitchAttribute.GetAllRecursive(System.Reflection.MemberInfo,System.Collections.ArrayList)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="switchAttribs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.SwitchAttribute.GetAllRecursive(System.Type,System.Collections.ArrayList)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="switchAttribs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Diagnostics.SwitchElement.Attributes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.SwitchElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.SwitchElementsCollection.CreateNewElement">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Diagnostics.SwitchElementsCollection.Item(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream,System.String)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter,System.String)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TextWriterTraceListener.GetEncodingWithFallback(System.Text.Encoding)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Trace.Assert(System.Boolean,System.String,System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="detailMessage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Trace.Fail(System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Trace.Fail(System.String,System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="detailMessage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Trace.TraceError(System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Trace.TraceError(System.String,System.Object[])">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Trace.TraceInformation(System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Trace.TraceInformation(System.String,System.Object[])">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Trace.TraceWarning(System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Trace.TraceWarning(System.String,System.Object[])">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Trace.Write(System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Trace.Write(System.String,System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Trace.WriteIf(System.Boolean,System.String,System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Trace.WriteLine(System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Trace.WriteLine(System.String,System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Trace.WriteLineIf(System.Boolean,System.String,System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Diagnostics.TraceEventCache.Callstack">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Diagnostics.TraceEventCache.LogicalOperationStack">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.TraceFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceFilter.ShouldTrace(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[],System.Object,System.Object[])">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceInternal.Assert(System.Boolean,System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceInternal.Assert(System.Boolean,System.String,System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="detailMessage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceInternal.Fail(System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceInternal.Fail(System.String,System.String)">
    <parameter name="detailMessage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceInternal.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceInternal.Write(System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceInternal.Write(System.String,System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceInternal.WriteIf(System.Boolean,System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceInternal.WriteIf(System.Boolean,System.String,System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceInternal.WriteLine(System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceInternal.WriteLine(System.String,System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceInternal.WriteLineIf(System.Boolean,System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceInternal.WriteLineIf(System.Boolean,System.String,System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Diagnostics.TraceListener.Attributes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.TraceListener.Fail(System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)">
    <parameter name="detailMessage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceListener.GetSupportedAttributes">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.TraceListener.SetAttributes(System.Collections.Hashtable)">
    <parameter name="attribs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="eventCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="eventCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
    <parameter name="eventCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="eventCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="eventCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
    <parameter name="eventCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceListener.Write(System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceListener.Write(System.String,System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceListener.WriteLine(System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceListener.WriteLine(System.String,System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceListenerCollection.Add(System.Diagnostics.TraceListener)">
    <parameter name="listener">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceListenerCollection.Contains(System.Diagnostics.TraceListener)">
    <parameter name="listener">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceListenerCollection.CopyTo(System.Diagnostics.TraceListener[],System.Int32)">
    <parameter name="listeners">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceListenerCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.TraceListenerCollection.IndexOf(System.Diagnostics.TraceListener)">
    <parameter name="listener">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceListenerCollection.InitializeListener(System.Diagnostics.TraceListener)">
    <parameter name="listener">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceListenerCollection.Insert(System.Int32,System.Diagnostics.TraceListener)">
    <parameter name="listener">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Diagnostics.TraceListenerCollection.Item(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.TraceListenerCollection.Remove(System.Diagnostics.TraceListener)">
    <parameter name="listener">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.TraceListenerCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceListenerCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceListenerCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceListenerCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceListenerCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceSource.#ctor(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceSource.#ctor(System.String,System.Diagnostics.SourceLevels)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Diagnostics.TraceSource.Attributes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.TraceSource.GetSupportedAttributes">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.TraceSource.TraceData(System.Diagnostics.TraceEventType,System.Int32,System.Object)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceSource.TraceEvent(System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceSource.TraceInformation(System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceSource.TraceInformation(System.String,System.Object[])">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceUtils.ConvertToBaseTypeOrEnum(System.String,System.Type)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceUtils.GetRuntimeObject(System.String,System.Type,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="className">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="baseType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceUtils.VerifyAttributes(System.Collections.IDictionary,System.String[],System.Object)">
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TypedElement.BaseGetRuntimeObject">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.WinProcessManager.GetModuleInfos(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.WinProcessManager.GetProcessIds">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.WinProcessManager.GetProcessInfos">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.Stream,System.String)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.XmlWriterTraceListener.#ctor(System.IO.TextWriter,System.String)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.XmlWriterTraceListener.Fail(System.String,System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="detailMessage">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.XmlWriterTraceListener.InternalWrite(System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="eventCache">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.XmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
    <parameter name="eventCache">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
    <parameter name="eventCache">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.XmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="eventCache">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.XmlWriterTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="eventCache">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.XmlWriterTraceListener.Write(System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.XmlWriterTraceListener.WriteData(System.Object)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.XmlWriterTraceListener.WriteLine(System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DomainNameHelper.IdnEquivalent(System.Char*,System.Int32,System.Int32,System.Boolean@,System.Boolean@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="hostname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DomainNameHelper.IdnEquivalent(System.Char*,System.Int32,System.Int32,System.Boolean@,System.String@)">
    <parameter name="hostname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DomainNameHelper.IsIdnAce(System.Char*,System.Int32)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DomainNameHelper.IsIdnAce(System.String,System.Int32)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DomainNameHelper.ParseCanonicalName(System.String,System.Int32,System.Int32,System.Boolean@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DomainNameHelper.UnicodeEquivalent(System.Char*,System.Int32,System.Int32,System.Boolean@,System.Boolean@)">
    <parameter name="hostname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DomainNameHelper.UnicodeEquivalent(System.String,System.Char*,System.Int32,System.Int32)">
    <parameter name="idnHost">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="hostname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.InvariantComparer.Compare(System.Object,System.Object)">
    <parameter name="b">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Compression.DecodeHelper.UpdateCrc32(System.UInt32,System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Compression.DeflateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.IO.Compression.DeflateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.IO.Compression.DeflateStream.ReadCallback(System.IAsyncResult)">
    <parameter name="baseStreamResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Compression.DeflateStream.ValidateParameters(System.Byte[],System.Int32,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Compression.DeflateStream.WriteCallback(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.IO.Compression.DeflateStreamAsyncResult.AsyncState">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.IO.Compression.DeflateStreamAsyncResult.AsyncWaitHandle">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.IO.Compression.FastEncoderWindow.GetNextSymbolOrMatch(System.IO.Compression.Match)">
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Compression.GZipStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.IO.Compression.GZipStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.IO.Compression.HuffmanTree.#ctor(System.Byte[])">
    <parameter name="codeLengths">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Compression.HuffmanTree.CalculateHuffmanCode">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.IO.Compression.HuffmanTree.GetNextSymbol(System.IO.Compression.InputBuffer)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Compression.HuffmanTree.GetStaticDistanceTreeLength">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.IO.Compression.HuffmanTree.GetStaticLiteralTreeLength">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.IO.Compression.Inflater.Inflate(System.Byte[],System.Int32,System.Int32)">
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Compression.InputBuffer.CopyTo(System.Byte[],System.Int32,System.Int32)">
    <parameter name="output">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Compression.OutputWindow.CopyFrom(System.IO.Compression.InputBuffer,System.Int32)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.FileSystemEventArgs.#ctor(System.IO.WatcherChangeTypes,System.String,System.String)">
    <parameter name="directory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.FileSystemWatcher.#ctor(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.FileSystemWatcher.#ctor(System.String,System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="filter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.FileSystemWatcher.CompletionStatusChanged(System.UInt32,System.UInt32,System.Threading.NativeOverlapped*)">
    <parameter name="overlappedPointer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.IO.FileSystemWatcher.FSWAsyncResult.AsyncState">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.IO.FileSystemWatcher.FSWAsyncResult.AsyncWaitHandle">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.IO.FileSystemWatcher.OnInternalFileSystemEventArgs(System.Object,System.IO.FileSystemEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.FileSystemWatcher.OnInternalRenameEventArgs(System.Object,System.IO.RenamedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.InternalBufferOverflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.InvalidDataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Ports.InternalResources.GetMessage(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.IO.Ports.InternalResources.WinIOError(System.Int32,System.String)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Ports.InternalResources.WinIOError(System.String)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Ports.SerialPort.#ctor(System.ComponentModel.IContainer)">
    <parameter name="container">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Ports.SerialPort.CatchReceivedEvents(System.Object,System.IO.Ports.SerialDataReceivedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Ports.SerialPort.GetPortNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.IO.Ports.SerialPort.InternalRead(System.Char[],System.Int32,System.Int32,System.Int32,System.Boolean)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Ports.SerialPort.Read(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Ports.SerialPort.Read(System.Char[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Ports.SerialPort.ReadBufferIntoChars(System.Char[],System.Int32,System.Int32,System.Boolean)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Ports.SerialPort.ReadExisting">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.IO.Ports.SerialPort.ReadLine">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.IO.Ports.SerialPort.ReadTo(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Ports.SerialPort.Write(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Ports.SerialPort.Write(System.Char[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Ports.SerialPort.Write(System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Ports.SerialStream.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits,System.Int32,System.Int32,System.IO.Ports.Handshake,System.Boolean,System.Boolean,System.Boolean,System.Byte)">
    <parameter name="portName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Ports.SerialStream.AsyncFSCallback(System.UInt32,System.UInt32,System.Threading.NativeOverlapped*)">
    <parameter name="pOverlapped">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Ports.SerialStream.BeginReadCore(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Ports.SerialStream.BeginWriteCore(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Ports.SerialStream.EventLoopRunner.#ctor(System.IO.Ports.SerialStream)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Ports.SerialStream.EventLoopRunner.CallErrorEvents(System.Object)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Ports.SerialStream.EventLoopRunner.CallPinEvents(System.Object)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Ports.SerialStream.EventLoopRunner.CallReceiveEvents(System.Object)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Ports.SerialStream.EventLoopRunner.FreeNativeOverlappedCallback(System.UInt32,System.UInt32,System.Threading.NativeOverlapped*)">
    <parameter name="pOverlapped">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Ports.SerialStream.Read(System.Byte[],System.Int32,System.Int32,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Ports.SerialStream.ReadFileNative(System.Byte[],System.Int32,System.Int32,System.Threading.NativeOverlapped*,System.Int32@)">
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.IO.Ports.SerialStream.SerialStreamAsyncResult.AsyncState">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.IO.Ports.SerialStream.SerialStreamAsyncResult.AsyncWaitHandle">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.IO.Ports.SerialStream.Write(System.Byte[],System.Int32,System.Int32,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Ports.SerialStream.WriteFileNative(System.Byte[],System.Int32,System.Int32,System.Threading.NativeOverlapped*,System.Int32@)">
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.RenamedEventArgs.#ctor(System.IO.WatcherChangeTypes,System.String,System.String,System.String)">
    <parameter name="directory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IPv4AddressHelper.IsValid(System.Char*,System.Int32,System.Int32@,System.Boolean,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IPv4AddressHelper.Parse(System.String,System.Byte*,System.Int32,System.Int32)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="numbers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IPv4AddressHelper.ParseCanonicalName(System.String,System.Int32,System.Int32,System.Boolean@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IPv4AddressHelper.ParseHostNumber(System.String,System.Int32,System.Int32)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IPv6AddressHelper.CreateCanonicalName(System.UInt16*)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="numbers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IPv6AddressHelper.IsValid(System.Char*,System.Int32,System.Int32@)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IPv6AddressHelper.Parse(System.String,System.UInt16*,System.Int32,System.String@)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="numbers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IPv6AddressHelper.ParseCanonicalName(System.String,System.Int32,System.Boolean@,System.String@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Media.SoundPlayer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Media.SoundPlayer.ResolveUri(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="partialUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Media.SoundPlayer.SetupSoundLocation(System.String)">
    <parameter name="soundLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Media.SoundPlayer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Media.SoundPlayer.ValidateSoundData(System.Byte[])">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.AuthenticationManager.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="challenge">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="credentials">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.AuthenticationManager.BindModule(System.Uri,System.Net.Authorization,System.Net.IAuthenticationModule)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="response">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.AuthenticationManager.findModule(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.AuthenticationManager.generalize(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="location">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.AuthenticationManager.GetGroupAuthorization(System.Net.IAuthenticationModule,System.String,System.Boolean,System.Net.NTAuthentication,System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="thisModule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="authSession">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.AuthenticationManager.IndexOf(System.String,System.String,System.Int32,System.Int32)">
    <parameter name="challenge">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="lwrCaseSignature">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.AuthenticationManager.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.AuthenticationManager.Register(System.Net.IAuthenticationModule)">
    <parameter name="authenticationModule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.AuthenticationManager.RegisteredModules">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.AuthenticationManager.RemoveAuthenticationType(System.Collections.ArrayList,System.String)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.AuthenticationManager.Unregister(System.Net.IAuthenticationModule)">
    <parameter name="authenticationModule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.AuthenticationManager.Unregister(System.String)">
    <parameter name="authenticationScheme">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.AuthenticationState.AttemptAuthenticate(System.Net.HttpWebRequest,System.Net.ICredentials)">
    <parameter name="httpWebRequest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.AuthenticationState.AuthorizationHeader">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.AuthenticationState.ClearAuthReq(System.Net.HttpWebRequest)">
    <parameter name="httpWebRequest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.AuthenticationState.ClearSession(System.Net.HttpWebRequest)">
    <parameter name="httpWebRequest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.AuthenticationState.GetComputeSpn(System.Net.HttpWebRequest)">
    <parameter name="httpWebRequest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.AuthenticationState.PreAuthIfNeeded(System.Net.HttpWebRequest,System.Net.ICredentials)">
    <parameter name="httpWebRequest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.AuthenticationState.PrepareState(System.Net.HttpWebRequest)">
    <parameter name="httpWebRequest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.AuthenticationState.Update(System.Net.HttpWebRequest)">
    <parameter name="httpWebRequest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.AutoWebProxyScriptEngine.AbortWrapper(System.Object)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.AutoWebProxyScriptEngine.DownloadAndCompile(System.Uri,System.Net.AutoWebProxyScriptWrapper@,System.Int32@)">
    <parameter name="location">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.AutoWebProxyScriptEngine.GetProxies(System.Uri,System.Boolean,System.Net.AutoWebProxyState@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="destination">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.AutoWebProxyScriptEngine.GetProxies(System.Uri,System.Boolean,System.Net.AutoWebProxyState@,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="destination">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.AutoWebProxyScriptEngine.ListenForRegistryHelper(System.Net.SafeRegistryHandle@,System.Threading.AutoResetEvent@,System.IntPtr,System.String)">
    <parameter name="changeEvent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.AutoWebProxyScriptEngine.ParseScriptReturn(System.String,System.Uri,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.AutoWebProxyScriptWrapper.CloseAppDomainCallback(System.Net.TimerThread.Timer,System.Int32,System.Object)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.AutoWebProxyScriptWrapper.Compile(System.Uri,System.String,System.Byte[])">
    <parameter name="engineScriptLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.AutoWebProxyScriptWrapper.FindProxyForURL(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Base64Stream.#ctor(System.IO.Stream)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Base64Stream.#ctor(System.IO.Stream,System.Int32)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Base64Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Base64Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Base64Stream.EncodeBytes(System.Byte[],System.Int32,System.Int32,System.Boolean)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Base64Stream.ReadAsyncResult.CompleteRead(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Base64Stream.ReadAsyncResult.End(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Base64Stream.ReadAsyncResult.OnRead(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.Base64Stream.ReadState">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Base64Stream.WriteAsyncResult.CompleteWrite(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Base64Stream.WriteAsyncResult.End(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Base64Stream.WriteAsyncResult.OnWrite(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.Base64Stream.WriteState">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.BasicClient.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="challenge">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.BasicClient.AuthenticationType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.BasicClient.EncodingRightGetBytes(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="rawString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.BasicClient.Lookup(System.Net.HttpWebRequest,System.Net.ICredentials)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="httpWebRequest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="credentials">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.BasicClient.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.BufferBuilder.Append(System.Byte[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.BufferBuilder.Append(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.BufferBuilder.Append(System.String,System.Int32,System.Int32)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.BufferedReadStream.#ctor(System.IO.Stream)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.BufferedReadStream.#ctor(System.IO.Stream,System.Boolean)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.BufferedReadStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.BufferedReadStream.Read(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.BufferedReadStream.ReadAsyncResult.End(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.BufferedReadStream.ReadAsyncResult.OnRead(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.BufferedReadStream.ReadAsyncResult.Read(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.BufferOffsetSize.#ctor(System.Byte[],System.Boolean)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache._WinInetCache.Commit(System.Net.Cache._WinInetCache.Entry)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache._WinInetCache.CreateFileName(System.Net.Cache._WinInetCache.Entry)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache._WinInetCache.Entry.#ctor(System.String,System.Int32)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache._WinInetCache.EntryFixup(System.Net.Cache._WinInetCache.Entry,System.Net.Cache._WinInetCache.EntryBuffer*,System.Byte[])">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="bufferPtr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache._WinInetCache.GetEntryBufferString(System.Void*,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Cache._WinInetCache.GetEntryHeaders(System.Net.Cache._WinInetCache.Entry,System.Net.Cache._WinInetCache.EntryBuffer*,System.Byte[])">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache._WinInetCache.LookupFile(System.Net.Cache._WinInetCache.Entry)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache._WinInetCache.LookupInfo(System.Net.Cache._WinInetCache.Entry)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache._WinInetCache.Remove(System.Net.Cache._WinInetCache.Entry)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache._WinInetCache.Update(System.Net.Cache._WinInetCache.Entry,System.Net.Cache._WinInetCache.Entry_FC)">
    <parameter name="newEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.CombinedReadStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.CombinedReadStream.EndWrite(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.CombinedReadStream.ReadCallback(System.IAsyncResult)">
    <parameter name="transportResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.CombinedReadStream.Write(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.ForwardingReadStream.#ctor(System.IO.Stream,System.IO.Stream,System.Int64,System.Boolean)">
    <parameter name="shadowStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.ForwardingReadStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.ForwardingReadStream.EndWrite(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.ForwardingReadStream.ReadCallback(System.IAsyncResult)">
    <parameter name="transportResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.ForwardingReadStream.ReadComplete(System.IAsyncResult)">
    <parameter name="transportResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.ForwardingReadStream.Write(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.Cache.FtpRequestCacheValidator.Policy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Cache.HttpRequestCacheValidator.ParseHeaderValues(System.String[],System.Net.Cache.HttpRequestCacheValidator.ParseCallback,System.Collections.IList)">
    <parameter name="calback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.HttpRequestCacheValidator.ParseNameValues(System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.StringCollection,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="cc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.HttpRequestCacheValidator.ParseStatusLine">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Cache.HttpRequestCacheValidator.ParseValuesCallbackMethod(System.String,System.Int32,System.Int32,System.Collections.IList)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.HttpRequestCacheValidator.ParseWarningsCallbackMethod(System.String,System.Int32,System.Int32,System.Collections.IList)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.Cache.HttpRequestCacheValidator.Policy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Cache.HttpRequestCacheValidator.UpdateStringCollection(System.Collections.Specialized.StringCollection,System.Collections.Specialized.NameValueCollection,System.Boolean)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="cc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.MetadataUpdateStream.#ctor(System.IO.Stream,System.Net.Cache.RequestCache,System.String,System.Boolean)">
    <parameter name="parentStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.MetadataUpdateStream.#ctor(System.IO.Stream,System.Net.Cache.RequestCache,System.String,System.DateTime,System.DateTime,System.DateTime,System.TimeSpan,System.Collections.Specialized.StringCollection,System.Collections.Specialized.StringCollection,System.Boolean)">
    <parameter name="parentStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.RangeStream.#ctor(System.IO.Stream,System.Int64,System.Int64)">
    <parameter name="parentStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.RequestCache.Remove(System.String)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.RequestCache.Retrieve(System.String,System.Net.Cache.RequestCacheEntry@)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.RequestCache.Store(System.String,System.Int64,System.DateTime,System.DateTime,System.TimeSpan,System.Collections.Specialized.StringCollection,System.Collections.Specialized.StringCollection)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.RequestCache.TryRemove(System.String)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.RequestCache.TryRetrieve(System.String,System.Net.Cache.RequestCacheEntry@,System.IO.Stream@)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.RequestCache.TryStore(System.String,System.Int64,System.DateTime,System.DateTime,System.TimeSpan,System.Collections.Specialized.StringCollection,System.Collections.Specialized.StringCollection,System.IO.Stream@)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.RequestCache.TryUpdate(System.String,System.DateTime,System.DateTime,System.DateTime,System.TimeSpan,System.Collections.Specialized.StringCollection,System.Collections.Specialized.StringCollection)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.RequestCache.Update(System.String,System.DateTime,System.DateTime,System.DateTime,System.TimeSpan,System.Collections.Specialized.StringCollection,System.Collections.Specialized.StringCollection)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.RequestCacheEntry.#ctor(System.Net.Cache._WinInetCache.Entry,System.Boolean)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.RequestCacheEntry.ToString(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Cache.RequestCacheManager.GetBinding(System.String)">
    <parameter name="internedScheme">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.RequestCacheManager.SetBinding(System.String,System.Net.Cache.RequestCacheBinding)">
    <parameter name="uriScheme">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.RequestCacheProtocol.CheckUpdateOnResponse(System.IO.Stream)">
    <parameter name="responseStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.RequestCacheProtocol.EnsureCacheRemoval(System.String)">
    <parameter name="retrieveKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.RequestCacheProtocol.GetRetrieveStatus(System.Uri,System.Net.WebRequest)">
    <parameter name="cacheUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.RequestCacheProtocol.GetRevalidateStatus(System.Net.WebResponse,System.IO.Stream)">
    <parameter name="response">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.RequestCacheProtocol.GetUpdateStatus(System.Net.WebResponse,System.IO.Stream)">
    <parameter name="response">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="responseStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.RequestCacheValidator.CreateValidator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Cache.RequestCacheValidator.FetchRequest(System.Uri,System.Net.WebRequest)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.Rfc2616.Common.AsciiLettersNoCaseEqual(System.String,System.String)">
    <parameter name="s1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="s2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.Rfc2616.Common.CheckForRangeRequest(System.Net.Cache.HttpRequestCacheValidator,System.String@)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.Rfc2616.Common.ComputeFreshness(System.Net.Cache.HttpRequestCacheValidator)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.Rfc2616.Common.Construct200ok(System.Net.Cache.HttpRequestCacheValidator)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.Rfc2616.Common.Construct206PartialContent(System.Net.Cache.HttpRequestCacheValidator,System.Int32)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.Rfc2616.Common.ConstructConditionalRequest(System.Net.Cache.HttpRequestCacheValidator)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.Rfc2616.Common.ConstructUnconditionalRefreshRequest(System.Net.Cache.HttpRequestCacheValidator)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.Rfc2616.Common.GetBytesRange(System.String,System.Int64@,System.Int64@,System.Int64@,System.Boolean)">
    <parameter name="ranges">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.Rfc2616.Common.OnUpdateCache(System.Net.Cache.HttpRequestCacheValidator,System.Net.HttpWebResponse)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="resp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.Rfc2616.Common.OnValidateRequest(System.Net.Cache.HttpRequestCacheValidator)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.Rfc2616.Common.ReplaceOrUpdateCacheHeaders(System.Net.Cache.HttpRequestCacheValidator,System.Net.HttpWebResponse)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="resp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.Rfc2616.Common.TryConditionalRangeRequest(System.Net.Cache.HttpRequestCacheValidator)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.Rfc2616.Common.TryConditionalRequest(System.Net.Cache.HttpRequestCacheValidator)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.Rfc2616.Common.TryResponseFromCache(System.Net.Cache.HttpRequestCacheValidator)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.Rfc2616.Common.UnsafeAsciiLettersNoCaseEqual(System.Char*,System.Int32,System.Int32,System.String)">
    <parameter name="s1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="s2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.Rfc2616.Common.ValidateCacheAfterResponse(System.Net.Cache.HttpRequestCacheValidator,System.Net.HttpWebResponse)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="resp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.Rfc2616.Common.ValidateCacheByClientPolicy(System.Net.Cache.HttpRequestCacheValidator)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.Rfc2616.Common.ValidateCacheBySpecialCases(System.Net.Cache.HttpRequestCacheValidator)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.Rfc2616.Common.ValidateCacheByVaryHeader(System.Net.Cache.HttpRequestCacheValidator)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.Rfc2616.Common.ValidateCacheOn5XXResponse(System.Net.Cache.HttpRequestCacheValidator)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.Rfc2616.OnUpdateCache(System.Net.Cache.HttpRequestCacheValidator)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.Rfc2616.OnValidateCache(System.Net.Cache.HttpRequestCacheValidator)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.Rfc2616.OnValidateFreshness(System.Net.Cache.HttpRequestCacheValidator)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.Rfc2616.OnValidateRequest(System.Net.Cache.HttpRequestCacheValidator)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.Rfc2616.OnValidateResponse(System.Net.Cache.HttpRequestCacheValidator)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.SingleItemRequestCache.Commit(System.String,System.Net.Cache.RequestCacheEntry,System.Byte[])">
    <parameter name="tempEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.SingleItemRequestCache.FrozenCacheEntry.#ctor(System.String,System.Net.Cache.RequestCacheEntry,System.Byte[])">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.SingleItemRequestCache.FrozenCacheEntry.#ctor(System.String,System.Net.Cache.RequestCacheEntry,System.IO.Stream)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.SingleItemRequestCache.FrozenCacheEntry.GetBytes(System.IO.Stream)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.SingleItemRequestCache.ReadOnlyStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.SingleItemRequestCache.ReadOnlyStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.SingleItemRequestCache.ReadOnlyStream.EndWrite(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.SingleItemRequestCache.ReadOnlyStream.Write(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.SingleItemRequestCache.Remove(System.String)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.SingleItemRequestCache.Retrieve(System.String,System.Net.Cache.RequestCacheEntry@)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.SingleItemRequestCache.Store(System.String,System.Int64,System.DateTime,System.DateTime,System.TimeSpan,System.Collections.Specialized.StringCollection,System.Collections.Specialized.StringCollection)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.SingleItemRequestCache.Update(System.String,System.DateTime,System.DateTime,System.DateTime,System.TimeSpan,System.Collections.Specialized.StringCollection,System.Collections.Specialized.StringCollection)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.SingleItemRequestCache.WriteOnlyStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.SingleItemRequestCache.WriteOnlyStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.SingleItemRequestCache.WriteOnlyStream.EndRead(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.SingleItemRequestCache.WriteOnlyStream.Read(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CaseInsensitiveAscii.Compare(System.Object,System.Object)">
    <parameter name="firstObject">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="secondObject">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CaseInsensitiveAscii.Equals(System.Object,System.Object)">
    <parameter name="secondObject">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="firstObject">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CaseInsensitiveAscii.FastGetHashCode(System.String)">
    <parameter name="myString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CaseInsensitiveAscii.GetHashCode(System.Object)">
    <parameter name="myObject">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CertPolicyValidationCallback.Callback(System.Object)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CertPolicyValidationCallback.Invoke(System.String,System.Net.ServicePoint,System.Security.Cryptography.X509Certificates.X509Certificate,System.Net.WebRequest,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
    <parameter name="chain">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ChunkParse.GetChunkSize(System.Net.IReadChunkBytes,System.Int32@)">
    <parameter name="Source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ChunkParse.SkipPastCRLF(System.Net.IReadChunkBytes)">
    <parameter name="Source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ClosableStream.#ctor(System.IO.Stream,System.EventHandler)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CommandStream.BuildCommandsList(System.Net.WebRequest)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CommandStream.CheckValid(System.Net.ResponseDescription,System.Int32@,System.Int32@)">
    <parameter name="response">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CommandStream.GenerateException(System.Net.FtpStatusCode,System.String,System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.CommandStream.GenerateException(System.Net.WebExceptionStatus,System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.CommandStream.PipelineCallback(System.Net.CommandStream.PipelineEntry,System.Net.ResponseDescription,System.Boolean,System.IO.Stream@)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CommandStream.ReadCallback(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CommandStream.ReceiveCommandResponseCallback(System.Net.ReceiveState,System.Int32)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CommandStream.SubmitRequest(System.Net.WebRequest,System.Boolean,System.Boolean)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CommandStream.WriteCallback(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Comparer.System#Collections#IComparer#Compare(System.Object,System.Object)">
    <parameter name="or">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ol">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Configuration.AuthenticationModuleElementCollection.Add(System.Net.Configuration.AuthenticationModuleElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Configuration.AuthenticationModuleElementCollection.CreateNewElement">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Configuration.AuthenticationModuleElementCollection.IndexOf(System.Net.Configuration.AuthenticationModuleElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.Configuration.AuthenticationModuleElementCollection.Item(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Configuration.AuthenticationModuleElementCollection.Remove(System.Net.Configuration.AuthenticationModuleElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Configuration.AuthenticationModuleElementCollection.Remove(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Configuration.AuthenticationModulesSectionInternal.#ctor(System.Net.Configuration.AuthenticationModulesSection)">
    <parameter name="section">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.Configuration.AuthenticationModulesSectionInternal.AuthenticationModules">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Configuration.AuthenticationModulesSectionInternal.GetSection">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Configuration.BypassElementCollection.Add(System.Net.Configuration.BypassElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Configuration.BypassElementCollection.CreateNewElement">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Configuration.BypassElementCollection.IndexOf(System.Net.Configuration.BypassElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.Configuration.BypassElementCollection.Item(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Configuration.BypassElementCollection.Remove(System.Net.Configuration.BypassElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Configuration.BypassElementCollection.Remove(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.Configuration.ConfigurationStrings.AuthenticationModulesSectionPath">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.Configuration.ConfigurationStrings.ConnectionManagementSectionPath">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.Configuration.ConfigurationStrings.DefaultProxySectionPath">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Configuration.ConfigurationStrings.GetSectionPath(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Configuration.ConfigurationStrings.GetSectionPath(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.Configuration.ConfigurationStrings.RequestCachingSectionPath">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.Configuration.ConfigurationStrings.SettingsSectionPath">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.Configuration.ConfigurationStrings.SmtpSectionPath">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.Configuration.ConfigurationStrings.WebRequestModulesSectionPath">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Configuration.ConnectionManagementElementCollection.Add(System.Net.Configuration.ConnectionManagementElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Configuration.ConnectionManagementElementCollection.CreateNewElement">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Configuration.ConnectionManagementElementCollection.IndexOf(System.Net.Configuration.ConnectionManagementElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.Configuration.ConnectionManagementElementCollection.Item(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Configuration.ConnectionManagementElementCollection.Remove(System.Net.Configuration.ConnectionManagementElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Configuration.ConnectionManagementElementCollection.Remove(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Configuration.ConnectionManagementSectionInternal.#ctor(System.Net.Configuration.ConnectionManagementSection)">
    <parameter name="section">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.Configuration.ConnectionManagementSectionInternal.ConnectionManagement">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Configuration.ConnectionManagementSectionInternal.GetSection">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Configuration.DefaultProxySection.Reset(System.Configuration.ConfigurationElement)">
    <parameter name="parentElement">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Configuration.DefaultProxySectionInternal.#ctor(System.Net.Configuration.DefaultProxySection)">
    <parameter name="section">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Configuration.DefaultProxySectionInternal.GetSection">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Configuration.FtpCachePolicyElement.Reset(System.Configuration.ConfigurationElement)">
    <parameter name="parentElement">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Configuration.HttpCachePolicyElement.Reset(System.Configuration.ConfigurationElement)">
    <parameter name="parentElement">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Configuration.MailSettingsSectionGroupInternal.GetSection">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Configuration.NetSectionGroup.GetSectionGroup(System.Configuration.Configuration)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="config">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.Configuration.NetSectionGroup.MailSettings">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Configuration.RequestCachingSectionInternal.#ctor(System.Net.Configuration.RequestCachingSection)">
    <parameter name="section">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Configuration.RequestCachingSectionInternal.GetSection">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Configuration.SettingsSectionInternal.GetSection">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Configuration.SmtpNetworkElementInternal.#ctor(System.Net.Configuration.SmtpNetworkElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Configuration.SmtpSectionInternal.#ctor(System.Net.Configuration.SmtpSection)">
    <parameter name="section">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Configuration.SmtpSectionInternal.GetSection">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Configuration.SmtpSpecifiedPickupDirectoryElementInternal.#ctor(System.Net.Configuration.SmtpSpecifiedPickupDirectoryElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Configuration.WebRequestModuleElement.#ctor(System.String,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Configuration.WebRequestModuleElement.TypeAndName.#ctor(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Configuration.WebRequestModuleElementCollection.Add(System.Net.Configuration.WebRequestModuleElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Configuration.WebRequestModuleElementCollection.CreateNewElement">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Configuration.WebRequestModuleElementCollection.IndexOf(System.Net.Configuration.WebRequestModuleElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.Configuration.WebRequestModuleElementCollection.Item(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Configuration.WebRequestModuleElementCollection.Remove(System.Net.Configuration.WebRequestModuleElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Configuration.WebRequestModuleElementCollection.Remove(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Configuration.WebRequestModulesSectionInternal.#ctor(System.Net.Configuration.WebRequestModulesSection)">
    <parameter name="section">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Configuration.WebRequestModulesSectionInternal.GetSection">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.Configuration.WebRequestModulesSectionInternal.WebRequestModules">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Connection.CheckNextRequest">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Connection.CheckStartReceive(System.Net.HttpWebRequest)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Connection.CompleteConnection(System.Boolean,System.Net.HttpWebRequest)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Connection.CompleteConnectionWrapper(System.Object,System.Object)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Connection.CompleteStartConnection(System.Boolean,System.Net.HttpWebRequest)">
    <parameter name="httpWebRequest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Connection.CompleteStartRequest(System.Boolean,System.Net.HttpWebRequest,System.Net.TriState)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Connection.DebugDumpArrayListEntries(System.Collections.ArrayList,System.String)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Connection.FindChunkEntitySize(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Connection.ParseStatusLine(System.Byte[],System.Int32,System.Int32@,System.Int32[]@,System.String@,System.Int32@,System.Net.WebParseError@)">
    <parameter name="statusLine">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="statusLineInts">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Connection.ParseStatusLineStrict(System.Byte[],System.Int32,System.Int32@,System.Int32@,System.Net.Connection.StatusLineValues,System.Int32,System.Int32@,System.Net.WebParseError@)">
    <parameter name="statusLine">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="statusLineValues">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Connection.PollAndRead(System.Net.HttpWebRequest,System.Boolean)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Connection.ProcessHeaderData(System.Boolean@,System.Net.HttpWebRequest,System.Boolean@)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Connection.ReadCallback(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Connection.ReadCallbackWrapper(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Connection.StartRequest(System.Net.HttpWebRequest)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Connection.SubmitRequest(System.Net.HttpWebRequest)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Connection.SyncRead(System.Net.HttpWebRequest,System.Boolean,System.Boolean)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Connection.TunnelThroughProxy(System.Uri,System.Net.HttpWebRequest,System.Boolean)">
    <parameter name="originalRequest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="proxy">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Connection.TunnelThroughProxyWrapper(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Connection.Write(System.Net.ScatterGatherBuffers)">
    <parameter name="writeBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ConnectionGroup.#ctor(System.Net.ServicePoint,System.String)">
    <parameter name="servicePoint">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ConnectionGroup.FindConnection(System.Net.HttpWebRequest,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ConnectionGroup.FindConnectionAuthenticationGroup(System.Net.HttpWebRequest,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ConnectionGroup.FindMatchingConnection(System.Net.HttpWebRequest,System.String,System.Net.Connection@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.ConnectionGroup.MakeQueryStr(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.ConnectionPool.CancelErrorCallbackWrapper(System.Net.TimerThread.Timer,System.Int32,System.Object)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ConnectionPool.CleanupCallbackWrapper(System.Net.TimerThread.Timer,System.Int32,System.Object)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ConnectionPool.Create(System.Net.CreateConnectionDelegate)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="createConnectionCallback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ConnectionPool.Get(System.Object,System.Int32,System.Boolean@,System.Threading.WaitHandle[]@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.ConnectionPool.GetConnection(System.Object,System.Net.GeneralAsyncDelegate,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.ConnectionPool.GetFromPool(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.ConnectionPool.PutConnection(System.Net.PooledStream,System.Object,System.Int32)">
    <parameter name="pooledStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ConnectionPool.PutNew(System.Net.PooledStream)">
    <parameter name="pooledStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ConnectionPool.UserCreateRequest">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.ConnectionPoolManager.GetConnectionPool(System.Net.ServicePoint,System.String,System.Net.CreateConnectionDelegate)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="servicePoint">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ConnectionPoolManager.RemoveConnectionPool(System.Net.ServicePoint,System.String)">
    <parameter name="servicePoint">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ConnectionReturnResult.Add(System.Net.ConnectionReturnResult@,System.Net.HttpWebRequest,System.Net.CoreResponseData)">
    <parameter name="coreResponseData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ConnectionReturnResult.AddExceptionRange(System.Net.ConnectionReturnResult@,System.Net.HttpWebRequest[],System.Exception)">
    <parameter name="exception">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="requests">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ConnectionReturnResult.AddExceptionRange(System.Net.ConnectionReturnResult@,System.Net.HttpWebRequest[],System.Exception,System.Exception)">
    <parameter name="requests">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="exception">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ConnectStream.#ctor(System.Net.Connection,System.Net.HttpWebRequest)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ConnectStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.ConnectStream.BeginReadWithoutValidation(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ConnectStream.GetChunkHeader(System.Int32,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.ConnectStream.InternalRead(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ConnectStream.InternalWrite(System.Boolean,System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ConnectStream.ProcessReadChunkedSize(System.Net.StreamChunkBytes)">
    <parameter name="ReadByteBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ConnectStream.ProcessWriteCallback(System.IAsyncResult,System.Net.LazyAsyncResult)">
    <parameter name="userResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ConnectStream.ReadCallback(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ConnectStream.ReadChunkedSync(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ConnectStream.ReadCRLF(System.Byte[])">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ConnectStream.ReadWithoutValidation(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ConnectStream.ReadWithoutValidation(System.Byte[],System.Int32,System.Int32,System.Boolean)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ConnectStream.RemoveTrailers(System.Net.StreamChunkBytes)">
    <parameter name="ReadByteBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ConnectStream.ResubmitWrite(System.Net.ConnectStream,System.Boolean)">
    <parameter name="oldStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ConnectStream.ResumeClose_Part2_Wrapper(System.IAsyncResult)">
    <parameter name="ar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ConnectStream.WriteCallback(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ConnectStream.WriteHeadersCallback(System.IAsyncResult)">
    <parameter name="ar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.ContextAwareResult.ContextCopy">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.ContextAwareResult.Identity">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.ContextAwareResult.StartPostingAsyncOp">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.ContextAwareResult.StartPostingAsyncOp(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Cookie.Equals(System.Object)">
    <parameter name="comparand">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cookie.InternalSetName(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cookie.VerifySetDefaults(System.Net.CookieVariant,System.Uri,System.Boolean,System.String,System.Boolean,System.Boolean)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localDomain">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CookieCollection.Add(System.Net.Cookie)">
    <parameter name="cookie">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CookieCollection.Add(System.Net.CookieCollection)">
    <parameter name="cookies">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CookieCollection.CookieCollectionEnumerator.#ctor(System.Net.CookieCollection)">
    <parameter name="cookies">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.CookieCollection.CookieCollectionEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.CookieCollection.CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CookieCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.CookieCollection.IndexOf(System.Net.Cookie)">
    <parameter name="cookie">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CookieCollection.InternalAdd(System.Net.Cookie,System.Boolean)">
    <parameter name="cookie">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.CookieCollection.Item(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.CookieCollection.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.CookieContainer.Add(System.Net.Cookie)">
    <parameter name="cookie">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CookieContainer.Add(System.Net.Cookie,System.Boolean)">
    <parameter name="cookie">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CookieContainer.Add(System.Net.CookieCollection)">
    <parameter name="cookies">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CookieContainer.Add(System.Uri,System.Net.Cookie)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="cookie">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CookieContainer.Add(System.Uri,System.Net.CookieCollection)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="cookies">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CookieContainer.AddRemoveDomain(System.String,System.Net.PathList)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CookieContainer.CookieCutter(System.Uri,System.String,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="setCookieHeader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CookieContainer.ExpireCollection(System.Net.CookieCollection)">
    <parameter name="cc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CookieContainer.GetCookieHeader(System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CookieContainer.GetCookieHeader(System.Uri,System.String@)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CookieContainer.GetCookies(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CookieContainer.InternalGetCookies(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CookieContainer.IsLocal(System.String)">
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CookieContainer.MergeUpdateCollections(System.Net.CookieCollection,System.Net.CookieCollection,System.Int32,System.Boolean,System.Boolean)">
    <parameter name="destination">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CookieContainer.SetCookies(System.Uri,System.String)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="cookieHeader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CookieException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CookieException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CookieModule.OnReceivedHeaders(System.Net.HttpWebRequest)">
    <parameter name="httpWebRequest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CookieModule.OnSendingHeaders(System.Net.HttpWebRequest)">
    <parameter name="httpWebRequest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CookieParser.#ctor(System.String)">
    <parameter name="cookieString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CookieParser.CheckQuoted(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CookieParser.Get">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.CookieParser.GetServer">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.CookieTokenizer.#ctor(System.String)">
    <parameter name="tokenStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CookieTokenizer.Extract">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.CoreResponseData.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.CredentialCache.Add(System.String,System.Int32,System.String,System.Net.NetworkCredential)">
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="authenticationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CredentialCache.Add(System.Uri,System.String,System.Net.NetworkCredential)">
    <parameter name="uriPrefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="authType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CredentialCache.CredentialEnumerator.#ctor(System.Net.CredentialCache,System.Collections.Hashtable,System.Collections.Hashtable,System.Int32)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="hostTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.CredentialCache.CredentialEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.CredentialCache.GetCredential(System.String,System.Int32,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="authenticationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CredentialCache.GetCredential(System.Uri,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="authType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="uriPrefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CredentialCache.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.CredentialHostKey.Equals(System.Object)">
    <parameter name="comparand">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CredentialKey.#ctor(System.Uri,System.String)">
    <parameter name="uriPrefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CredentialKey.Equals(System.Object)">
    <parameter name="comparand">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.CredentialKey.IsPrefix(System.Uri,System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefixUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.DelayedRegex.#ctor(System.String)">
    <parameter name="regexString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.DelayedRegex.#ctor(System.Text.RegularExpressions.Regex)">
    <parameter name="regex">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.DelayedRegex.AsRegex">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.DelegatedStream.#ctor(System.IO.Stream)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.DigestClient.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="challenge">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.DigestClient.AuthenticationType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.DigestClient.CheckQOP(System.Net.HttpDigestChallenge)">
    <parameter name="challenge">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.DigestClient.DoAuthenticate(System.String,System.Net.WebRequest,System.Net.ICredentials,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="challenge">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.DigestClient.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.DigestClient.RefineDigestChallenge(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="challenge">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.DigestClient.XPDoAuthenticate(System.String,System.Net.HttpWebRequest,System.Net.ICredentials,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="challenge">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="httpWebRequest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="credentials">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.DigestClient.XPUpdate(System.String,System.Net.HttpWebRequest)">
    <parameter name="httpWebRequest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Dns.BeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="hostNameOrAddress">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Dns.BeginGetHostByName(System.String,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="hostName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Dns.BeginGetHostEntry(System.Net.IPAddress,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Dns.BeginGetHostEntry(System.String,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="hostNameOrAddress">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Dns.BeginResolve(System.String,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="hostName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Dns.EndGetHostAddresses(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Dns.EndGetHostByName(System.IAsyncResult)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Dns.EndGetHostEntry(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Dns.EndResolve(System.IAsyncResult)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Dns.GetAddrInfo(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Dns.GetHostAddresses(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="hostNameOrAddress">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Dns.GetHostByAddress(System.Net.IPAddress)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Dns.GetHostByAddress(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Dns.GetHostByName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="hostName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Dns.GetHostEntry(System.Net.IPAddress)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Dns.GetHostEntry(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="hostNameOrAddress">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Dns.GetHostName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Dns.HostResolutionBeginHelper(System.Net.IPAddress,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Dns.HostResolutionBeginHelper(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="hostName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Dns.HostResolutionEndHelper(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Dns.InternalGetHostByAddress(System.Net.IPAddress,System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Dns.InternalGetHostByName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="hostName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Dns.InternalGetHostByName(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="hostName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Dns.InternalResolveFast(System.String,System.Int32,System.Boolean@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="hostName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Dns.NativeToHostEntry(System.IntPtr)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Dns.Resolve(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="hostName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Dns.ResolveCallback(System.Object)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Dns.TryGetNameInfo(System.Net.IPAddress,System.Net.Sockets.SocketError@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="addr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Dns.TryParseAsIP(System.String,System.Net.IPAddress@)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Dns.UnsafeBeginGetHostAddresses(System.String,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="hostName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.DnsPermission.Copy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.DnsPermission.Union(System.Security.IPermission)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.DnsPermissionAttribute.CreatePermission">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.EmptyWebProxy.GetProxy(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.EmptyWebProxy.IsBypassed(System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.EmptyWebProxy.System#Net#IAutoWebProxy#GetProxies(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="destination">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.EndPoint.Create(System.Net.SocketAddress)">
    <parameter name="socketAddress">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.EndpointPermission.Intersect(System.Net.EndpointPermission)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="E">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.EndpointPermission.MatchAddress(System.Net.EndpointPermission)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.EndpointPermission.MatchWildcard(System.String)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.EndpointPermission.SubsetMatch(System.Net.EndpointPermission)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.ExceptionHelper.BadAuthorityException">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.ExceptionHelper.BadAuthorityTerminatorException">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.ExceptionHelper.BadFormatException">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.ExceptionHelper.BadHostNameException">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.ExceptionHelper.BadPortException">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.ExceptionHelper.BadSchemeException">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.ExceptionHelper.CacheEntryNotFoundException">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.ExceptionHelper.CannotCreateRelativeException">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.ExceptionHelper.EmptyUriException">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.ExceptionHelper.IsolatedException">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.ExceptionHelper.MethodNotImplementedException">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.ExceptionHelper.MethodNotSupportedException">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.ExceptionHelper.MustRootedPathException">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.ExceptionHelper.PropertyNotImplementedException">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.ExceptionHelper.PropertyNotSupportedException">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.ExceptionHelper.RequestAbortedException">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.ExceptionHelper.RequestProhibitedByCachePolicyException">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.ExceptionHelper.SchemeLimitException">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.ExceptionHelper.SizeLimitException">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.FileWebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.FileWebRequest.#ctor(System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.FileWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.FileWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="callback">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.FileWebRequest.GetRequestStreamCallback(System.Object)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.FileWebRequest.GetResponseCallback(System.Object)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.FileWebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.FileWebRequestCreator.Create(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.FileWebResponse.#ctor(System.Net.FileWebRequest,System.Uri,System.IO.FileAccess,System.Boolean)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.FileWebResponse.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.FileWebResponse.ContentType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.FileWebResponse.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.FileWebStream.#ctor(System.Net.FileWebRequest,System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.FileWebStream.#ctor(System.Net.FileWebRequest,System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.FixedSizeReader.ReadCallback(System.IAsyncResult)">
    <parameter name="transportResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.FixedSizeReader.ReadPacket(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.FrameHeader.CopyFrom(System.Byte[],System.Int32,System.Net.FrameHeader)">
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="verifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.FrameHeader.CopyTo(System.Byte[],System.Int32)">
    <parameter name="dest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.FtpControlStream.AcceptCallback(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.FtpControlStream.BannerMessage">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.FtpControlStream.ConnectCallback(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.FtpControlStream.CreateFtpDataSocket(System.Net.FtpWebRequest,System.Net.Sockets.Socket)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="templateSocket">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.FtpControlStream.ExitMessage">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.FtpControlStream.FormatAddress(System.Net.IPAddress,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.FtpControlStream.FormatAddressV6(System.Net.IPAddress,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.FtpControlStream.FormatFtpCommand(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="command">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.FtpControlStream.GetAddressAndPort(System.String,System.Net.IPAddress@)">
    <parameter name="responseString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.FtpControlStream.GetContentLengthFrom213Response(System.String)">
    <parameter name="responseString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.FtpControlStream.GetLastModifiedFrom213Response(System.String)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.FtpControlStream.GetLoginDirectory(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.FtpControlStream.GetPathAndFilename(System.Net.FtpControlStream.GetPathOption,System.Uri,System.String@,System.String@,System.Boolean@)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.FtpControlStream.GetPortCommandLine(System.Net.FtpWebRequest)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.FtpControlStream.GetPortV6(System.String)">
    <parameter name="responseString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.FtpControlStream.QueueOrCreateDataConection(System.Net.CommandStream.PipelineEntry,System.Net.ResponseDescription,System.Boolean,System.IO.Stream@,System.Boolean@)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="response">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.FtpControlStream.SSLHandshakeCallback(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.FtpControlStream.TryUpdateContentLength(System.String)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.FtpControlStream.TryUpdateResponseUri(System.String,System.Net.FtpWebRequest)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.FtpControlStream.WelcomeMessage">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.FtpDataStream.AsyncReadCallback(System.IAsyncResult)">
    <parameter name="ar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.FtpDataStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.FtpDataStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.FtpDataStream.EndWrite(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.FtpDataStream.Read(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.FtpDataStream.Write(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.FtpMethodInfo.GetMethodInfo(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.FtpWebRequest.#ctor(System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.FtpWebRequest.AsyncCallbackWrapper(System.Object,System.Object)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="callback">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.FtpWebRequest.ClientCertificates">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.FtpWebRequest.CreateFtpConnection(System.Net.ConnectionPool)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.FtpWebRequest.EndGetRequestStream(System.IAsyncResult)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.FtpWebRequest.GetHttpWebRequest">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.FtpWebRequest.GetUserString">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.FtpWebRequest.QueueOrCreateConnection">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.FtpWebRequest.SetException(System.Exception)">
    <parameter name="exception">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.FtpWebRequest.TimerQueue">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.FtpWebRequestCreator.Create(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.FtpWebResponse.#ctor(System.Net.HttpWebResponse)">
    <parameter name="httpWebResponse">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.GlobalLog.Assert(System.Boolean,System.String,System.Object[])">
    <parameter name="messageFormat">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.GlobalLog.LoggingInitialize">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.GlobalProxySelection.GetEmptyWebProxy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.HeaderInfoTable.Item(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HeaderInfoTable.ParseMultiValue(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HeaderInfoTable.ParseSingleValue(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.HttpDateParse.MapDayMonthToDword(System.Char[],System.Int32)">
    <parameter name="lpszDay">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpDateParse.ParseCookieDate(System.String,System.DateTime@)">
    <parameter name="dateString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpDateParse.ParseHttpDate(System.String,System.DateTime@)">
    <parameter name="DateString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpDigest.Authenticate(System.Net.HttpDigestChallenge,System.Net.NetworkCredential)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="digestChallenge">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="NC">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpDigest.CharsetEncode(System.String,System.Net.HttpDigest.Charset)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="rawString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpDigest.computeSecret(System.Net.HttpDigestChallenge,System.String,System.String)">
    <parameter name="challenge">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpDigest.createNonce(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.HttpDigest.DetectCharset(System.String)">
    <parameter name="rawString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpDigest.hashString(System.String,System.Security.Cryptography.MD5CryptoServiceProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="myString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="MD5provider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpDigest.hexEncode(System.Byte[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="rawbytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpDigest.Interpret(System.String,System.Int32,System.Net.HttpWebRequest)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="httpWebRequest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="challenge">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpDigest.responseValue(System.Net.HttpDigestChallenge,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="challenge">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpDigest.unquote(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="quotedString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpDigestChallenge.CopyAndIncrementNonce">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.HttpDigestChallenge.defineAttribute(System.String,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpDigestChallenge.SetFromRequest(System.Net.HttpWebRequest)">
    <parameter name="httpWebRequest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpDigestChallenge.ToBlob">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.HttpListener.AddPrefix(System.String)">
    <parameter name="uriPrefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.HttpListener.CreateWindowsIdentity(System.IntPtr,System.String,System.Security.Principal.WindowsAccountType,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.HttpListener.DisconnectAsyncResult.AsyncState">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.HttpListener.DisconnectAsyncResult.AsyncWaitHandle">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.HttpListener.DisconnectAsyncResult.WaitCallback(System.UInt32,System.UInt32,System.Threading.NativeOverlapped*)">
    <parameter name="nativeOverlapped">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.HttpListener.DisconnectResults">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpListener.GetContext">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.HttpListener.HandleAuthentication(System.Net.RequestContextBase,System.Boolean@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="memoryBlob">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.HttpListener.Prefixes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.HttpListener.RemovePrefix(System.String)">
    <parameter name="uriPrefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpListener.SaveDigestContext(System.Net.NTAuthentication)">
    <parameter name="digestContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpListenerBasicIdentity.#ctor(System.String,System.String)">
    <parameter name="username">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpListenerContext.#ctor(System.Net.HttpListener,System.Net.RequestContextBase)">
    <parameter name="memoryBlob">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.HttpListenerContext.Response">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.HttpListenerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpListenerPrefixCollection.Add(System.String)">
    <parameter name="uriPrefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpListenerPrefixCollection.Contains(System.String)">
    <parameter name="uriPrefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpListenerPrefixCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.HttpListenerPrefixCollection.Remove(System.String)">
    <parameter name="uriPrefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.HttpListenerRequest.#ctor(System.Net.HttpListenerContext,System.Net.RequestContextBase)">
    <parameter name="memoryBlob">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="httpContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.HttpListenerRequest.AcceptTypes">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.HttpListenerRequest.AsyncProcessClientCertificate(System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.HttpListenerRequest.ContentType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.HttpListenerRequest.Cookies">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpListenerRequest.GetKnownHeader(System.Net.HttpRequestHeader)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.HttpListenerRequest.Headers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.HttpListenerRequest.Helpers.FillFromString(System.Collections.Specialized.NameValueCollection,System.String,System.Boolean,System.Text.Encoding)">
    <parameter name="nvc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpListenerRequest.Helpers.GetAttributeFromHeader(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="attrName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpListenerRequest.Helpers.ParseMultivalueHeader(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.HttpListenerRequest.Helpers.UrlDecoder.GetString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.HttpListenerRequest.Helpers.UrlDecodeStringFromStringInternal(System.String,System.Text.Encoding)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.HttpListenerRequest.LocalEndPoint">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.HttpListenerRequest.ParseCookies(System.Uri,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="setCookieHeader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.HttpListenerRequest.QueryString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.HttpListenerRequest.RemoteEndPoint">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.HttpListenerRequest.RequestScheme">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.HttpListenerRequest.UserAgent">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.HttpListenerRequest.UserHostName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.HttpListenerRequest.UserLanguages">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.HttpListenerResponse.#ctor(System.Net.HttpListenerContext)">
    <parameter name="httpContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpListenerResponse.AppendCookie(System.Net.Cookie)">
    <parameter name="cookie">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpListenerResponse.Close(System.Byte[],System.Boolean)">
    <parameter name="responseEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpListenerResponse.CopyFrom(System.Net.HttpListenerResponse)">
    <parameter name="templateResponse">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpListenerResponse.NonBlockingCloseCallback(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.HttpListenerResponse.ProtocolVersion">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.HttpListenerResponse.SerializeHeaders(System.Net.UnsafeNclNativeMethods.HttpApi.HTTP_RESPONSE_HEADERS@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.HttpListenerResponse.SetCookie(System.Net.Cookie)">
    <parameter name="cookie">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.HttpListenerResponse.StatusDescription">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.HttpProtocolUtils.date2string(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.HttpProtocolUtils.string2date(System.String)">
    <parameter name="S">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpRequestCreator.Create(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="Uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpRequestStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpRequestStream.EndWrite(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpRequestStream.HttpRequestStreamAsyncResult.Callback(System.UInt32,System.UInt32,System.Threading.NativeOverlapped*)">
    <parameter name="nativeOverlapped">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpRequestStream.Write(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpResponseStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpResponseStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.HttpResponseStream.EndRead(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpResponseStream.Read(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpResponseStreamAsyncResult.Callback(System.UInt32,System.UInt32,System.Threading.NativeOverlapped*)">
    <parameter name="nativeOverlapped">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpWebRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpWebRequest.#ctor(System.Uri,System.Net.ServicePoint)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpWebRequest.#ctor(System.Uri,System.Uri,System.Net.HttpWebRequest)">
    <parameter name="proxyUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpWebRequest.AbortWrapper(System.Object)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32)">
    <parameter name="rangeSpecifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int32,System.Int32)">
    <parameter name="rangeSpecifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpWebRequest.AddRange(System.String,System.String,System.String)">
    <parameter name="from">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.HttpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="callback">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpWebRequest.CallContinueDelegateCallback(System.Object)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpWebRequest.CheckDeferredCallDone(System.Net.ConnectStream)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpWebRequest.CheckResubmit(System.Exception@)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.HttpWebRequest.ClientCertificates">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.HttpWebRequest.ContinueTimeoutCallback(System.Net.TimerThread.Timer,System.Int32,System.Object)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpWebRequest.EndWriteHeaders_Part2Wrapper(System.Object)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpWebRequest.GenerateConnectionGroup(System.String,System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.HttpWebRequest.GetConnectionGroupLine">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.HttpWebRequest.GetRequestStream">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.HttpWebRequest.MakeMemoryStream(System.IO.Stream)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.HttpWebRequest.ProxyAuthenticationState">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.HttpWebRequest.SetAndOrProcessResponse(System.Object)">
    <parameter name="responseOrException">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpWebRequest.SetRequestSubmitDone(System.Net.ConnectStream)">
    <parameter name="submitStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpWebRequest.SetSpecialHeaders(System.String,System.String)">
    <parameter name="HeaderName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpWebRequest.SubmitRequest(System.Net.ServicePoint)">
    <parameter name="servicePoint">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpWebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.HttpWebRequest.TimerQueue">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.HttpWebRequest.TrimScopeID(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpWebRequest.WriteCallDone(System.Net.ConnectStream,System.Net.ConnectionReturnResult)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpWebRequest.WriteHeadersCallback(System.Net.WebExceptionStatus,System.Net.ConnectStream,System.Boolean)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpWebResponse.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpWebResponse.#ctor(System.Uri,System.Net.KnownHttpVerb,System.Net.CoreResponseData,System.String,System.Boolean,System.Net.DecompressionMethods)">
    <parameter name="responseUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="coreData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.HttpWebResponse.CharacterSet">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.HttpWebResponse.ContentEncoding">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.HttpWebResponse.ContentType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.HttpWebResponse.GetResponseHeader(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="headerName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.HttpWebResponse.Server">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.HttpWebResponse.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.InterlockedStack.Push(System.Object)">
    <parameter name="pooledStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.InternalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.IPAddress.Equals(System.Object)">
    <parameter name="comparand">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.IPAddress.InternalParse(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="ipString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.IPAddress.IsLoopback(System.Net.IPAddress)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.IPAddress.Parse(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="ipString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.IPAddress.Snapshot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.IPAddress.TryParse(System.String,System.Net.IPAddress@)">
    <parameter name="ipString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.IPEndPoint.Equals(System.Object)">
    <parameter name="comparand">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.IPEndPoint.Serialize">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.IPEndPoint.Snapshot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.IssuerListInfoEx.#ctor(System.Runtime.InteropServices.SafeHandle,System.Byte[])">
    <parameter name="nativeBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.KerberosClient.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="challenge">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.KerberosClient.AuthenticationType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.KerberosClient.DoAuthenticate(System.String,System.Net.WebRequest,System.Net.ICredentials,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="challenge">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.KerberosClient.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.KnownHttpVerb.Equals(System.Net.KnownHttpVerb)">
    <parameter name="verb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.KnownHttpVerb.Parse(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.LazyAsyncResult.AsyncState">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.LazyAsyncResult.AsyncWaitHandle">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.LazyAsyncResult.CurrentThreadContext">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.ListenerAsyncResult.WaitCallback(System.UInt32,System.UInt32,System.Threading.NativeOverlapped*)">
    <parameter name="nativeOverlapped">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ListenerClientCertAsyncResult.WaitCallback(System.UInt32,System.UInt32,System.Threading.NativeOverlapped*)">
    <parameter name="nativeOverlapped">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.ListenerPrefixEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.ListenerPrefixEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Logging.Associate(System.Diagnostics.TraceSource,System.Object,System.Object)">
    <parameter name="traceSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="objB">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="objA">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Logging.Dump(System.Diagnostics.TraceSource,System.Object,System.String,System.Byte[],System.Int32,System.Int32)">
    <parameter name="traceSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Logging.Dump(System.Diagnostics.TraceSource,System.Object,System.String,System.IntPtr,System.Int32)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="traceSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Logging.Enter(System.Diagnostics.TraceSource,System.Object,System.String,System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="traceSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Logging.Enter(System.Diagnostics.TraceSource,System.Object,System.String,System.String)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="traceSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Logging.Enter(System.Diagnostics.TraceSource,System.String)">
    <parameter name="traceSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Logging.Enter(System.Diagnostics.TraceSource,System.String,System.String)">
    <parameter name="traceSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Logging.Enter(System.Diagnostics.TraceSource,System.String,System.String,System.Object)">
    <parameter name="traceSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Logging.Enter(System.Diagnostics.TraceSource,System.String,System.String,System.String)">
    <parameter name="traceSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Logging.Exception(System.Diagnostics.TraceSource,System.Object,System.String,System.Exception)">
    <parameter name="traceSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Logging.Exit(System.Diagnostics.TraceSource,System.Object,System.String,System.Object)">
    <parameter name="traceSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Logging.Exit(System.Diagnostics.TraceSource,System.Object,System.String,System.String)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="traceSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Logging.Exit(System.Diagnostics.TraceSource,System.String)">
    <parameter name="traceSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Logging.Exit(System.Diagnostics.TraceSource,System.String,System.String)">
    <parameter name="traceSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Logging.Exit(System.Diagnostics.TraceSource,System.String,System.String,System.Object)">
    <parameter name="traceSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Logging.Exit(System.Diagnostics.TraceSource,System.String,System.String,System.String)">
    <parameter name="traceSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Logging.GetMaxDumpSizeSetting(System.Diagnostics.TraceSource)">
    <parameter name="traceSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Logging.GetObjectName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Logging.GetUseProtocolTextSetting(System.Diagnostics.TraceSource)">
    <parameter name="traceSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Logging.NclTraceSource.#ctor(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Logging.PrintError(System.Diagnostics.TraceSource,System.Object,System.String,System.String)">
    <parameter name="traceSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Logging.PrintError(System.Diagnostics.TraceSource,System.String)">
    <parameter name="traceSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Logging.PrintInfo(System.Diagnostics.TraceSource,System.Object,System.String)">
    <parameter name="traceSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Logging.PrintInfo(System.Diagnostics.TraceSource,System.Object,System.String,System.String)">
    <parameter name="traceSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Logging.PrintInfo(System.Diagnostics.TraceSource,System.String)">
    <parameter name="traceSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Logging.PrintLine(System.Diagnostics.TraceSource,System.Diagnostics.TraceEventType,System.Int32,System.String)">
    <parameter name="traceSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Logging.PrintWarning(System.Diagnostics.TraceSource,System.Object,System.String,System.String)">
    <parameter name="traceSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Logging.PrintWarning(System.Diagnostics.TraceSource,System.String)">
    <parameter name="traceSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Logging.UnhandledExceptionHandler(System.Object,System.UnhandledExceptionEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.AlternateView.#ctor(System.IO.Stream)">
    <parameter name="contentStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.AlternateView.#ctor(System.IO.Stream,System.Net.Mime.ContentType)">
    <parameter name="contentStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.AlternateView.#ctor(System.IO.Stream,System.String)">
    <parameter name="contentStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.AlternateView.#ctor(System.String)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.AlternateView.#ctor(System.String,System.Net.Mime.ContentType)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.AlternateView.#ctor(System.String,System.String)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.AlternateView.CreateAlternateViewFromString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="content">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.AlternateView.CreateAlternateViewFromString(System.String,System.Net.Mime.ContentType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="content">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.AlternateView.CreateAlternateViewFromString(System.String,System.Text.Encoding,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="content">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.Mail.AlternateView.LinkedResources">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mail.Attachment.#ctor(System.IO.Stream,System.Net.Mime.ContentType)">
    <parameter name="contentType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="contentStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.Attachment.#ctor(System.IO.Stream,System.String)">
    <parameter name="contentStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.Attachment.#ctor(System.IO.Stream,System.String,System.String)">
    <parameter name="contentStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.Attachment.#ctor(System.String)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.Attachment.#ctor(System.String,System.Net.Mime.ContentType)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="contentType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.Attachment.#ctor(System.String,System.String)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.Mail.Attachment.ContentDisposition">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mail.Attachment.CreateAttachmentFromString(System.String,System.Net.Mime.ContentType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="content">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="contentType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.Attachment.CreateAttachmentFromString(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="content">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.Attachment.CreateAttachmentFromString(System.String,System.String,System.Text.Encoding,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="content">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.AttachmentBase.#ctor(System.IO.Stream)">
    <parameter name="contentStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.AttachmentBase.#ctor(System.IO.Stream,System.Net.Mime.ContentType)">
    <parameter name="contentStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.AttachmentBase.#ctor(System.IO.Stream,System.String)">
    <parameter name="contentStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.AttachmentBase.#ctor(System.IO.Stream,System.String,System.String)">
    <parameter name="contentStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.AttachmentBase.#ctor(System.String)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.AttachmentBase.#ctor(System.String,System.Net.Mime.ContentType)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.AttachmentBase.#ctor(System.String,System.String)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.Mail.AttachmentBase.ContentType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mail.AttachmentBase.SetContentFromFile(System.String,System.Net.Mime.ContentType)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.AttachmentBase.SetContentFromFile(System.String,System.String)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.AttachmentBase.SetContentFromString(System.String,System.Net.Mime.ContentType)">
    <parameter name="contentString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.AttachmentBase.SetContentFromString(System.String,System.Text.Encoding,System.String)">
    <parameter name="contentString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.AttachmentBase.ShortNameFromFile(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.AuthCommand.BeginSend(System.Net.Mail.SmtpConnection,System.String,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="conn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.AuthCommand.BeginSend(System.Net.Mail.SmtpConnection,System.String,System.String,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="conn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.AuthCommand.CheckResponse(System.Net.Mail.LineInfo[])">
    <parameter name="lines">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.AuthCommand.EndSend(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.AuthCommand.PrepareCommand(System.Net.Mail.SmtpConnection,System.String)">
    <parameter name="conn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.AuthCommand.PrepareCommand(System.Net.Mail.SmtpConnection,System.String,System.String)">
    <parameter name="conn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.AuthCommand.Send(System.Net.Mail.SmtpConnection,System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="conn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.AuthCommand.Send(System.Net.Mail.SmtpConnection,System.String,System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="conn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.CheckCommand.BeginSend(System.Net.Mail.SmtpConnection,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="conn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.CheckCommand.EndSend(System.IAsyncResult,System.String@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.CheckCommand.OnReadLine(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.CheckCommand.OnWrite(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.CheckCommand.Send(System.Net.Mail.SmtpConnection,System.String@)">
    <parameter name="conn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.DataCommand.BeginSend(System.Net.Mail.SmtpConnection,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="conn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.DataCommand.EndSend(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.DataCommand.PrepareCommand(System.Net.Mail.SmtpConnection)">
    <parameter name="conn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.DataCommand.Send(System.Net.Mail.SmtpConnection)">
    <parameter name="conn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.DataStopCommand.PrepareCommand(System.Net.Mail.SmtpConnection)">
    <parameter name="conn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.DataStopCommand.Send(System.Net.Mail.SmtpConnection)">
    <parameter name="conn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.EHelloCommand.BeginSend(System.Net.Mail.SmtpConnection,System.String,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="domain">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="conn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.EHelloCommand.CheckResponse(System.Net.Mail.LineInfo[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="lines">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.EHelloCommand.EndSend(System.IAsyncResult)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.EHelloCommand.PrepareCommand(System.Net.Mail.SmtpConnection,System.String)">
    <parameter name="conn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="domain">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.EHelloCommand.Send(System.Net.Mail.SmtpConnection,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="conn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="domain">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.HelloCommand.BeginSend(System.Net.Mail.SmtpConnection,System.String,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="domain">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="conn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.HelloCommand.EndSend(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.HelloCommand.PrepareCommand(System.Net.Mail.SmtpConnection,System.String)">
    <parameter name="conn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="domain">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.HelloCommand.Send(System.Net.Mail.SmtpConnection,System.String)">
    <parameter name="domain">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="conn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.IisPickupDirectory.GetPickupDirectory">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mail.LinkedResource.#ctor(System.IO.Stream)">
    <parameter name="contentStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.LinkedResource.#ctor(System.IO.Stream,System.Net.Mime.ContentType)">
    <parameter name="contentStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.LinkedResource.#ctor(System.IO.Stream,System.String)">
    <parameter name="contentStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.LinkedResource.#ctor(System.String)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.LinkedResource.#ctor(System.String,System.Net.Mime.ContentType)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.LinkedResource.#ctor(System.String,System.String)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.LinkedResource.CreateLinkedResourceFromString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="content">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.LinkedResource.CreateLinkedResourceFromString(System.String,System.Net.Mime.ContentType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="content">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.LinkedResource.CreateLinkedResourceFromString(System.String,System.Text.Encoding,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="content">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.MailAddress.#ctor(System.String)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.MailAddress.#ctor(System.String,System.String)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.MailAddress.#ctor(System.String,System.String,System.Text.Encoding)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.Mail.MailAddress.DisplayName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mail.MailAddress.Equals(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.MailAddress.ParseValue(System.String)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.Mail.MailAddress.SmtpAddress">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mail.MailAddressCollection.Add(System.String)">
    <parameter name="addresses">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.MailAddressCollection.ParseValue(System.String)">
    <parameter name="addresses">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.MailAddressCollection.ToEncodedString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mail.MailCommand.BeginSend(System.Net.Mail.SmtpConnection,System.Byte[],System.String,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="command">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="from">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="conn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.MailCommand.EndSend(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.MailCommand.PrepareCommand(System.Net.Mail.SmtpConnection,System.Byte[],System.String)">
    <parameter name="conn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="command">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="from">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.MailCommand.Send(System.Net.Mail.SmtpConnection,System.Byte[],System.String)">
    <parameter name="command">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="from">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="conn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.MailHeaderInfo.GetID(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.MailHeaderInfo.IsMatch(System.String,System.Net.Mail.MailHeaderID)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.MailHeaderInfo.IsSingleton(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.MailHeaderInfo.IsWellKnown(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.MailHeaderInfo.NormalizeCase(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.MailMessage.#ctor(System.String,System.String)">
    <parameter name="from">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="to">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.MailMessage.#ctor(System.String,System.String,System.String,System.String)">
    <parameter name="from">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="to">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.MailMessage.BeginSend(System.Net.Mime.BaseWriter,System.Boolean,System.AsyncCallback,System.Object)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.MailMessage.BuildDeliveryStatusNotificationString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mail.MailMessage.EndSend(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.MailMessage.Send(System.Net.Mime.BaseWriter,System.Boolean)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.MailWriter.#ctor(System.IO.Stream)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.MailWriter.#ctor(System.IO.Stream,System.Int32)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.MailWriter.BeginGetContentStream(System.Net.Mime.ContentTransferEncoding,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mail.MailWriter.GetContentStream(System.Net.Mime.ContentTransferEncoding)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mail.MailWriter.GetContentStream(System.Net.Mime.ContentTransferEncoding,System.Net.Mime.MultiAsyncResult)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mail.MailWriter.OnWrite(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.MailWriter.WriteAndFold(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.Message.#ctor(System.Net.Mail.MailAddress,System.Net.Mail.MailAddress)">
    <parameter name="to">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.Message.#ctor(System.String,System.String)">
    <parameter name="from">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="to">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.Mail.Message.Bcc">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mail.Message.BeginSend(System.Net.Mime.BaseWriter,System.Boolean,System.AsyncCallback,System.Object)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.Mail.Message.CC">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mail.Message.EmptySendCallback(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.Message.EndSend(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.Mail.Message.EnvelopeHeaders">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.Mail.Message.Headers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mail.Message.Send(System.Net.Mime.BaseWriter,System.Boolean)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.Mail.Message.To">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mail.ReadLinesCommand.BeginSend(System.Net.Mail.SmtpConnection,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="conn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.ReadLinesCommand.EndSend(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.ReadLinesCommand.OnReadLines(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.ReadLinesCommand.OnWrite(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.ReadLinesCommand.Send(System.Net.Mail.SmtpConnection)">
    <parameter name="conn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.RecipientCommand.BeginSend(System.Net.Mail.SmtpConnection,System.String,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="to">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="conn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.RecipientCommand.EndSend(System.IAsyncResult,System.String@)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.RecipientCommand.PrepareCommand(System.Net.Mail.SmtpConnection,System.String)">
    <parameter name="conn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="to">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.RecipientCommand.Send(System.Net.Mail.SmtpConnection,System.String,System.String@)">
    <parameter name="to">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="conn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SendMailAsyncResult.End(System.IAsyncResult)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SendMailAsyncResult.SendDataCompleted(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SendMailAsyncResult.SendMailFromCompleted(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SendMailAsyncResult.SendToCollectionCompleted(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SendMailAsyncResult.SendToCompleted(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpAuthenticationManager.GetModules">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mail.SmtpAuthenticationManager.Register(System.Net.Mail.ISmtpAuthenticationModule)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpClient.Complete(System.Exception,System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpClient.ConnectCallback(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpClient.ContextSafeCompleteCallback(System.IAsyncResult)">
    <parameter name="ar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpClient.GetFileMailWriter(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="pickupDirectory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpClient.Send(System.String,System.String,System.String,System.String)">
    <parameter name="from">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="recipients">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpClient.SendAsync(System.String,System.String,System.String,System.String,System.Object)">
    <parameter name="from">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="recipients">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpClient.SendMailCallback(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpClient.SendMessageCallback(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpConnection.AuthenticateCallback(System.Object)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpConnection.BeginFlush(System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mail.SmtpConnection.BeginGetConnection(System.String,System.Int32,System.Net.ContextAwareResult,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpConnection.ConnectAndHandshakeAsyncResult.AuthenticateCallback(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpConnection.ConnectAndHandshakeAsyncResult.AuthenticateContinueCallback(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpConnection.ConnectAndHandshakeAsyncResult.ConnectionCreatedCallback(System.Object,System.Object)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpConnection.ConnectAndHandshakeAsyncResult.End(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpConnection.ConnectAndHandshakeAsyncResult.HandshakeCallback(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpConnection.ConnectAndHandshakeAsyncResult.SendEHelloCallback(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpConnection.ConnectAndHandshakeAsyncResult.SendHelloCallback(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpConnection.ConnectAndHandshakeAsyncResult.SendStartTlsCallback(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpConnection.CreateSmtpPooledStream(System.Net.ConnectionPool)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mail.SmtpConnection.EndFlush(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpConnection.EndGetConnection(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpConnection.GetClosableStream">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mail.SmtpConnection.GetConnection(System.String,System.Int32)">
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpConnection.ParseExtensions(System.String[])">
    <parameter name="extensions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpConnection.SetContextAndTryAuthenticate(System.Net.Mail.ISmtpAuthenticationModule,System.Net.NetworkCredential,System.Net.ContextAwareResult)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpDigestAuthenticationModule.Authenticate(System.String,System.Net.NetworkCredential,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="sessionCookie">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.Mail.SmtpDigestAuthenticationModule.AuthenticationType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mail.SmtpDigestAuthenticationModule.CloseContext(System.Object)">
    <parameter name="sessionCookie">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpException.GetMessageForStatus(System.Net.Mail.SmtpStatusCode)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mail.SmtpException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpFailedRecipientException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpFailedRecipientException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpFailedRecipientsException.#ctor(System.Collections.ArrayList,System.Boolean)">
    <parameter name="innerExceptions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpFailedRecipientsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpFailedRecipientsException.#ctor(System.String,System.Net.Mail.SmtpFailedRecipientException[])">
    <parameter name="innerExceptions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpFailedRecipientsException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpLoginAuthenticationModule.Authenticate(System.String,System.Net.NetworkCredential,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="sessionCookie">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.Mail.SmtpLoginAuthenticationModule.AuthenticationType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mail.SmtpLoginAuthenticationModule.CloseContext(System.Object)">
    <parameter name="sessionCookie">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpNegotiateAuthenticationModule.Authenticate(System.String,System.Net.NetworkCredential,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="sessionCookie">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.Mail.SmtpNegotiateAuthenticationModule.AuthenticationType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mail.SmtpNegotiateAuthenticationModule.CloseContext(System.Object)">
    <parameter name="sessionCookie">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpNegotiateAuthenticationModule.GetSecurityLayerOutgoingBlob(System.String,System.Net.NTAuthentication)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="clientContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpNtlmAuthenticationModule.Authenticate(System.String,System.Net.NetworkCredential,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="sessionCookie">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.Mail.SmtpNtlmAuthenticationModule.AuthenticationType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mail.SmtpNtlmAuthenticationModule.CloseContext(System.Object)">
    <parameter name="sessionCookie">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpPermission.Copy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mail.SmtpPermission.Union(System.Security.IPermission)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mail.SmtpPermissionAttribute.CreatePermission">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mail.SmtpReplyReader.BeginReadLine(System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mail.SmtpReplyReader.BeginReadLines(System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mail.SmtpReplyReader.EndReadLine(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpReplyReader.EndReadLines(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpReplyReaderFactory.#ctor(System.IO.Stream)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpReplyReaderFactory.BeginReadLine(System.Net.Mail.SmtpReplyReader,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mail.SmtpReplyReaderFactory.BeginReadLines(System.Net.Mail.SmtpReplyReader,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mail.SmtpReplyReaderFactory.EndReadLine(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpReplyReaderFactory.EndReadLines(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpReplyReaderFactory.GetNextReplyReader">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mail.SmtpReplyReaderFactory.Read(System.Net.Mail.SmtpReplyReader,System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpReplyReaderFactory.ReadLinesAsyncResult.End(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpReplyReaderFactory.ReadLinesAsyncResult.ReadCallback(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpTransport.#ctor(System.Net.Mail.SmtpClient,System.Net.Mail.ISmtpAuthenticationModule[])">
    <parameter name="authenticationModules">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpTransport.BeginGetConnection(System.String,System.Int32,System.Net.ContextAwareResult,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpTransport.BeginSendMail(System.Net.Mail.MailAddress,System.Net.Mail.MailAddressCollection,System.String,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="recipients">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.Mail.SmtpTransport.ClientCertificates">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mail.SmtpTransport.EndGetConnection(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpTransport.EndSendMail(System.IAsyncResult)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpTransport.GetConnection(System.String,System.Int32)">
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpTransport.SendMail(System.Net.Mail.MailAddress,System.Net.Mail.MailAddressCollection,System.String,System.Net.Mail.SmtpFailedRecipientException@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="recipients">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.StartTlsCommand.BeginSend(System.Net.Mail.SmtpConnection,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="conn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.StartTlsCommand.EndSend(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.StartTlsCommand.PrepareCommand(System.Net.Mail.SmtpConnection)">
    <parameter name="conn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.StartTlsCommand.Send(System.Net.Mail.SmtpConnection)">
    <parameter name="conn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.BaseWriter.BeginGetContentStream(System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mime.BaseWriter.EndGetContentStream(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.BaseWriter.GetContentStream">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mime.BaseWriter.WriteHeader(System.String,System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.BaseWriter.WriteHeaders(System.Collections.Specialized.NameValueCollection)">
    <parameter name="headers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.ContentDisposition.#ctor(System.String)">
    <parameter name="disposition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.ContentDisposition.Equals(System.Object)">
    <parameter name="rparam">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.Mime.ContentDisposition.Parameters">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mime.ContentDisposition.PersistIfNeeded(System.Net.Mime.HeaderCollection,System.Boolean)">
    <parameter name="headers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.ContentDisposition.Set(System.String,System.Net.Mime.HeaderCollection)">
    <parameter name="headers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.ContentType.#ctor(System.String)">
    <parameter name="contentType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.ContentType.Equals(System.Object)">
    <parameter name="rparam">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.Mime.ContentType.Parameters">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mime.ContentType.PersistIfNeeded(System.Net.Mime.HeaderCollection,System.Boolean)">
    <parameter name="headers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.ContentType.Set(System.String,System.Net.Mime.HeaderCollection)">
    <parameter name="headers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.HeaderCollection.InternalRemove(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.HeaderCollection.InternalSet(System.String,System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MailBnfHelper.GetDateTimeString(System.DateTime,System.Text.StringBuilder)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mime.MailBnfHelper.GetDotAtomOrDomainLiteral(System.String,System.Text.StringBuilder)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MailBnfHelper.GetDotAtomOrQuotedString(System.String,System.Text.StringBuilder)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MailBnfHelper.GetTokenOrQuotedString(System.String,System.Text.StringBuilder)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MailBnfHelper.HasCROrLF(System.String)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MailBnfHelper.IsValidDOW(System.String,System.Int32@)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MailBnfHelper.ReadAddressSpecDomain(System.String,System.Int32@,System.Text.StringBuilder)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MailBnfHelper.ReadAngleAddress(System.String,System.Int32@,System.Text.StringBuilder)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MailBnfHelper.ReadAtom(System.String,System.Int32@,System.Text.StringBuilder)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MailBnfHelper.ReadDateNumber(System.String,System.Int32@,System.Int32)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MailBnfHelper.ReadDateTime(System.String,System.Int32@)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MailBnfHelper.ReadDomainLiteral(System.String,System.Int32@,System.Text.StringBuilder)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MailBnfHelper.ReadDotAtom(System.String,System.Int32@,System.Text.StringBuilder)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MailBnfHelper.ReadMailAddress(System.String,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MailBnfHelper.ReadMailAddress(System.String,System.Int32@,System.String@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MailBnfHelper.ReadMonth(System.String,System.Int32@)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MailBnfHelper.ReadParameterAttribute(System.String,System.Int32@,System.Text.StringBuilder)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MailBnfHelper.ReadPhrase(System.String,System.Int32@,System.Text.StringBuilder)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MailBnfHelper.ReadQuotedString(System.String,System.Int32@,System.Text.StringBuilder)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MailBnfHelper.ReadQuotedString(System.String,System.Int32@,System.Text.StringBuilder,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MailBnfHelper.ReadToken(System.String,System.Int32@,System.Text.StringBuilder)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MailBnfHelper.SkipCFWS(System.String,System.Int32@)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MailBnfHelper.SkipFWS(System.String,System.Int32@)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MailBnfHelper.ValidateHeaderName(System.String)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MimeBasePart.BeginSend(System.Net.Mime.BaseWriter,System.AsyncCallback,System.Object)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.Mime.MimeBasePart.ContentType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mime.MimeBasePart.DecodeHeaderValue(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mime.MimeBasePart.EncodeHeaderValue(System.String,System.Text.Encoding,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MimeBasePart.EndSend(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.Mime.MimeBasePart.Headers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mime.MimeBasePart.IsAnsi(System.String,System.Boolean)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MimeBasePart.IsAscii(System.String,System.Boolean)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MimeBasePart.Send(System.Net.Mime.BaseWriter)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MimeMultiPart.BeginSend(System.Net.Mime.BaseWriter,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mime.MimeMultiPart.Complete(System.IAsyncResult,System.Exception)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MimeMultiPart.ContentStreamCallback(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MimeMultiPart.ContentStreamCallbackHandler(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MimeMultiPart.MimePartSentCallback(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MimeMultiPart.MimePartSentCallbackHandler(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MimeMultiPart.MimeWriterCloseCallback(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MimeMultiPart.MimeWriterCloseCallbackHandler(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.Mime.MimeMultiPart.Parts">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mime.MimePart.BeginSend(System.Net.Mime.BaseWriter,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mime.MimePart.Complete(System.IAsyncResult,System.Exception)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MimePart.ContentStreamCallback(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MimePart.ContentStreamCallbackHandler(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MimePart.GetEncodedStream(System.IO.Stream)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MimePart.ReadCallback(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MimePart.ReadCallbackHandler(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MimePart.SetContent(System.IO.Stream)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MimePart.SetContent(System.IO.Stream,System.Net.Mime.ContentType)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MimePart.SetContent(System.IO.Stream,System.String,System.String)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MimePart.WriteCallback(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MimePart.WriteCallbackHandler(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MimeWriter.#ctor(System.IO.Stream,System.String)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="boundary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MimeWriter.#ctor(System.IO.Stream,System.String,System.String,System.Int32)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="boundary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MimeWriter.BeginClose(System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mime.MimeWriter.BeginGetContentStream(System.Net.Mime.ContentTransferEncoding,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mime.MimeWriter.EndClose(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MimeWriter.GetContentStream(System.Net.Mime.ContentTransferEncoding)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mime.MimeWriter.GetContentStream(System.Net.Mime.ContentTransferEncoding,System.Net.Mime.MultiAsyncResult)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mime.MimeWriter.OnClose(System.Object,System.EventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MimeWriter.OnWrite(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MimeWriter.WriteAndFold(System.String,System.Int32)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.MultiAsyncResult.End(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.QuotedPrintableStream.#ctor(System.IO.Stream,System.Boolean)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.QuotedPrintableStream.#ctor(System.IO.Stream,System.Int32)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.QuotedPrintableStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mime.QuotedPrintableStream.EncodeBytes(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.Mime.QuotedPrintableStream.ReadState">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mime.QuotedPrintableStream.WriteAsyncResult.CompleteWrite(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.QuotedPrintableStream.WriteAsyncResult.End(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.QuotedPrintableStream.WriteAsyncResult.OnWrite(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.Mime.QuotedPrintableStream.WriteState">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mime.SevenBitStream.#ctor(System.IO.Stream)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.SevenBitStream.CheckBytes(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NclUtilities.DemandCallback(System.Object)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NclUtilities.GetLocalAddresses">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NclUtilities.GuessWhetherHostIsLoopback(System.String)">
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NclUtilities.IsAddressLocal(System.Net.IPAddress)">
    <parameter name="ipAddress">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NegotiateClient.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="challenge">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.NegotiateClient.AuthenticationType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NegotiateClient.DoAuthenticate(System.String,System.Net.WebRequest,System.Net.ICredentials,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="challenge">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NegotiateClient.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NegotiationInfoClass.#ctor(System.Runtime.InteropServices.SafeHandle,System.Int32)">
    <parameter name="safeHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NestedMultipleAsyncResult.#ctor(System.Object,System.Object,System.AsyncCallback,System.Net.BufferOffsetSize[])">
    <parameter name="buffers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetRes.GetWebStatusString(System.Net.WebExceptionStatus)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetRes.GetWebStatusString(System.String,System.Net.WebExceptionStatus)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="Res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkCredential.Decrypt(System.Byte[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkCredential.Encrypt(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkCredential.GetCredential(System.String,System.Int32,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="authenticationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkCredential.GetCredential(System.Uri,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="authType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkCredential.InternalGetDomain">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkCredential.InternalGetPassword">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkCredential.InternalGetUserName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Add(System.Net.NetworkInformation.GatewayIPAddressInformation)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Contains(System.Net.NetworkInformation.GatewayIPAddressInformation)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.GatewayIPAddressInformationCollection.CopyTo(System.Net.NetworkInformation.GatewayIPAddressInformation[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.GatewayIPAddressInformationCollection.InternalAdd(System.Net.NetworkInformation.GatewayIPAddressInformation)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Remove(System.Net.NetworkInformation.GatewayIPAddressInformation)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.GatewayIPAddressInformationCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.IcmpPacket.GetBytes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.IPAddressCollection.Add(System.Net.IPAddress)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.IPAddressCollection.Contains(System.Net.IPAddress)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.IPAddressCollection.CopyTo(System.Net.IPAddress[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.IPAddressCollection.InternalAdd(System.Net.IPAddress)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.IPAddressCollection.Remove(System.Net.IPAddress)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.IPAddressCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.IPAddressInformationCollection.Add(System.Net.NetworkInformation.IPAddressInformation)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.IPAddressInformationCollection.Contains(System.Net.NetworkInformation.IPAddressInformation)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.IPAddressInformationCollection.CopyTo(System.Net.NetworkInformation.IPAddressInformation[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.IPAddressInformationCollection.InternalAdd(System.Net.NetworkInformation.IPAddressInformation)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.IPAddressInformationCollection.Remove(System.Net.NetworkInformation.IPAddressInformation)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.IPAddressInformationCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.IpAddrString.ToIPAddressCollection">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.IpAddrString.ToIPExtendedAddressArrayList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.IpAddrString.ToIPGatewayAddressCollection">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpConnections">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpListeners">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.IPGlobalProperties.GetActiveUdpListeners">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV4Statistics">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV6Statistics">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.IPGlobalProperties.GetIPGlobalProperties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.IPGlobalProperties.GetIPv4GlobalStatistics">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.IPGlobalProperties.GetIPv6GlobalStatistics">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv4Statistics">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv6Statistics">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv4Statistics">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv6Statistics">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.IPGlobalProperties.InternalGetIPGlobalProperties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.MulticastIPAddressInformationCollection.Add(System.Net.NetworkInformation.MulticastIPAddressInformation)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.MulticastIPAddressInformationCollection.Contains(System.Net.NetworkInformation.MulticastIPAddressInformation)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.MulticastIPAddressInformationCollection.CopyTo(System.Net.NetworkInformation.MulticastIPAddressInformation[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.MulticastIPAddressInformationCollection.InternalAdd(System.Net.NetworkInformation.MulticastIPAddressInformation)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.MulticastIPAddressInformationCollection.Remove(System.Net.NetworkInformation.MulticastIPAddressInformation)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.MulticastIPAddressInformationCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.NetworkChange.AddressChangeListener.AddressChangedCallback(System.Object,System.Boolean)">
    <parameter name="stateObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.NetworkChange.AddressChangeListener.RunHandlerCallback(System.Object)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.NetworkChange.AddressChangeListener.Stop(System.Object)">
    <parameter name="caller">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.NetworkChange.AvailabilityChangeListener.RunHandlerCallback(System.Object)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.NetworkChange.AvailabilityChangeListener.Stop(System.Net.NetworkInformation.NetworkAvailabilityChangedEventHandler)">
    <parameter name="caller">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.NetworkInformationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.Copy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.Union(System.Security.IPermission)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.NetworkInformationPermissionAttribute.CreatePermission">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.NetworkInterface.GetIPv4Statistics">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.NetworkInterface.GetPhysicalAddress">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.PhysicalAddress.GetAddressBytes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.Ping.ContinueAsyncSend(System.Object)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.Ping.CorrectPacket(System.Byte[],System.Net.NetworkInformation.IcmpPacket)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="packet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.NetworkInformation.Ping.DefaultSendBuffer">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.Ping.InternalDownLevelSend(System.Net.IPAddress,System.Byte[],System.Int32,System.Net.NetworkInformation.PingOptions,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.Ping.InternalSend(System.Net.IPAddress,System.Byte[],System.Int32,System.Net.NetworkInformation.PingOptions,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.Ping.PingCallback(System.Object,System.Boolean)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.Ping.PingSendCallback(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.Ping.Send(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="hostNameOrAddress">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="hostNameOrAddress">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="hostNameOrAddress">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="hostNameOrAddress">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)">
    <parameter name="hostNameOrAddress">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="hostNameOrAddress">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)">
    <parameter name="hostNameOrAddress">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)">
    <parameter name="hostNameOrAddress">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.Ping.SetUnmanagedStructures(System.Byte[])">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.PingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.PingReply.#ctor(System.Byte[],System.Int32,System.Net.IPAddress,System.Int32)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.SystemIPAddressInformation.#ctor(System.Net.IPAddress)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.SystemIPAddressInformation.ToAddressCollection(System.IntPtr,System.Net.NetworkInformation.IPVersion)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.SystemIPAddressInformation.ToAddressInformationCollection(System.IntPtr,System.Net.NetworkInformation.IPVersion)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.SystemIPGlobalProperties.GetAllTcpConnections">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.SystemMulticastIPAddressInformation.ToAddressInformationCollection(System.IntPtr)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.SystemNetworkInterface.GetAdaptersAddresses(System.Net.Sockets.AddressFamily,System.Net.NetworkInformation.FixedInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.SystemNetworkInterface.GetNetworkInterfaces">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.SystemNetworkInterface.GetNetworkInterfaces(System.Net.Sockets.AddressFamily)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.SystemNetworkInterface.PostWin2KGetNetworkInterfaces(System.Net.Sockets.AddressFamily)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.SystemNetworkInterface.ReadAdapterName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.SystemUnicastIPAddressInformation.ToAddressInformationCollection(System.IntPtr)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.UnicastIPAddressInformationCollection.Add(System.Net.NetworkInformation.UnicastIPAddressInformation)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.UnicastIPAddressInformationCollection.Contains(System.Net.NetworkInformation.UnicastIPAddressInformation)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.UnicastIPAddressInformationCollection.CopyTo(System.Net.NetworkInformation.UnicastIPAddressInformation[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.UnicastIPAddressInformationCollection.InternalAdd(System.Net.NetworkInformation.UnicastIPAddressInformation)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.UnicastIPAddressInformationCollection.Remove(System.Net.NetworkInformation.UnicastIPAddressInformation)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.UnicastIPAddressInformationCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkingPerfCounters.ExceptionEventHandler(System.Object,System.UnhandledExceptionEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkingPerfCounters.GetInstanceName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NTAuthentication.#ctor(System.Boolean,System.String,System.Net.NetworkCredential,System.String,System.Net.ContextFlags)">
    <parameter name="credential">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NTAuthentication.#ctor(System.Boolean,System.String,System.Net.NetworkCredential,System.String,System.Net.ContextFlags,System.Net.ContextAwareResult)">
    <parameter name="credential">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NTAuthentication.#ctor(System.String,System.Net.NetworkCredential,System.String,System.Net.WebRequest)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="networkCredential">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.NTAuthentication.AssociatedName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NTAuthentication.GetHttpContextFlags(System.Net.WebRequest)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NTAuthentication.GetOutgoingBlob(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NTAuthentication.GetOutgoingDigestBlob(System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Net.SecurityStatus@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="requestMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NTAuthentication.Initialize(System.Boolean,System.String,System.Net.NetworkCredential,System.String,System.Net.ContextFlags)">
    <parameter name="credential">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NTAuthentication.InitializeCallback(System.Object)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.NTAuthentication.Sizes">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NtlmClient.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="challenge">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.NtlmClient.AuthenticationType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NtlmClient.DoAuthenticate(System.String,System.Net.WebRequest,System.Net.ICredentials,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="challenge">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NtlmClient.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.PathList.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.PathList.Item(System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.PathList.PathListComparer.System#Collections#IComparer#Compare(System.Object,System.Object)">
    <parameter name="or">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ol">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.PathList.Values">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.PolicyWrapper.CheckErrors(System.String,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
    <parameter name="chain">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.PolicyWrapper.GetChainErrors(System.String,System.Security.Cryptography.X509Certificates.X509Chain,System.Boolean@)">
    <parameter name="chain">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.PooledStream.BeginMultipleWrite(System.Net.BufferOffsetSize[],System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="buffers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.PooledStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.PooledStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.PooledStream.ConnectionCallback(System.Object,System.Exception,System.Net.Sockets.Socket,System.Net.IPAddress)">
    <parameter name="socket">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.PooledStream.EndMultipleWrite(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.PooledStream.EndRead(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.PooledStream.EndWrite(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.PooledStream.MultipleWrite(System.Net.BufferOffsetSize[])">
    <parameter name="buffers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.PooledStream.Read(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.PooledStream.Socket">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.PooledStream.UnsafeBeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.PooledStream.UnsafeBeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.PooledStream.Write(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.PrefixLookup.Add(System.String,System.Object)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ProtocolViolationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ProtocolViolationException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.ProxyChain.Enumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.ProxyChain.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.ProxyChain.HttpAbortDelegate">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.ProxyChain.ProxyEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.ProxyChain.ProxyEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.ProxyChain.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.ProxyRegBlob.BypassStringEscape(System.String)">
    <parameter name="rawString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ProxyRegBlob.ConvertRegexReservedChars(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="rawString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ProxyRegBlob.GetWebProxyData(System.String,System.Net.SafeRegistryHandle)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.ProxyRegBlob.ParseBypassList(System.String,System.Boolean@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="bypassListString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ProxyRegBlob.ParseProtocolProxies(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="proxyListString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ProxyRegBlob.ParseProxyUri(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="proxyString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ProxyRegBlob.ReadString">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.SafeCloseHandle.CreateRequestQueueHandle">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.SafeCloseHandle.GetSecurityContextToken(System.Net.SafeDeleteContext,System.Net.SafeCloseHandle@)">
    <parameter name="phContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SafeCloseSocket.Accept(System.Net.SafeCloseSocket,System.Byte[],System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="socketHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SafeCloseSocket.CreateSocket(System.Net.SafeCloseSocket.InnerSafeCloseSocket)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.SafeCloseSocket.CreateSocket(System.Net.SafeCloseSocket.InnerSafeCloseSocket,System.Net.SafeCloseSocket)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SafeCloseSocket.CreateWSASocket(System.Byte*)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.SafeCloseSocket.CreateWSASocket(System.Net.Sockets.AddressFamily,System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.SafeCloseSocket.InnerSafeCloseSocket.Accept(System.Net.SafeCloseSocket,System.Byte[],System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="socketHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SafeCloseSocket.InnerSafeCloseSocket.CreateWSASocket(System.Byte*)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.SafeCloseSocket.InnerSafeCloseSocket.CreateWSASocket(System.Net.Sockets.AddressFamily,System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.SafeCloseSocket.SetInnerSocket(System.Net.SafeCloseSocket.InnerSafeCloseSocket)">
    <parameter name="socket">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SafeCloseSocketAndEvent.CompleteInitialization(System.Net.SafeCloseSocketAndEvent)">
    <parameter name="socketAndEventHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SafeCloseSocketAndEvent.CreateWSASocketWithEvent(System.Net.Sockets.AddressFamily,System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.SafeCredentialReference.#ctor(System.Net.SafeFreeCredentials)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SafeCredentialReference.CreateReference(System.Net.SafeFreeCredentials)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SafeDeleteContext.AcceptSecurityContext(System.Net.SecurDll,System.Net.SafeFreeCredentials@,System.Net.SafeDeleteContext@,System.Net.ContextFlags,System.Net.Endianness,System.Net.SecurityBuffer,System.Net.SecurityBuffer[],System.Net.SecurityBuffer,System.Net.ContextFlags@)">
    <parameter name="inCredentials">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="outSecBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SafeDeleteContext.CompleteAuthToken(System.Net.SecurDll,System.Net.SafeDeleteContext@,System.Net.SecurityBuffer[])">
    <parameter name="inSecBuffers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SafeDeleteContext.InitializeSecurityContext(System.Net.SecurDll,System.Net.SafeFreeCredentials@,System.Net.SafeDeleteContext@,System.String,System.Net.ContextFlags,System.Net.Endianness,System.Net.SecurityBuffer,System.Net.SecurityBuffer[],System.Net.SecurityBuffer,System.Net.ContextFlags@)">
    <parameter name="inCredentials">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="outSecBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SafeDeleteContext.MustRunAcceptSecurityContext_SCHANNEL(System.Net.SafeFreeCredentials@,System.Void*,System.Net.SecurityBufferDescriptor,System.Net.ContextFlags,System.Net.Endianness,System.Net.SafeDeleteContext,System.Net.SecurityBufferDescriptor,System.Net.ContextFlags@,System.Net.SafeFreeContextBuffer)">
    <parameter name="inCredentials">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="outContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="outputBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SafeDeleteContext.MustRunAcceptSecurityContext_SECUR32(System.Net.SafeFreeCredentials@,System.Void*,System.Net.SecurityBufferDescriptor,System.Net.ContextFlags,System.Net.Endianness,System.Net.SafeDeleteContext,System.Net.SecurityBufferDescriptor,System.Net.ContextFlags@,System.Net.SafeFreeContextBuffer)">
    <parameter name="inCredentials">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="outContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="outputBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SafeDeleteContext.MustRunAcceptSecurityContext_SECURITY(System.Net.SafeFreeCredentials@,System.Void*,System.Net.SecurityBufferDescriptor,System.Net.ContextFlags,System.Net.Endianness,System.Net.SafeDeleteContext,System.Net.SecurityBufferDescriptor,System.Net.ContextFlags@,System.Net.SafeFreeContextBuffer)">
    <parameter name="inCredentials">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="outContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="outputBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SafeDeleteContext.MustRunInitializeSecurityContext_SCHANNEL(System.Net.SafeFreeCredentials@,System.Void*,System.Byte*,System.Net.ContextFlags,System.Net.Endianness,System.Net.SecurityBufferDescriptor,System.Net.SafeDeleteContext,System.Net.SecurityBufferDescriptor,System.Net.ContextFlags@,System.Net.SafeFreeContextBuffer)">
    <parameter name="inCredentials">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="outContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="outputBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SafeDeleteContext.MustRunInitializeSecurityContext_SECUR32(System.Net.SafeFreeCredentials@,System.Void*,System.Byte*,System.Net.ContextFlags,System.Net.Endianness,System.Net.SecurityBufferDescriptor,System.Net.SafeDeleteContext,System.Net.SecurityBufferDescriptor,System.Net.ContextFlags@,System.Net.SafeFreeContextBuffer)">
    <parameter name="inCredentials">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="outContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="outputBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SafeDeleteContext.MustRunInitializeSecurityContext_SECURITY(System.Net.SafeFreeCredentials@,System.Void*,System.Byte*,System.Net.ContextFlags,System.Net.Endianness,System.Net.SecurityBufferDescriptor,System.Net.SafeDeleteContext,System.Net.SecurityBufferDescriptor,System.Net.ContextFlags@,System.Net.SafeFreeContextBuffer)">
    <parameter name="inCredentials">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="outContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="outputBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SafeFreeContextBuffer.CreateEmptyHandle(System.Net.SecurDll)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.SafeFreeContextBuffer.QueryContextAttributes(System.Net.SecurDll,System.Net.SafeDeleteContext,System.Net.ContextAttribute,System.Byte*,System.Runtime.InteropServices.SafeHandle)">
    <parameter name="phContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SafeFreeContextBuffer.QueryContextAttributes_SCHANNEL(System.Net.SafeDeleteContext,System.Net.ContextAttribute,System.Byte*,System.Runtime.InteropServices.SafeHandle)">
    <parameter name="phContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SafeFreeContextBuffer.QueryContextAttributes_SECUR32(System.Net.SafeDeleteContext,System.Net.ContextAttribute,System.Byte*,System.Runtime.InteropServices.SafeHandle)">
    <parameter name="phContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SafeFreeContextBuffer.QueryContextAttributes_SECURITY(System.Net.SafeDeleteContext,System.Net.ContextAttribute,System.Byte*,System.Runtime.InteropServices.SafeHandle)">
    <parameter name="phContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SafeLoadLibrary.LoadLibraryEx(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.SafeLocalFree.LocalAlloc(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.SafeOverlappedFree.Alloc">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.SafeOverlappedFree.Alloc(System.Net.SafeCloseSocket)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.SafeUnlockUrlCacheEntryFile.MustRunGetAndLockFile(System.Char*,System.Byte*,System.Int32@,System.Net.SafeUnlockUrlCacheEntryFile)">
    <parameter name="handle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ScatterGatherBuffers.AllocateMemoryChunk(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.ScatterGatherBuffers.GetBuffers">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Security._SslStream.#ctor(System.Net.Security.SslState)">
    <parameter name="sslState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security._SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security._SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security._SslStream.BeginWrite(System.Net.BufferOffsetSize[],System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="buffers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security._SslStream.EncryptBuffers(System.Net.BufferOffsetSize[],System.Byte[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="buffers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security._SslStream.EndRead(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security._SslStream.EndWrite(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security._SslStream.MulitpleWriteCallback(System.IAsyncResult)">
    <parameter name="transportResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security._SslStream.ProcessRead(System.Byte[],System.Int32,System.Int32,System.Net.AsyncProtocolRequest)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security._SslStream.ProcessWrite(System.Byte[],System.Int32,System.Int32,System.Net.AsyncProtocolRequest)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security._SslStream.ProcessWrite(System.Net.BufferOffsetSize[],System.Net.Security._SslStream.SplitWriteAsyncProtocolRequest)">
    <parameter name="buffers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security._SslStream.Read(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security._SslStream.ReadFrameCallback(System.Net.AsyncProtocolRequest)">
    <parameter name="asyncRequest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security._SslStream.ReadHeaderCallback(System.Net.AsyncProtocolRequest)">
    <parameter name="asyncRequest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security._SslStream.ResumeAsyncReadCallback(System.Net.AsyncProtocolRequest)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security._SslStream.ResumeAsyncWriteCallback(System.Net.AsyncProtocolRequest)">
    <parameter name="asyncRequest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security._SslStream.StartWriting(System.Net.SplitWritesState,System.Net.Security._SslStream.SplitWriteAsyncProtocolRequest)">
    <parameter name="splitWrite">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security._SslStream.ValidateParameters(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security._SslStream.Write(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security._SslStream.Write(System.Net.BufferOffsetSize[])">
    <parameter name="buffers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security._SslStream.WriteCallback(System.IAsyncResult)">
    <parameter name="transportResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.AuthenticatedStream.#ctor(System.IO.Stream,System.Boolean)">
    <parameter name="innerStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.NegoState.#ctor(System.IO.Stream,System.Boolean)">
    <parameter name="innerStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.NegoState.CheckCompletionBeforeNextSend(System.Byte[],System.Net.LazyAsyncResult)">
    <parameter name="lazyResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.Security.NegoState.DefaultPackage">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Security.NegoState.EndProcessAuthentication(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.NegoState.GetIdentity">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Security.NegoState.ProcessAuthentication(System.Net.LazyAsyncResult)">
    <parameter name="lazyResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.NegoState.ProcessReceivedBlob(System.Byte[],System.Net.LazyAsyncResult)">
    <parameter name="lazyResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.NegoState.ReadCallback(System.IAsyncResult)">
    <parameter name="transportResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.NegoState.SetException(System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Security.NegoState.StartSendAuthResetSignal(System.Net.LazyAsyncResult,System.Byte[],System.Exception)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="lazyResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.NegoState.StartSendBlob(System.Byte[],System.Net.LazyAsyncResult)">
    <parameter name="lazyResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.NegoState.ValidateCreateContext(System.String,System.Boolean,System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
    <parameter name="credential">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="servicePrincipalName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.NegoState.WriteCallback(System.IAsyncResult)">
    <parameter name="transportResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream)">
    <parameter name="innerStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)">
    <parameter name="innerStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)">
    <parameter name="targetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="credential">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
    <parameter name="credential">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="targetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
    <parameter name="credential">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="credential">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="targetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="credential">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="targetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="credential">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.NegotiateStream.ProcessRead(System.Byte[],System.Int32,System.Int32,System.Net.AsyncProtocolRequest)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.NegotiateStream.ProcessWrite(System.Byte[],System.Int32,System.Int32,System.Net.AsyncProtocolRequest)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.NegotiateStream.ReadCallback(System.Net.AsyncProtocolRequest)">
    <parameter name="asyncRequest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.Security.NegotiateStream.RemoteIdentity">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Security.NegotiateStream.ValidateParameters(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.NegotiateStream.WriteCallback(System.IAsyncResult)">
    <parameter name="transportResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.ProtocolToken.GetException">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Security.SecureChannel.EnsureStoreOpened(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Security.SecureChannel.GetIssuers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Security.SecureChannel.GetRemoteCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2Collection@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Security.SecureChannel.MakeEx(System.Security.Cryptography.X509Certificates.X509Certificate)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="certificate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.SecureChannel.NextMessage(System.Byte[],System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Security.SecureChannel.UnmanagedCertificateContext.GetStore(System.Net.SafeFreeCertContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="certContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.SslSessionsCache.CacheCredential(System.Net.SafeFreeCredentials,System.Byte[],System.Net.SchProtocols)">
    <parameter name="creds">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.SslState.AsyncResumeHandshakeRead(System.Object)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.SslState.CheckCompletionBeforeNextReceive(System.Net.Security.ProtocolToken,System.Net.AsyncProtocolRequest)">
    <parameter name="asyncRequest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.SslState.CompleteRequestWaitCallback(System.Object)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.SslState.CompleteUserWaitCallback(System.Object)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.SslState.DetectFraming(System.Byte[],System.Int32)">
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.SslState.EndProcessAuthentication(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.SslState.EnqueueOldKeyDecryptedData(System.Byte[],System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Security.SslState.EnsureBufferSize(System.Byte[],System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Security.SslState.ForceAuthentication(System.Boolean,System.Byte[],System.Net.AsyncProtocolRequest)">
    <parameter name="asyncRequest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.SslState.GetRemainingFrameSize(System.Byte[],System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.SslState.InternalEndProcessAuthentication(System.Net.LazyAsyncResult)">
    <parameter name="lazyResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.SslState.PartialFrameCallback(System.Net.AsyncProtocolRequest)">
    <parameter name="asyncRequest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.SslState.ProcessReceivedBlob(System.Byte[],System.Int32,System.Net.AsyncProtocolRequest)">
    <parameter name="asyncRequest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.SslState.ReadFrameCallback(System.Net.AsyncProtocolRequest)">
    <parameter name="asyncRequest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.SslState.SetException(System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Security.SslState.StartReadFrame(System.Byte[],System.Int32,System.Net.AsyncProtocolRequest)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.SslState.StartReceiveBlob(System.Byte[],System.Net.AsyncProtocolRequest)">
    <parameter name="asyncRequest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.SslState.StartSendAuthResetSignal(System.Net.Security.ProtocolToken,System.Net.AsyncProtocolRequest,System.Exception)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="asyncRequest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="exception">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.SslState.ValidateCreateContext(System.Boolean,System.String,System.Security.Authentication.SslProtocols,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.Boolean)">
    <parameter name="targetHost">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.SslState.ValidateCreateContext(System.Boolean,System.String,System.Security.Authentication.SslProtocols,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.Boolean,System.Boolean)">
    <parameter name="targetHost">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.SslState.WriteCallback(System.IAsyncResult)">
    <parameter name="transportResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.SslStream.#ctor(System.IO.Stream)">
    <parameter name="innerStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)">
    <parameter name="innerStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)">
    <parameter name="innerStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)">
    <parameter name="innerStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String)">
    <parameter name="targetHost">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)">
    <parameter name="targetHost">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="targetHost">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="targetHost">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.Security.SslStream.RemoteCertificate">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Security.SslStream.Write(System.Byte[])">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.SSPIHandleCache.CacheCredential(System.Net.SafeFreeCredentials)">
    <parameter name="newHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SecurityPackageInfoClass.#ctor(System.Runtime.InteropServices.SafeHandle,System.Int32)">
    <parameter name="safeHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ServerCertValidationCallback.Callback(System.Object)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ServicePoint.#ctor(System.String,System.Int32,System.Net.TimerThread.Queue,System.Int32,System.String,System.Boolean,System.Boolean)">
    <parameter name="defaultIdlingQueue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ServicePoint.#ctor(System.Uri,System.Net.TimerThread.Queue,System.Int32,System.String,System.Boolean,System.Boolean)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="defaultIdlingQueue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ServicePoint.BindUsingDelegate(System.Net.Sockets.Socket,System.Net.IPEndPoint)">
    <parameter name="socket">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="remoteIPEndPoint">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.ServicePoint.Certificate">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.ServicePoint.ClientCertificate">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.ServicePoint.CompleteGetConnection(System.Net.Sockets.Socket,System.Net.Sockets.Socket,System.Net.Sockets.Socket,System.Net.IPAddress)">
    <parameter name="finalSocket">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.ServicePoint.ConnectionLeaseTimerQueue">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.ServicePoint.ConnectSocket(System.Net.Sockets.Socket,System.Net.Sockets.Socket,System.Net.Sockets.Socket@,System.Net.IPAddress@,System.Net.ServicePoint.ConnectSocketState,System.Int32,System.Exception@)">
    <parameter name="s6">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="s4">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ServicePoint.ConnectSocketCallback(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ServicePoint.ConnectSocketInternal(System.Boolean,System.Net.Sockets.Socket,System.Net.Sockets.Socket,System.Net.Sockets.Socket@,System.Net.IPAddress@,System.Net.ServicePoint.ConnectSocketState,System.IAsyncResult,System.Int32,System.Exception@)">
    <parameter name="s4">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="s6">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ServicePoint.FindConnectionGroup(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.ServicePoint.GetConnection(System.Net.PooledStream,System.Object,System.Boolean,System.Net.IPAddress@,System.Net.Sockets.Socket@,System.Net.Sockets.Socket@,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.ServicePoint.GetIPAddressInfoList(System.Int32@,System.Net.IPAddress[],System.Int32,System.Boolean@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.ServicePoint.HandshakeDoneProcedure.CertValidationCallback(System.String,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
    <parameter name="chain">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ServicePoint.HandshakeDoneProcedure.CreateAdapter(System.Net.ServicePoint,System.Net.TlsStream,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.ServicePoint.IsAddressListLoopback(System.Net.IPAddress[])">
    <parameter name="addressList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ServicePoint.ReleaseConnectionGroup(System.String)">
    <parameter name="connName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ServicePoint.SetAddressList(System.Net.IPHostEntry)">
    <parameter name="ipHostEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ServicePoint.SetupHandshakeDoneProcedure(System.Net.TlsStream,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.ServicePoint.SubmitRequest(System.Net.HttpWebRequest)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ServicePoint.SubmitRequest(System.Net.HttpWebRequest,System.String)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ServicePointManager.FindServicePoint(System.Net.ProxyChain)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="chain">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ServicePointManager.FindServicePoint(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ServicePointManager.FindServicePoint(System.String,System.Net.IWebProxy)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="uriString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ServicePointManager.FindServicePointHelper(System.Uri,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ServicePointManager.IdleServicePointTimeoutCallback(System.Net.TimerThread.Timer,System.Int32,System.Object)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ServicePointManager.MakeQueryString(System.Uri)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ServicePointManager.MakeQueryString(System.Uri,System.Boolean)">
    <parameter name="address1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ShellExpression.#ctor(System.String)">
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ShellExpression.IsMatch(System.String)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ShellExpression.Parse(System.String)">
    <parameter name="patString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SocketAddress.Equals(System.Object)">
    <parameter name="comparand">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SocketPermission.#ctor(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
    <parameter name="hostName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.SocketPermission.AcceptList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.SocketPermission.AddPermission(System.Net.NetworkAccess,System.Net.TransportType,System.String,System.Int32)">
    <parameter name="hostName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.SocketPermission.ConnectList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.SocketPermission.Copy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.SocketPermission.FindSubset(System.Collections.ArrayList,System.Collections.ArrayList)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SocketPermission.intersectLists(System.Collections.ArrayList,System.Collections.ArrayList,System.Collections.ArrayList)">
    <parameter name="A">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="B">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SocketPermission.ParseAddXmlElement(System.Security.SecurityElement,System.Collections.ArrayList,System.String)">
    <parameter name="et">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="listToAdd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SocketPermission.Union(System.Security.IPermission)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.SocketPermissionAttribute.CreatePermission">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.SocketPermissionAttribute.ParseAddPermissions(System.Net.SocketPermission)">
    <parameter name="perm">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.AcceptOverlappedAsyncResult.#ctor(System.Net.Sockets.Socket,System.Object,System.AsyncCallback)">
    <parameter name="listenSocket">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.BaseOverlappedAsyncResult.#ctor(System.Net.Sockets.Socket,System.Object,System.AsyncCallback)">
    <parameter name="socket">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.BaseOverlappedAsyncResult.CompletionPortCallback(System.UInt32,System.UInt32,System.Threading.NativeOverlapped*)">
    <parameter name="nativeOverlapped">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.BaseOverlappedAsyncResult.OverlappedCallback(System.Object,System.Boolean)">
    <parameter name="stateObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.BaseOverlappedAsyncResult.PostCompletion(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Sockets.ConnectOverlappedAsyncResult.#ctor(System.Net.Sockets.Socket,System.Net.EndPoint,System.Object,System.AsyncCallback)">
    <parameter name="socket">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.DisconnectOverlappedAsyncResult.#ctor(System.Net.Sockets.Socket,System.Object,System.AsyncCallback)">
    <parameter name="socket">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.DisconnectOverlappedAsyncResult.PostCompletion(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Sockets.IPPacketInformation.Equals(System.Object)">
    <parameter name="comparand">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.IPv6MulticastOption.#ctor(System.Net.IPAddress)">
    <parameter name="group">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.IPv6MulticastOption.#ctor(System.Net.IPAddress,System.Int64)">
    <parameter name="group">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.MulticastOption.#ctor(System.Net.IPAddress)">
    <parameter name="group">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.MulticastOption.#ctor(System.Net.IPAddress,System.Int32)">
    <parameter name="group">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.MulticastOption.#ctor(System.Net.IPAddress,System.Net.IPAddress)">
    <parameter name="group">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="mcint">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.NetworkStream,System.Boolean)">
    <parameter name="networkStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket)">
    <parameter name="socket">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.Boolean)">
    <parameter name="socket">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess)">
    <parameter name="socket">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.NetworkStream.#ctor(System.Net.Sockets.Socket,System.IO.FileAccess,System.Boolean)">
    <parameter name="socket">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.NetworkStream.BeginMultipleWrite(System.Net.BufferOffsetSize[],System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="buffers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.NetworkStream.ConcatenateBuffersOnWin9x(System.Net.BufferOffsetSize[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="buffers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.NetworkStream.EndMultipleWrite(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.NetworkStream.InitNetworkStream(System.Net.Sockets.Socket,System.IO.FileAccess)">
    <parameter name="socket">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.Sockets.NetworkStream.InternalSocket">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Sockets.NetworkStream.MultipleWrite(System.Net.BufferOffsetSize[])">
    <parameter name="buffers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.NetworkStream.UnsafeBeginMultipleWrite(System.Net.BufferOffsetSize[],System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="buffers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.NetworkStream.UnsafeBeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.NetworkStream.UnsafeBeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.OverlappedAsyncResult.#ctor(System.Net.Sockets.Socket,System.Object,System.AsyncCallback)">
    <parameter name="socket">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.OverlappedAsyncResult.PostCompletion(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Sockets.OverlappedAsyncResult.SetUnmanagedStructures(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
    <parameter name="buffers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.OverlappedAsyncResult.SetUnmanagedStructures(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.OverlappedCache@)">
    <parameter name="buffers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.OverlappedAsyncResult.SetUnmanagedStructures(System.Net.BufferOffsetSize[])">
    <parameter name="buffers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.OverlappedAsyncResult.SetUnmanagedStructures(System.Net.BufferOffsetSize[],System.Net.Sockets.OverlappedCache@)">
    <parameter name="buffers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.OverlappedCache.#ctor(System.Threading.Overlapped,System.Object,System.Threading.IOCompletionCallback,System.Boolean)">
    <parameter name="overlapped">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.OverlappedCache.#ctor(System.Threading.Overlapped,System.Object[],System.Threading.IOCompletionCallback)">
    <parameter name="overlapped">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.ReceiveMessageOverlappedAsyncResult.#ctor(System.Net.Sockets.Socket,System.Object,System.AsyncCallback)">
    <parameter name="socket">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.ReceiveMessageOverlappedAsyncResult.PostCompletion(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Sockets.ReceiveMessageOverlappedAsyncResult.SetUnmanagedStructures(System.Byte[],System.Int32,System.Int32,System.Net.SocketAddress,System.Net.Sockets.SocketFlags)">
    <parameter name="socketAddress">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.ReceiveMessageOverlappedAsyncResult.SetUnmanagedStructures(System.Byte[],System.Int32,System.Int32,System.Net.SocketAddress,System.Net.Sockets.SocketFlags,System.Net.Sockets.OverlappedCache@)">
    <parameter name="socketAddress">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[])">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.#ctor(System.Net.SafeCloseSocket)">
    <parameter name="fd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.Accept">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Sockets.Socket.AcceptAsync(System.Net.Sockets.SocketAsyncEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.BeginAccept(System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Sockets.Socket.BeginAccept(System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Sockets.Socket.BeginAccept(System.Net.Sockets.Socket,System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Sockets.Socket.BeginConnect(System.Net.EndPoint,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="remoteEP">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="addresses">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.BeginConnectEx(System.Net.EndPoint,System.Boolean,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Sockets.Socket.BeginDisconnect(System.Boolean,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Sockets.Socket.BeginDownLevelSendFile(System.String,System.Boolean,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Sockets.Socket.BeginMultipleSend(System.Net.BufferOffsetSize[],System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="buffers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="buffers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.BeginReceive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="buffers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.BeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="remoteEP">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.BeginReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="remoteEP">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.BeginSend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="buffers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.BeginSend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="buffers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Sockets.Socket.BeginSendFile(System.String,System.Byte[],System.Byte[],System.Net.Sockets.TransmitFileOptions,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Sockets.Socket.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="remoteEP">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)">
    <parameter name="localEP">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.Sockets.Socket.Caches">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Sockets.Socket.CanUseConnectEx(System.Net.EndPoint)">
    <parameter name="remoteEP">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.CheckCacheRemote(System.Net.EndPoint@,System.Boolean)">
    <parameter name="remoteEP">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)">
    <parameter name="remoteEP">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.Connect(System.Net.IPAddress,System.Int32)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.Connect(System.Net.IPAddress[],System.Int32)">
    <parameter name="addresses">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.Connect(System.String,System.Int32)">
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.CreateAcceptSocket(System.Net.SafeCloseSocket,System.Net.EndPoint,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="fd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.DisconnectAsync(System.Net.Sockets.SocketAsyncEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.DnsCallback(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.DoBeginAccept(System.Net.LazyAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.DoBeginAccept(System.Net.Sockets.Socket,System.Int32,System.Net.Sockets.AcceptOverlappedAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.DoBeginConnect(System.Net.EndPoint,System.Net.SocketAddress,System.Net.LazyAsyncResult)">
    <parameter name="socketAddress">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.DoBeginDisconnect(System.Boolean,System.Net.Sockets.DisconnectOverlappedAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.DoBeginMultipleSend(System.Net.BufferOffsetSize[],System.Net.Sockets.SocketFlags,System.Net.Sockets.OverlappedAsyncResult)">
    <parameter name="buffers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.DoBeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.OverlappedAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.DoBeginReceive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.OverlappedAsyncResult)">
    <parameter name="buffers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.DoBeginReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint,System.Net.SocketAddress,System.Net.Sockets.OverlappedAsyncResult)">
    <parameter name="endPointSnapshot">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.DoBeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.OverlappedAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.DoBeginSend(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.OverlappedAsyncResult)">
    <parameter name="buffers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.DoBeginSendFile(System.String,System.Byte[],System.Byte[],System.Net.Sockets.TransmitFileOptions,System.Net.Sockets.TransmitFileOverlappedAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.DoBeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint,System.Net.SocketAddress,System.Net.Sockets.OverlappedAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.DoBind(System.Net.EndPoint,System.Net.SocketAddress)">
    <parameter name="socketAddress">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.DoConnect(System.Net.EndPoint,System.Net.SocketAddress)">
    <parameter name="socketAddress">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.DoDnsCallback(System.IAsyncResult,System.Net.Sockets.Socket.MultipleAddressConnectAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.DoDownLevelSendFileCallback(System.IAsyncResult,System.Net.Sockets.Socket.DownLevelSendFileAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.DoMultipleAddressConnectCallback(System.Object,System.Net.Sockets.Socket.MultipleAddressConnectAsyncResult)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.DownLevelSendFileCallback(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.EndAccept(System.Byte[]@,System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.EndAccept(System.Byte[]@,System.Int32@,System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.EndAccept(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.EndConnect(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.EndDisconnect(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.EndDownLevelSendFile(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.EndReceive(System.IAsyncResult,System.Net.Sockets.SocketError@)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.EndReceiveFrom(System.IAsyncResult,System.Net.EndPoint@)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="endPoint">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.EndReceiveMessageFrom(System.IAsyncResult,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="endPoint">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult,System.Net.Sockets.SocketError@)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.EndSendFile(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.EndSendTo(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.getIPv6MulticastOpt(System.Net.Sockets.SocketOptionName)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Sockets.Socket.getLingerOpt">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Sockets.Socket.getMulticastOpt(System.Net.Sockets.SocketOptionName)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Sockets.Socket.GetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.Sockets.Socket.LingerState">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.Sockets.Socket.MultipleAddressConnectAsyncResult.RemoteEndPoint">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Sockets.Socket.MultipleAddressConnectCallback(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.MultipleSend(System.Net.BufferOffsetSize[],System.Net.Sockets.SocketFlags)">
    <parameter name="buffers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.PostOneBeginConnect(System.Net.Sockets.Socket.MultipleAddressConnectAsyncResult)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[])">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.Receive(System.Byte[],System.Net.Sockets.SocketFlags)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
    <parameter name="buffers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
    <parameter name="buffers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.Receive(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
    <parameter name="buffers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.ReceiveAsync(System.Net.Sockets.SocketAsyncEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="remoteEP">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint@)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.EndPoint@)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.ReceiveFrom(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint@)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.ReceiveFromAsync(System.Net.Sockets.SocketAsyncEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.ReceiveMessageFrom(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags@,System.Net.EndPoint@,System.Net.Sockets.IPPacketInformation@)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="remoteEP">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.ReceiveMessageFromAsync(System.Net.Sockets.SocketAsyncEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.RegisteredWaitCallback(System.Object,System.Boolean)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.SelectFileDescriptor(System.Collections.IList,System.IntPtr[])">
    <parameter name="fileDescriptorSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.Send(System.Byte[])">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.Send(System.Byte[],System.Net.Sockets.SocketFlags)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}})">
    <parameter name="buffers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags)">
    <parameter name="buffers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.Send(System.Collections.Generic.IList{System.ArraySegment{System.Byte}},System.Net.Sockets.SocketFlags,System.Net.Sockets.SocketError@)">
    <parameter name="buffers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.SendAsync(System.Net.Sockets.SocketAsyncEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.SendPacketsAsync(System.Net.Sockets.SocketAsyncEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="remoteEP">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Int32,System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
    <parameter name="remoteEP">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.EndPoint)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="remoteEP">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.SendTo(System.Byte[],System.Net.Sockets.SocketFlags,System.Net.EndPoint)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="remoteEP">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.SendToAsync(System.Net.Sockets.SocketAsyncEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.setIPv6MulticastOption(System.Net.Sockets.SocketOptionName,System.Net.Sockets.IPv6MulticastOption)">
    <parameter name="MR">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.setLingerOption(System.Net.Sockets.LingerOption)">
    <parameter name="lref">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.setMulticastOption(System.Net.Sockets.SocketOptionName,System.Net.Sockets.MulticastOption)">
    <parameter name="MR">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.SetSocketOption(System.Net.Sockets.SocketOptionLevel,System.Net.Sockets.SocketOptionName,System.Object)">
    <parameter name="optionValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.SnapshotAndSerialize(System.Net.EndPoint@)">
    <parameter name="remoteEP">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.SocketListToFileDescriptorSet(System.Collections.IList)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Sockets.Socket.UnsafeBeginConnect(System.Net.EndPoint,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="remoteEP">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.UnsafeBeginMultipleSend(System.Net.BufferOffsetSize[],System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="buffers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.UnsafeBeginReceive(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Sockets.Socket.UnsafeBeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Sockets.Socket.UpdateAcceptSocket(System.Net.Sockets.Socket,System.Net.EndPoint,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="socket">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.UpdateStatusAfterSocketError(System.Net.Sockets.SocketException)">
    <parameter name="socketException">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.SocketAsyncEventArgs.OnCompleted(System.Net.Sockets.SocketAsyncEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.SocketException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
    <parameter name="localEP">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
    <parameter name="hostname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="addresses">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
    <parameter name="ipAddresses">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
    <parameter name="remoteEP">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
    <parameter name="hostname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.TcpClient.GetStream">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.Sockets.TcpClient.LingerState">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPAddress,System.Int32)">
    <parameter name="localaddr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPEndPoint)">
    <parameter name="localEP">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.TcpListener.AcceptSocket">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Sockets.TcpListener.AcceptTcpClient">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.TcpListener.EndAcceptTcpClient(System.IAsyncResult)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.TransmitFileOverlappedAsyncResult.#ctor(System.Net.Sockets.Socket,System.Object,System.AsyncCallback)">
    <parameter name="socket">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
    <parameter name="localEP">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
    <parameter name="hostname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="datagram">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="datagram">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="datagram">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.UdpClient.CheckForBroadcast(System.Net.IPAddress)">
    <parameter name="ipAddress">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
    <parameter name="addr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
    <parameter name="endPoint">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
    <parameter name="hostname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
    <parameter name="multicastAddr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
    <parameter name="multicastAddr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
    <parameter name="multicastAddr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
    <parameter name="multicastAddr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
    <parameter name="multicastAddr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
    <parameter name="multicastAddr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localAddress">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
    <parameter name="dgram">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
    <parameter name="dgram">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
    <parameter name="dgram">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SpnDictionary.GetCanonicalKey(System.String)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SpnDictionary.InternalSet(System.String,System.String)">
    <parameter name="canonicalKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPIAuthType.AcceptSecurityContext(System.Net.SafeFreeCredentials,System.Net.SafeDeleteContext@,System.Net.SecurityBuffer[],System.Net.ContextFlags,System.Net.Endianness,System.Net.SecurityBuffer,System.Net.ContextFlags@)">
    <parameter name="outputBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPIAuthType.AcceptSecurityContext(System.Net.SafeFreeCredentials@,System.Net.SafeDeleteContext@,System.Net.SecurityBuffer,System.Net.ContextFlags,System.Net.Endianness,System.Net.SecurityBuffer,System.Net.ContextFlags@)">
    <parameter name="outputBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPIAuthType.CompleteAuthToken(System.Net.SafeDeleteContext@,System.Net.SecurityBuffer[])">
    <parameter name="inputBuffers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPIAuthType.DecryptMessage(System.Net.SafeDeleteContext,System.Net.SecurityBufferDescriptor,System.UInt32)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPIAuthType.DecryptMessageHelper(System.Net.SafeDeleteContext,System.Net.SecurityBufferDescriptor,System.UInt32)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPIAuthType.EncryptMessage(System.Net.SafeDeleteContext,System.Net.SecurityBufferDescriptor,System.UInt32)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPIAuthType.EncryptMessageHelper(System.Net.SafeDeleteContext,System.Net.SecurityBufferDescriptor,System.UInt32)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPIAuthType.InitializeSecurityContext(System.Net.SafeFreeCredentials,System.Net.SafeDeleteContext@,System.String,System.Net.ContextFlags,System.Net.Endianness,System.Net.SecurityBuffer[],System.Net.SecurityBuffer,System.Net.ContextFlags@)">
    <parameter name="outputBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPIAuthType.InitializeSecurityContext(System.Net.SafeFreeCredentials@,System.Net.SafeDeleteContext@,System.String,System.Net.ContextFlags,System.Net.Endianness,System.Net.SecurityBuffer,System.Net.SecurityBuffer,System.Net.ContextFlags@)">
    <parameter name="outputBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPIAuthType.MakeSignature(System.Net.SafeDeleteContext,System.Net.SecurityBufferDescriptor,System.UInt32)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPIAuthType.MakeSignatureHelper(System.Net.SafeDeleteContext,System.Net.SecurityBufferDescriptor,System.UInt32)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPIAuthType.QueryContextAttributes(System.Net.SafeDeleteContext,System.Net.ContextAttribute,System.Byte[],System.Type,System.Runtime.InteropServices.SafeHandle@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPIAuthType.QuerySecurityContextToken(System.Net.SafeDeleteContext,System.Net.SafeCloseHandle@)">
    <parameter name="phContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPIAuthType.VerifySignature(System.Net.SafeDeleteContext,System.Net.SecurityBufferDescriptor,System.UInt32)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPIAuthType.VerifySignatureHelper(System.Net.SafeDeleteContext,System.Net.SecurityBufferDescriptor,System.UInt32)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPISecureChannelType.AcceptSecurityContext(System.Net.SafeFreeCredentials,System.Net.SafeDeleteContext@,System.Net.SecurityBuffer[],System.Net.ContextFlags,System.Net.Endianness,System.Net.SecurityBuffer,System.Net.ContextFlags@)">
    <parameter name="outputBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPISecureChannelType.AcceptSecurityContext(System.Net.SafeFreeCredentials@,System.Net.SafeDeleteContext@,System.Net.SecurityBuffer,System.Net.ContextFlags,System.Net.Endianness,System.Net.SecurityBuffer,System.Net.ContextFlags@)">
    <parameter name="outputBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPISecureChannelType.CompleteAuthToken(System.Net.SafeDeleteContext@,System.Net.SecurityBuffer[])">
    <parameter name="inputBuffers">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPISecureChannelType.DecryptMessage(System.Net.SafeDeleteContext,System.Net.SecurityBufferDescriptor,System.UInt32)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPISecureChannelType.DecryptMessageHelper(System.Net.SafeDeleteContext,System.Net.SecurityBufferDescriptor,System.UInt32)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPISecureChannelType.DecryptMessageHelper9x(System.Net.SafeDeleteContext,System.Net.SecurityBufferDescriptor,System.UInt32)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPISecureChannelType.EncryptMessage(System.Net.SafeDeleteContext,System.Net.SecurityBufferDescriptor,System.UInt32)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPISecureChannelType.EncryptMessageHelper(System.Net.SafeDeleteContext,System.Net.SecurityBufferDescriptor,System.UInt32)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPISecureChannelType.EncryptMessageHelper9x(System.Net.SafeDeleteContext,System.Net.SecurityBufferDescriptor,System.UInt32)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPISecureChannelType.InitializeSecurityContext(System.Net.SafeFreeCredentials,System.Net.SafeDeleteContext@,System.String,System.Net.ContextFlags,System.Net.Endianness,System.Net.SecurityBuffer[],System.Net.SecurityBuffer,System.Net.ContextFlags@)">
    <parameter name="outputBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPISecureChannelType.InitializeSecurityContext(System.Net.SafeFreeCredentials@,System.Net.SafeDeleteContext@,System.String,System.Net.ContextFlags,System.Net.Endianness,System.Net.SecurityBuffer,System.Net.SecurityBuffer,System.Net.ContextFlags@)">
    <parameter name="outputBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPISecureChannelType.MakeSignature(System.Net.SafeDeleteContext,System.Net.SecurityBufferDescriptor,System.UInt32)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPISecureChannelType.QueryContextAttributes(System.Net.SafeDeleteContext,System.Net.ContextAttribute,System.Byte[],System.Type,System.Runtime.InteropServices.SafeHandle@)">
    <parameter name="phContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPISecureChannelType.QuerySecurityContextToken(System.Net.SafeDeleteContext,System.Net.SafeCloseHandle@)">
    <parameter name="phContext">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPISecureChannelType.VerifySignature(System.Net.SafeDeleteContext,System.Net.SecurityBufferDescriptor,System.UInt32)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPIWrapper.AcceptSecurityContext(System.Net.SSPIInterface,System.Net.SafeFreeCredentials,System.Net.SafeDeleteContext@,System.Net.ContextFlags,System.Net.Endianness,System.Net.SecurityBuffer[],System.Net.SecurityBuffer,System.Net.ContextFlags@)">
    <parameter name="SecModule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="credential">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="outputBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPIWrapper.AcceptSecurityContext(System.Net.SSPIInterface,System.Net.SafeFreeCredentials@,System.Net.SafeDeleteContext@,System.Net.ContextFlags,System.Net.Endianness,System.Net.SecurityBuffer,System.Net.SecurityBuffer,System.Net.ContextFlags@)">
    <parameter name="SecModule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="credential">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="outputBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPIWrapper.AcquireCredentialsHandle(System.Net.SSPIInterface,System.String,System.Net.CredentialUse,System.Net.AuthIdentity@)">
    <parameter name="SecModule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPIWrapper.AcquireCredentialsHandle(System.Net.SSPIInterface,System.String,System.Net.CredentialUse,System.Net.SecureCredential)">
    <parameter name="SecModule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPIWrapper.AcquireDefaultCredential(System.Net.SSPIInterface,System.String,System.Net.CredentialUse)">
    <parameter name="SecModule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPIWrapper.CompleteAuthToken(System.Net.SSPIInterface,System.Net.SafeDeleteContext@,System.Net.SecurityBuffer[])">
    <parameter name="inputBuffers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="SecModule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPIWrapper.DecryptMessage(System.Net.SSPIInterface,System.Net.SafeDeleteContext,System.Net.SecurityBuffer[],System.UInt32)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="secModule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPIWrapper.EncryptDecryptHelper(System.Net.SSPIWrapper.OP,System.Net.SSPIInterface,System.Net.SafeDeleteContext,System.Net.SecurityBuffer[],System.UInt32)">
    <parameter name="SecModule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPIWrapper.EncryptMessage(System.Net.SSPIInterface,System.Net.SafeDeleteContext,System.Net.SecurityBuffer[],System.UInt32)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="secModule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPIWrapper.EnumerateSecurityPackages(System.Net.SSPIInterface)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="SecModule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPIWrapper.GetVerifyPackageInfo(System.Net.SSPIInterface,System.String)">
    <parameter name="secModule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPIWrapper.GetVerifyPackageInfo(System.Net.SSPIInterface,System.String,System.Boolean)">
    <parameter name="secModule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPIWrapper.InitializeSecurityContext(System.Net.SSPIInterface,System.Net.SafeFreeCredentials,System.Net.SafeDeleteContext@,System.String,System.Net.ContextFlags,System.Net.Endianness,System.Net.SecurityBuffer[],System.Net.SecurityBuffer,System.Net.ContextFlags@)">
    <parameter name="SecModule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="credential">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="outputBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPIWrapper.InitializeSecurityContext(System.Net.SSPIInterface,System.Net.SafeFreeCredentials@,System.Net.SafeDeleteContext@,System.String,System.Net.ContextFlags,System.Net.Endianness,System.Net.SecurityBuffer,System.Net.SecurityBuffer,System.Net.ContextFlags@)">
    <parameter name="SecModule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="credential">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="outputBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPIWrapper.MakeSignature(System.Net.SSPIInterface,System.Net.SafeDeleteContext,System.Net.SecurityBuffer[],System.UInt32)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="secModule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPIWrapper.QueryContextAttributes(System.Net.SSPIInterface,System.Net.SafeDeleteContext,System.Net.ContextAttribute)">
    <parameter name="SecModule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="securityContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPIWrapper.QuerySecurityContextToken(System.Net.SSPIInterface,System.Net.SafeDeleteContext,System.Net.SafeCloseHandle@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="SecModule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SSPIWrapper.VerifySignature(System.Net.SSPIInterface,System.Net.SafeDeleteContext,System.Net.SecurityBuffer[],System.UInt32)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="secModule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.StaticProxy.#ctor(System.Uri,System.Uri)">
    <parameter name="proxy">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.StreamFramer.#ctor(System.IO.Stream)">
    <parameter name="Transport">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.StreamFramer.BeginReadMessage(System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.StreamFramer.BeginWriteCallback(System.IAsyncResult)">
    <parameter name="transportResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.StreamFramer.BeginWriteComplete(System.IAsyncResult)">
    <parameter name="transportResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.StreamFramer.BeginWriteMessage(System.Byte[],System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.StreamFramer.EndReadMessage(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.StreamFramer.EndWriteMessage(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.StreamFramer.ReadFrameCallback(System.IAsyncResult)">
    <parameter name="transportResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.StreamFramer.ReadFrameComplete(System.IAsyncResult)">
    <parameter name="transportResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.StreamFramer.ReadMessage">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.StreamFramer.WriteMessage(System.Byte[])">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SyncMemoryStream.#ctor(System.Byte[])">
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SyncMemoryStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.SyncMemoryStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.TimeoutValidator.CanValidate(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.TimeoutValidator.Validate(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.TimerThread.CreateQueue(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.TimerThread.GetOrCreateQueue(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.TimerThread.Queue.CreateTimer">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.TimerThread.Queue.CreateTimer(System.Net.TimerThread.Callback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.TlsStream.#ctor(System.String,System.Net.Sockets.NetworkStream,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Net.ServicePoint,System.Object,System.Threading.ExecutionContext)">
    <parameter name="networkStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="servicePoint">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.TlsStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.TlsStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.TlsStream.CompleteIO(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.TlsStream.CompleteIOCallback(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.TlsStream.EndMultipleWrite(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.TlsStream.ResumeIO(System.Net.BufferAsyncResult)">
    <parameter name="bufferResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.TlsStream.ResumeIOWorker(System.Object)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.UnsafeNclNativeMethods.HttpApi.CopyOutAddress(System.IntPtr,System.Net.SocketAddress@,System.Net.SocketAddress@)">
    <parameter name="v4address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="v6address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.UnsafeNclNativeMethods.HttpApi.GetHeaders(System.Byte[],System.IntPtr)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.UnsafeNclNativeMethods.HttpApi.GetKnownHeader(System.Byte[],System.IntPtr,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.UnsafeNclNativeMethods.HttpApi.GetKnownHeader(System.Net.UnsafeNclNativeMethods.HttpApi.HTTP_REQUEST*,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.UnsafeNclNativeMethods.HttpApi.GetKnownHeader(System.Net.UnsafeNclNativeMethods.HttpApi.HTTP_REQUEST*,System.Int64,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.UnsafeNclNativeMethods.HttpApi.GetLocalEndPoint(System.Byte[],System.IntPtr)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="memoryBlob">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.UnsafeNclNativeMethods.HttpApi.GetRemoteEndPoint(System.Byte[],System.IntPtr)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="memoryBlob">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.UnsafeNclNativeMethods.HttpApi.HTTP_RESPONSE_HEADER_ID.IndexOfKnownHeader(System.String)">
    <parameter name="HeaderName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ValidationHelper.IsInvalidHttpString(System.String)">
    <parameter name="stringValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ValidationHelper.MakeEmptyArrayNull(System.String[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.ValidationHelper.MakeStringNull(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.WebClient.DownloadBits(System.Net.WebRequest,System.IO.Stream,System.Net.CompletionDelegate,System.ComponentModel.AsyncOperation)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.DownloadBitsReadCallback(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.DownloadBitsReadCallbackState(System.Net.WebClient.DownloadBitsState,System.IAsyncResult)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.DownloadBitsResponseCallback(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.DownloadBitsState.SetResponse(System.Net.WebResponse)">
    <parameter name="response">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.DownloadData(System.String)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.DownloadData(System.Uri)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.DownloadDataAsync(System.Uri)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.DownloadDataAsync(System.Uri,System.Object)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.DownloadDataAsyncCallback(System.Byte[],System.Exception,System.ComponentModel.AsyncOperation)">
    <parameter name="asyncOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.DownloadDataInternal(System.Uri,System.Net.WebRequest@)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.DownloadFile(System.String,System.String)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.DownloadFile(System.Uri,System.String)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.DownloadFileAsync(System.Uri,System.String)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.DownloadFileAsync(System.Uri,System.String,System.Object)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.DownloadFileAsyncCallback(System.Byte[],System.Exception,System.ComponentModel.AsyncOperation)">
    <parameter name="asyncOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.DownloadString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.DownloadString(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.DownloadStringAsync(System.Uri)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.DownloadStringAsync(System.Uri,System.Object)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.DownloadStringAsyncCallback(System.Byte[],System.Exception,System.ComponentModel.AsyncOperation)">
    <parameter name="asyncOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.GetUri(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.GetUri(System.Uri)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.GetWebRequest(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.GetWebResponse(System.Net.WebRequest)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.GuessDownloadEncoding(System.Net.WebRequest)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.InvokeOperationCompleted(System.ComponentModel.AsyncOperation,System.Threading.SendOrPostCallback,System.ComponentModel.AsyncCompletedEventArgs)">
    <parameter name="callback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="asyncOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.MapToDefaultMethod(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.OpenFileInternal(System.Boolean,System.String,System.IO.FileStream@,System.Byte[]@,System.Byte[]@,System.Byte[]@)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.OpenRead(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.OpenRead(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.OpenReadAsync(System.Uri)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.OpenReadAsync(System.Uri,System.Object)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.OpenReadAsyncCallback(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.OpenWrite(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.OpenWrite(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.OpenWrite(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.OpenWrite(System.Uri,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.OpenWriteAsync(System.Uri)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.OpenWriteAsync(System.Uri,System.String)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.OpenWriteAsync(System.Uri,System.String,System.Object)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.OpenWriteAsyncCallback(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.PostProgressChanged(System.ComponentModel.AsyncOperation,System.Net.WebClient.ProgressData)">
    <parameter name="progress">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadBits(System.Net.WebRequest,System.IO.Stream,System.Byte[],System.Byte[],System.Byte[],System.Net.CompletionDelegate,System.ComponentModel.AsyncOperation)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadBitsRequestCallback(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadBitsState.#ctor(System.Net.WebRequest,System.IO.Stream,System.Byte[],System.Byte[],System.Byte[],System.Net.CompletionDelegate,System.ComponentModel.AsyncOperation,System.Net.WebClient.ProgressData,System.Net.WebClient)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="progress">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadBitsState.SetRequestStream(System.IO.Stream)">
    <parameter name="writeStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadBitsWriteCallback(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadData(System.String,System.Byte[])">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadData(System.String,System.String,System.Byte[])">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadData(System.Uri,System.Byte[])">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadData(System.Uri,System.String,System.Byte[])">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadDataAsync(System.Uri,System.Byte[])">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadDataAsync(System.Uri,System.String,System.Byte[])">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadDataAsync(System.Uri,System.String,System.Byte[],System.Object)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadDataAsyncReadCallback(System.Byte[],System.Exception,System.ComponentModel.AsyncOperation)">
    <parameter name="asyncOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadDataAsyncWriteCallback(System.Byte[],System.Exception,System.ComponentModel.AsyncOperation)">
    <parameter name="asyncOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadDataInternal(System.Uri,System.String,System.Byte[],System.Net.WebRequest@)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadFile(System.String,System.String)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadFile(System.String,System.String,System.String)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadFile(System.Uri,System.String)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadFile(System.Uri,System.String,System.String)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadFileAsync(System.Uri,System.String)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadFileAsync(System.Uri,System.String,System.String)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadFileAsync(System.Uri,System.String,System.String,System.Object)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadFileAsyncReadCallback(System.Byte[],System.Exception,System.ComponentModel.AsyncOperation)">
    <parameter name="asyncOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadFileAsyncWriteCallback(System.Byte[],System.Exception,System.ComponentModel.AsyncOperation)">
    <parameter name="asyncOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadString(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadString(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadString(System.Uri,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadString(System.Uri,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String,System.String)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadStringAsync(System.Uri,System.String,System.String,System.Object)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadStringAsyncReadCallback(System.Byte[],System.Exception,System.ComponentModel.AsyncOperation)">
    <parameter name="asyncOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadStringAsyncWriteCallback(System.Byte[],System.Exception,System.ComponentModel.AsyncOperation)">
    <parameter name="asyncOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadValues(System.String,System.Collections.Specialized.NameValueCollection)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadValues(System.String,System.String,System.Collections.Specialized.NameValueCollection)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadValues(System.Uri,System.Collections.Specialized.NameValueCollection)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadValues(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadValuesAsync(System.Uri,System.Collections.Specialized.NameValueCollection)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadValuesAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadValuesAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection,System.Object)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadValuesAsyncReadCallback(System.Byte[],System.Exception,System.ComponentModel.AsyncOperation)">
    <parameter name="asyncOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadValuesAsyncWriteCallback(System.Byte[],System.Exception,System.ComponentModel.AsyncOperation)">
    <parameter name="asyncOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadValuesInternal(System.Collections.Specialized.NameValueCollection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UrlEncode(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.WebClient.UrlEncode(System.String,System.Text.Encoding)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UrlEncodeBytesToBytesInternal(System.Byte[],System.Int32,System.Int32,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UrlEncodeToBytes(System.String,System.Text.Encoding)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebHeaderCollection.#ctor(System.Collections.Specialized.NameValueCollection)">
    <parameter name="cc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebHeaderCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebHeaderCollection.Add(System.String)">
    <parameter name="header">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebHeaderCollection.Add(System.String,System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebHeaderCollection.AddInternal(System.String,System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebHeaderCollection.AddInternalNotCommon(System.String,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebHeaderCollection.ChangeInternal(System.String,System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebHeaderCollection.CheckBadChars(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.WebHeaderCollection.CheckUpdate(System.String,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebHeaderCollection.ContainsNonAsciiChars(System.String)">
    <parameter name="token">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebHeaderCollection.Get(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebHeaderCollection.GetAsString(System.Collections.Specialized.NameValueCollection,System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.WebHeaderCollection.HeaderEncoding.GetByteCount(System.String)">
    <parameter name="myString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebHeaderCollection.HeaderEncoding.GetBytes(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="myString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebHeaderCollection.HeaderEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
    <parameter name="myString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebHeaderCollection.HeaderEncoding.GetString(System.Byte*,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="pBytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebHeaderCollection.HeaderEncoding.GetString(System.Byte[],System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.WebHeaderCollection.InnerCollection">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.WebHeaderCollection.IsValidToken(System.String)">
    <parameter name="token">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebHeaderCollection.ParseHeaders(System.Byte[],System.Int32,System.Int32@,System.Int32@,System.Int32,System.Net.WebParseError@)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebHeaderCollection.RemoveInternal(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebHeaderCollection.Set(System.String,System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebHeaderCollection.SetAddVerified(System.String,System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebHeaderCollection.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebHeaderCollection.ThrowOnRestrictedHeader(System.String)">
    <parameter name="headerName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebHeaderCollection.ToByteArray">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.WebHeaderCollection.ToString(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)">
    <parameter name="uriString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)">
    <parameter name="uriRegex">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.WebPermission.AcceptList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.WebPermission.AddAsPattern(System.Net.NetworkAccess,System.Net.DelayedRegex)">
    <parameter name="uriRegexPattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)">
    <parameter name="uriString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)">
    <parameter name="uriRegex">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.WebPermission.ConnectList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.WebPermission.Copy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.WebPermission.intersectList(System.Collections.ArrayList,System.Collections.ArrayList,System.Collections.ArrayList)">
    <parameter name="A">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="B">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebPermission.intersectPair(System.Object,System.Object,System.Boolean@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="L">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="R">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebPermission.isMatchedURI(System.Object,System.Collections.ArrayList)">
    <parameter name="uriToCheck">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="uriPatternList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebPermission.isSpecialSubsetCase(System.String,System.Collections.ArrayList)">
    <parameter name="permList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebPermission.Union(System.Security.IPermission)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.WebPermissionAttribute.CreatePermission">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.WebProxy.#ctor(System.Collections.Hashtable,System.Boolean,System.String[])">
    <parameter name="proxyHostAddresses">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebProxy.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebProxy.AreAllBypassed(System.Collections.Specialized.StringCollection,System.Boolean)">
    <parameter name="proxies">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.WebProxy.BypassArrayList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.WebProxy.CreateProxyUri(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.WebProxy.GetDefaultProxy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.WebProxy.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebProxy.GetProxiesAuto(System.Uri,System.Net.AutoWebProxyState@,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="destination">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebProxy.GetProxy(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="destination">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebProxy.GetProxyAuto(System.Uri,System.Net.AutoWebProxyState@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="destination">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebProxy.GetProxyAutoFailover(System.Uri)">
    <parameter name="destination">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebProxy.IsBypassed(System.Uri)">
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebProxy.IsBypassedAuto(System.Uri,System.Net.AutoWebProxyState@)">
    <parameter name="destination">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebProxy.IsBypassedManual(System.Uri)">
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebProxy.IsLocal(System.Uri)">
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebProxy.IsLocalInProxyHash(System.Uri)">
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebProxy.IsMatchInBypassList(System.Uri)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebProxy.ProxyUri(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.WebProxy.System#Net#IAutoWebProxy#GetProxies(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="destination">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebProxy.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebProxy.Update(System.Net.WebProxyData)">
    <parameter name="webProxyData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebProxyScriptHelper.dnsDomainIs(System.String,System.String)">
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="domain">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebProxyScriptHelper.dnsDomainLevels(System.String)">
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebProxyScriptHelper.dnsResolve(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebProxyScriptHelper.dnsResolveEx(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebProxyScriptHelper.getClientVersion">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.WebProxyScriptHelper.isInNet(System.String,System.String,System.String)">
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="mask">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebProxyScriptHelper.isInNetEx(System.String,System.String)">
    <parameter name="ipAddress">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ipPrefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebProxyScriptHelper.isPlainHostName(System.String)">
    <parameter name="hostName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebProxyScriptHelper.isResolvable(System.String)">
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebProxyScriptHelper.isResolvableEx(System.String)">
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebProxyScriptHelper.localHostOrDomainIs(System.String,System.String)">
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="hostDom">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebProxyScriptHelper.myIpAddress">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.WebProxyScriptHelper.myIpAddressEx">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.WebProxyScriptHelper.MyMethodInfo.DeclaringType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.WebProxyScriptHelper.MyMethodInfo.GetCustomAttributes(System.Type,System.Boolean)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebProxyScriptHelper.shExpMatch(System.String,System.String)">
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebProxyScriptHelper.sortIpAddressList(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.WebProxyScriptHelper.System#Reflection#IReflect#GetField(System.String,System.Reflection.BindingFlags)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebProxyScriptHelper.System#Reflection#IReflect#GetFields(System.Reflection.BindingFlags)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.WebProxyScriptHelper.System#Reflection#IReflect#GetMember(System.String,System.Reflection.BindingFlags)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebProxyScriptHelper.System#Reflection#IReflect#GetMembers(System.Reflection.BindingFlags)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.WebProxyScriptHelper.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebProxyScriptHelper.System#Reflection#IReflect#GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebProxyScriptHelper.System#Reflection#IReflect#GetMethods(System.Reflection.BindingFlags)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.WebProxyScriptHelper.System#Reflection#IReflect#GetProperties(System.Reflection.BindingFlags)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.WebProxyScriptHelper.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebProxyScriptHelper.System#Reflection#IReflect#GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebProxyScriptHelper.System#Reflection#IReflect#InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="binder">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.WebProxyScriptHelper.System#Reflection#IReflect#UnderlyingSystemType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.WebProxyScriptHelper.weekdayRange(System.String,System.Object,System.Object)">
    <parameter name="wd1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="callback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebRequest.Create(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="requestUriString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebRequest.Create(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="requestUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebRequest.Create(System.Uri,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="requestUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebRequest.CreateDefault(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="requestUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebRequest.EndGetRequestStream(System.IAsyncResult)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebRequest.EndGetResponse(System.IAsyncResult)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebRequest.GetConnectingContext">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.WebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebRequest.GetReadingContext">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.WebRequest.GetResponse">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.WebRequest.GetSystemWebProxy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.WebRequest.GetWritingContext">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.WebRequest.InternalGetSystemWebProxy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="creator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebRequest.SetupCacheProtocol(System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebRequest.WebProxyWrapperOpaque.GetProxies(System.Uri)">
    <parameter name="destination">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebRequest.WebProxyWrapperOpaque.GetProxy(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="destination">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebRequest.WebProxyWrapperOpaque.IsBypassed(System.Uri)">
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebRequestPrefixElement.#ctor(System.String,System.Type)">
    <parameter name="creatorType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebResponse.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebResponse.GetResponseStream">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.WebResponse.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.AccessControl.SemaphoreAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.AccessControl.SemaphoreSecurity._HandleErrorCode(System.Int32,System.String,System.Runtime.InteropServices.SafeHandle,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.AccessControl.SemaphoreSecurity.AddAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
    <parameter name="rule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.AccessControl.SemaphoreSecurity.AddAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
    <parameter name="rule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.AccessControl.SemaphoreSecurity.Persist(Microsoft.Win32.SafeHandles.SafeWaitHandle)">
    <parameter name="handle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
    <parameter name="rule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleAll(System.Security.AccessControl.SemaphoreAccessRule)">
    <parameter name="rule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.SemaphoreAccessRule)">
    <parameter name="rule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
    <parameter name="rule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleAll(System.Security.AccessControl.SemaphoreAuditRule)">
    <parameter name="rule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.AccessControl.SemaphoreSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.SemaphoreAuditRule)">
    <parameter name="rule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.AccessControl.SemaphoreSecurity.ResetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
    <parameter name="rule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.AccessControl.SemaphoreSecurity.SetAccessRule(System.Security.AccessControl.SemaphoreAccessRule)">
    <parameter name="rule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.AccessControl.SemaphoreSecurity.SetAuditRule(System.Security.AccessControl.SemaphoreAuditRule)">
    <parameter name="rule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Authentication.AuthenticationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Authentication.InvalidCredentialException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.AsnEncodedData.#ctor(System.Security.Cryptography.AsnEncodedData)">
    <parameter name="asnEncodedData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.AsnEncodedData.#ctor(System.String,System.Byte[])">
    <parameter name="oid">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.AsnEncodedData.#ctor(System.String,System.Security.Cryptography.CAPIBase.CRYPTOAPI_BLOB)">
    <parameter name="oid">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.AsnEncodedData.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
    <parameter name="asnEncodedData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.AsnEncodedDataCollection.Add(System.Security.Cryptography.AsnEncodedData)">
    <parameter name="asnEncodedData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.AsnEncodedDataCollection.CopyTo(System.Security.Cryptography.AsnEncodedData[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.AsnEncodedDataCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Cryptography.AsnEncodedDataCollection.Remove(System.Security.Cryptography.AsnEncodedData)">
    <parameter name="asnEncodedData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Security.Cryptography.AsnEncodedDataCollection.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Cryptography.AsnEncodedDataCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.AsnEncodedDataCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Security.Cryptography.AsnEncodedDataEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Cryptography.BigInt.Add(System.Security.Cryptography.BigInt,System.Byte,System.Security.Cryptography.BigInt@)">
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="c">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.BigInt.CopyFrom(System.Security.Cryptography.BigInt)">
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.BigInt.Divide(System.Security.Cryptography.BigInt,System.Security.Cryptography.BigInt,System.Security.Cryptography.BigInt@,System.Security.Cryptography.BigInt@)">
    <parameter name="numerator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="denominator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="quotient">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="remainder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.BigInt.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.BigInt.FromDecimal(System.String)">
    <parameter name="decNum">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.BigInt.FromHexadecimal(System.String)">
    <parameter name="hexNum">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.BigInt.Multiply(System.Security.Cryptography.BigInt,System.Int32,System.Security.Cryptography.BigInt@)">
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="c">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.BigInt.Negate(System.Security.Cryptography.BigInt@)">
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.BigInt.Subtract(System.Security.Cryptography.BigInt,System.Security.Cryptography.BigInt,System.Security.Cryptography.BigInt@)">
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="b">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="c">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.BigInt.ToByteArray">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Cryptography.BigInt.ToDecimal">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Cryptography.CAPI.BlobToByteArray(System.IntPtr)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Cryptography.CAPI.BlobToByteArray(System.Security.Cryptography.CAPIBase.CRYPTOAPI_BLOB)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Cryptography.CAPI.CertAddCertificateContextToStore(System.Security.Cryptography.SafeCertStoreHandle,System.Security.Cryptography.SafeCertContextHandle,System.UInt32,System.Security.Cryptography.SafeCertContextHandle)">
    <parameter name="hCertStore">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pCertContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.CAPI.CertAddCertificateLinkToStore(System.Security.Cryptography.SafeCertStoreHandle,System.Security.Cryptography.SafeCertContextHandle,System.UInt32,System.Security.Cryptography.SafeCertContextHandle)">
    <parameter name="hCertStore">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pCertContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.CAPI.CertDeleteCertificateFromStore(System.Security.Cryptography.SafeCertContextHandle)">
    <parameter name="pCertContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.CAPI.CertEnumCertificatesInStore(System.Security.Cryptography.SafeCertStoreHandle,System.IntPtr)">
    <parameter name="hCertStore">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.CAPI.CertEnumCertificatesInStore(System.Security.Cryptography.SafeCertStoreHandle,System.Security.Cryptography.SafeCertContextHandle)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="hCertStore">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pPrevCertContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.CAPI.CertFindCertificateInStore(System.Security.Cryptography.SafeCertStoreHandle,System.UInt32,System.UInt32,System.UInt32,System.IntPtr,System.Security.Cryptography.SafeCertContextHandle)">
    <parameter name="hCertStore">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.CAPI.CertSaveStore(System.Security.Cryptography.SafeCertStoreHandle,System.UInt32,System.UInt32,System.UInt32,System.IntPtr,System.UInt32)">
    <parameter name="hCertStore">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.CAPI.CertSetCertificateContextProperty(System.Security.Cryptography.SafeCertContextHandle,System.UInt32,System.UInt32,System.Security.Cryptography.SafeLocalAllocHandle)">
    <parameter name="pCertContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.CAPI.CryptFindOIDInfo(System.UInt32,System.Security.Cryptography.SafeLocalAllocHandle,System.Security.Cryptography.OidGroup)">
    <parameter name="pvKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.CAPI.CryptFormatObject(System.UInt32,System.UInt32,System.IntPtr,System.Byte[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="rawData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.CAPI.CryptFormatObject(System.UInt32,System.UInt32,System.String,System.Byte[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="rawData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.CAPI.CryptQueryObject(System.UInt32,System.Object,System.UInt32,System.UInt32,System.UInt32,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
    <parameter name="pvObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.CAPI.CryptQueryObject(System.UInt32,System.Object,System.UInt32,System.UInt32,System.UInt32,System.IntPtr,System.IntPtr,System.IntPtr,System.Security.Cryptography.SafeCertStoreHandle@,System.IntPtr,System.IntPtr)">
    <parameter name="pvObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.CAPI.DecodeObject(System.IntPtr,System.Byte[],System.Security.Cryptography.SafeLocalAllocHandle@,System.UInt32@)">
    <parameter name="pbEncoded">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.CAPI.GetCertNameInfo(System.Security.Cryptography.SafeCertContextHandle,System.UInt32,System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="safeCertContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.CAPI.LocalAlloc(System.UInt32,System.IntPtr)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Cryptography.CAPI.PFXExportCertStore(System.Security.Cryptography.SafeCertStoreHandle,System.IntPtr,System.String,System.UInt32)">
    <parameter name="hCertStore">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.CAPI.PFXImportCertStore(System.UInt32,System.Object,System.String,System.UInt32,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="pvObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.Oid.#ctor(System.Security.Cryptography.Oid)">
    <parameter name="oid">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.Oid.#ctor(System.String)">
    <parameter name="oid">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.Oid.#ctor(System.String,System.Security.Cryptography.OidGroup,System.Boolean)">
    <parameter name="oid">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.OidCollection.CopyTo(System.Security.Cryptography.Oid[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.OidCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Security.Cryptography.OidCollection.Item(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Security.Cryptography.OidCollection.Item(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="oid">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Security.Cryptography.OidCollection.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Cryptography.OidCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.OidCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Security.Cryptography.OidEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Security.Cryptography.OidEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Security.Cryptography.SafeCertChainHandle.InvalidHandle">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Security.Cryptography.SafeCertContextHandle.InvalidHandle">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Security.Cryptography.SafeCertStoreHandle.InvalidHandle">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Security.Cryptography.SafeCryptMsgHandle.InvalidHandle">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Security.Cryptography.SafeCryptProvHandle.InvalidHandle">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Security.Cryptography.SafeLocalAllocHandle.InvalidHandle">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.PublicKey.#ctor(System.Security.Cryptography.Oid,System.Security.Cryptography.AsnEncodedData,System.Security.Cryptography.AsnEncodedData)">
    <parameter name="oid">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keyValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.PublicKey.#ctor(System.Security.Cryptography.X509Certificates.PublicKey)">
    <parameter name="publicKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.PublicKey.ConstructDSSPubKeyCspBlob(System.Security.Cryptography.SafeLocalAllocHandle,System.Security.Cryptography.SafeLocalAllocHandle)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="decodedKeyValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="decodedParameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.PublicKey.DecodePublicKeyObject(System.UInt32,System.Byte[],System.Byte[],System.Byte[]@)">
    <parameter name="encodedKeyValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="encodedParameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Security.Cryptography.X509Certificates.PublicKey.Key">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Security.Cryptography.X509Certificates.PublicKey.Oid">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X500DistinguishedName.#ctor(System.Security.Cryptography.AsnEncodedData)">
    <parameter name="encodedDistinguishedName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X500DistinguishedName.#ctor(System.Security.Cryptography.X509Certificates.X500DistinguishedName)">
    <parameter name="distinguishedName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X500DistinguishedName.#ctor(System.String)">
    <parameter name="distinguishedName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X500DistinguishedName.#ctor(System.String,System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags)">
    <parameter name="distinguishedName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X500DistinguishedName.Decode(System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X500DistinguishedName.Encode(System.String,System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="distinguishedName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Security.Cryptography.X509Certificates.X500DistinguishedName.Name">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.#ctor(System.Security.Cryptography.AsnEncodedData,System.Boolean)">
    <parameter name="encodedBasicConstraints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
    <parameter name="asnEncodedData">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString)">
    <parameter name="rawData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)">
    <parameter name="rawData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String)">
    <parameter name="rawData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)">
    <parameter name="rawData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)">
    <parameter name="certificate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.Security.SecureString,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.AppendPrivateKeyInfo(System.Text.StringBuilder)">
    <parameter name="sb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Extensions">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.Byte[])">
    <parameter name="rawData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetCertContentType(System.String)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetNameInfo(System.Security.Cryptography.X509Certificates.X509NameType,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetPrivateKeyInfo(System.Security.Cryptography.SafeCertContextHandle,System.Security.Cryptography.CspParameters@)">
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetSignatureAlgorithm(System.Security.Cryptography.SafeCertContextHandle)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="safeCertContextHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.GetVersion(System.Security.Cryptography.SafeCertContextHandle)">
    <parameter name="safeCertContextHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Security.Cryptography.X509Certificates.X509Certificate2.IssuerName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Security.Cryptography.X509Certificates.X509Certificate2.PublicKey">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.QueryCertBlobType(System.Byte[])">
    <parameter name="rawData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.QueryCertFileType(System.String)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Security.Cryptography.X509Certificates.X509Certificate2.SerialNumber">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.SetFriendlyNameExtendedProperty(System.Security.Cryptography.SafeCertContextHandle,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.SetPrivateKeyProperty(System.Security.Cryptography.SafeCertContextHandle,System.Security.Cryptography.ICspAsymmetricAlgorithm)">
    <parameter name="safeCertContextHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Security.Cryptography.X509Certificates.X509Certificate2.SignatureAlgorithm">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Security.Cryptography.X509Certificates.X509Certificate2.SubjectName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Security.Cryptography.X509Certificates.X509Certificate2.Thumbprint">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
    <parameter name="certificate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2[])">
    <parameter name="certificates">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
    <parameter name="certificates">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Add(System.Security.Cryptography.X509Certificates.X509Certificate2)">
    <parameter name="certificate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate2[])">
    <parameter name="certificates">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
    <parameter name="certificates">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Contains(System.Security.Cryptography.X509Certificates.X509Certificate2)">
    <parameter name="certificate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Export(System.Security.Cryptography.X509Certificates.X509ContentType)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Export(System.Security.Cryptography.X509Certificates.X509ContentType,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.ExportCertificatesToBlob(System.Security.Cryptography.SafeCertStoreHandle,System.Security.Cryptography.X509Certificates.X509ContentType,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="safeCertStoreHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="findValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.FindApplicationPolicyCallback(System.Security.Cryptography.SafeCertContextHandle,System.Object)">
    <parameter name="safeCertContextHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pvCallbackData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.FindByCert(System.Security.Cryptography.SafeCertStoreHandle,System.UInt32,System.IntPtr,System.Boolean,System.Security.Cryptography.X509Certificates.X509Certificate2Collection.FindProcDelegate,System.Security.Cryptography.X509Certificates.X509Certificate2Collection.FindProcDelegate,System.Object,System.Object,System.Security.Cryptography.SafeCertStoreHandle)">
    <parameter name="safeSourceStoreHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="safeTargetStoreHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.FindCertificatePolicyCallback(System.Security.Cryptography.SafeCertContextHandle,System.Object)">
    <parameter name="safeCertContextHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pvCallbackData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.FindCertInStore(System.Security.Cryptography.SafeCertStoreHandle,System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="safeSourceStoreHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="findValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.FindExtensionCallback(System.Security.Cryptography.SafeCertContextHandle,System.Object)">
    <parameter name="safeCertContextHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.FindIssuerDistinguishedNameCallback(System.Security.Cryptography.SafeCertContextHandle,System.Object)">
    <parameter name="safeCertContextHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.FindKeyUsageCallback(System.Security.Cryptography.SafeCertContextHandle,System.Object)">
    <parameter name="safeCertContextHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.FindSerialNumberCallback(System.Security.Cryptography.SafeCertContextHandle,System.Object)">
    <parameter name="safeCertContextHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pvCallbackData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.FindSubjectDistinguishedNameCallback(System.Security.Cryptography.SafeCertContextHandle,System.Object)">
    <parameter name="safeCertContextHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.FindSubjectKeyIdentifierCallback(System.Security.Cryptography.SafeCertContextHandle,System.Object)">
    <parameter name="pvCallbackData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.FindTemplateNameCallback(System.Security.Cryptography.SafeCertContextHandle,System.Object)">
    <parameter name="safeCertContextHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pvCallbackData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.FindTimeNotAfterCallback(System.Security.Cryptography.SafeCertContextHandle,System.Object)">
    <parameter name="safeCertContextHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pvCallbackData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.FindTimeNotBeforeCallback(System.Security.Cryptography.SafeCertContextHandle,System.Object)">
    <parameter name="safeCertContextHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pvCallbackData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.FindTimeValidCallback(System.Security.Cryptography.SafeCertContextHandle,System.Object)">
    <parameter name="safeCertContextHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pvCallbackData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.Byte[])">
    <parameter name="rawData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.Byte[],System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)">
    <parameter name="rawData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.String)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Import(System.String,System.String,System.Security.Cryptography.X509Certificates.X509KeyStorageFlags)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Insert(System.Int32,System.Security.Cryptography.X509Certificates.X509Certificate2)">
    <parameter name="certificate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.LoadStoreFromBlob(System.Byte[],System.String,System.UInt32,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="rawData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.LoadStoreFromFile(System.String,System.String,System.UInt32,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Remove(System.Security.Cryptography.X509Certificates.X509Certificate2)">
    <parameter name="certificate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.RemoveRange(System.Security.Cryptography.X509Certificates.X509Certificate2[])">
    <parameter name="certificates">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.RemoveRange(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
    <parameter name="certificates">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
    <parameter name="mappings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.Add(System.Security.Cryptography.X509Certificates.X509Certificate)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.CopyTo(System.Security.Cryptography.X509Certificates.X509Certificate[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.IndexOf(System.Security.Cryptography.X509Certificates.X509Certificate)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.Insert(System.Int32,System.Security.Cryptography.X509Certificates.X509Certificate)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.Remove(System.Security.Cryptography.X509Certificates.X509Certificate)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator.#ctor(System.Security.Cryptography.X509Certificates.X509CertificateCollection)">
    <parameter name="mappings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Security.Cryptography.X509Certificates.X509CertificateCollection.X509CertificateEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Chain.Build(System.Security.Cryptography.X509Certificates.X509Certificate2)">
    <parameter name="certificate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Chain.BuildChain(System.IntPtr,System.Security.Cryptography.SafeCertContextHandle,System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Security.Cryptography.OidCollection,System.Security.Cryptography.OidCollection,System.Security.Cryptography.X509Certificates.X509RevocationMode,System.Security.Cryptography.X509Certificates.X509RevocationFlag,System.DateTime,System.TimeSpan,System.Security.Cryptography.SafeCertChainHandle@)">
    <parameter name="pCertContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Security.Cryptography.X509Certificates.X509Chain.ChainPolicy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Security.Cryptography.X509Certificates.X509Chain.ChainStatus">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Chain.GetChainStatusInformation(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509ChainElementCollection.CopyTo(System.Security.Cryptography.X509Certificates.X509ChainElement[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509ChainElementCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Security.Cryptography.X509Certificates.X509ChainElementCollection.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509ChainElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509ChainElementCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Security.Cryptography.X509Certificates.X509ChainElementEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension.#ctor(System.Security.Cryptography.AsnEncodedData,System.Boolean)">
    <parameter name="encodedEnhancedKeyUsages">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension.#ctor(System.Security.Cryptography.OidCollection,System.Boolean)">
    <parameter name="enhancedKeyUsages">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension.CopyFrom(System.Security.Cryptography.AsnEncodedData)">
    <parameter name="asnEncodedData">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension.EncodeExtension(System.Security.Cryptography.OidCollection)">
    <parameter name="enhancedKeyUsages">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension.EnhancedKeyUsages">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Extension.#ctor(System.Security.Cryptography.AsnEncodedData,System.Boolean)">
    <parameter name="encodedExtension">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Extension.#ctor(System.String)">
    <parameter name="oid">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Extension.#ctor(System.String,System.Byte[],System.Boolean)">
    <parameter name="oid">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509ExtensionCollection.Add(System.Security.Cryptography.X509Certificates.X509Extension)">
    <parameter name="extension">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509ExtensionCollection.CopyTo(System.Security.Cryptography.X509Certificates.X509Extension[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509ExtensionCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Security.Cryptography.X509Certificates.X509ExtensionCollection.Item(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="oid">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Security.Cryptography.X509Certificates.X509ExtensionCollection.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509ExtensionCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509ExtensionCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Security.Cryptography.X509Certificates.X509ExtensionEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509KeyUsageExtension.#ctor(System.Security.Cryptography.AsnEncodedData,System.Boolean)">
    <parameter name="encodedKeyUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Store.Add(System.Security.Cryptography.X509Certificates.X509Certificate2)">
    <parameter name="certificate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Store.AddRange(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
    <parameter name="certificates">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Security.Cryptography.X509Certificates.X509Store.Certificates">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Store.Remove(System.Security.Cryptography.X509Certificates.X509Certificate2)">
    <parameter name="certificate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Store.RemoveCertificateFromStore(System.Security.Cryptography.SafeCertStoreHandle,System.Security.Cryptography.SafeCertContextHandle)">
    <parameter name="safeCertStoreHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Store.RemoveRange(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
    <parameter name="certificates">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension.#ctor(System.Byte[],System.Boolean)">
    <parameter name="subjectKeyIdentifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension.#ctor(System.Security.Cryptography.AsnEncodedData,System.Boolean)">
    <parameter name="encodedSubjectKeyIdentifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension.#ctor(System.Security.Cryptography.X509Certificates.PublicKey,System.Boolean)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension.#ctor(System.Security.Cryptography.X509Certificates.PublicKey,System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm,System.Boolean)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension.#ctor(System.String,System.Boolean)">
    <parameter name="subjectKeyIdentifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension.EncodeExtension(System.Byte[])">
    <parameter name="subjectKeyIdentifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension.EncodeExtension(System.String)">
    <parameter name="subjectKeyIdentifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension.EncodePublicKey(System.Security.Cryptography.X509Certificates.PublicKey)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension.EncodePublicKey(System.Security.Cryptography.X509Certificates.PublicKey,System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Utils.ByteToPtr(System.Byte[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="managed">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Utils.CopyOidsToUnmanagedMemory(System.Security.Cryptography.OidCollection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Utils.DecodeHexString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Utils.DiscardWhiteSpaces(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="inputBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Utils.DiscardWhiteSpaces(System.String,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="inputBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Utils.EncodeHexString(System.Byte[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="sArray">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Utils.EncodeHexString(System.Byte[],System.UInt32,System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Utils.EncodeHexStringFromInt(System.Byte[],System.UInt32,System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Utils.ExportToMemoryStore(System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Utils.FindOidInfo(System.UInt32,System.String,System.Security.Cryptography.OidGroup)">
    <parameter name="keyValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Utils.GetCertificates(System.Security.Cryptography.SafeCertStoreHandle)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="safeCertStoreHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Utils.GetHexArraySize(System.Byte[])">
    <parameter name="hex">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Utils.GetSystemErrorString(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Utils.MemEqual(System.Byte*,System.UInt32,System.Byte*,System.UInt32)">
    <parameter name="pbBuf1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pbBuf2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Utils.OidToAlgId(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Utils.PtrToByte(System.IntPtr,System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Utils.StringToAnsiPtr(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Utils.StringToUniPtr(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Utils.ValidateOidValue(System.String)">
    <parameter name="keyValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Utils.VerifyCertificate(System.Security.Cryptography.SafeCertContextHandle,System.Security.Cryptography.OidCollection,System.Security.Cryptography.OidCollection,System.Security.Cryptography.X509Certificates.X509RevocationMode,System.Security.Cryptography.X509Certificates.X509RevocationFlag,System.DateTime,System.TimeSpan,System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.IntPtr,System.IntPtr)">
    <parameter name="pCertContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Permissions.ResourcePermissionBase.Copy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Permissions.ResourcePermissionBase.CopyChildren(System.Object,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="currentContent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Permissions.ResourcePermissionBase.CreateHashtable">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Permissions.ResourcePermissionBase.GetChildrenAccess(System.Object,System.Int32)">
    <parameter name="currentContent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Permissions.ResourcePermissionBase.IntersectContents(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="currentContent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="targetContent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Permissions.ResourcePermissionBase.IsContentSubset(System.Object,System.Object)">
    <parameter name="currentContent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="targetContent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Permissions.ResourcePermissionBase.MergeContents(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Permissions.ResourcePermissionBase.ReadChildren(System.Security.SecurityElement,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="securityElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Permissions.ResourcePermissionBase.UnionOfContents(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="currentContent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="targetContent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Permissions.ResourcePermissionBase.WriteChildren(System.Security.SecurityElement,System.Object,System.Int32)">
    <parameter name="currentElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="currentContent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Permissions.ResourcePermissionBaseEntry.#ctor(System.Int32,System.String[])">
    <parameter name="permissionAccessPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Permissions.StorePermissionAttribute.CreatePermission">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.SecurityUtils.SecureConstructorInvoke(System.Type,System.Type[],System.Object[],System.Boolean)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="argTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.SecurityUtils.SecureConstructorInvoke(System.Type,System.Type[],System.Object[],System.Boolean,System.Reflection.BindingFlags)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="argTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.SecurityUtils.SecureCreateInstance(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.SecurityUtils.SecureCreateInstance(System.Type,System.Object[])">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.SecurityUtils.SecureCreateInstance(System.Type,System.Object[],System.Boolean)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.SR.Culture">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.SR.GetObject(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.SR.GetString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.SR.GetString(System.String,System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Capture.GetLeftSubstring">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.Capture.GetRightSubstring">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.CaptureCollection.#ctor(System.Text.RegularExpressions.Group)">
    <parameter name="group">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.CaptureCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Text.RegularExpressions.CaptureCollection.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.ExclusiveReference.Get">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.ExclusiveReference.Release(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Group.#ctor(System.String,System.Int32[],System.Int32)">
    <parameter name="caps">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.GroupCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
    <parameter name="groupname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Text.RegularExpressions.GroupCollection.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.Match.GroupToStringImpl(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.Match.LastGroupToStringImpl">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.MatchCollection.#ctor(System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32,System.Int32)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.MatchCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Text.RegularExpressions.MatchCollection.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Text.RegularExpressions.MatchEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.Boolean)">
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Compile(System.Text.RegularExpressions.RegexCode,System.Text.RegularExpressions.RegexOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)">
    <parameter name="regexinfos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="assemblyname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[])">
    <parameter name="regexinfos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="assemblyname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[],System.String)">
    <parameter name="assemblyname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="regexinfos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.CompileToAssemblyInternal(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[],System.String,System.Security.Policy.Evidence)">
    <parameter name="regexinfos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="assemblyname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String)">
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Run(System.Boolean,System.Int32,System.String,System.Int32,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="si">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexBoyerMoore.#ctor(System.String,System.Boolean,System.Boolean,System.Globalization.CultureInfo)">
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexBoyerMoore.IsMatch(System.String,System.Int32,System.Int32,System.Int32)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexBoyerMoore.MatchPattern(System.String,System.Int32)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexBoyerMoore.Scan(System.String,System.Int32,System.Int32,System.Int32)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCharClass.AddCategoryFromName(System.String,System.Boolean,System.Boolean,System.String)">
    <parameter name="categoryName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCharClass.AddCharClass(System.Text.RegularExpressions.RegexCharClass)">
    <parameter name="cc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCharClass.AddLowercase(System.Globalization.CultureInfo)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCharClass.AddSet(System.String)">
    <parameter name="set">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCharClass.CharInCategory(System.Char,System.String,System.Int32,System.Int32,System.Int32)">
    <parameter name="set">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCharClass.CharInCategoryGroup(System.Char,System.Globalization.UnicodeCategory,System.String,System.Int32@)">
    <parameter name="category">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCharClass.CharInClass(System.Char,System.String)">
    <parameter name="set">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCharClass.CharInClassInternal(System.Char,System.String,System.Int32,System.Int32,System.Int32)">
    <parameter name="set">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCharClass.CharInClassRecursive(System.Char,System.String,System.Int32)">
    <parameter name="set">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCharClass.ConvertOldStringsToClass(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="set">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="category">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCharClass.IsEmpty(System.String)">
    <parameter name="charClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCharClass.IsMergeable(System.String)">
    <parameter name="charClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCharClass.IsSingleton(System.String)">
    <parameter name="set">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCharClass.IsSingletonInverse(System.String)">
    <parameter name="set">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCharClass.IsSubtraction(System.String)">
    <parameter name="charClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCharClass.NegateCategory(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCharClass.Parse(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="charClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCharClass.ParseRecursive(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="charClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCharClass.SingleRangeComparer.Compare(System.Object,System.Object)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCharClass.SingletonChar(System.String)">
    <parameter name="set">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCharClass.ToStringClass">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCode.#ctor(System.Int32[],System.Collections.ArrayList,System.Int32,System.Collections.Hashtable,System.Int32,System.Text.RegularExpressions.RegexBoyerMoore,System.Text.RegularExpressions.RegexPrefix,System.Int32,System.Boolean)">
    <parameter name="stringlist">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCode.MakeException(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCompiler.Call(System.Reflection.MethodInfo)">
    <parameter name="mt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCompiler.Callvirt(System.Reflection.MethodInfo)">
    <parameter name="mt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCompiler.Compile(System.Text.RegularExpressions.RegexCode,System.Text.RegularExpressions.RegexOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCompiler.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[],System.String,System.Security.Policy.Evidence)">
    <parameter name="an">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="regexes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCompiler.DeclareInt">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCompiler.DeclareIntArray">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCompiler.DeclareString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCompiler.Ldloc(System.Reflection.Emit.LocalBuilder)">
    <parameter name="lt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCompiler.Ldstr(System.String)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCompiler.Ldthisfld(System.Reflection.FieldInfo)">
    <parameter name="ft">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCompiler.Mvfldloc(System.Reflection.FieldInfo,System.Reflection.Emit.LocalBuilder)">
    <parameter name="lt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ft">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCompiler.Mvlocfld(System.Reflection.Emit.LocalBuilder,System.Reflection.FieldInfo)">
    <parameter name="lt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ft">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCompiler.Newobj(System.Reflection.ConstructorInfo)">
    <parameter name="ct">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCompiler.PushStack(System.Reflection.Emit.LocalBuilder)">
    <parameter name="lt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCompiler.PushTrack(System.Reflection.Emit.LocalBuilder)">
    <parameter name="lt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCompiler.RegexRunnerMethod(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="methname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCompiler.Stfld(System.Reflection.FieldInfo)">
    <parameter name="ft">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCompiler.Stloc(System.Reflection.Emit.LocalBuilder)">
    <parameter name="lt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexFC.#ctor(System.String,System.Boolean,System.Boolean)">
    <parameter name="charClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexFC.AddFC(System.Text.RegularExpressions.RegexFC,System.Boolean)">
    <parameter name="fc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexFC.GetFirstChars(System.Globalization.CultureInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexFCD.Anchors(System.Text.RegularExpressions.RegexTree)">
    <parameter name="tree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexFCD.CalculateFC(System.Int32,System.Text.RegularExpressions.RegexNode,System.Int32)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexFCD.FirstChars(System.Text.RegularExpressions.RegexTree)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexFCD.Prefix(System.Text.RegularExpressions.RegexTree)">
    <parameter name="tree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexFCD.RegexFCFromRegexTree(System.Text.RegularExpressions.RegexTree)">
    <parameter name="tree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexInterpreter.#ctor(System.Text.RegularExpressions.RegexCode,System.Globalization.CultureInfo)">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexInterpreter.Stringmatch(System.String)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexLWCGCompiler.DefineDynamicMethod(System.String,System.Type,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="hostType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="methname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexLWCGCompiler.FactoryInstanceFromCode(System.Text.RegularExpressions.RegexCode,System.Text.RegularExpressions.RegexOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexNode.AddChild(System.Text.RegularExpressions.RegexNode)">
    <parameter name="newChild">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexNode.MakeQuantifier(System.Boolean,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexNode.ReduceGroup">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexNode.ReduceRep">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexNode.ReduceSet">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexNode.ReverseLeft">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexParser.CaptureSlotFromName(System.String)">
    <parameter name="capname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexParser.Escape(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexParser.IsCaptureName(System.String)">
    <parameter name="capname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexParser.MakeException(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexParser.NoteCaptureName(System.String,System.Int32)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexParser.Parse(System.String,System.Text.RegularExpressions.RegexOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexParser.ParseProperty">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexParser.ParseReplacement(System.String,System.Collections.Hashtable,System.Int32,System.Collections.Hashtable,System.Text.RegularExpressions.RegexOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexParser.ScanBackslash">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexParser.ScanBasicBackslash">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexParser.ScanCapname">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexParser.ScanCharClass(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexParser.ScanCharClass(System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexParser.ScanDollar">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexParser.ScanGroupOpen">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexParser.Unescape(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexReplacement.#ctor(System.String,System.Text.RegularExpressions.RegexNode,System.Collections.Hashtable)">
    <parameter name="concat">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexReplacement.Replace(System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="evaluator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="regex">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexReplacement.Replace(System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="regex">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexReplacement.Replacement(System.Text.RegularExpressions.Match)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexReplacement.ReplacementImpl(System.Text.StringBuilder,System.Text.RegularExpressions.Match)">
    <parameter name="sb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexReplacement.Split(System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="regex">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexRunner.CharInClass(System.Char,System.String)">
    <parameter name="charClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexRunner.CharInSet(System.Char,System.String,System.String)">
    <parameter name="set">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="category">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexRunner.Scan(System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="regex">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexRunner.TidyMatch(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexRunnerFactory.CreateInstance">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexTypeCompiler.#ctor(System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[],System.String,System.Security.Policy.Evidence)">
    <parameter name="an">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexTypeCompiler.DefineMethod(System.String,System.Type)">
    <parameter name="methname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexTypeCompiler.DefineType(System.String,System.Boolean,System.Type)">
    <parameter name="typename">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexTypeCompiler.FactoryTypeFromCode(System.Text.RegularExpressions.RegexCode,System.Text.RegularExpressions.RegexOptions,System.String)">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexTypeCompiler.GenerateCreateHashtable(System.Reflection.FieldInfo,System.Collections.Hashtable)">
    <parameter name="field">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ht">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexTypeCompiler.GenerateCreateInstance(System.Type)">
    <parameter name="newtype">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexTypeCompiler.GenerateRegexType(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.Boolean,System.Text.RegularExpressions.RegexCode,System.Text.RegularExpressions.RegexTree,System.Type)">
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="tree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="factory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexWriter.EmitFragment(System.Int32,System.Text.RegularExpressions.RegexNode,System.Int32)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexWriter.MakeException(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexWriter.RegexCodeFromRegexTree(System.Text.RegularExpressions.RegexTree)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexWriter.Write(System.Text.RegularExpressions.RegexTree)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Semaphore.OpenExisting(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Semaphore.OpenExisting(System.String,System.Security.AccessControl.SemaphoreRights)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Semaphore.SetAccessControl(System.Security.AccessControl.SemaphoreSecurity)">
    <parameter name="semaphoreSecurity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.SemaphoreFullException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ThrowHelper.GetArgumentName(System.ExceptionArgument)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ThrowHelper.GetResourceName(System.ExceptionResource)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.UncNameHelper.IsValid(System.Char*,System.UInt16,System.Int32@,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UncNameHelper.ParseCanonicalName(System.String,System.Int32,System.Int32,System.Boolean@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.CheckAuthorityHelper(System.Char*,System.UInt16,System.UInt16,System.Uri.ParsingError@,System.Uri.Flags@,System.UriParser,System.String@)">
    <parameter name="pString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="syntax">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.CheckAuthorityHelperHandleAnyHostIri(System.Char*,System.Int32,System.Int32,System.Boolean,System.Boolean,System.UriParser,System.Uri.Flags@,System.String@,System.Uri.ParsingError@)">
    <parameter name="pString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.CheckAuthorityHelperHandleDnsIri(System.Char*,System.UInt16,System.Int32,System.Int32,System.Boolean,System.Boolean,System.UriParser,System.String,System.Uri.Flags@,System.Boolean@,System.String@,System.Uri.ParsingError@)">
    <parameter name="pString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.CheckCanonical(System.Char*,System.UInt16@,System.UInt16,System.Char)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.CheckForConfigLoad(System.String)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.CheckForUnicode(System.String)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.CheckIriUnicodeRange(System.String,System.Int32,System.Boolean@,System.Boolean)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.CheckKnownSchemes(System.Int64*,System.UInt16,System.UriParser@)">
    <parameter name="lptr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.CheckSchemeSyntax(System.Char*,System.UInt16,System.UriParser@)">
    <parameter name="ptr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.CombineUri(System.Uri,System.String,System.UriFormat)">
    <parameter name="basePart">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="relativePart">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.Compress(System.Char[],System.UInt16,System.Int32@,System.UriParser)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="dest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="syntax">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.CreateHelper(System.String,System.Boolean,System.UriKind,System.UriFormatException@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="uriString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.CreateHostStringHelper(System.String,System.UInt16,System.UInt16,System.Uri.Flags@,System.String@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.CreateThisFromUri(System.Uri)">
    <parameter name="otherUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.CreateUri(System.Uri,System.String,System.Boolean)">
    <parameter name="baseUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.EnsureDestinationSize(System.Char*,System.Char[],System.Int32,System.Int16,System.Int16,System.Int32@,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="pStr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.Equals(System.Object)">
    <parameter name="comparand">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.EscapeAsciiChar(System.Char,System.Char[],System.Int32@)">
    <parameter name="to">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.EscapeString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Uri.EscapeString(System.String,System.Int32,System.Int32,System.Char[],System.Int32@,System.Boolean,System.Char,System.Char,System.Char)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.EscapeUnescapeIri(System.Char*,System.Int32,System.Int32,System.UriComponents)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="pInput">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.EscapeUnescapeIri(System.String,System.Int32,System.Int32,System.UriComponents)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.FindEndOfComponent(System.Char*,System.UInt16@,System.UInt16,System.Char)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.FindEndOfComponent(System.String,System.UInt16@,System.UInt16,System.Char)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.GetCanonicalPath(System.Char[],System.Int32@,System.UriFormat)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="dest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.GetCombinedString(System.Uri,System.String,System.Boolean,System.String@)">
    <parameter name="baseUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="relativeStr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.GetEscapedParts(System.UriComponents)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Uri.GetException(System.Uri.ParsingError)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Uri.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.GetUnescapedParts(System.UriComponents,System.UriFormat)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Uri.InternalEscapeString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Uri.IsBaseOf(System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.IsBaseOfHelper(System.Uri)">
    <parameter name="uriLink">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.IsIntranet(System.String)">
    <parameter name="schemeHost">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.MakeRelative(System.Uri)">
    <parameter name="toUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.MakeRelativeUri(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.MatchUTF8Sequence(System.Char*,System.Char[],System.Int32@,System.Char[],System.Int32,System.Byte[],System.Boolean,System.Boolean)">
    <parameter name="pDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="dest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="unescapedChars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.ParseConfigFile(System.String,System.Uri.IdnScopeFromConfig@,System.Uri.IriParsingFromConfig@)">
    <parameter name="file">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.ParseMinimal">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Uri.ParseScheme(System.String,System.Uri.Flags@,System.UriParser@)">
    <parameter name="uriString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.ParseSchemeCheckImplicitFile(System.Char*,System.UInt16,System.Uri.ParsingError@,System.Uri.Flags@,System.UriParser@)">
    <parameter name="uriString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.PathDifference(System.String,System.String,System.Boolean)">
    <parameter name="path1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="path2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.ReCreateParts(System.UriComponents,System.UInt16,System.UriFormat)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Uri.ResolveHelper(System.Uri,System.Uri,System.String@,System.Boolean@,System.UriFormatException@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="baseUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.StaticIsFile(System.UriParser)">
    <parameter name="syntax">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.StripBidiControlCharacter(System.Char*,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="strToClean">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.TestForSubPath(System.Char*,System.UInt16,System.Char*,System.UInt16,System.Boolean)">
    <parameter name="pMe">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pShe">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.TryCreate(System.Uri,System.Uri,System.Uri@)">
    <parameter name="relativeUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.Unescape(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.UnescapeDataString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="stringToUnescape">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.UnescapeString(System.Char*,System.Int32,System.Int32,System.Char[],System.Int32@,System.Char,System.Char,System.Char,System.Uri.UnescapeMode,System.UriParser,System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="pStr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="dest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.UnescapeString(System.String,System.Int32,System.Int32,System.Char[],System.Int32@,System.Char,System.Char,System.Char,System.Uri.UnescapeMode,System.UriParser,System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="dest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UriBuilder.ConvertSlashes(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UriBuilder.Equals(System.Object)">
    <parameter name="rparam">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UriBuilder.Init(System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UriBuilder.SetFieldsFromUri(System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UriFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UriFormatException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UriParser.FetchSyntax(System.UriParser,System.String,System.Int32)">
    <parameter name="syntax">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="lwrCaseSchemeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UriParser.FindOrFetchAsUnknownV1Syntax(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="lwrCaseScheme">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UriParser.GetComponents(System.Uri,System.UriComponents,System.UriFormat)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UriParser.GetSyntax(System.String)">
    <parameter name="lwrCaseScheme">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UriParser.InitializeAndValidate(System.Uri,System.UriFormatException@)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UriParser.InternalGetComponents(System.Uri,System.UriComponents,System.UriFormat)">
    <parameter name="thisUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UriParser.InternalIsBaseOf(System.Uri,System.Uri)">
    <parameter name="uriLink">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="thisBaseUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UriParser.InternalIsWellFormedOriginalString(System.Uri)">
    <parameter name="thisUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UriParser.InternalOnNewUri">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.UriParser.InternalResolve(System.Uri,System.Uri,System.UriFormatException@)">
    <parameter name="thisBaseUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UriParser.InternalValidate(System.Uri,System.UriFormatException@)">
    <parameter name="thisUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UriParser.IsBaseOf(System.Uri,System.Uri)">
    <parameter name="baseUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="relativeUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UriParser.IsKnownScheme(System.String)">
    <parameter name="schemeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UriParser.IsWellFormedOriginalString(System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UriParser.OnNewUri">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.UriParser.Register(System.UriParser,System.String,System.Int32)">
    <parameter name="uriParser">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="schemeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UriParser.Resolve(System.Uri,System.Uri,System.UriFormatException@)">
    <parameter name="baseUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UriTypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Web.AspNetHostingPermission.Copy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Web.AspNetHostingPermission.Union(System.Security.IPermission)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Web.AspNetHostingPermissionAttribute.CreatePermission">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.LinkedList`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="newNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="newNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.LinkedList`1.AddFirst(System.Collections.Generic.LinkedListNode{`0})">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.LinkedList`1.AddLast(System.Collections.Generic.LinkedListNode{`0})">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.LinkedList`1.Remove(System.Collections.Generic.LinkedListNode{`0})">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedList`2.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.Stack`1.ToArray">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Specialized.NameObjectCollectionBase.Keys">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Collections.Specialized.NameValueCollection)">
    <parameter name="col">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.NameValueCollection.#ctor(System.Int32,System.Collections.Specialized.NameValueCollection)">
    <parameter name="col">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Specialized.NameValueCollection.AllKeys">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Specialized.NameValueCollection.Add(System.Collections.Specialized.NameValueCollection)">
    <parameter name="c">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.NameValueCollection.CopyTo(System.Array,System.Int32)">
    <parameter name="dest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Specialized.StringDictionary.Keys">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Specialized.StringDictionary.Values">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(,System.Type,System.Type[],System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="objectType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.ComponentModel.TypeDescriptor.ComObjectType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,)">
    <parameter name="editorBaseType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
    <parameter name="provider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
    <parameter name="provider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)">
    <parameter name="primary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="secondary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.CreateInstance(,System.Type,System.Type[],System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="objectType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="primary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)">
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)">
    <parameter name="primary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="secondary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)">
    <parameter name="primary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)">
    <parameter name="provider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)">
    <parameter name="provider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)">
    <parameter name="infos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Diagnostics.Debug.Listeners">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Diagnostics.Process.MachineName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Diagnostics.Process.MainWindowTitle">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Diagnostics.Process.ProcessName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Diagnostics.Process.StandardError">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Diagnostics.Process.StandardInput">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Diagnostics.Process.StandardOutput">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Diagnostics.Process.StartInfo">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Diagnostics.Process.Threads">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.Process.GetCurrentProcess">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.Process.GetProcesses">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.Process.GetProcessesByName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Diagnostics.ProcessModule.FileName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Diagnostics.ProcessStartInfo.Arguments">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Diagnostics.ProcessStartInfo.EnvironmentVariables">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Diagnostics.ProcessStartInfo.FileName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Diagnostics.ProcessStartInfo.StandardErrorEncoding">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Diagnostics.ProcessStartInfo.StandardOutputEncoding">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Diagnostics.ProcessStartInfo.UserName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Diagnostics.ProcessStartInfo.Verbs">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Diagnostics.ProcessStartInfo.WorkingDirectory">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Diagnostics.ProcessThreadCollection.Item(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Diagnostics.TraceListenerCollection.Item(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListenerCollection)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListener[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.IPAddress.#ctor(System.Byte[])">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.IPAddress.#ctor(System.Byte[],System.Int64)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.IPAddress.GetAddressBytes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.IPEndPoint.#ctor(System.Net.IPAddress,System.Int32)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.IPEndPoint.Create(System.Net.SocketAddress)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="socketAddress">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.Mail.MailAddress.Address">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.Mail.MailAddress.Host">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.Mail.MailAddress.User">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mail.MailMessage.#ctor(System.Net.Mail.MailAddress,System.Net.Mail.MailAddress)">
    <parameter name="from">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="to">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.Mail.MailMessage.AlternateViews">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.Mail.MailMessage.Attachments">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.Mail.MailMessage.Bcc">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.Mail.MailMessage.Body">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.Mail.MailMessage.CC">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.Mail.MailMessage.Headers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.Mail.MailMessage.To">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.Mail.SmtpClient.ClientCertificates">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.Mail.SmtpClient.Host">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.Mail.SmtpClient.ServicePoint">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mail.SmtpClient.Send(System.Net.Mail.MailMessage)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpClient.SendAsync(System.Net.Mail.MailMessage,System.Object)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.ServicePoint.Address">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.ServicePoint.ProtocolVersion">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.#ctor([])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.#ctor(System.Security.Cryptography.X509Certificates.X509CertificateCollection)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.AddRange([])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.AddRange(System.Security.Cryptography.X509Certificates.X509CertificateCollection)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.CopyTo([],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509CertificateCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Text.RegularExpressions.Capture.Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Text.RegularExpressions.CaptureCollection.Item(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Text.RegularExpressions.Group.Captures">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.Group.Synchronized(System.Text.RegularExpressions.Group)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="inner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Text.RegularExpressions.Match.Empty">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Text.RegularExpressions.Match.Groups">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.Match.NextMatch">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.Match.Result(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="replacement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Match.Synchronized(System.Text.RegularExpressions.Match)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="inner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String)">
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions)">
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Escape(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.GetGroupNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.GetGroupNumbers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.GroupNameFromNumber(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.GroupNumberFromName(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.Int32)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Match(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="replacement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="evaluator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="replacement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="replacement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="evaluator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="evaluator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="replacement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="replacement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="evaluator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="evaluator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Split(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Unescape(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.#ctor(System.String)">
    <parameter name="uriString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.#ctor(System.String,System.Boolean)">
    <parameter name="uriString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.#ctor(System.Uri,System.String)">
    <parameter name="baseUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="relativeUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.#ctor(System.Uri,System.String,System.Boolean)">
    <parameter name="baseUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="relativeUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Uri.AbsolutePath">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Uri.AbsoluteUri">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Uri.Authority">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Uri.DnsSafeHost">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Uri.Fragment">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Uri.Host">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Uri.LocalPath">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Uri.OriginalString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Uri.PathAndQuery">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Uri.Query">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Uri.Scheme">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Uri.Segments">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Uri.UserInfo">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Uri.EscapeDataString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="stringToEscape">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.EscapeUriString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="stringToEscape">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.GetComponents(System.UriComponents,System.UriFormat)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Uri.GetLeftPart(System.UriPartial)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Uri.HexEscape(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Uri.HexUnescape(System.String,System.Int32@)">
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.IsHexEncoding(System.String,System.Int32)">
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UriBuilder.#ctor(System.String)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UriBuilder.#ctor(System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.UriBuilder.Fragment">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.UriBuilder.Host">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.UriBuilder.Password">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.UriBuilder.Path">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.UriBuilder.Query">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.UriBuilder.Scheme">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.UriBuilder.Uri">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.UriBuilder.UserName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.LinkedList`1.Find(`0)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.LinkedList`1.FindLast(`0)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.LinkedList`1.InternalRemoveNode(System.Collections.Generic.LinkedListNode{`0})">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
    <parameter name="detailMessageFormat">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Debug.StackTraceToString(System.Diagnostics.StackTrace,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="trace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.SR.GetString(System.String,System.Boolean@)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.SR.GetString(System.String,System.Boolean@,System.Object[])">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.SR.GetStringHelper(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.SR.UriEncode(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Text.RegularExpressions.CaptureEnumerator.Capture">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Text.RegularExpressions.GroupEnumerator.Capture">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCharClass.SingleRangeComparer.Compare(System.Text.RegularExpressions.RegexCharClass.SingleRange,System.Text.RegularExpressions.RegexCharClass.SingleRange)">
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCode.#ctor(System.Int32[],System.Collections.Generic.List{System.String},System.Int32,System.Collections.Generic.Dictionary{System.Int32,System.Int32},System.Int32,System.Text.RegularExpressions.RegexBoyerMoore,System.Text.RegularExpressions.RegexPrefix,System.Int32,System.Boolean)">
    <parameter name="stringlist">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexParser.ParseReplacement(System.String,System.Collections.Generic.Dictionary{System.Int32,System.Int32},System.Int32,System.Collections.Generic.Dictionary{System.String,System.Int32},System.Text.RegularExpressions.RegexOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexReplacement.#ctor(System.String,System.Text.RegularExpressions.RegexNode,System.Collections.Generic.Dictionary{System.Int32,System.Int32})">
    <parameter name="concat">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexReplacement.ReplacementImplRTL(System.Collections.Generic.List{System.String},System.Text.RegularExpressions.Match)">
    <parameter name="al">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.#ctor(System.String,System.UriKind)">
    <parameter name="uriString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.#ctor(System.Uri,System.Uri)">
    <parameter name="baseUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="relativeUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.CheckAuthorityHelper(System.Char*,System.UInt16,System.UInt16,System.UriExceptionHelper.ParsingError@,System.Uri.Flags@,System.UriParser,System.String@)">
    <parameter name="pString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="syntax">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.CheckAuthorityHelperHandleAnyHostIri(System.Char*,System.Int32,System.Int32,System.Boolean,System.Boolean,System.UriParser,System.Uri.Flags@,System.String@,System.UriExceptionHelper.ParsingError@)">
    <parameter name="pString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.CheckAuthorityHelperHandleDnsIri(System.Char*,System.UInt16,System.Int32,System.Int32,System.Boolean,System.Boolean,System.UriParser,System.String,System.Uri.Flags@,System.Boolean@,System.String@,System.UriExceptionHelper.ParsingError@)">
    <parameter name="pString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.CheckForColonInFirstPathSegment(System.String)">
    <parameter name="uriString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.GetLocalPath">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Uri.GetParts(System.UriComponents,System.UriFormat)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Uri.ParseSchemeCheckImplicitFile(System.Char*,System.UInt16,System.UriExceptionHelper.ParsingError@,System.Uri.Flags@,System.UriParser@)">
    <parameter name="uriString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Uri.PrivateAbsolutePath">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.UriBuilder.#ctor(System.String,System.String)">
    <parameter name="schemeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="hostName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UriBuilder.#ctor(System.String,System.String,System.Int32)">
    <parameter name="scheme">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UriBuilder.#ctor(System.String,System.String,System.Int32,System.String)">
    <parameter name="pathValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheme">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UriBuilder.#ctor(System.String,System.String,System.Int32,System.String,System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheme">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UriExceptionHelper.GetException(System.UriExceptionHelper.ParsingError)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.UriHelper.EnsureDestinationSize(System.Char*,System.Char[],System.Int32,System.Int16,System.Int16,System.Int32@,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="pStr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UriHelper.EscapeAsciiChar(System.Char,System.Char[],System.Int32@)">
    <parameter name="to">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UriHelper.EscapeString(System.String,System.Int32,System.Int32,System.Char[],System.Int32@,System.Boolean,System.Char,System.Char,System.Char)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UriHelper.MatchUTF8Sequence(System.Char*,System.Char[],System.Int32@,System.Char[],System.Int32,System.Byte[],System.Boolean,System.Boolean)">
    <parameter name="pDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="dest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="unescapedChars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UriHelper.TestForSubPath(System.Char*,System.UInt16,System.Char*,System.UInt16,System.Boolean)">
    <parameter name="pMe">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pShe">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UriTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:Microsoft.CSharp.CSharpCodeProvider.FileExtension">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:Microsoft.VisualBasic.VBCodeProvider.FileExtension">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.CodeDom.Compiler.CodeDomProvider.CreateProvider(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
    <parameter name="providerOptions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="language">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.CompilerInfo.CreateProvider(System.Collections.Generic.IDictionary{System.String,System.String})">
    <parameter name="providerOptions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromDom(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="options">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromDomBatch(System.CodeDom.Compiler.CompilerParameters,System.CodeDom.CodeCompileUnit[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="compilationUnits">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="options">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromFile(System.CodeDom.Compiler.CompilerParameters,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="options">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromFileBatch(System.CodeDom.Compiler.CompilerParameters,System.String[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="fileNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="options">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromSource(System.CodeDom.Compiler.CompilerParameters,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="options">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.ICodeCompiler.CompileAssemblyFromSourceBatch(System.CodeDom.Compiler.CompilerParameters,System.String[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="sources">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="options">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput(System.CodeDom.CodeTypeReference)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CodeDom.Compiler.ICodeParser.Parse(System.IO.TextReader)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Concurrent.BlockingCollection`1.#ctor(System.Collections.Concurrent.IProducerConsumerCollection{`0})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.BlockingCollection`1.#ctor(System.Collections.Concurrent.IProducerConsumerCollection{`0},System.Int32)">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)">
    <parameter name="collections">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Threading.CancellationToken)">
    <parameter name="collections">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.BlockingCollection`1.CopyTo(`0[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.BlockingCollection`1.GetConsumingEnumerable">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Concurrent.BlockingCollection`1.GetHandles(System.Collections.Concurrent.BlockingCollection{`0}[],System.Collections.Concurrent.BlockingCollection{`0}.OperationMode,System.Threading.CancellationToken,System.Boolean,System.Threading.CancellationToken[]@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="collections">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
    <parameter name="collections">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Threading.CancellationToken)">
    <parameter name="collections">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.BlockingCollection`1.ToArray">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Concurrent.BlockingCollection`1.TryAddTakeAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32,System.Collections.Concurrent.BlockingCollection{`0}.OperationMode,System.Threading.CancellationToken)">
    <parameter name="collections">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)">
    <parameter name="collections">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32)">
    <parameter name="collections">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32,System.Threading.CancellationToken)">
    <parameter name="collections">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.TimeSpan)">
    <parameter name="collections">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
    <parameter name="collections">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32)">
    <parameter name="collections">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32,System.Threading.CancellationToken)">
    <parameter name="collections">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.TimeSpan)">
    <parameter name="collections">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.BlockingCollection`1.ValidateCollectionsArray(System.Collections.Concurrent.BlockingCollection{`0}[],System.Collections.Concurrent.BlockingCollection{`0}.OperationMode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="collections">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.BlockingCollection`1.WaitHandle_WaitAny(System.Collections.Generic.List{System.Threading.WaitHandle},System.Int32,System.Threading.CancellationToken,System.Threading.CancellationToken)">
    <parameter name="handles">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentBag`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentBag`1.CopyTo(`0[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentBag`1.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentBag`1.ToArray">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.ISet`1.Add(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.ISet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.ISet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.ISet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.ISet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.ISet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.ISet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.ISet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.ISet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.ISet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.ISet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IComparer{`0})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedSet`1.Add(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedSet`1.Contains(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[])">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedSet`1.CopyTo(`0[],System.Int32,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedSet`1.CreateSetComparer">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.SortedSet`1.CreateSetComparer(System.Collections.Generic.IEqualityComparer{`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Generic.SortedSet`1.Enumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.SortedSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedSet`1.GetViewBetween(`0,`0)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="upperValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="lowerValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedSet`1.Remove(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedSet`1.RemoveWhere(System.Predicate{`0})">
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.SortedSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.ObjectModel.ObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.ObjectModel.ReadOnlyObservableCollection`1.#ctor(System.Collections.ObjectModel.ObservableCollection{`0})">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.BitVector32.Section.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Specialized.BitVector32.Section.ToString(System.Collections.Specialized.BitVector32.Section)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList)">
    <parameter name="newItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="oldItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList,System.Int32)">
    <parameter name="newItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="oldItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.StringCollection.IndexOf(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.StringCollection.Remove(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.ArrayConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.CultureInfoConverter.GetCultureName(System.Globalization.CultureInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.DecimalConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.CommandID.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.IndexOf(System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.DesignerVerbCollection.OnValidate(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.IDesignerOptionService.GetOptionValue(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="valueName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pageName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.IDesignerOptionService.SetOptionValue(System.String,System.String,System.Object)">
    <parameter name="valueName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pageName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.ITypeResolutionService.GetAssembly(System.Reflection.AssemblyName,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.ITypeResolutionService.GetPathOfAssembly(System.Reflection.AssemblyName)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.ITypeResolutionService.GetType(System.String,System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.MenuCommand.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)">
    <parameter name="serviceType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)">
    <parameter name="serviceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object)">
    <parameter name="serviceType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.ServiceContainer.AddService(System.Type,System.Object,System.Boolean)">
    <parameter name="serviceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type)">
    <parameter name="serviceType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.Design.ServiceContainer.RemoveService(System.Type,System.Boolean)">
    <parameter name="serviceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.EnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.EnumConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.IBindingList.AddNew">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.ICustomTypeDescriptor.GetClassName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.ICustomTypeDescriptor.GetComponentName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.ICustomTypeDescriptor.GetConverter">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)">
    <parameter name="editorBaseType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.ComponentModel.ISite.Container">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.ComponentModel.LicenseProviderAttribute.TypeId">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.MemberDescriptor.FillAttributes(System.Collections.IList)">
    <parameter name="attributeList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.NullableConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.ComponentModel.ProvidePropertyAttribute.TypeId">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.ToolboxItemFilterAttribute.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)">
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)">
    <parameter name="reflectionType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
    <parameter name="provider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
    <parameter name="provider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.ComponentModel.TypeDescriptor.InterfaceType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)">
    <parameter name="provider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)">
    <parameter name="provider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.ConfigurationSettings.GetConfig(System.String)">
    <parameter name="sectionName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.ConfigXmlDocument.CreateAttribute(System.String,System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.ConfigXmlDocument.CreateElement(System.String,System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.IConfigurationSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="section">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Configuration.SchemeSettingElementCollection.CreateNewElement">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Configuration.SchemeSettingElementCollection.IndexOf(System.Configuration.SchemeSettingElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Configuration.SchemeSettingElementCollection.Item(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLogInternal._InternalLogNameFromSourceName(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="machineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLogInternal.CreateEventSource(System.Diagnostics.EventSourceCreationData)">
    <parameter name="sourceData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLogInternal.Delete(System.String)">
    <parameter name="logName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLogInternal.Delete(System.String,System.String)">
    <parameter name="machineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="logName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLogInternal.DeleteEventSource(System.String)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLogInternal.DeleteEventSource(System.String,System.String)">
    <parameter name="machineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLogInternal.Exists(System.String,System.String)">
    <parameter name="machineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLogInternal.FindSame8FirstCharsLog(Microsoft.Win32.RegistryKey,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="keyParent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="logName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLogInternal.FindSourceRegistration(System.String,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="machineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLogInternal.FindSourceRegistration(System.String,System.String,System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="machineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLogInternal.FixupPath(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLogInternal.GetEventLogs">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.EventLogInternal.GetEventLogs(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="machineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLogInternal.LogNameFromSourceName(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="machineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLogInternal.SetSpecialLogRegValues(Microsoft.Win32.RegistryKey,System.String)">
    <parameter name="logKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="logName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLogInternal.SetSpecialSourceRegValues(Microsoft.Win32.RegistryKey,System.Diagnostics.EventSourceCreationData)">
    <parameter name="sourceLogKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="sourceData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLogInternal.SourceExists(System.String,System.String)">
    <parameter name="machineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.EventLogInternal.SourceExists(System.String,System.String,System.Boolean)">
    <parameter name="machineName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.ProcessModuleCollection.IndexOf(System.Diagnostics.ProcessModule)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.ProcessThreadCollection.IndexOf(System.Diagnostics.ProcessThread)">
    <parameter name="thread">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.ProcessThreadCollection.Remove(System.Diagnostics.ProcessThread)">
    <parameter name="thread">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Compression.DeflateStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Compression.DeflateStream.Write(System.Byte[],System.Int32,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionLevel,System.Boolean)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Compression.GZipStream.#ctor(System.IO.Stream,System.IO.Compression.CompressionMode,System.Boolean)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Compression.GZipStream.Write(System.Byte[],System.Int32,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Cache.RequestCachePolicy.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Dns.GetHostAddressesAsync(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Dns.GetHostEntryAsync(System.Net.IPAddress)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Dns.GetHostEntryAsync(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.DnsEndPoint.#ctor(System.String,System.Int32)">
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.DnsEndPoint.#ctor(System.String,System.Int32,System.Net.Sockets.AddressFamily)">
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.DnsEndPoint.Equals(System.Object)">
    <parameter name="comparand">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.HttpListener.DefaultServiceNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.HttpListener.GetContextAsync">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan,System.ArraySegment{System.Byte})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.TimeSpan)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.HttpListenerRequest.GetClientCertificateAsync">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.HttpListenerRequest.TransportContext">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.HttpListenerRequest.UserHostAddress">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64)">
    <parameter name="rangeSpecifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpWebRequest.AddRange(System.String,System.Int64,System.Int64)">
    <parameter name="rangeSpecifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpWebRequest.EndGetRequestStream(System.IAsyncResult,System.Net.TransportContext@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.HttpWebRequest.GetRequestStream(System.Net.TransportContext@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.HttpWebRequest.GetResponse">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.HttpWebRequest.GetSafeHostAndPort(System.Uri,System.Boolean)">
    <parameter name="sourceUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.HttpWebRequest.ServicePoint">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.IAuthenticationModule.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="challenge">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.IAuthenticationModule.AuthenticationType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.IAuthenticationModule.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ICredentialPolicy.ShouldSendCredential(System.Uri,System.Net.WebRequest,System.Net.NetworkCredential,System.Net.IAuthenticationModule)">
    <parameter name="challengeUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ICredentials.GetCredential(System.Uri,System.String)">
    <parameter name="authType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ICredentialsByHost.GetCredential(System.String,System.Int32,System.String)">
    <parameter name="authenticationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.IPAddress.MapToIPv4">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.IPAddress.MapToIPv6">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.IWebProxy.GetProxy(System.Uri)">
    <parameter name="destination">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.IWebProxy.IsBypassed(System.Uri)">
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.IWebProxyScript.Load(System.Uri,System.String,System.Type)">
    <parameter name="scriptLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.IWebProxyScript.Run(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.IWebRequestCreate.Create(System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.Mail.MailMessage.ReplyToList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mail.Message.EncodeHeaders(System.Net.Mime.HeaderCollection)">
    <parameter name="headers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpClient.SendMailAsync(System.Net.Mail.MailMessage)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpClient.SendMailAsync(System.String,System.String,System.String,System.String)">
    <parameter name="from">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="recipients">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mail.SmtpPermission.Intersect(System.Security.IPermission)">
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>null=&gt;null</argument>
    </attribute>
  </member>
  <member name="P:System.Net.Mime.ContentType.MediaType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Mime.QEncodedStream.#ctor(System.IO.Stream)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.QEncodedStream.#ctor(System.IO.Stream,System.Int32)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.SevenBitStream.EncodeBytes(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Mime.SevenBitStream.GetStream">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.GatewayIPAddressInformationCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.IPAddressCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.IPAddressInformationCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.IPGlobalProperties.EndGetUnicastAddresses(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddressesAsync">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.MulticastIPAddressInformationCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NetworkInformation.NetworkInformationPermission.Intersect(System.Security.IPermission)">
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>null=&gt;null</argument>
    </attribute>
  </member>
  <member name="M:System.Net.NetworkInformation.PhysicalAddress.Equals(System.Object)">
    <parameter name="comparand">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.NetworkInformation.UnicastIPAddressInformationCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.NTAuthentication.#ctor(System.String,System.Net.NetworkCredential,System.String,System.Net.WebRequest,System.Security.Authentication.ExtendedProtection.ChannelBinding)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="networkCredential">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SafeFreeContextBufferChannelBinding.QueryContextChannelBinding_SCHANNEL(System.Net.SafeDeleteContext,System.Net.ContextAttribute,System.Net.Bindings*,System.Net.SafeFreeContextBufferChannelBinding)">
    <parameter name="phContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SafeFreeContextBufferChannelBinding.QueryContextChannelBinding_SECUR32(System.Net.SafeDeleteContext,System.Net.ContextAttribute,System.Net.Bindings*,System.Net.SafeFreeContextBufferChannelBinding)">
    <parameter name="phContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
    <parameter name="targetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="credential">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
    <parameter name="credential">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="targetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
    <parameter name="credential">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="targetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="credential">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="credential">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="targetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="credential">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)">
    <parameter name="innerStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.Security.SslStream.TransportContext">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ServicePointManager.FindServicePoint(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.ServicePointManager.FindServicePoint(System.Uri,System.Net.IWebProxy)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.SocketAddress.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String)">
    <parameter name="filepath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32)">
    <parameter name="filepath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.SendPacketsElement.#ctor(System.String,System.Int32,System.Int32,System.Boolean)">
    <parameter name="filepath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.CancelConnectAsync(System.Net.Sockets.SocketAsyncEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.Socket.ConnectAsync(System.Net.Sockets.SocketType,System.Net.Sockets.ProtocolType,System.Net.Sockets.SocketAsyncEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Sockets.TcpListener.AcceptSocketAsync">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Sockets.TcpListener.AcceptTcpClientAsync">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Sockets.TcpListener.Create(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Sockets.UdpClient.ReceiveAsync">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Sockets.UdpReceiveResult.#ctor(System.Byte[],System.Net.IPEndPoint)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="remoteEndPoint">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.Sockets.UdpReceiveResult.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.TransportContext.GetChannelBinding(System.Security.Authentication.ExtendedProtection.ChannelBindingKind)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.WebClient.DownloadDataTaskAsync(System.String)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.DownloadDataTaskAsync(System.Uri)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.DownloadFileTaskAsync(System.String,System.String)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.DownloadFileTaskAsync(System.Uri,System.String)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.DownloadStringTaskAsync(System.String)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.DownloadStringTaskAsync(System.Uri)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.OpenReadTaskAsync(System.String)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.OpenReadTaskAsync(System.Uri)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.OpenWriteTaskAsync(System.String)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.OpenWriteTaskAsync(System.String,System.String)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.OpenWriteTaskAsync(System.Uri)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.OpenWriteTaskAsync(System.Uri,System.String)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadDataTaskAsync(System.String,System.Byte[])">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadDataTaskAsync(System.String,System.String,System.Byte[])">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadDataTaskAsync(System.Uri,System.Byte[])">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadDataTaskAsync(System.Uri,System.String,System.Byte[])">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadFileTaskAsync(System.String,System.String)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadFileTaskAsync(System.String,System.String,System.String)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadFileTaskAsync(System.Uri,System.String)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadFileTaskAsync(System.Uri,System.String,System.String)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadStringTaskAsync(System.String,System.String)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadStringTaskAsync(System.String,System.String,System.String)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadStringTaskAsync(System.Uri,System.String)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadStringTaskAsync(System.Uri,System.String,System.String)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadValuesTaskAsync(System.String,System.Collections.Specialized.NameValueCollection)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadValuesTaskAsync(System.String,System.String,System.Collections.Specialized.NameValueCollection)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadValuesTaskAsync(System.Uri,System.Collections.Specialized.NameValueCollection)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebClient.UploadValuesTaskAsync(System.Uri,System.String,System.Collections.Specialized.NameValueCollection)">
    <parameter name="address">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebHeaderCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.WebHeaderCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebRequest.CreateHttp(System.String)">
    <parameter name="requestUriString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebRequest.CreateHttp(System.Uri)">
    <parameter name="requestUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebRequest.GetRequestStreamAsync">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.WebRequest.GetResponseAsync">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.WebSockets.ClientWebSocket.ConnectAsync(System.Uri,System.Threading.CancellationToken)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebSockets.ClientWebSocketOptions.AddSubProtocol(System.String)">
    <parameter name="subProtocol">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebSockets.WebSocket.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
    <parameter name="statusDescription">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebSockets.WebSocket.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
    <parameter name="statusDescription">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebSockets.WebSocket.CreateClientWebSocket(System.IO.Stream,System.String,System.Int32,System.Int32,System.TimeSpan,System.Boolean,System.ArraySegment{System.Byte})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="innerStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebSockets.WebSocket.ThrowOnInvalidState(System.Net.WebSockets.WebSocketState,System.Net.WebSockets.WebSocketState[])">
    <parameter name="validStates">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebUtility.HtmlDecode(System.String)">
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>null=&gt;null;notnull=&gt;notnull</argument>
    </attribute>
  </member>
  <member name="M:System.Net.WebUtility.HtmlEncode(System.String)">
   <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>null=&gt;null;notnull=&gt;notnull</argument>
    </attribute>
  </member>
  <member name="M:System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="encodedValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Net.WebUtility.UrlEncode(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>null=&gt;null</argument>
    </attribute>
  </member>
  <member name="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Net.WriteStreamClosedEventArgs.Error">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Runtime.InteropServices.ComTypes.IEnumFORMATETC.Next(System.Int32,System.Runtime.InteropServices.ComTypes.FORMATETC[],System.Int32[])">
    <parameter name="rgelt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.Versioning.FrameworkName.#ctor(System.String)">
    <parameter name="frameworkName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.Versioning.FrameworkName.#ctor(System.String,System.Version)">
    <parameter name="version">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="identifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.Versioning.FrameworkName.#ctor(System.String,System.Version,System.String)">
    <parameter name="identifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="version">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.Versioning.FrameworkName.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.Versioning.FrameworkName.Equals(System.Runtime.Versioning.FrameworkName)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Runtime.Versioning.FrameworkName.FullName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.AccessControl.SemaphoreAccessRule.#ctor(System.String,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AccessControlType)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.AccessControl.SemaphoreAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AuditFlags)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement.BuildPolicy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection.Add(System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection.CreateNewElement">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection.IndexOf(System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection.Item(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection.Remove(System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection.Remove(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.#ctor(System.Security.Authentication.ExtendedProtection.PolicyEnforcement,System.Security.Authentication.ExtendedProtection.ChannelBinding)">
    <parameter name="customChannelBinding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.#ctor(System.Collections.ICollection)">
    <parameter name="items">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Contains(System.String)">
    <parameter name="searchServiceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge(System.Collections.IEnumerable)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="serviceNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="serviceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Claims.DynamicRoleClaimProvider.AddDynamicRoleClaims(System.Security.Claims.ClaimsIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})">
    <parameter name="claimsIdentity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="claims">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.Oid.FromFriendlyName(System.String,System.Security.Cryptography.OidGroup)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="friendlyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.Oid.FromOidValue(System.String,System.Security.Cryptography.OidGroup)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="oidValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Permissions.StorePermission.Copy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Permissions.TypeDescriptorPermission.Copy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Permissions.TypeDescriptorPermissionAttribute.CreatePermission">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="replacement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="evaluator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexRunner.Scan(System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.TimeSpan)">
    <parameter name="regex">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.BarrierPostPhaseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Semaphore.TryOpenExisting(System.String,System.Security.AccessControl.SemaphoreRights,System.Threading.Semaphore@)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Semaphore.TryOpenExisting(System.String,System.Threading.Semaphore@)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Uri.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Web.AspNetHostingPermission.Intersect(System.Security.IPermission)">
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>null=&gt;null</argument>
    </attribute>
  </member>
  <member name="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.ObjectModel.ObservableCollection`1.#ctor(System.Collections.Generic.List{`0})">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.ObjectModel.ObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="componentType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Diagnostics.Trace.Listeners">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Diagnostics.TraceSource.Listeners">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Diagnostics.TraceSource.Name">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Diagnostics.TraceSource.Switch">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Media.SystemSounds.Asterisk">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Media.SystemSounds.Beep">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Media.SystemSounds.Exclamation">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Media.SystemSounds.Hand">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Media.SystemSounds.Question">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.Cookie.Name">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.HttpWebRequest.Proxy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.WebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Net.WebRequest.GetRequestStream">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.WebRequest.Headers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Net.WebRequest.Method">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Diagnostics.Process.MainModule">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
</assembly>
