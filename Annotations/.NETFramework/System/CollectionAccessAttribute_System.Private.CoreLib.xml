<?xml version="1.0" encoding="utf-8"?>
<assembly name="System">
  <member name="M:System.Collections.Generic.ISet`1.Add(`0)">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>7</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.ISet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>6</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.ISet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>2</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.ISet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>2</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.ISet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>6</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.ISet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.ISet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.ISet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.ISet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.ISet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.ISet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.Queue`1.Clear">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>2</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.Queue`1.CopyTo(`0[],System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.Queue`1.Enqueue(`0)">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>6</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.Queue`1.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.Queue`1.Dequeue">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>3</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.Queue`1.Peek">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.Queue`1.Contains(`0)">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.Queue`1.ToArray">
    <return>
      <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
        <argument>6</argument>
      </attribute>
    </return>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.Queue`1.TrimExcess">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>0</argument>
    </attribute>
  </member>
  <member name="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)">
    <return>
      <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
        <argument>6</argument>
      </attribute>
    </return>
  </member>
  <member name="M:System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)">
    <return>
      <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
        <argument>6</argument>
      </attribute>
    </return>
  </member>
</assembly>