<?xml version="1.0" encoding="utf-8"?>
<assembly name="System.DirectoryServices">
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.FindByTransportType(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.GetDirectoryEntry">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.GetDirectoryEntry">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.Add(System.String,System.DirectoryServices.ActiveDirectory.AttributeMetadata)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.Contains(System.String)">
    <parameter name="attributeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.CopyTo(System.DirectoryServices.ActiveDirectory.AttributeMetadata[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.Item(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor(System.Boolean[])">
    <parameter name="schedule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.#ctor(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)">
    <parameter name="schedule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.GetUnmanagedSchedule">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.RawSchedule">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetSchedule(System.DayOfWeek[],System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour,System.DirectoryServices.ActiveDirectory.HourOfDay,System.DirectoryServices.ActiveDirectory.MinuteOfHour)">
    <parameter name="days">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.SetUnmanagedSchedule(System.Byte[])">
    <parameter name="unmanagedSchedule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule.ValidateRawArray(System.Boolean[0:,0:,0:])">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryEntryManager)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllClasses(System.DirectoryServices.ActiveDirectory.SchemaClassType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctClasses">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllDefunctProperties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindAllProperties(System.DirectoryServices.ActiveDirectory.PropertyTypes)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindClass(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="ldapDisplayName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctClass(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="commonName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindDefunctProperty(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="commonName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.FindProperty(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="ldapDisplayName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetAllClasses(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.DirectoryEntry,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetAllProperties(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.DirectoryEntry,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetCurrentSchema">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetSchema(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.GetSchemaRoleOwner">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema.SchemaRoleOwner">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ldapDisplayName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.DirectoryEntry,System.DirectoryServices.DirectoryEntry)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.AuxiliaryClasses">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ldapDisplayName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.GetAllProperties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.GetClasses(System.Collections.ICollection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="ldapDisplayNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.GetDirectoryEntry">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.GetProperties(System.Collections.ICollection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="ldapDisplayNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.GetPropertiesFromSchemaContainer(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.DirectoryEntry,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.GetPropertyValuesRecursively(System.String[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="propertyNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.GetSchemaClassDirectoryEntry">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.GetValueFromCache(System.String,System.Boolean)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.GetValuesFromCache(System.String)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.MandatoryProperties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.OptionalProperties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.PossibleInferiors">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.PossibleSuperiors">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.SetProperty(System.String,System.Object)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass,System.Boolean,System.String,System.Collections.ICollection)">
    <parameter name="classes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass,System.Boolean,System.String,System.Collections.ICollection,System.Boolean)">
    <parameter name="classNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)">
    <parameter name="schemaClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass[])">
    <parameter name="schemaClasses">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection)">
    <parameter name="schemaClasses">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.AddRange(System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection)">
    <parameter name="schemaClasses">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)">
    <parameter name="schemaClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass[],System.Int32)">
    <parameter name="schemaClasses">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.GetMultiValuedProperty">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)">
    <parameter name="schemaClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)">
    <parameter name="schemaClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
    <parameter name="newValue">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="oldValue">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClassCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)">
    <parameter name="schemaClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ldapDisplayName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.DirectoryEntry,System.DirectoryServices.DirectoryEntry)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ldapDisplayName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.GetDirectoryEntry">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.GetPropertiesFromSchemaContainer(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.DirectoryEntry,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.GetSchemaPropertyDirectoryEntry">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.GetValueFromCache(System.String,System.Boolean)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty.SetProperty(System.String,System.Object)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass,System.Boolean,System.String,System.Collections.ICollection)">
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass,System.Boolean,System.String,System.Collections.ICollection,System.Boolean)">
    <parameter name="propertyNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)">
    <parameter name="schemaProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty[])">
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection)">
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.AddRange(System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection)">
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)">
    <parameter name="schemaProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Contains(System.String)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty[],System.Int32)">
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.GetMultiValuedProperty">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)">
    <parameter name="schemaProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)">
    <parameter name="schemaProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
    <parameter name="newValue">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="oldValue">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaPropertyCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)">
    <parameter name="schemaProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
    <parameter name="siteName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.Boolean)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="siteName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.GetBridgeheadServers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.GetComputerSite">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.GetDirectoryEntry">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.NTDSSiteEntry">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.ValidateArgument(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="siteName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.#ctor(System.Collections.ArrayList)">
    <parameter name="sites">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)">
    <parameter name="site">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite[])">
    <parameter name="sites">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection)">
    <parameter name="sites">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)">
    <parameter name="site">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)">
    <parameter name="site">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)">
    <parameter name="site">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
    <parameter name="oldValue">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)">
    <parameter name="site">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
    <parameter name="siteLinkName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
    <parameter name="siteLinkName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="siteLinkName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="siteLinkName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="siteLinkName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.GetDirectoryEntry">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.ValidateArgument(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="siteLinkName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
    <parameter name="bridgeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
    <parameter name="bridgeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="bridgeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="bridgeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.GetDirectoryEntry">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.ValidateArgument(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="bridgeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)">
    <parameter name="link">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink[])">
    <parameter name="links">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection)">
    <parameter name="links">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)">
    <parameter name="link">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)">
    <parameter name="link">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)">
    <parameter name="link">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
    <parameter name="oldValue">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)">
    <parameter name="link">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
    <parameter name="subnetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String)">
    <parameter name="siteName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="subnetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String,System.Boolean)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="subnetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.GetDirectoryEntry">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.ValidateArgument(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="subnetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Add(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)">
    <parameter name="subnet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet[])">
    <parameter name="subnets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.AddRange(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection)">
    <parameter name="subnets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)">
    <parameter name="subnet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)">
    <parameter name="subnet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)">
    <parameter name="subnet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.MakePath(System.String)">
    <parameter name="subnetDN">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
    <parameter name="newValue">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="oldValue">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnetCollection.Remove(System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet)">
    <parameter name="subnet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstance.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryEntryManager)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.AdamInstance.ConfigurationSet">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstance.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="partitionName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstance.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="partitionName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetAdamInstance(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationFailures(System.DirectoryServices.ActiveDirectory.DS_REPL_INFO_TYPE)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.AdamInstance.Roles">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection.Contains(System.DirectoryServices.ActiveDirectory.AdamInstance)">
    <parameter name="adamInstance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection.IndexOf(System.DirectoryServices.ActiveDirectory.AdamInstance)">
    <parameter name="adamInstance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ADSearcher.FindAll">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.ADSearcher.PropertiesToLoad">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
    <parameter name="distinguishedName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String)">
    <parameter name="distinguishedName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="objectClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String,System.DirectoryServices.ActiveDirectory.DirectoryEntryManager)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.CreateApplicationPartition(System.String,System.String)">
    <parameter name="distinguishedName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.ApplicationPartition.DirectoryServers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDirectoryServers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDirectoryServers(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="siteName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDirectoryServersInternal(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDiscoverableDirectoryServers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDiscoverableDirectoryServers(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="siteName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindAllDiscoverableDirectoryServersInternal(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="distinguishedName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="siteName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServer(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="siteName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.FindDirectoryServerInternal(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.GetApplicationPartition(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.GetApplicationPartitionType(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.GetCrossRefEntry">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartition.ValidateApplicationPartitionParameters(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String,System.Boolean)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="distinguishedName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection.Contains(System.DirectoryServices.ActiveDirectory.ApplicationPartition)">
    <parameter name="applicationPartition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ApplicationPartition)">
    <parameter name="applicationPartition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection.Contains(System.DirectoryServices.ActiveDirectory.AttributeMetadata)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection.IndexOf(System.DirectoryServices.ActiveDirectory.AttributeMetadata)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.AdamInstances">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.ApplicationPartitions">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="partitionName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstance(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="siteName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="partitionName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAdamInstances(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAliveAdamInstance(System.String,System.DirectoryServices.ActiveDirectory.DirectoryContext,System.Collections.ArrayList)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="adamInstanceNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="partitionName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAllAdamInstances(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="siteName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindAnyAdamInstance(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindOneAdamInstance(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.FindOneAdamInstance(System.String,System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetApplicationPartitions">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetConfigurationSet(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetDirectoryEntry">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetRoleOwner(System.DirectoryServices.ActiveDirectory.AdamRole)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetSearchRootEntry(System.DirectoryServices.ActiveDirectory.Forest)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="forest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ConfigurationSet.GetSites">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.NamingRoleOwner">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Schema">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.SchemaRoleOwner">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.ConfigurationSet.Sites">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryContext.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.String,System.String,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryContext.GetLoggedOnDomain">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryContext.IsContextValid(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.DirectoryContextType)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryEntryManager.Bind(System.String,System.String,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryEntryManager.ExpandWellKnownDN(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.WellKnownDN)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryEntryManager.GetCachedDirectoryEntries">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryEntryManager.GetCachedDirectoryEntry(System.String)">
    <parameter name="distinguishedName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryEntryManager.GetDirectoryEntry(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.WellKnownDN)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryEntryManager.GetDirectoryEntry(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryEntryManager.GetDirectoryEntryInternal(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryEntryManager.GetNewDirectoryEntry(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryEntryManager.RemoveIfExists(System.String)">
    <parameter name="distinguishedName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.ConstructFailures(System.IntPtr,System.DirectoryServices.ActiveDirectory.DirectoryServer,System.DirectoryServices.ActiveDirectory.LoadLibrarySafeHandle)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.ConstructMetaData(System.Boolean,System.IntPtr,System.DirectoryServices.ActiveDirectory.DirectoryServer,System.DirectoryServices.ActiveDirectory.LoadLibrarySafeHandle)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.ConstructNeighbors(System.IntPtr,System.DirectoryServices.ActiveDirectory.DirectoryServer,System.DirectoryServices.ActiveDirectory.LoadLibrarySafeHandle)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.ConstructPendingOperations(System.IntPtr,System.DirectoryServices.ActiveDirectory.DirectoryServer,System.DirectoryServices.ActiveDirectory.LoadLibrarySafeHandle)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.ConstructReplicationCursors(System.IntPtr,System.Boolean,System.IntPtr,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer,System.DirectoryServices.ActiveDirectory.LoadLibrarySafeHandle)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetAllReplicationNeighbors">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetDirectoryEntry">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetInboundConnectionsHelper">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetOutboundConnectionsHelper">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetPartitions">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationConnectionFailures">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationCursors(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="partition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationMetadata(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="objectPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationNeighbors(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="partition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.GetReplicationOperationInformation">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.InboundConnections">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.IPAddress">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.MoveToAnotherSite(System.String)">
    <parameter name="siteName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.OutboundConnections">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.DirectoryServer.Partitions">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaAllHelper(System.IntPtr,System.DirectoryServices.ActiveDirectory.SyncReplicaFromAllServersCallback,System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions,System.DirectoryServices.ActiveDirectory.SyncUpdateCallback,System.DirectoryServices.ActiveDirectory.LoadLibrarySafeHandle)">
    <parameter name="partition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)">
    <parameter name="partition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaFromServer(System.String,System.String)">
    <parameter name="sourceServer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="partition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.SyncReplicaHelper(System.IntPtr,System.Boolean,System.String,System.String,System.Int32,System.DirectoryServices.ActiveDirectory.LoadLibrarySafeHandle)">
    <parameter name="partition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServer.TriggerSyncReplicaFromNeighbors(System.String)">
    <parameter name="partition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.DirectoryEntry,System.Boolean,System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection)">
    <parameter name="servers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Add(System.DirectoryServices.ActiveDirectory.DirectoryServer)">
    <parameter name="server">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.AddRange(System.DirectoryServices.ActiveDirectory.DirectoryServer[])">
    <parameter name="servers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Contains(System.DirectoryServices.ActiveDirectory.DirectoryServer)">
    <parameter name="server">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.CopyTo(System.DirectoryServices.ActiveDirectory.DirectoryServer[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.IndexOf(System.DirectoryServices.ActiveDirectory.DirectoryServer)">
    <parameter name="server">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Insert(System.Int32,System.DirectoryServices.ActiveDirectory.DirectoryServer)">
    <parameter name="server">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
    <parameter name="newValue">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="oldValue">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DirectoryServerCollection.Remove(System.DirectoryServices.ActiveDirectory.DirectoryServer)">
    <parameter name="server">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DistinguishedName.#ctor(System.String)">
    <parameter name="dn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DistinguishedName.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.Domain.Children">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)">
    <parameter name="targetDomainName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="trustPassword">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)">
    <parameter name="targetDomain">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship(System.String)">
    <parameter name="targetDomainName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)">
    <parameter name="targetDomain">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.Domain.DomainControllers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="siteName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="siteName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.DirectoryServices.ActiveDirectory.LocatorOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="siteName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="siteName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.Domain.Forest">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Domain.GetChildDomains">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Domain.GetDomain(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Domain.GetParent">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Domain.GetRoleOwner(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus(System.String)">
    <parameter name="targetDomainName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus(System.String)">
    <parameter name="targetDomainName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship(System.String)">
    <parameter name="targetDomainName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Domain.GetTrustsHelper(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Domain.RepairTrustHelper(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)">
    <parameter name="targetDomain">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)">
    <parameter name="targetDomain">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus(System.String,System.Boolean)">
    <parameter name="targetDomainName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus(System.String,System.Boolean)">
    <parameter name="targetDomainName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)">
    <parameter name="targetDomainName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="newTrustPassword">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.String)">
    <parameter name="targetDomainName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="newTrustPassword">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)">
    <parameter name="targetDomain">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship(System.String)">
    <parameter name="targetDomainName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)">
    <parameter name="targetDomain">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DomainCollection.Contains(System.DirectoryServices.ActiveDirectory.Domain)">
    <parameter name="domain">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DomainCollection.IndexOf(System.DirectoryServices.ActiveDirectory.Domain)">
    <parameter name="domain">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.DomainController.ComputerObjectName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.DomainController.Domain">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.EnableGlobalCatalog">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="siteName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.FindAllInternal(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.Boolean,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="siteName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="siteName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOneInternal(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.FindOneWithCredentialValidation(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.DomainController.Forest">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.GetDirectorySearcher">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.GetDomainController(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationFailures(System.DirectoryServices.ActiveDirectory.DS_REPL_INFO_TYPE)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.GetRoles">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.InternalGetDirectorySearcher">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.DomainController.NtdsaObjectName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.ParseDateTime(System.String)">
    <parameter name="dateTime">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.DomainController.Roles">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.DomainController.ServerObjectName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.DomainController.SiteName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.DomainController.SiteObjectName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DomainController.ValidateCredential(System.DirectoryServices.ActiveDirectory.DomainController,System.DirectoryServices.ActiveDirectory.DirectoryContext)">
    <parameter name="dc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DomainControllerCollection.Contains(System.DirectoryServices.ActiveDirectory.DomainController)">
    <parameter name="domainController">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DomainControllerCollection.IndexOf(System.DirectoryServices.ActiveDirectory.DomainController)">
    <parameter name="domainController">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ExceptionHelper.CreateForestTrustCollisionException(System.IntPtr)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ExceptionHelper.CreateSyncAllException(System.IntPtr,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ExceptionHelper.GetErrorMessage(System.Int32,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ExceptionHelper.GetExceptionFromCOMException(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.Runtime.InteropServices.COMException)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ExceptionHelper.GetExceptionFromCOMException(System.Runtime.InteropServices.COMException)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ExceptionHelper.GetExceptionFromErrorCode(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ExceptionHelper.GetExceptionFromErrorCode(System.Int32,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.Forest.ApplicationPartitions">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)">
    <parameter name="targetForestName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="trustPassword">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)">
    <parameter name="targetForest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship(System.String)">
    <parameter name="targetForestName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)">
    <parameter name="targetForest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.Forest.Domains">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="siteName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="siteName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.DirectoryServices.ActiveDirectory.LocatorOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="siteName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="siteName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Forest.GetAllTrustRelationships">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Forest.GetApplicationPartitions">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Forest.GetCurrentForest">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Forest.GetDomains">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Forest.GetForest(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Forest.GetRoleOwner(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Forest.GetSelectiveAuthenticationStatus(System.String)">
    <parameter name="targetForestName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Forest.GetSidFilteringStatus(System.String)">
    <parameter name="targetForestName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Forest.GetSites">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Forest.GetTrustRelationship(System.String)">
    <parameter name="targetForestName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Forest.GetTrustsHelper(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.Forest.GlobalCatalogs">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.Forest.NamingRoleOwner">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Forest.RepairTrustHelper(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)">
    <parameter name="targetForest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Forest.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)">
    <parameter name="targetForest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.Forest.RootDomain">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.Forest.Schema">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.Forest.SchemaRoleOwner">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Forest.SetSelectiveAuthenticationStatus(System.String,System.Boolean)">
    <parameter name="targetForestName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Forest.SetSidFilteringStatus(System.String,System.Boolean)">
    <parameter name="targetForestName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.Forest.Sites">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)">
    <parameter name="targetForestName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="newTrustPassword">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.String)">
    <parameter name="targetForestName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="newTrustPassword">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Forest.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)">
    <parameter name="targetForest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Forest.VerifyOutboundTrustRelationship(System.String)">
    <parameter name="targetForestName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Forest.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)">
    <parameter name="targetForest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustCollisionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.Contains(System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation)">
    <parameter name="information">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation)">
    <parameter name="information">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation.#ctor(System.Int32,System.DirectoryServices.ActiveDirectory.LSA_FOREST_TRUST_DOMAIN_INFO,System.DirectoryServices.ActiveDirectory.LARGE_INTEGER)">
    <parameter name="domainInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.Contains(System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision)">
    <parameter name="collision">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision)">
    <parameter name="collision">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DS_DOMAIN_TRUSTS,System.DirectoryServices.ActiveDirectory.TrustType)">
    <parameter name="unmanagedTrust">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.DisableGlobalCatalog">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="siteName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAllInternal(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindAllProperties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="siteName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="siteName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOneInternal(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.FindOneWithCredentialValidation(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.GetGlobalCatalog(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalog.InternalGetDirectorySearcher">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.Contains(System.DirectoryServices.ActiveDirectory.GlobalCatalog)">
    <parameter name="globalCatalog">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.IndexOf(System.DirectoryServices.ActiveDirectory.GlobalCatalog)">
    <parameter name="globalCatalog">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Locator.DnsGetDcWrapper(System.String,System.String,System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Locator.DnsQueryWrapper(System.String,System.String,System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Locator.EnumerateDomainControllers(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String,System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.OMObjectClass.Equals(System.DirectoryServices.ActiveDirectory.OMObjectClass)">
    <parameter name="OMObjectClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.PropertyManager.GetPropertyValue(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.DirectoryEntry,System.String)">
    <parameter name="directoryEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.PropertyManager.GetPropertyValue(System.DirectoryServices.DirectoryEntry,System.String)">
    <parameter name="directoryEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.PropertyManager.GetSearchResultPropertyValue(System.DirectoryServices.SearchResult,System.String)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)">
    <parameter name="schemaClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass)">
    <parameter name="schemaClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)">
    <parameter name="schemaProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty)">
    <parameter name="schemaProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.AddRange(System.Collections.ICollection)">
    <parameter name="servers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.Contains(System.DirectoryServices.ActiveDirectory.DirectoryServer)">
    <parameter name="directoryServer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.IndexOf(System.DirectoryServices.ActiveDirectory.DirectoryServer)">
    <parameter name="directoryServer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.#ctor(System.Collections.ArrayList)">
    <parameter name="sites">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)">
    <parameter name="site">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite)">
    <parameter name="site">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge)">
    <parameter name="bridge">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge)">
    <parameter name="bridge">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.Contains(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)">
    <parameter name="link">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink)">
    <parameter name="link">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.Contains(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.IndexOf(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer)">
    <parameter name="sourceServer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule)">
    <parameter name="sourceServer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer,System.DirectoryServices.ActiveDirectory.ActiveDirectorySchedule,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="sourceServer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryServer,System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType)">
    <parameter name="sourceServer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.FindByName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.GetDirectoryEntry">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ValidateArgument(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnection.ValidateTargetAndSourceServer(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.DirectoryServer)">
    <parameter name="sourceServer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationConnection)">
    <parameter name="connection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationConnection)">
    <parameter name="connection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.AddHelper(System.String,System.Object,System.Boolean,System.IntPtr)">
    <parameter name="cursors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationCursor)">
    <parameter name="cursor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationCursor)">
    <parameter name="cursor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationFailure.LastErrorMessage">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.AddHelper(System.DirectoryServices.ActiveDirectory.DS_REPL_KCC_DSA_FAILURES,System.IntPtr)">
    <parameter name="failures">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationFailure)">
    <parameter name="failure">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationFailure)">
    <parameter name="failure">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationNeighbor.LastSyncMessage">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.AddHelper(System.DirectoryServices.ActiveDirectory.DS_REPL_NEIGHBORS,System.IntPtr)">
    <parameter name="neighbors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationNeighbor)">
    <parameter name="neighbor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationNeighbor)">
    <parameter name="neighbor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.AddHelper(System.DirectoryServices.ActiveDirectory.DS_REPL_PENDING_OPS,System.IntPtr)">
    <parameter name="operations">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.Contains(System.DirectoryServices.ActiveDirectory.ReplicationOperation)">
    <parameter name="operation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.IndexOf(System.DirectoryServices.ActiveDirectory.ReplicationOperation)">
    <parameter name="operation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.ErrorInformation">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.SyncFromAllServersOperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Syntax.Equals(System.DirectoryServices.ActiveDirectory.Syntax)">
    <parameter name="syntax">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.TopLevelName.#ctor(System.Int32,System.DirectoryServices.ActiveDirectory.LSA_UNICODE_STRING,System.DirectoryServices.ActiveDirectory.LARGE_INTEGER)">
    <parameter name="val">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Add(System.DirectoryServices.ActiveDirectory.TopLevelName)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Contains(System.DirectoryServices.ActiveDirectory.TopLevelName)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.IndexOf(System.DirectoryServices.ActiveDirectory.TopLevelName)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.TrustHelper.CreateTrust(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.Boolean,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)">
    <parameter name="password">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="targetContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="sourceContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.TrustHelper.CreateTrustPassword">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.TrustHelper.DeleteTrust(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String,System.Boolean)">
    <parameter name="sourceContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.TrustHelper.GetTrustedDomainInfo(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.Boolean)">
    <parameter name="targetContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.TrustHelper.GetTrustedDomainInfoStatus(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String,System.DirectoryServices.ActiveDirectory.TRUST_ATTRIBUTE,System.Boolean)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.TrustHelper.SetTrustedDomainInfoStatus(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String,System.DirectoryServices.ActiveDirectory.TRUST_ATTRIBUTE,System.Boolean,System.Boolean)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.TrustHelper.UpdateTrust(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String,System.String,System.Boolean)">
    <parameter name="password">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.TrustHelper.UpdateTrustDirection(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String,System.String,System.Boolean,System.DirectoryServices.ActiveDirectory.TrustDirection)">
    <parameter name="password">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.TrustHelper.ValidateTrustAttribute(System.DirectoryServices.ActiveDirectory.TRUSTED_DOMAIN_INFORMATION_EX,System.Boolean,System.String,System.String)">
    <parameter name="domainInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.TrustHelper.VerifyTrust(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String,System.Boolean,System.DirectoryServices.ActiveDirectory.TrustDirection,System.Boolean,System.String)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.TrustObject)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.#ctor(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.Collections.ArrayList)">
    <parameter name="trusts">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.Contains(System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation)">
    <parameter name="information">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.IndexOf(System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation)">
    <parameter name="information">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Utils.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32)">
    <parameter name="s1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="s2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Utils.Compare(System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.UInt32)">
    <parameter name="s1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="s2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Utils.Compare(System.String,System.String)">
    <parameter name="s2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="s1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Utils.Compare(System.String,System.String,System.UInt32)">
    <parameter name="s1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="s2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Utils.GetAdamDnsHostNameFromNTDSA(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="dn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Utils.GetAdamHostNameAndPortsFromNTDSA(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="dn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Utils.GetAuthIdentity(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LoadLibrarySafeHandle)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Utils.GetCrossRefEntry(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.DirectoryEntry,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="partitionName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Utils.GetDNComponents(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="distinguishedName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Utils.GetDNFromTransportType(System.DirectoryServices.ActiveDirectory.ActiveDirectoryTransportType,System.DirectoryServices.ActiveDirectory.DirectoryContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Utils.GetDnsHostNameFromNTDSA(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="dn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Utils.GetDnsNameFromDN(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Utils.GetDomainAndUsername(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String@,System.String@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Utils.GetEscapedFilterValue(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="filterValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Utils.GetNewDirectoryContext(System.String,System.DirectoryServices.ActiveDirectory.DirectoryContextType,System.DirectoryServices.ActiveDirectory.DirectoryContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Utils.GetPartialDN(System.String,System.Int32)">
    <parameter name="distinguishedName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Utils.GetPolicyServerName(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.Boolean,System.Boolean,System.String)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Utils.GetRdnFromDN(System.String)">
    <parameter name="distinguishedName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Utils.GetReplicaList(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Utils.GetServerNameFromInvocationID(System.String,System.Guid,System.DirectoryServices.ActiveDirectory.DirectoryServer)">
    <parameter name="server">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Utils.GetTransportTypeFromDN(System.String)">
    <parameter name="DN">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Utils.GetValuesWithRangeRetrieval(System.DirectoryServices.DirectoryEntry,System.String,System.Collections.ArrayList,System.Collections.ArrayList,System.DirectoryServices.SearchScope)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="propertiesWithRangeRetrieval">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="propertiesWithoutRangeRetrieval">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Utils.GetValuesWithRangeRetrieval(System.DirectoryServices.DirectoryEntry,System.String,System.Collections.ArrayList,System.DirectoryServices.SearchScope)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="propertiesToLoad">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Utils.Impersonate(System.DirectoryServices.ActiveDirectory.DirectoryContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Utils.IsValidDNFormat(System.String)">
    <parameter name="distinguishedName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Utils.Split(System.String,System.Char)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="distinguishedName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Utils.SplitServerNameAndPortNumber(System.String,System.String@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="serverName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectoryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Int32,System.Security.AccessControl.AccessControlType,System.Guid,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Guid)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.Guid)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.DirectoryServices.ActiveDirectoryRights,System.Security.AccessControl.AuditFlags,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectoryAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Int32,System.Security.AccessControl.AuditFlags,System.Guid,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Guid)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectorySecurity.#ctor(System.Byte[],System.DirectoryServices.SecurityMasks)">
    <parameter name="sdBinaryForm">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectorySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType,System.Guid,System.Guid)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectorySecurity.AddAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)">
    <parameter name="rule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectorySecurity.AddAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)">
    <parameter name="rule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectorySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags,System.Guid,System.Guid)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccess(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)">
    <parameter name="rule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAccessRuleSpecific(System.DirectoryServices.ActiveDirectoryAccessRule)">
    <parameter name="rule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAudit(System.Security.Principal.IdentityReference)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)">
    <parameter name="rule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectorySecurity.RemoveAuditRuleSpecific(System.DirectoryServices.ActiveDirectoryAuditRule)">
    <parameter name="rule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectorySecurity.ResetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)">
    <parameter name="rule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectorySecurity.SetAccessRule(System.DirectoryServices.ActiveDirectoryAccessRule)">
    <parameter name="rule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectorySecurity.SetAuditRule(System.DirectoryServices.ActiveDirectoryAuditRule)">
    <parameter name="rule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.COMExceptionHelper.CreateFormattedComException(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.COMExceptionHelper.CreateFormattedComException(System.Runtime.InteropServices.COMException)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.CreateChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.DeleteChildAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.DeleteTreeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.DeleteTreeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.DeleteTreeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.Design.DirectoryEntryConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.Design.DirectoryEntryConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.Design.DirectoryEntryConverter.GetFromCache(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.Design.DirectoryEntryConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.Design.DirectoryEntryConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.DirectoryEntries.Add(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.DirectoryEntries.ChildEnumerator.#ctor(System.DirectoryServices.DirectoryEntry)">
    <parameter name="container">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.DirectoryServices.DirectoryEntries.ChildEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.DirectoryEntries.ChildEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.DirectoryEntries.Find(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.DirectoryEntries.Find(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.DirectoryEntries.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.DirectoryEntries.Remove(System.DirectoryServices.DirectoryEntry)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.DirectoryServices.DirectoryEntries.SchemaFilter">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.DirectoryEntry.Children">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.DirectoryEntry.CloneBrowsable">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="newParent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.DirectoryEntry.CopyTo(System.DirectoryServices.DirectoryEntry,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="newParent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.DirectoryEntry.FillCache(System.String)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.DirectoryEntry.GetObjectSecurityFromCache">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry)">
    <parameter name="newParent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.DirectoryEntry.MoveTo(System.DirectoryServices.DirectoryEntry,System.String)">
    <parameter name="newParent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.DirectoryServices.DirectoryEntry.Parent">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.DirectoryEntry.Properties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.DirectoryEntry.RefreshCache(System.String[])">
    <parameter name="propertyNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.DirectoryServices.DirectoryEntry.SchemaEntry">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.DirectorySearcher.DoSetSearchPrefs(System.DirectoryServices.Interop.UnsafeNativeMethods.IDirectorySearch,System.DirectoryServices.Interop.AdsSearchPreferenceInfo[])">
    <parameter name="adsSearch">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.DirectorySearcher.FindAll">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.DirectorySearcher.FindAll(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.DirectorySearcher.SetSearchPreferences(System.DirectoryServices.Interop.UnsafeNativeMethods.IDirectorySearch,System.Boolean)">
    <parameter name="adsSearch">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.DirectoryServicesCOMException.#ctor(System.String,System.Int32,System.Runtime.InteropServices.COMException)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.DirectoryServicesCOMException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.DirectoryServicesPermission.#ctor(System.DirectoryServices.DirectoryServicesPermissionAccess,System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.DirectoryServicesPermission.#ctor(System.DirectoryServices.DirectoryServicesPermissionEntry[])">
    <parameter name="permissionAccessEntries">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.DirectoryServicesPermission.AddPermissionAccess(System.DirectoryServices.DirectoryServicesPermissionEntry)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.DirectoryServices.DirectoryServicesPermission.PermissionEntries">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.DirectoryServicesPermission.RemovePermissionAccess(System.DirectoryServices.DirectoryServicesPermissionEntry)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.DirectoryServicesPermissionAttribute.CreatePermission">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.DirectoryServicesPermissionEntry.#ctor(System.DirectoryServices.DirectoryServicesPermissionAccess,System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.DirectoryServicesPermissionEntry.#ctor(System.Security.Permissions.ResourcePermissionBaseEntry)">
    <parameter name="baseEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.DirectoryServicesPermissionEntry.GetBaseEntry">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.#ctor(System.DirectoryServices.DirectoryServicesPermission,System.Security.Permissions.ResourcePermissionBaseEntry[])">
    <parameter name="entries">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Add(System.DirectoryServices.DirectoryServicesPermissionEntry)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange(System.DirectoryServices.DirectoryServicesPermissionEntry[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.AddRange(System.DirectoryServices.DirectoryServicesPermissionEntryCollection)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Contains(System.DirectoryServices.DirectoryServicesPermissionEntry)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.CopyTo(System.DirectoryServices.DirectoryServicesPermissionEntry[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.IndexOf(System.DirectoryServices.DirectoryServicesPermissionEntry)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Insert(System.Int32,System.DirectoryServices.DirectoryServicesPermissionEntry)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.DirectoryServicesPermissionEntryCollection.Remove(System.DirectoryServices.DirectoryServicesPermissionEntry)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.DirectorySynchronization.Copy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.DirectorySynchronization.GetDirectorySynchronizationCookie">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.DirectoryVirtualListViewContext.Copy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ExtendedRightAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.HandlerBase.RemoveBooleanAttribute(System.Xml.XmlNode,System.String,System.Boolean@)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.Interop.AdsValueHelper.#ctor(System.Object)">
    <parameter name="managedValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.Interop.AdsValueHelper.#ctor(System.Object,System.DirectoryServices.Interop.AdsType)">
    <parameter name="managedValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.Interop.AdsValueHelper.GetValue">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.Interop.AdsValueHelper.GetVlvValue">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.Interop.AdsValueHelper.SetValue(System.Object,System.DirectoryServices.Interop.AdsType)">
    <parameter name="managedValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.Interop.SafeNativeMethods.EnumVariant.#ctor(System.DirectoryServices.Interop.SafeNativeMethods.IEnumVariant)">
    <parameter name="en">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ListChildrenAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ListChildrenAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ListChildrenAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.PropertyAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.PropertyCollection.CopyTo(System.DirectoryServices.PropertyValueCollection[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.PropertyCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.PropertyCollection.Item(System.String)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.DirectoryServices.PropertyCollection.PropertyEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.PropertyCollection.PropertyEnumerator.Key">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.PropertyCollection.PropertyEnumerator.Value">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.PropertyCollection.PropertyNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Contains(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Keys">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Remove(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.PropertyCollection.Values">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.PropertyCollection.ValuesCollection.CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.PropertyCollection.ValuesCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.PropertyCollection.ValuesCollection.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.PropertyCollection.ValuesEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.PropertySetAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.PropertySetAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.PropertySetAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.AccessControlType,System.DirectoryServices.PropertyAccess,System.Guid,System.DirectoryServices.ActiveDirectorySecurityInheritance,System.Guid)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.PropertyValueCollection.#ctor(System.DirectoryServices.DirectoryEntry,System.String)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.PropertyValueCollection.Add(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.PropertyValueCollection.AddRange(System.DirectoryServices.PropertyValueCollection)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.PropertyValueCollection.AddRange(System.Object[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.PropertyValueCollection.Contains(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.PropertyValueCollection.CopyTo(System.Object[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.PropertyValueCollection.IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.PropertyValueCollection.Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.PropertyValueCollection.OnInsertComplete(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.PropertyValueCollection.OnRemoveComplete(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.PropertyValueCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
    <parameter name="newValue">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="oldValue">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.PropertyValueCollection.Remove(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.DirectoryServices.Res.Culture">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.Res.GetObject(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.Res.GetString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.Res.GetString(System.String,System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ResultPropertyCollection.Add(System.String,System.DirectoryServices.ResultPropertyValueCollection)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ResultPropertyCollection.Contains(System.String)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ResultPropertyCollection.CopyTo(System.DirectoryServices.ResultPropertyValueCollection[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.DirectoryServices.ResultPropertyCollection.Item(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.DirectoryServices.ResultPropertyCollection.PropertyNames">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.ResultPropertyCollection.Values">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.SchemaNameCollection.AddRange(System.DirectoryServices.SchemaNameCollection)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.SchemaNameCollection.AddRange(System.String[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.DirectoryServices.SchemaNameCollection.FilterDelegateWrapper.Getter">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.SchemaNameCollection.FilterDelegateWrapper.Setter">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.SchemaNameCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.SchemaNameCollection.GetValue">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.SearchResult.GetDirectoryEntry">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.SearchResultCollection.#ctor(System.DirectoryServices.DirectoryEntry,System.IntPtr,System.String[],System.DirectoryServices.DirectorySearcher)">
    <parameter name="srch">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.DirectoryServices.SearchResultCollection.DirsyncCookie">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.SearchResultCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.SearchResultCollection.InnerList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.SearchResultCollection.ResultsEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.SearchResultCollection.ResultsEnumerator.GetCurrentResult">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.SearchResultCollection.ResultsEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.SearchResultCollection.RetrieveDirectorySynchronizationCookie">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.SearchResultCollection.RetrieveVLVResponse">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.DirectoryServices.SearchResultCollection.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.SearchResultCollection.VLVResponse">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.SearchWaitHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="configContext">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="section">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ResultPropertyValueCollection.IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.SearchResultCollection.IndexOf(System.DirectoryServices.SearchResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.SiteLinkBridges">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryInterSiteTransport.SiteLinks">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.AttributeNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.get_Item(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata.Values">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole[],System.Int32)">
    <parameter name="roles">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass.SubClassOf">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.AdjacentSites">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Domains">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Name">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.PreferredRpcBridgeheadServers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.PreferredSmtpBridgeheadServers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Servers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.SiteLinks">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySite.Subnets">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink.Sites">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.Name">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge.SiteLinks">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.ActiveDirectorySubnet.Name">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.AdamInstanceCollection.CopyTo(System.DirectoryServices.ActiveDirectory.AdamInstance[],System.Int32)">
    <parameter name="adamInstances">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ApplicationPartition[],System.Int32)">
    <parameter name="applicationPartitions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.AttributeMetadataCollection.CopyTo(System.DirectoryServices.ActiveDirectory.AttributeMetadata[],System.Int32)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.DirectoryContext.Name">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.Domain.Parent">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DomainCollection.CopyTo(System.DirectoryServices.ActiveDirectory.Domain[],System.Int32)">
    <parameter name="domains">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.DomainController.OSVersion">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.DomainControllerCollection.CopyTo(System.DirectoryServices.ActiveDirectory.DomainController[],System.Int32)">
    <parameter name="domainControllers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustDomainInfoCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ForestTrustDomainInformation[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollisionCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipCollision[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection.CopyTo(System.DirectoryServices.ActiveDirectory.GlobalCatalog[],System.Int32)">
    <parameter name="globalCatalogs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaClassCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaClass[],System.Int32)">
    <parameter name="classes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyActiveDirectorySchemaPropertyCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySchemaProperty[],System.Int32)">
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyDirectoryServerCollection.CopyTo(System.DirectoryServices.ActiveDirectory.DirectoryServer[],System.Int32)">
    <parameter name="directoryServers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySite[],System.Int32)">
    <parameter name="sites">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkBridgeCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLinkBridge[],System.Int32)">
    <parameter name="bridges">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlySiteLinkCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ActiveDirectorySiteLink[],System.Int32)">
    <parameter name="links">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReadOnlyStringCollection.CopyTo(System.String[],System.Int32)">
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.DestinationServer">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.ReplicationConnection.Name">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationConnection[],System.Int32)">
    <parameter name="connections">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationCursor[],System.Int32)">
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationFailure[],System.Int32)">
    <parameter name="failures">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationNeighbor[],System.Int32)">
    <parameter name="neighbors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.ReplicationOperationCollection.CopyTo(System.DirectoryServices.ActiveDirectory.ReplicationOperation[],System.Int32)">
    <parameter name="operations">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.DirectoryServices.ActiveDirectory.TopLevelName.Name">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.CopyTo(System.DirectoryServices.ActiveDirectory.TopLevelName[],System.Int32)">
    <parameter name="names">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection.CopyTo(System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DirectoryServices.DirectoryEntry.Invoke(System.String,System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.DirectorySearcher.FindOne">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.DirectoryServicesPermissionEntry.Path">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DirectoryServices.ResultPropertyCollection.get_Item(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.DirectoryServices.SearchResult.Properties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DirectoryServices.SortOption.PropertyName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
</assembly>
