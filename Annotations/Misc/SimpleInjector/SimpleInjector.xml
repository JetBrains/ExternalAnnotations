<?xml version="1.0" encoding="utf-8"?>
<assembly name="SimpleInjector">
 <member name="M:SimpleInjector.Container.Register(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
    <parameter name="implementationTypes"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument> <!-- ImplicitUseKindFlags.InstantiatedNoFixedConstructorSignature -->
      </attribute>
    </parameter>
  </member>
  <member name="M:SimpleInjector.Container.Register(System.Type,System.Collections.Generic.IEnumerable{System.Type},SimpleInjector.Lifestyle)">
    <parameter name="implementationTypes"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </parameter>
  </member>
  <member name="M:SimpleInjector.Container.RegisterConditional``2(System.Predicate{SimpleInjector.PredicateContext})">
    <typeparameter name="TImplementation"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </typeparameter>
  </member>
  <member name="M:SimpleInjector.Container.RegisterConditional``2(SimpleInjector.Lifestyle,System.Predicate{SimpleInjector.PredicateContext})">
    <typeparameter name="TImplementation"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </typeparameter>
  </member>
  <member name="M:SimpleInjector.Container.RegisterConditional(System.Type,System.Type,System.Predicate{SimpleInjector.PredicateContext})">
    <parameter name="implementationType"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </parameter>
  </member>
  <member name="M:SimpleInjector.Container.RegisterConditional(System.Type,System.Type,SimpleInjector.Lifestyle,System.Predicate{SimpleInjector.PredicateContext})">
    <parameter name="implementationType"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </parameter>
  </member>
  <member name="M:SimpleInjector.Container.Register``1">
    <typeparameter name="TConcrete"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </typeparameter>
  </member>
  <member name="M:SimpleInjector.Container.Register``1(SimpleInjector.Lifestyle)">
    <typeparameter name="TConcrete"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </typeparameter>
  </member>
  <member name="M:SimpleInjector.Container.Register``2">
    <typeparameter name="TImplementation"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </typeparameter>
  </member>
  <member name="M:SimpleInjector.Container.Register``2(SimpleInjector.Lifestyle)">
    <typeparameter name="TImplementation"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </typeparameter>
  </member>
  <member name="M:SimpleInjector.Container.Register(System.Type)">
    <parameter name="concreteType"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </parameter>
  </member>
  <member name="M:SimpleInjector.Container.Register(System.Type,System.Type)">
    <parameter name="implementationType"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </parameter>
  </member>
  <member name="M:SimpleInjector.Container.Register(System.Type,System.Type,SimpleInjector.Lifestyle)">
    <parameter name="implementationType"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </parameter>
  </member>
  <member name="M:SimpleInjector.Container.RegisterSingleton``1">
    <typeparameter name="TConcrete"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </typeparameter>
  </member>
  <member name="M:SimpleInjector.Container.RegisterSingleton``2">
    <typeparameter name="TImplementation"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </typeparameter>
  </member>
  <member name="M:SimpleInjector.Container.RegisterSingleton(System.Type,System.Type)">
    <parameter name="implementationType"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </parameter>
  </member>
</assembly>