<?xml version="1.0" encoding="utf-8"?>
<assembly name="LightInject">
  <member name="M:LightInject.ServiceContainer.Register(System.Type,System.Type,LightInject.ILifetime)">
    <parameter name="implementingType"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument> <!-- ImplicitUseKindFlags.InstantiatedNoFixedConstructorSignature -->
      </attribute>
    </parameter>
  </member>
  <member name="M:LightInject.ServiceContainer.Register(System.Type,System.Type,System.String,LightInject.ILifetime)">
    <parameter name="implementingType"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </parameter>
  </member>
  <member name="M:LightInject.ServiceContainer.Register``2">
    <typeparameter name="TImplementation"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </typeparameter>
  </member>
  <member name="M:LightInject.ServiceContainer.Register``2(LightInject.ILifetime)">
    <typeparameter name="TImplementation"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </typeparameter>
  </member>
  <member name="M:LightInject.ServiceContainer.Register``2(System.String)">
    <typeparameter name="TImplementation"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </typeparameter>
  </member>
  <member name="M:LightInject.ServiceContainer.Register``2(System.String,LightInject.ILifetime)">
    <typeparameter name="TImplementation"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </typeparameter>
  </member>  
  <member name="M:LightInject.ServiceContainer.Register``1">
    <typeparameter name="TService"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </typeparameter>
  </member>   
  <member name="M:LightInject.ServiceContainer.Register(System.Type)">
    <parameter name="serviceType"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </parameter>
  </member>  
  <member name="M:LightInject.ServiceContainer.Register(System.Type,LightInject.ILifetime)">
    <parameter name="serviceType"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </parameter>
  </member>    
  <member name="M:LightInject.ServiceContainer.Register``1(LightInject.ILifetime)">
    <typeparameter name="TService"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </typeparameter>
  </member>
  <member name="M:LightInject.ServiceContainer.Register(System.Type,System.Type,System.String)">
    <parameter name="implementingType"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </parameter>
  </member>
  <member name="M:LightInject.ServiceContainer.Register(System.Type,System.Type)">
    <parameter name="implementingType"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </parameter>
  </member>
  <member name="M:LightInject.ServiceContainer.GetInstance(System.Type)">
    <parameter name="serviceType"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </parameter>
  </member>
  <member name="M:LightInject.ServiceContainer.GetInstance(System.Type,System.Object[])">
    <parameter name="serviceType"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </parameter>
  </member>
  <member name="M:LightInject.ServiceContainer.GetInstance(System.Type,System.String,System.Object[])">
    <parameter name="serviceType"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </parameter>
  </member>
  <member name="M:LightInject.ServiceContainer.GetInstance(System.Type,System.String)">
    <parameter name="serviceType"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </parameter>
  </member>
  <member name="M:LightInject.ServiceContainer.Create(System.Type)">
    <parameter name="serviceType"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </parameter>
  </member>
  <member name="M:LightInject.ServiceContainer.RegisterOrdered(System.Type,System.Type[],System.Func{System.Type,LightInject.ILifetime})">
    <parameter name="implementingTypes"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </parameter>
  </member>
  <member name="M:LightInject.ServiceContainer.RegisterOrdered(System.Type,System.Type[],System.Func{System.Type,LightInject.ILifetime},System.Func{System.Int32,System.String})">
    <parameter name="implementingTypes"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </parameter>
  </member>
</assembly>