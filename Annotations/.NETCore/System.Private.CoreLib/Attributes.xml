<?xml version="1.0" encoding="utf-8"?>
<assembly name="System.Private.CoreLib">
  <member name="M:System.Threading.Semaphore.OpenExisting(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Semaphore.OpenExisting(System.String,System.Security.AccessControl.SemaphoreRights)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ThrowHelper.GetArgumentName(System.ExceptionArgument)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ThrowHelper.GetResourceName(System.ExceptionResource)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Diagnostics.Debug.Listeners">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.Debug.StackTraceToString(System.Diagnostics.StackTrace,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="trace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.Type,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String)">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>condition:false=&gt;halt</argument>
    </attribute>
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>condition:false=&gt;halt</argument>
    </attribute>
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="detailMessage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Debug.Fail(System.String)">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>=&gt;halt</argument>
    </attribute>
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Debug.Fail(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>=&gt;halt</argument>
    </attribute>
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="detailMessage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Debug.Print(System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Debug.Print(System.String,System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.StringFormatMethodAttribute.#ctor(System.String)">
      <argument>format</argument>
    </attribute>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Debug.Write(System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Debug.Write(System.String,System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="category">
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.String,System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="category">
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Debug.WriteLine(System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Debug.WriteLine(System.String,System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="category">
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.String,System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="category">
    </parameter>
  </member>
  <member name="M:System.Threading.Semaphore.SetAccessControl(System.Security.AccessControl.SemaphoreSecurity)">
    <parameter name="semaphoreSecurity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.SemaphoreFullException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Debug.Assert(System.Boolean,System.String,System.String,System.Object[])">
    <parameter name="detailMessageFormat">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Debug.WriteLine(System.String,System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.StringFormatMethodAttribute.#ctor(System.String)">
      <argument>format</argument>
    </attribute>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Semaphore.TryOpenExisting(System.String,System.Security.AccessControl.SemaphoreRights,System.Threading.Semaphore@)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Semaphore.TryOpenExisting(System.String,System.Threading.Semaphore@)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ThrowHelper.ThrowArgumentException(System.ExceptionResource)">
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>=&gt;halt</argument>
    </attribute>
  </member>
  <member name="M:System.ThrowHelper.ThrowArgumentNullException(System.ExceptionArgument)">
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>=&gt;halt</argument>
    </attribute>
  </member>
  <member name="M:System.ThrowHelper.ThrowArgumentOutOfRangeException(System.ExceptionArgument)">
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>=&gt;halt</argument>
    </attribute>
  </member>
  <member name="M:System.ThrowHelper.ThrowArgumentOutOfRangeException(System.ExceptionArgument,System.ExceptionResource)">
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>=&gt;halt</argument>
    </attribute>
  </member>
  <member name="M:System.ThrowHelper.ThrowInvalidOperationException(System.ExceptionResource)">
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>=&gt;halt</argument>
    </attribute>
  </member>
  <member name="M:System.ThrowHelper.ThrowKeyNotFoundException">
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>=&gt;halt</argument>
    </attribute>
  </member>
  <member name="M:System.ThrowHelper.ThrowNotSupportedException(System.ExceptionResource)">
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>=&gt;halt</argument>
    </attribute>
  </member>
  <member name="M:System.ThrowHelper.ThrowSerializationException(System.ExceptionResource)">
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>=&gt;halt</argument>
    </attribute>
  </member>
  <member name="M:System.ThrowHelper.ThrowWrongKeyTypeArgumentException(System.Object,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>=&gt;halt</argument>
    </attribute>
  </member>
  <member name="M:System.ThrowHelper.ThrowWrongValueTypeArgumentException(System.Object,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>=&gt;halt</argument>
    </attribute>
  </member>
  <member name="M:System.Diagnostics.Debug.Assert(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>condition:false=&gt;halt</argument>
    </attribute>
  </member>
  <member name="P:System.ComponentModel.DefaultValueAttribute.Value">
  </member>
  <member name="M:System.ComponentModel.DefaultValueAttribute.#ctor(System.String)">
    <parameter name="value">
    </parameter>
  </member>
  <member name="P:System.ComponentModel.AsyncOperation.SynchronizationContext">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.Debug.Write(System.Object,System.String)">
    <parameter name="category">
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Debug.WriteIf(System.Boolean,System.Object,System.String)">
    <parameter name="category">
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Debug.WriteLine(System.Object,System.String)">
    <parameter name="category">
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Debug.WriteLineIf(System.Boolean,System.Object,System.String)">
    <parameter name="category">
    </parameter>
  </member>
  <member name="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32,System.String,System.Boolean@,System.Security.AccessControl.SemaphoreSecurity)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32,System.String,System.Boolean@)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32,System.String)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.ObjectModel.ReadOnlyDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
    <parameter name="dictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.ObjectModel.ReadOnlyDictionary`2.Add(`0,`1)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.ObjectModel.ReadOnlyDictionary`2.ContainsKey(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.ObjectModel.ReadOnlyDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.ObjectModel.ReadOnlyDictionary`2.Item(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.ObjectModel.ReadOnlyDictionary`2.Remove(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.ObjectModel.ReadOnlyDictionary`2.TryGetValue(`0,`1@)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.ObjectModel.ReadOnlyDictionary`2.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.ObjectModel.ReadOnlyDictionary`2.Keys">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.ObjectModel.ReadOnlyDictionary`2.Values">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Lazy`1.CreateValue">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:Microsoft.Win32.UnsafeNativeMethods.SafeCreateFile(System.String,System.Int32,System.IO.FileShare,Microsoft.Win32.UnsafeNativeMethods.SECURITY_ATTRIBUTES,System.IO.FileMode,System.Int32,System.IntPtr)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule(System.DateTime,System.DateTime,System.TimeSpan,System.TimeZoneInfo.TransitionTime,System.TimeZoneInfo.TransitionTime)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.TimeZoneInfo.CreateAdjustmentRuleFromTimeZoneInformation(Microsoft.Win32.NativeMethods.RegistryTimeZoneInformation,System.DateTime,System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.TimeZoneInfo.CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="id">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String,System.String,System.TimeZoneInfo.AdjustmentRule[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="id">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.CreateCustomTimeZone(System.String,System.TimeSpan,System.String,System.String,System.String,System.TimeZoneInfo.AdjustmentRule[],System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="id">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.TimeZoneInfo.DaylightName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.TimeZoneInfo.DisplayName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.TimeZoneInfo.FromSerializedString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.GetAmbiguousTimeOffsets(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.TimeZoneInfo.GetAmbiguousTimeOffsets(System.DateTimeOffset)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.TimeZoneInfo.GetDaylightTime(System.Int32,System.TimeZoneInfo.AdjustmentRule)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="rule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.TimeZoneInfo.StandardName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.TimeZoneInfo.StringSerializer.GetDeserializedTimeZoneInfo(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.TimeZoneInfo.StringSerializer.GetNextAdjustmentRuleArrayValue(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.TimeZoneInfo.StringSerializer.GetNextAdjustmentRuleValue(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.TimeZoneInfo.StringSerializer.GetNextStringValue(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.TimeZoneInfo.StringSerializer.GetSerializedString(System.TimeZoneInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="zone">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.ToSerializedString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.TimeZoneInfo.TransitionTimeFromTimeZoneInformation(Microsoft.Win32.NativeMethods.RegistryTimeZoneInformation,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.TimeZoneInfo.TryGetLocalizedNameByMuiNativeResource(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.TimeZoneInfo.TryGetLocalizedNameByNativeResource(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Threading.Tasks.TaskExtensions.Unwrap(Task{Task})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="task">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskExtensions.Unwrap``1(Task{Task{``0}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="task">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Lazy`1.#ctor(System.Func{`0})">
    <parameter name="valueFactory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Lazy`1.#ctor(System.Func{`0},System.Boolean)">
    <parameter name="valueFactory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Lazy`1.#ctor(System.Func{`0},System.Threading.LazyThreadSafetyMode)">
    <parameter name="valueFactory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.InvalidTimeZoneException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.LockRecursionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.ReaderWriterLockSlim.IsRWEntryEmpty(System.Threading.ReaderWriterCount)">
    <parameter name="rwc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.ReaderWriterLockSlim.IsRwHashEntryChanged(System.Threading.ReaderWriterCount,System.Int32)">
    <parameter name="lrwc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.ReaderWriterLockSlim.WaitOnEvent(System.Threading.EventWaitHandle,System.UInt32@,System.Int32)">
    <parameter name="waitEvent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.#ctor(System.String,System.TimeSpan,System.String,System.String,System.String,System.TimeZoneInfo.AdjustmentRule[],System.Boolean)">
    <parameter name="id">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.AdjustmentRule.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.AdjustmentRule.Equals(System.TimeZoneInfo.AdjustmentRule)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.AdjustmentRule.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.ConvertTime(System.DateTime,System.TimeZoneInfo)">
    <parameter name="destinationTimeZone">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.ConvertTime(System.DateTime,System.TimeZoneInfo,System.TimeZoneInfo)">
    <parameter name="sourceTimeZone">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="destinationTimeZone">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.ConvertTime(System.DateTime,System.TimeZoneInfo,System.TimeZoneInfo,System.TimeZoneInfoOptions)">
    <parameter name="sourceTimeZone">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="destinationTimeZone">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.ConvertTime(System.DateTimeOffset,System.TimeZoneInfo)">
    <parameter name="destinationTimeZone">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId(System.DateTime,System.String)">
    <parameter name="destinationTimeZoneId">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId(System.DateTime,System.String,System.String)">
    <parameter name="destinationTimeZoneId">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="sourceTimeZoneId">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.ConvertTimeBySystemTimeZoneId(System.DateTimeOffset,System.String)">
    <parameter name="destinationTimeZoneId">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.ConvertTimeFromUtc(System.DateTime,System.TimeZoneInfo)">
    <parameter name="destinationTimeZone">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime,System.TimeZoneInfo)">
    <parameter name="sourceTimeZone">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.ConvertUtcToTimeZone(System.Int64,System.TimeZoneInfo)">
    <parameter name="destinationTimeZone">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.Equals(System.TimeZoneInfo)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.FindSystemTimeZoneById(System.String)">
    <parameter name="id">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.GetIsAmbiguousTime(System.DateTime,System.TimeZoneInfo.AdjustmentRule,System.Globalization.DaylightTime)">
    <parameter name="daylightTime">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.GetIsDaylightSavings(System.DateTime,System.TimeZoneInfo.AdjustmentRule,System.Globalization.DaylightTime)">
    <parameter name="daylightTime">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.GetIsInvalidTime(System.DateTime,System.TimeZoneInfo.AdjustmentRule,System.Globalization.DaylightTime)">
    <parameter name="daylightTime">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.GetTimeZone(System.String)">
    <parameter name="id">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.GetUtcOffset(System.DateTime,System.TimeZoneInfo)">
    <parameter name="zone">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.GetUtcOffsetFromUtc(System.DateTime,System.TimeZoneInfo)">
    <parameter name="zone">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.GetUtcOffsetFromUtc(System.DateTime,System.TimeZoneInfo,System.Boolean@)">
    <parameter name="zone">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.HasSameRules(System.TimeZoneInfo)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.StringSerializer.SerializeSubstitute(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.StringSerializer.SerializeTransitionTime(System.TimeZoneInfo.TransitionTime,System.Text.StringBuilder)">
    <parameter name="serializedText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.TransitionTime.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.TransitionTime.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.TransitionTime.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.TryGetLocalizedNamesByRegistryKey(Microsoft.Win32.RegistryKey,System.String@,System.String@,System.String@)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.TryGetTimeZone(System.String,System.Boolean,System.TimeZoneInfo@,System.Exception@)">
    <parameter name="id">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.TryGetTimeZoneByRegistryKey(System.String,System.TimeZoneInfo@,System.Exception@)">
    <parameter name="id">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.ValidateTimeZoneInfo(System.String,System.TimeSpan,System.TimeZoneInfo.AdjustmentRule[],System.Boolean@)">
    <parameter name="id">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskExtensions.TrySetFromTask``1(System.Threading.Tasks.TaskCompletionSource{``0},System.Threading.Tasks.Task)">
    <parameter name="me">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskExtensions.Unwrap(System.Threading.Tasks.Task{System.Threading.Tasks.Task})">
    <parameter name="task">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskExtensions.Unwrap``1(System.Threading.Tasks.Task{System.Threading.Tasks.Task{``0}})">
    <parameter name="task">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.Exists(System.String)">
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>null=&gt;false</argument>
    </attribute>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Type.DeclaringType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.String.IsNullOrEmpty(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String,System.Boolean)">
      <argument>null=&gt;true</argument>
      <argument>true</argument>
    </attribute>
  </member>
  <member name="M:System.String.IsNullOrWhiteSpace(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String,System.Boolean)">
      <argument>null=&gt;true</argument>
      <argument>true</argument>
    </attribute>
  </member>
  <member name="M:System.String.Format(System.String,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.StringFormatMethodAttribute.#ctor(System.String)">
      <argument>format</argument>
    </attribute>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.Format(System.String,System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.StringFormatMethodAttribute.#ctor(System.String)">
      <argument>format</argument>
    </attribute>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.Format(System.String,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.StringFormatMethodAttribute.#ctor(System.String)">
      <argument>format</argument>
    </attribute>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.Format(System.String,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.StringFormatMethodAttribute.#ctor(System.String)">
      <argument>format</argument>
    </attribute>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.Format(System.IFormatProvider,System.String,System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.StringFormatMethodAttribute.#ctor(System.String)">
      <argument>format</argument>
    </attribute>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.Format(System.IFormatProvider,System.String,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.StringFormatMethodAttribute.#ctor(System.String)">
      <argument>format</argument>
    </attribute>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.Format(System.IFormatProvider,System.String,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.StringFormatMethodAttribute.#ctor(System.String)">
      <argument>format</argument>
    </attribute>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.Format(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.StringFormatMethodAttribute.#ctor(System.String)">
      <argument>format</argument>
    </attribute>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.StringFormatMethodAttribute.#ctor(System.String)">
      <argument>format</argument>
    </attribute>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.StringFormatMethodAttribute.#ctor(System.String)">
      <argument>format</argument>
    </attribute>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.StringFormatMethodAttribute.#ctor(System.String)">
      <argument>format</argument>
    </attribute>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.StringFormatMethodAttribute.#ctor(System.String)">
      <argument>format</argument>
    </attribute>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.StringFormatMethodAttribute.#ctor(System.String)">
      <argument>format</argument>
    </attribute>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.StringFormatMethodAttribute.#ctor(System.String)">
      <argument>format</argument>
    </attribute>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.StringFormatMethodAttribute.#ctor(System.String)">
      <argument>format</argument>
    </attribute>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.StringFormatMethodAttribute.#ctor(System.String)">
      <argument>format</argument>
    </attribute>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ThrowHelper.ThrowArgumentException(System.ExceptionResource,System.ExceptionArgument)">
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>=&gt;halt</argument>
    </attribute>
  </member>
  <member name="M:System.ThrowHelper.ThrowArgumentOutOfRangeException">
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>=&gt;halt</argument>
    </attribute>
  </member>
  <member name="M:System.ThrowHelper.ThrowObjectDisposedException(System.String,System.ExceptionResource)">
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>=&gt;halt</argument>
    </attribute>
  </member>
  <member name="M:System.ThrowHelper.ThrowSecurityException(System.ExceptionResource)">
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>=&gt;halt</argument>
    </attribute>
  </member>
  <member name="M:System.ThrowHelper.ThrowUnauthorizedAccessException(System.ExceptionResource)">
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>=&gt;halt</argument>
    </attribute>
  </member>
  <member name="M:System.IO.__Error.WinIODriveError(System.String)">
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>=&gt;halt</argument>
    </attribute>
  </member>
  <member name="M:System.IO.__Error.WinIODriveError(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>=&gt;halt</argument>
    </attribute>
  </member>
  <member name="M:System.IO.__Error.WinIOError">
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>=&gt;halt</argument>
    </attribute>
  </member>
  <member name="M:System.IO.__Error.WinIOError(System.Int32,System.String)">
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>=&gt;halt</argument>
    </attribute>
  </member>
  <member name="T:System.Runtime.InteropServices.ComImportAttribute">
    <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseTargetFlags)">
      <argument>3</argument>
    </attribute>
  </member>
  <member name="T:System.Runtime.InteropServices.GuidAttribute">
    <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor"/>
  </member>
  <member name="T:System.Runtime.Serialization.OnDeserializingAttribute">
    <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor"/>
  </member>
  <member name="T:System.Runtime.Serialization.OnDeserializedAttribute">
    <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor"/>
  </member>
  <member name="T:System.Runtime.Serialization.OnSerializingAttribute">
    <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor"/>
  </member>
  <member name="T:System.Runtime.Serialization.OnSerializedAttribute">
    <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor"/>
  </member>
  <member name="M:System.Array.ConvertAll``2(``0[],System.Converter{``0,``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="converter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.FindAll``1(``0[],System.Predicate{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.List`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>6</argument>
    </attribute>
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.List`1.ForEach(System.Action{`0})">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
    <parameter name="action">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>6</argument>
    </attribute>
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>3</argument>
    </attribute>
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>0</argument>
    </attribute>
    <parameter name="comparison">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
    <parameter name="converter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.List`1.AsReadOnly">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.List`1.ToArray">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="P:System.Collections.Generic.List`1.Enumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Generic.List`1.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.List`1.Synchronized(System.Collections.Generic.List{`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.List`1.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.List`1.CopyTo(`0[])">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.List`1.Add(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.List`1.Contains(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.List`1.Enumerator.#ctor(System.Collections.Generic.List{`0})">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.List`1.Remove(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.List`1.BinarySearch(`0)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.List`1.IndexOf(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Generic.List`1.Capacity">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>0</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.List`1.get_Capacity">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>0</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.List`1.set_Capacity(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>0</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.List`1.LastIndexOf(`0)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>2</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.List`1.Reverse">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>0</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>0</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.List`1.Sort">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>0</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>0</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>0</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.List`1.TrimExcess">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>0</argument>
    </attribute>
  </member>
  <member name="M:System.Diagnostics.Contracts.Contract.Assume(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>condition:false=&gt;halt</argument>
    </attribute>
  </member>
  <member name="M:System.Diagnostics.Contracts.Contract.Assume(System.Boolean,System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>condition:false=&gt;halt</argument>
    </attribute>
  </member>
  <member name="M:System.Diagnostics.Contracts.Contract.Assert(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>condition:false=&gt;halt</argument>
    </attribute>
  </member>
  <member name="M:System.Diagnostics.Contracts.Contract.Assert(System.Boolean,System.String)">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>condition:false=&gt;halt</argument>
    </attribute>
  </member>
  <member name="M:System.Diagnostics.Contracts.Contract.Requires(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>condition:false=&gt;halt</argument>
    </attribute>
  </member>
  <member name="M:System.Diagnostics.Contracts.Contract.Requires(System.Boolean,System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>condition:false=&gt;halt</argument>
    </attribute>
  </member>
  <member name="M:System.Diagnostics.Contracts.Contract.Requires``1(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>condition:false=&gt;halt</argument>
    </attribute>
  </member>
  <member name="M:System.Diagnostics.Contracts.Contract.Requires``1(System.Boolean,System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>condition:false=&gt;halt</argument>
    </attribute>
  </member>
  <member name="M:System.Diagnostics.Contracts.Contract.Invariant(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>condition:false=&gt;halt</argument>
    </attribute>
  </member>
  <member name="M:System.Diagnostics.Contracts.Contract.Invariant(System.Boolean,System.String)">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>condition:false=&gt;halt</argument>
    </attribute>
  </member>
  <member name="M:System.Diagnostics.Contracts.Contract.ReportFailure(System.Diagnostics.Contracts.ContractFailureKind,System.String,System.String,System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>=&gt;halt</argument>
    </attribute>
  </member>
  <member name="T:System.Diagnostics.Contracts.ContractInvariantMethodAttribute">
    <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor"/>
  </member>
  <member name="T:System.Diagnostics.Contracts.ContractClassForAttribute">
    <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor"/>
  </member>
  <member name="M:System.Delegate.Combine(System.Delegate,System.Delegate)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>a:notnull=&gt;notnull;b:notnull=&gt;notnull;</argument>
    </attribute>
  </member>
  <member name="M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw">
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>=&gt;halt</argument>
    </attribute>
  </member>
  <member name="M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Capture(System.Exception)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Path.ChangeExtension(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>path:notnull =&gt; notnull</argument>
    </attribute>
    <parameter name="path">
    </parameter>
    <parameter name="extension">
    </parameter>
  </member>
  <member name="P:System.Collections.Generic.IDictionary`2.Keys">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="P:System.Collections.Generic.IDictionary`2.Values">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.IDictionary.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="P:System.Collections.IDictionary.Keys">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="P:System.Collections.IDictionary.Values">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="P:System.Collections.ICollection.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>0</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.IEnumerable.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="P:System.Collections.IEnumerable.Model">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ICloneable.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="M:System.IConvertible.ToString(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Activator.CreateComInstanceFrom(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Activator.CreateInstance(System.ActivationContext)">
    <parameter name="activationContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Activator.CreateInstance(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Activator.CreateInstance(System.ActivationContext,System.String[])">
    <parameter name="activationContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="activationCustomData">
    </parameter>
  </member>
  <member name="M:System.Activator.CreateInstance(System.String,System.String)">
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Activator.CreateInstance(System.Type,System.Object[])">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Activator.CreateInstance(System.Type,System.Boolean)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)">
    <parameter name="domain">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])">
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
    <parameter name="domain">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Activator.CreateInstanceFrom(System.String,System.String)">
    <parameter name="assemblyFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String)">
    <parameter name="domain">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="assemblyFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])">
    <parameter name="assemblyFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
    <parameter name="assemblyFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
    <parameter name="domain">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="assemblyFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Activator.GetObject(System.Type,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="url">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Activator.GetObject(System.Type,System.String,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="url">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.CreateInstance(System.Type,System.Int32[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="elementType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="lengths">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.CreateInstance(System.Type,System.Int64[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="elementType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="lengths">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.CreateInstance(System.Type,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="elementType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.CreateInstance(System.Type,System.Int32[],System.Int32[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="elementType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="lengths">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="lowerBounds">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.CreateInstance(System.Type,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="elementType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.CreateInstance(System.Type,System.Int32,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="elementType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.BitConverter.GetBytes(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.BitConverter.GetBytes(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.BitConverter.GetBytes(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.BitConverter.GetBytes(System.Int16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.BitConverter.GetBytes(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.BitConverter.GetBytes(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.BitConverter.GetBytes(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.BitConverter.GetBytes(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.BitConverter.GetBytes(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.BitConverter.GetBytes(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.BitConverter.ToString(System.Byte[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.BitConverter.ToString(System.Byte[],System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.BitConverter.ToString(System.Byte[],System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Byte.ToString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Char.ToString(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Generic.Comparer`1.Default">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Generic.Dictionary`2.Comparer">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>0</argument>
    </attribute>
  </member>
  <member name="P:System.Collections.Generic.Dictionary`2.Keys">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="P:System.Collections.Generic.Dictionary`2.Values">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="P:System.Collections.Generic.EqualityComparer`1.Default">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.ObjectModel.ReadOnlyCollection`1.Items">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ChangeType(System.Object,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="conversionType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Convert.ChangeType(System.Object,System.Type,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="conversionType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Convert.FromBase64CharArray(System.Char[],System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="inArray">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Convert.FromBase64String(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Convert.ToBase64String(System.Byte[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="inArray">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Convert.ToBase64String(System.Byte[],System.Base64FormattingOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="inArray">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="inArray">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Convert.ToBase64String(System.Byte[],System.Int32,System.Int32,System.Base64FormattingOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="inArray">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Convert.ToString(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToString(System.Byte)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToString(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToString(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToString(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToString(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToString(System.Int16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToString(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToString(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToString(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToString(System.SByte)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToString(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToString(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToString(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToString(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToString(System.Boolean,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToString(System.Byte,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToString(System.Byte,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToString(System.Char,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToString(System.DateTime,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToString(System.Decimal,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToString(System.Double,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToString(System.Int16,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToString(System.Int16,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToString(System.Int32,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToString(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToString(System.Int64,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToString(System.Int64,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToString(System.Object,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToString(System.SByte,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToString(System.Single,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToString(System.UInt16,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToString(System.UInt32,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToString(System.UInt64,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTime.GetDateTimeFormats">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTime.GetDateTimeFormats(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTime.GetDateTimeFormats(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTime.GetDateTimeFormats(System.Char,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTime.ToLongDateString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTime.ToLongTimeString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTime.ToShortDateString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTime.ToShortTimeString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTime.ToString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Delegate.CreateDelegate(System.Type,System.Object,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Delegate.CreateDelegate(System.Type,System.Type,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Delegate.CreateDelegate(System.Type,System.Object,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Double.ToString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Enum.Format(System.Type,System.Object,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="enumType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Enum.GetNames(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="enumType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Enum.GetUnderlyingType(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="enumType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Enum.GetValues(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="enumType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Enum.Parse(System.Type,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="enumType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Enum.Parse(System.Type,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="enumType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Enum.ToObject(System.Type,System.Byte)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="enumType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Enum.ToObject(System.Type,System.Int16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="enumType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Enum.ToObject(System.Type,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="enumType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Enum.ToObject(System.Type,System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="enumType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Enum.ToObject(System.Type,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="enumType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Enum.ToObject(System.Type,System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="enumType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Enum.ToObject(System.Type,System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="enumType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Enum.ToObject(System.Type,System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="enumType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Enum.ToString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.Calendar.Eras">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.CultureInfo.CreateSpecificCulture(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CultureInfo.ReadOnly(System.Globalization.CultureInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="ci">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Globalization.CultureInfo.Calendar">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureInfo.CompareInfo">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureInfo.CurrentCulture">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureInfo.CurrentUICulture">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureInfo.DisplayName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureInfo.EnglishName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureInfo.InstalledUICulture">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureInfo.InvariantCulture">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureInfo.Name">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureInfo.NativeName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureInfo.NumberFormat">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureInfo.TextInfo">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureInfo.ThreeLetterISOLanguageName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureInfo.ThreeLetterWindowsLanguageName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureInfo.TwoLetterISOLanguageName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.NumberFormatInfo.GetFormat(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.NumberFormatInfo.GetInstance(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.NumberFormatInfo.ReadOnly(System.Globalization.NumberFormatInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="nfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.NumberFormatInfo.CurrencyGroupSizes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.NumberFormatInfo.CurrencySymbol">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.NumberFormatInfo.CurrentInfo">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.NumberFormatInfo.InvariantInfo">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.NumberFormatInfo.NaNSymbol">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.NumberFormatInfo.NegativeSign">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.NumberFormatInfo.NumberDecimalSeparator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.NumberFormatInfo.NumberGroupSizes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.NumberFormatInfo.PercentDecimalSeparator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.NumberFormatInfo.PercentGroupSeparator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.NumberFormatInfo.PercentGroupSizes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.NumberFormatInfo.PercentSymbol">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.NumberFormatInfo.PerMilleSymbol">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.NumberFormatInfo.PositiveSign">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.TextInfo.ToLower(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.TextInfo.ToTitleCase(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.TextInfo.ToUpper(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Globalization.TextInfo.ListSeparator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Int16.ToString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.IO.BinaryReader.ReadBytes(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.IO.BinaryReader.ReadChars(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.IO.BinaryReader.ReadString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.IO.BinaryReader.BaseStream">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.IO.BinaryWriter.BaseStream">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.IO.Directory.CreateDirectory(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.GetCurrentDirectory">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.IO.Directory.GetDirectories(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.GetDirectories(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="searchPattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.GetDirectoryRoot(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.GetFiles(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.GetFiles(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="searchPattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.GetFileSystemEntries(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="searchPattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.GetLogicalDrives">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.IO.File.AppendText(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.Create(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.Create(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.CreateText(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.Open(System.String,System.IO.FileMode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.OpenRead(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.OpenText(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.OpenWrite(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Path.Combine(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="path1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="path2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Path.GetFullPath(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Path.GetInvalidFileNameChars">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.IO.Path.GetInvalidPathChars">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.IO.Path.GetRandomFileName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.IO.Path.GetTempFileName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.IO.Path.GetTempPath">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Object.GetType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Object.MemberwiseClone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Object.ToString">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="M:System.Reflection.Assembly.GetCallingAssembly">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Assembly.GetExecutingAssembly">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Assembly.GetExportedTypes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Assembly.GetEntryAssembly">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Assembly.GetFiles">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Assembly.GetFiles(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Assembly.GetLoadedModules">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Assembly.GetLoadedModules(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Assembly.GetManifestResourceNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Assembly.GetModules">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Assembly.GetModules(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Assembly.GetName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Assembly.GetName(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Assembly.GetReferencedAssemblies">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Assembly.GetTypes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.Assembly.CodeBase">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.Assembly.EscapedCodeBase">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.Assembly.Evidence">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.Assembly.FullName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.Assembly.ImageRuntimeVersion">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.Assembly.Location">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.Assembly.ManifestModule">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.AssemblyName.FullName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.EventInfo.GetAddMethod">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.EventInfo.GetOtherMethods">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.EventInfo.GetOtherMethods(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.EventInfo.GetRemoveMethod">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.EventInfo.EventHandlerType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.FieldInfo.GetFieldFromHandle(System.RuntimeFieldHandle)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.FieldInfo.GetFieldFromHandle(System.RuntimeFieldHandle,System.RuntimeTypeHandle)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.FieldInfo.GetOptionalCustomModifiers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.FieldInfo.GetRawConstantValue">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.FieldInfo.GetRequiredCustomModifiers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.FieldInfo.FieldType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.MemberInfo.Module">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.MemberInfo.Name">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.MemberInfo.ReflectedType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.MethodBase.GetGenericArguments">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.MethodBase.GetParameters">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.MethodInfo.GetGenericMethodDefinition">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.MethodInfo.MakeGenericMethod(System.Type[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="typeArguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Reflection.MethodInfo.ReturnType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.MethodInfo.ReturnTypeCustomAttributes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Module.GetField(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Module.GetField(System.String,System.Reflection.BindingFlags)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Module.GetTypes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.Module.Assembly">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.Module.FullyQualifiedName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.Module.Name">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.Module.ScopeName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.ParameterInfo.Member">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.ParameterInfo.ParameterType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.ParameterInfo.DefaultValue">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.PropertyInfo.GetAccessors">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.PropertyInfo.GetAccessors(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.PropertyInfo.GetIndexParameters">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.PropertyInfo.GetOptionalCustomModifiers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.PropertyInfo.GetRequiredCustomModifiers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.PropertyInfo.PropertyType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Runtime.Serialization.SerializationInfo.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="P:System.Runtime.Serialization.SerializationInfo.AssemblyName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Runtime.Serialization.SerializationInfo.FullTypeName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Runtime.Serialization.SerializationInfoEnumerator.Name">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Runtime.Serialization.SerializationInfoEnumerator.ObjectType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.SByte.ToString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Single.ToString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.Concat(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.Concat(System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.Concat(System.String[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.Concat(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.Concat(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.Concat(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.Concat(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.Concat(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.Concat(System.String,System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.Copy(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.Insert(System.Int32,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.Intern(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.Join(System.String,System.String[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.Join(System.String,System.String[],System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.PadLeft(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.PadLeft(System.Int32,System.Char)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.PadRight(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.PadRight(System.Int32,System.Char)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.Remove(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.Replace(System.Char,System.Char)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.Replace(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="oldValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.Split(System.Char[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.Split(System.Char[],System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.Split(System.Char[],System.StringSplitOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.Split(System.String[],System.StringSplitOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.Split(System.Char[],System.Int32,System.StringSplitOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.Split(System.String[],System.Int32,System.StringSplitOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.Substring(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.Substring(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.ToCharArray">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.ToCharArray(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.ToLower">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.ToLower(System.Globalization.CultureInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.ToLowerInvariant">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.ToUpper">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.ToUpper(System.Globalization.CultureInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.ToUpperInvariant">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.Trim">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.Trim(System.Char[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.TrimEnd(System.Char[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.TrimStart(System.Char[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.Encoding.Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="srcEncoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="dstEncoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Encoding.Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[],System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="srcEncoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="dstEncoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Encoding.GetBytes(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Encoding.GetBytes(System.Char[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="chars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Encoding.GetBytes(System.Char[],System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="chars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Encoding.GetChars(System.Byte[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Encoding.GetDecoder">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.Encoding.GetEncoder">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.Encoding.GetEncoding(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.Encoding.GetEncoding(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Encoding.GetPreamble">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.Encoding.GetString(System.Byte[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Text.Encoding.ASCII">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Text.Encoding.BigEndianUnicode">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Text.Encoding.BodyName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Text.Encoding.Default">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Text.Encoding.EncodingName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Text.Encoding.HeaderName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Text.Encoding.Unicode">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Text.Encoding.UTF7">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Text.Encoding.UTF8">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Text.Encoding.WebName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.Append(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.Append(System.Byte)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.Append(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.Append(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.Append(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.Append(System.Int16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.Append(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.Append(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.Append(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.Append(System.SByte)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.Append(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.Append(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.Append(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.Append(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.Append(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.Append(System.Char[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.Append(System.Char,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.AppendLine">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.AppendLine(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Byte)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Char)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Int16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.SByte)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.Replace(System.Char,System.Char)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.Replace(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="oldValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="newValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="oldValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="newValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.StringBuilder.ToString(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="filter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Type.GetConstructors">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Type.GetConstructors(System.Reflection.BindingFlags)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Type.GetDefaultMembers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Type.GetEvents">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Type.GetEvents(System.Reflection.BindingFlags)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Type.GetFields">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Type.GetFields(System.Reflection.BindingFlags)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Type.GetGenericArguments">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Type.GetGenericParameterConstraints">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Type.GetInterfaces">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Type.GetMember(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Type.GetMember(System.String,System.Reflection.BindingFlags)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Type.GetMembers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Type.GetMembers(System.Reflection.BindingFlags)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Type.GetMethod(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Type.GetMethod(System.String,System.Type[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Type.GetMethods">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Type.GetMethods(System.Reflection.BindingFlags)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Type.GetNestedTypes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Type.GetNestedTypes(System.Reflection.BindingFlags)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Type.GetProperties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Type.GetProperties(System.Reflection.BindingFlags)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Type.GetProperty(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Type.GetProperty(System.String,System.Type[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Type.GetProperty(System.String,System.Reflection.BindingFlags)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Type.GetProperty(System.String,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="returnType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Type.GetProperty(System.String,System.Type,System.Type[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Type.GetType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Type.GetTypeArray(System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Type.GetTypeFromHandle(System.RuntimeTypeHandle)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Type.MakeArrayType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Type.MakeArrayType(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Type.MakeByRefType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Type.MakeGenericType(System.Type[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="typeArguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Type.MakePointerType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="P:System.Type.Assembly">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Type.Module">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Type.UnderlyingSystemType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.UInt16.ToString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.UInt64.ToString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Generic.IEnumerator`1.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.IEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="conversionType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IFormatProvider.GetFormat(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:Microsoft.Win32.Win32Native.GetMessage(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:Microsoft.Win32.Win32Native.SafeCreateFile(System.String,System.Int32,System.IO.FileShare,Microsoft.Win32.Win32Native.SECURITY_ATTRIBUTES,System.IO.FileMode,System.Int32,System.IntPtr)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence,System.Threading.StackCrawlMark@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.AppDomainManager.ApplicationActivator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.AppDomainManager.HostSecurityManager">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.AppDomainSetup.ApplicationBaseKey">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.AppDomainSetup.ApplicationNameKey">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.AppDomainSetup.BuildShadowCopyDirectories">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.AppDomainSetup.CachePathKey">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.AppDomainSetup.ConfigurationBytesKey">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.AppDomainSetup.ConfigurationExtension">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.AppDomainSetup.ConfigurationFileInternal">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.AppDomainSetup.ConfigurationFileKey">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.AppDomainSetup.DeveloperPathKey">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.AppDomainSetup.DisallowAppBaseProbingKey">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.AppDomainSetup.DisallowBindingRedirectsKey">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.AppDomainSetup.DisallowCodeDownloadKey">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.AppDomainSetup.DisallowPublisherPolicyKey">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.AppDomainSetup.DynamicBaseKey">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.AppDomainSetup.GetConfigurationBytes">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.AppDomainSetup.HostBindingKey">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.AppDomainSetup.LoaderOptimizationKey">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.AppDomainSetup.MachineConfigKey">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.AppDomainSetup.NormalizePath(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.AppDomainSetup.PrivateBinPathEnvironmentVariable">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.AppDomainSetup.PrivateBinPathKey">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.AppDomainSetup.PrivateBinPathProbeKey">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.AppDomainSetup.RuntimeConfigurationFile">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.AppDomainSetup.ShadowCopyDirectoriesKey">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.AppDomainSetup.ShadowCopyFilesKey">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.AppDomainSetup.Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.AppDomainSetup.VerifyDir(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Array.ArrayEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Array.AsReadOnly``1(``0[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Array.SZArrayEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.GetCustomAttributes(System.Reflection.Module)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.InternalParamGetCustomAttributes(System.Reflection.MethodInfo,System.Reflection.ParameterInfo,System.Type,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="param">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Attribute.TypeId">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Boolean.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Boolean.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Byte.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Char.ConvertFromUtf32(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Char.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Char.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.CharEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.EmptyReadOnlyDictionaryInternal.NodeEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.EmptyReadOnlyDictionaryInternal.NodeEnumerator.Key">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.EmptyReadOnlyDictionaryInternal.NodeEnumerator.Value">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Generic.Dictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Key">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Generic.Dictionary`2.Enumerator.System#Collections#IDictionaryEnumerator#Value">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Generic.Dictionary`2.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.Dictionary`2.KeyCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.Dictionary`2.ValueCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.KeyValuePair`2.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Generic.Mscorlib_CollectionDebugView`1.Items">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Generic.Mscorlib_DictionaryDebugView`2.Items">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Generic.Mscorlib_DictionaryKeyCollectionDebugView`2.Items">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Generic.Mscorlib_DictionaryValueCollectionDebugView`2.Items">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.ListDictionaryInternal.NodeEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.ListDictionaryInternal.NodeEnumerator.Key">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.ListDictionaryInternal.NodeEnumerator.Value">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.ListDictionaryInternal.NodeKeyValueCollection.NodeKeyValueEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ChangeType(System.Object,System.TypeCode)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ChangeType(System.Object,System.TypeCode,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.DefaultToType(System.IConvertible,System.Type,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="targetType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTime.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTime.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTimeFormat.Format(System.DateTime,System.String,System.Globalization.DateTimeFormatInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeFormat.Format(System.DateTime,System.String,System.Globalization.DateTimeFormatInfo,System.TimeSpan)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeFormat.FormatCustomized(System.DateTime,System.String,System.Globalization.DateTimeFormatInfo,System.TimeSpan)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeFormat.GetAllDateTimes(System.DateTime,System.Char,System.Globalization.DateTimeFormatInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeFormat.GetAllDateTimes(System.DateTime,System.Globalization.DateTimeFormatInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeOffset.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTimeOffset.ToString(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTimeOffset.ToString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTimeParse.GetDateTimeParseException(System.DateTimeResult@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DBNull.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Decimal.GetBits(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Delegate.CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Delegate.CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Delegate.CreateDelegate(System.Type,System.Object,System.RuntimeMethodHandle)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Delegate.CreateDelegate(System.Type,System.Object,System.String,System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Delegate.CreateDelegate(System.Type,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Delegate.CreateDelegate(System.Type,System.Reflection.MethodInfo,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Delegate.CreateDelegate(System.Type,System.Type,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Delegate.CreateDelegate(System.Type,System.Type,System.String,System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Delegate.GetInvocationList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Delegate.InternalCreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Delegate.Remove(System.Delegate,System.Delegate)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Delegate.RemoveAll(System.Delegate,System.Delegate)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Delegate.RemoveImpl(System.Delegate)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.StackFrame.GetFileName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.StackTrace.GetFrames">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.StackTrace.GetManagedStackTraceStringHelper(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.StackTrace.ToString(System.Diagnostics.StackTrace.TraceFormat)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Double.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Enum.GetHashEntry(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="enumType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Enum.GetName(System.Type,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="enumType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Enum.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Enum.ToObject(System.Type,System.SByte)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="enumType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Exception.Data">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Exception.GetBaseException">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Exception.GetDataInternal">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Exception.GetExceptionMethodString">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Exception.PrepForRemoting">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.Calendar.ReadOnly(System.Globalization.Calendar)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="calendar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Globalization.CodePageDataItem.BodyName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CodePageDataItem.HeaderName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CodePageDataItem.WebName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.CompareInfo.GetCompareInfo(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.CompareInfo.GetCompareInfo(System.Int32,System.Reflection.Assembly)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CompareInfo.GetCompareInfo(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CompareInfo.GetCompareInfo(System.String,System.Reflection.Assembly)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CompareInfo.GetCompareInfoByName(System.String,System.Reflection.Assembly)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CompareInfo.GetSortKey(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CompareInfo.GetSortKey(System.String,System.Globalization.CompareOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Globalization.CultureInfo.DateTimeFormat">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.CultureInfo.GetCalendarInstance(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.CultureInfo.GetCalendarInstanceRare(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.CultureInfo.GetConsoleFallbackUICulture">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.CultureInfo.GetCultureByLCIDOrName(System.Int32,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.CultureInfo.GetCultureInfo(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.CultureInfo.GetCultureInfo(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CultureInfo.GetCultureInfo(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="altName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CultureInfo.GetCultureInfoHelper(System.Int32,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.CultureInfo.GetFormat(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureInfo.IetfLanguageTag">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.CultureInfo.InitUserDefaultCulture">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.CultureInfo.InitUserDefaultUICulture">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureInfo.OptionalCalendars">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureInfo.Parent">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureInfo.UserDefaultCulture">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureInfo.UserDefaultUICulture">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.DateTimeFormatInfo.AbbreviatedDayNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.DateTimeFormatInfo.AbbreviatedEnglishEraNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.DateTimeFormatInfo.AbbreviatedEraNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthGenitiveNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.DateTimeFormatInfo.AbbreviatedMonthNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.DateTimeFormatInfo.AddDefaultFormat(System.String[],System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="datePatterns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Globalization.DateTimeFormatInfo.ClonedAllLongDatePatterns">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.DateTimeFormatInfo.ClonedAllLongTimePatterns">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.DateTimeFormatInfo.ClonedAllShortDatePatterns">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.DateTimeFormatInfo.ClonedAllShortTimePatterns">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.DateTimeFormatInfo.ClonedAllYearMonthPatterns">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.DateTimeFormatInfo.CompareInfo">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.DateTimeFormatInfo.CreateTokenHashTable">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.DateTimeFormatInfo.CultureName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.DateTimeFormatInfo.CurrentInfo">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.DateTimeFormatInfo.DateSeparator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.DateTimeFormatInfo.DateWords">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.DateTimeFormatInfo.DayNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.DateTimeFormatInfo.EraNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedDayOfWeekNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.DateTimeFormatInfo.GetAbbreviatedMonthNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.DateTimeFormatInfo.GetCalendarInfo(System.Int32,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.DateTimeFormatInfo.GetCombinedPatterns(System.String[],System.String[],System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="patterns1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="patterns2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.DateTimeFormatInfo.GetDayOfWeekNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.DateTimeFormatInfo.GetFormat(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.DateTimeFormatInfo.GetInstance(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="provider">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.DateTimeFormatInfo.GetJapaneseCalendarDTFI">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.DateTimeFormatInfo.GetMonthNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.DateTimeFormatInfo.GetTaiwanCalendarDTFI">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.DateTimeFormatInfo.internalGetGenitiveMonthNames(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.DateTimeFormatInfo.internalGetLeapYearMonthNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.DateTimeFormatInfo.internalGetSuperShortDayNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.DateTimeFormatInfo.LanguageName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.DateTimeFormatInfo.MonthGenitiveNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.DateTimeFormatInfo.MonthNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.DateTimeFormatInfo.OptionalCalendars">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.DateTimeFormatInfo.ReadOnly(System.Globalization.DateTimeFormatInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Globalization.DateTimeFormatInfo.RFC1123Pattern">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.DateTimeFormatInfo.ShortestDayNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.DateTimeFormatInfo.SortableDateTimePattern">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.DateTimeFormatInfo.TimeSeparator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.DateTimeFormatInfo.UniversalSortableDateTimePattern">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.DateTimeFormatInfoScanner.GetDateWordsOfDTFI(System.Globalization.DateTimeFormatInfo)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Globalization.EastAsianLunisolarCalendar.CalEraInfo">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.EncodingTable.GetCodePageDataItem(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.EncodingTable.GetEncodings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.GregorianCalendarHelper.Eras">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.GregorianCalendarHelper.InitEraInfo(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.HebrewNumber.ToString(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.IdnMapping.GetAscii(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="unicode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="unicode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.IdnMapping.GetAscii(System.String,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="unicode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.IdnMapping.GetUnicode(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="ascii">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="ascii">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.IdnMapping.GetUnicode(System.String,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="ascii">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.IdnMapping.punycode_decode(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="ascii">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.IdnMapping.punycode_encode(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="unicode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Globalization.RegionInfo.CurrencyEnglishName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.RegionInfo.CurrencyNativeName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.RegionInfo.CurrencySymbol">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.RegionInfo.CurrentRegion">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.RegionInfo.EnglishName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.RegionInfo.ISOCurrencySymbol">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.RegionInfo.Name">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.RegionInfo.NativeName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.RegionInfo.ThreeLetterISORegionName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.RegionInfo.ThreeLetterWindowsRegionName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.RegionInfo.TwoLetterISORegionName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.SortKey.KeyData">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.StringInfo.GetNextTextElement(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.StringInfo.GetNextTextElement(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.StringInfo.GetTextElementEnumerator(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Globalization.StringInfo.Indexes">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.StringInfo.ParseCombiningCharacters(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.StringInfo.SubstringByTextElements(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.TextElementEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.TextElementEnumerator.GetTextElement">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.TextInfo.CasingTextInfo">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.TextInfo.CultureName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.TextInfo.ReadOnly(System.Globalization.TextInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="textInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Guid.EatAllWhitespace(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Guid.ToByteArray">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Guid.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Guid.ToString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="format">
    </parameter>
  </member>
  <member name="M:System.Int16.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Int32.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Int64.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.CreateDirectory(System.String,System.Security.AccessControl.DirectorySecurity)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.GetDirectories(System.String,System.String,System.IO.SearchOption)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="searchPattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.GetFiles(System.String,System.String,System.IO.SearchOption)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="searchPattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.GetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="searchPattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.InternalGetDirectoryRoot(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.IO.Directory.OpenHandle(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
    </parameter>
  </member>
  <member name="M:System.IO.File.Create(System.String,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
    </parameter>
  </member>
  <member name="M:System.IO.File.InternalCopy(System.String,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="sourceFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="destFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.OpenFile(System.String,System.IO.FileAccess,Microsoft.Win32.SafeHandles.SafeFileHandle@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.ReadAllBytes(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.ReadAllLines(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.ReadAllLines(System.String,System.Text.Encoding)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.ReadAllText(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.ReadAllText(System.String,System.Text.Encoding)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.FileLoadException.FormatFileLoadExceptionMessage(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.IO.FileStream.BeginReadCore(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.FileStream.BeginWriteCore(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.FileStream.GetSecAttrs(System.IO.FileShare)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.IO.FileStream.GetSecAttrs(System.IO.FileShare,System.Security.AccessControl.FileSecurity,System.Object@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.IO.FileStream.NameInternal">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.IO.FileStream.SafeFileHandle">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.IO.MemoryStream.ToArray">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.IO.Path.FixupPath(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Path.NormalizePath(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Path.NormalizePathFast(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Path.NormalizePathSlow(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Stream.CreateWaitHandle">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.IO.Stream.Synchronized(System.IO.Stream)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.MarshalByRefObject.InitializeLifetimeService">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ModuleHandle.CopyRuntimeTypeHandles(System.RuntimeTypeHandle[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.MulticastDelegate.CombineImpl(System.Delegate)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.MulticastDelegate.DeleteFromInvocationList(System.Object[],System.Int32,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="invocationList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.MulticastDelegate.NewMulticastDelegate(System.Object[],System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.MulticastDelegate.NewMulticastDelegate(System.Object[],System.Int32,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.NonSerializedAttribute.GetCustomAttribute(System.Reflection.RuntimeFieldInfo)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="field">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Nullable.GetUnderlyingType(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="nullableType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Number.MatchChars(System.Char*,System.Char*)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="p">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Number.MatchChars(System.Char*,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="p">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Object.GetFieldInfo(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.ObjectDisposedException.ObjectName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.Assembly.Cache">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Assembly.CreateInstance(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="typeName">
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.CreateWebPermission(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Assembly.EnumerateCache(System.Reflection.AssemblyName)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="partialName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.GetFile(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.GetLocale">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Assembly.GetManifestResourceInfo(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="resourceName">
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.GetManifestResourceStream(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.GetManifestResourceStream(System.String,System.Threading.StackCrawlMark@,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String,System.Boolean,System.Threading.StackCrawlMark@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Assembly.GetVersion">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.Assembly.InternalAssembly">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Assembly.LoadFrom(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="assemblyFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.OnModuleResolveEvent(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Assembly.System#Runtime#InteropServices#_Assembly#GetType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Associates.AssignAssociates(System.Int32,System.RuntimeTypeHandle,System.RuntimeTypeHandle)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#GetType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.CustomAttributeData.ConstructorArguments">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.CustomAttributeData.GetCustomAttributeRecords(System.Reflection.Module,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Assembly)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.MemberInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Module)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.Module,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.ParameterInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Reflection.CustomAttributeData.NamedArguments">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.CustomAttributeNamedArgument.ArgumentType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.CustomAttributeNamedArgument.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.CustomAttributeTypedArgument.CustomAttributeEncodingToType(System.Reflection.CustomAttributeEncoding)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.CustomAttributeTypedArgument.ResolveType(System.Reflection.Module,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="scope">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModuleInternal(System.String,System.Boolean,System.Threading.StackCrawlMark@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModuleInternal(System.String,System.String,System.Boolean,System.Threading.StackCrawlMark@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModuleInternalNoLock(System.String,System.Boolean,System.Threading.StackCrawlMark@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModuleInternalNoLock(System.String,System.String,System.Boolean,System.Threading.StackCrawlMark@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilder.DefineResource(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="description">
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilder.DefineResource(System.String,System.String,System.String,System.Reflection.ResourceAttributes)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="description">
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilder.DefineResourceNoLock(System.String,System.String,System.String,System.Reflection.ResourceAttributes)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilder.GetDynamicModule(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilder.GetDynamicModuleNoLock(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Reflection.Emit.AssemblyBuilder.GrantedPermissionSet">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.Emit.AssemblyBuilder.ImageRuntimeVersion">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilderData.FindModuleWithFileName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilderData.FindModuleWithName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilderData.GetInMemoryAssemblyModule">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilderData.GetOnDiskAssemblyModule">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.ConstructorBuilder.DefineParameter(System.Int32,System.Reflection.ParameterAttributes,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="strParamName">
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ConstructorBuilder.GetILGenerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.ConstructorBuilder.GetILGenerator(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.Emit.ConstructorBuilder.Signature">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.ConstructorOnTypeBuilderInstantiation.GetConstructor(System.Reflection.ConstructorInfo,System.Reflection.Emit.TypeBuilderInstantiation)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.ConstructorOnTypeBuilderInstantiation.GetType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.Emit.DynamicILInfo.LocalSignature">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.DynamicMethod.CreateDelegate(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="delegateType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.DynamicMethod.CreateDelegate(System.Type,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="delegateType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Reflection.Emit.DynamicMethod.DeclaringType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.DynamicMethod.DefineParameter(System.Int32,System.Reflection.ParameterAttributes,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="parameterName">
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.DynamicMethod.GetBaseDefinition">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.DynamicMethod.GetCustomAttributes(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.DynamicMethod.GetCustomAttributes(System.Type,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.DynamicMethod.GetDynamicILInfo">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.DynamicMethod.GetDynamicILInfo(System.Reflection.Emit.DynamicScope)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="scope">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.DynamicMethod.GetILGenerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.DynamicMethod.GetILGenerator(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.Emit.DynamicMethod.ReflectedType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.Emit.DynamicMethod.RTDynamicMethod.DeclaringType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.DynamicMethod.RTDynamicMethod.GetBaseDefinition">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.DynamicMethod.RTDynamicMethod.GetCustomAttributes(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.DynamicMethod.RTDynamicMethod.GetCustomAttributes(System.Type,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.DynamicMethod.RTDynamicMethod.GetEmptyCAHolder">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.DynamicMethod.RTDynamicMethod.LoadParameters">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.Emit.DynamicMethod.RTDynamicMethod.ReflectedType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.DynamicScope.GetString(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.EnumBuilder.DefineLiteral(System.String,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="literalName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.FieldOnTypeBuilderInstantiation.GetField(System.Reflection.FieldInfo,System.Reflection.Emit.TypeBuilderInstantiation)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="Field">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.FieldOnTypeBuilderInstantiation.GetType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.GenericTypeParameterBuilder.MakeArrayType(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.ILGenerator.BakeByteArray">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.ILGenerator.DeclareLocal(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="localType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ILGenerator.DeclareLocal(System.Type,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="localType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ILGenerator.EnlargeArray(System.Byte[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="incoming">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ILGenerator.EnlargeArray(System.Byte[],System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="incoming">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ILGenerator.EnlargeArray(System.Int32[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="incoming">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ILGenerator.EnlargeArray(System.Reflection.Emit.__ExceptionInfo[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="incoming">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ILGenerator.EnlargeArray(System.Reflection.Emit.__FixupData[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="incoming">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ILGenerator.EnlargeArray(System.Type[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="incoming">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ILGenerator.GetExceptions">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.ILGenerator.GetMemberRefSignature(System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.ILGenerator.GetMemberRefSignature(System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.ILGenerator.GetRVAFixups">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.ILGenerator.GetTokenFixups">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.MethodBuilder.DefineGenericParameters(System.String[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="names">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.MethodBuilder.DefineParameter(System.Int32,System.Reflection.ParameterAttributes,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="strParamName">
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.MethodBuilder.GetBaseDefinition">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.MethodBuilder.GetILGenerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.MethodBuilder.GetILGenerator(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.MethodBuilder.GetMethodSignature">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.Emit.MethodBuilder.ReturnTypeCustomAttributes">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.Emit.MethodBuilder.Signature">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.MethodBuilderInstantiation.GetType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.MethodBuilderInstantiation.MakeGenericMethod(System.Reflection.MethodInfo,System.Type[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.MethodOnTypeBuilderInstantiation.GetMethod(System.Reflection.MethodInfo,System.Reflection.Emit.TypeBuilderInstantiation)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.MethodOnTypeBuilderInstantiation.GetType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.DefineEnum(System.String,System.Reflection.TypeAttributes,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="underlyingType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.DefineEnumNoLock(System.String,System.Reflection.TypeAttributes,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="underlyingType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Type,System.Type[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethodNoLock(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.DefineInitializedData(System.String,System.Byte[],System.Reflection.FieldAttributes)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.DefineInitializedDataNoLock(System.String,System.Byte[],System.Reflection.FieldAttributes)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethod(System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="dllName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethod(System.String,System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="dllName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="entryName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethodNoLock(System.String,System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="dllName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="entryName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.DefineResource(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="description">
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.DefineResource(System.String,System.String,System.Reflection.ResourceAttributes)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="description">
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.DefineResourceNoLock(System.String,System.String,System.Reflection.ResourceAttributes)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.DefineTypeNoLock(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.DefineTypeNoLock(System.String,System.Reflection.TypeAttributes)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.DefineTypeNoLock(System.String,System.Reflection.TypeAttributes,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.DefineTypeNoLock(System.String,System.Reflection.TypeAttributes,System.Type,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.DefineTypeNoLock(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.DefineTypeNoLock(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.DefineTypeNoLock(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.DefineUninitializedData(System.String,System.Int32,System.Reflection.FieldAttributes)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.DefineUninitializedDataNoLock(System.String,System.Int32,System.Reflection.FieldAttributes)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.FindTypeBuilderWithName(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.Emit.ModuleBuilder.FullyQualifiedName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.GetArrayMethod(System.Type,System.String,System.Reflection.CallingConventions,System.Type,System.Type[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="arrayClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="methodName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.GetMemberRefSignature(System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.GetTypesNoLock">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.UnmangleTypeName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.SignatureHelper.ExpandArray(System.Byte[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="inArray">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.SignatureHelper.ExpandArray(System.Byte[],System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="inArray">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.SignatureHelper.GetFieldSigHelper(System.Reflection.Module)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper(System.Reflection.Module)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.CallingConventions,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Int32,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Runtime.InteropServices.CallingConvention,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Type,System.Type[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Runtime.InteropServices.CallingConvention,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.SignatureHelper.GetMethodSpecSigHelper(System.Reflection.Module,System.Type[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="inst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.SignatureHelper.GetTypeSigToken(System.Reflection.Module,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="mod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.SignatureHelper.InternalGetSignatureArray">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.SymbolMethod.GetBaseDefinition">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.Emit.SymbolMethod.ReturnTypeCustomAttributes">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.Emit.SymbolType.BaseType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.SymbolType.MakeArrayType(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefineConstructor(System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefineConstructor(System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type[],System.Type[][],System.Type[][])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefineConstructorNoLock(System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type[],System.Type[][],System.Type[][])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefineDataHelper(System.String,System.Byte[],System.Int32,System.Reflection.FieldAttributes)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefineDefaultConstructor(System.Reflection.MethodAttributes)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefineDefaultConstructorNoLock(System.Reflection.MethodAttributes)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefineEvent(System.String,System.Reflection.EventAttributes,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="eventtype">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefineEventNoLock(System.String,System.Reflection.EventAttributes,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="eventtype">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefineField(System.String,System.Type,System.Reflection.FieldAttributes)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="fieldName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefineField(System.String,System.Type,System.Type[],System.Type[],System.Reflection.FieldAttributes)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="fieldName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefineFieldNoLock(System.String,System.Type,System.Type[],System.Type[],System.Reflection.FieldAttributes)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="fieldName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefineGenericParameters(System.String[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="names">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefineInitializedData(System.String,System.Byte[],System.Reflection.FieldAttributes)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefineInitializedDataNoLock(System.String,System.Byte[],System.Reflection.FieldAttributes)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefineMethod(System.String,System.Reflection.MethodAttributes,System.Type,System.Type[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefineMethodNoLock(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefineNestedType(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefineNestedTypeNoLock(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefineNestedTypeNoLock(System.String,System.Reflection.TypeAttributes)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefineNestedTypeNoLock(System.String,System.Reflection.TypeAttributes,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefineNestedTypeNoLock(System.String,System.Reflection.TypeAttributes,System.Type,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefineNestedTypeNoLock(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefineNestedTypeNoLock(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefinePInvokeMethod(System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="dllName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefinePInvokeMethod(System.String,System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="dllName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="entryName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefinePInvokeMethod(System.String,System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="dllName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="entryName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefinePInvokeMethodHelper(System.String,System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="dllName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="importName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefinePInvokeMethodHelperNoLock(System.String,System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="dllName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="importName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Type,System.Type[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefinePropertyNoLock(System.String,System.Reflection.PropertyAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefineTypeInitializer">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefineTypeInitializerNoLock">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefineUninitializedData(System.String,System.Int32,System.Reflection.FieldAttributes)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefineUninitializedDataNoLock(System.String,System.Int32,System.Reflection.FieldAttributes)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.GetConstructor(System.Type,System.Reflection.ConstructorInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="constructor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.GetField(System.Type,System.Reflection.FieldInfo)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="field">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.GetGenericTypeDefinition">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.GetMethod(System.Type,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilderInstantiation.Substitute(System.Type[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="substitutes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.EventInfo.System#Runtime#InteropServices#_EventInfo#GetType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.ExceptionHandlingClause.CatchType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.LocalVariableInfo.LocalType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.MdFieldInfo.FieldType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.MemberInfo.Cache">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.MetadataException.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.MetadataToken.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.MethodBase.CheckArguments(System.Object[],System.Reflection.Binder,System.Reflection.BindingFlags,System.Globalization.CultureInfo,System.Signature)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="sig">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.MethodBase.GetMethodBody">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.MethodBase.GetParametersNoCopy">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.MethodBase.GetParameterTypes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.MethodBase.GetReturnType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.MethodBody.ExceptionHandlingClauses">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.MethodBody.LocalVariables">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.MethodInfo.GetParentDefinition">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.MethodInfo.GetReturnType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.MethodInfo.ReturnParameter">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.MethodInfo.System#Runtime#InteropServices#_MethodInfo#GetType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Module.ConvertToTypeHandleArray(System.Type[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Module.FindTypes(System.Reflection.TypeFilter,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Module.GetFields">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Module.GetFields(System.Reflection.BindingFlags)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Module.GetMethods">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Module.GetMethods(System.Reflection.BindingFlags)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Module.InternalGetField(System.String,System.Reflection.BindingFlags)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Reflection.Module.InternalModule">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Module.ResolveSignature(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Module.ResolveString(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Module.ResolveType(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Module.ResolveType(System.Int32,System.Type[],System.Type[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.Module.RuntimeType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.ParameterInfo.Cache">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.ParameterInfo.GetOptionalCustomModifiers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.ParameterInfo.GetParameters(System.Reflection.MethodBase,System.Reflection.MemberInfo,System.Signature)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="sig">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.ParameterInfo.GetParameters(System.Reflection.MethodBase,System.Reflection.MemberInfo,System.Signature,System.Reflection.ParameterInfo@,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="sig">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.ParameterInfo.GetRequiredCustomModifiers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Pointer.Box(System.Void*,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Pointer.GetPointerValue">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.PropertyInfo.System#Runtime#InteropServices#_PropertyInfo#GetType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.PseudoCustomAttribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="caType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.PseudoCustomAttribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.PseudoCustomAttribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="caType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.PseudoCustomAttribute.GetCustomAttributes(System.Reflection.RuntimeConstructorInfo,System.Type,System.Boolean,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="ctor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="caType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.PseudoCustomAttribute.GetCustomAttributes(System.Reflection.RuntimeEventInfo,System.Type,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.PseudoCustomAttribute.GetCustomAttributes(System.Reflection.RuntimeFieldInfo,System.Type,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="field">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="caType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.PseudoCustomAttribute.GetCustomAttributes(System.Reflection.RuntimeMethodInfo,System.Type,System.Boolean,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="caType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.PseudoCustomAttribute.GetCustomAttributes(System.Reflection.RuntimePropertyInfo,System.Type,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.PseudoCustomAttribute.GetCustomAttributes(System.RuntimeType,System.Type,System.Boolean,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="caType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Reflection.RtFieldInfo.FieldType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.RuntimeConstructorInfo.Signature">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.RuntimeEventInfo.GetOtherMethods(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.RuntimeMethodInfo.FetchNonReturnParameters">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.RuntimeMethodInfo.GetGenericArguments">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.RuntimeMethodInfo.GetGenericMethodDefinition">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.RuntimeMethodInfo.MakeGenericMethod(System.Type[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.RuntimeMethodInfo.ReturnType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.RuntimeMethodInfo.Signature">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.RuntimePropertyInfo.GetAccessors(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.RuntimePropertyInfo.PropertyType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.RuntimePropertyInfo.Signature">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.StrongNameKeyPair.PublicKey">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Resolver.GetStringLiteral(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Resources.ResourceManager.CaseInsensitiveManifestResourceStreamLookup(System.Reflection.Assembly,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="satellite">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceManager.CreateFileBasedResourceManager(System.String,System.String,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="baseName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="resourceDir">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceManager.CreateResourceSet(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Resources.ResourceManager.FindResourceFile(System.Globalization.CultureInfo)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceManager.GetNeutralResourcesLanguage(System.Reflection.Assembly)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceManager.GetNeutralResourcesLanguage(System.Reflection.Assembly,System.Resources.UltimateResourceFallbackLocation@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceManager.GetObject(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceManager.GetObject(System.String,System.Globalization.CultureInfo)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceManager.GetObject(System.String,System.Globalization.CultureInfo,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceManager.GetResourceFileName(System.Globalization.CultureInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceManager.GetSatelliteAssembliesFromConfig">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Resources.ResourceManager.GetSatelliteContractVersion(System.Reflection.Assembly)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceManager.GetStream(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceManager.GetStream(System.String,System.Globalization.CultureInfo)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceManager.GetString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceManager.GetString(System.String,System.Globalization.CultureInfo)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceManager.InternalGetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Resources.ResourceManager.ResourceSetType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Resources.ResourceReader.AllocateStringForNameIndex(System.Int32,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Resources.ResourceReader.DeserializeObject(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Resources.ResourceReader.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Resources.ResourceReader.GetEnumeratorInternal">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Resources.ResourceReader.GetValueForNameIndex(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Resources.ResourceReader.LoadObject(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Resources.ResourceReader.LoadObject(System.Int32,System.Resources.ResourceTypeCode@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Resources.ResourceReader.LoadObjectV1(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Resources.ResourceReader.LoadObjectV2(System.Int32,System.Resources.ResourceTypeCode@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Resources.ResourceReader.LoadString(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Resources.ResourceReader.ResourceEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Resources.ResourceReader.ResourceEnumerator.Key">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Resources.ResourceReader.ResourceEnumerator.Value">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Resources.ResourceSet.GetDefaultReader">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Resources.ResourceSet.GetDefaultWriter">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Resources.ResourceSet.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Resources.ResourceSet.GetEnumeratorHelper">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Resources.ResourceSet.GetObject(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceSet.GetObject(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceSet.GetString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceSet.GetString(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.RuntimeResourceSet.GetEnumeratorHelper">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Resources.RuntimeResourceSet.GetObject(System.String,System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.RuntimeResourceSet.ResolveResourceLocator(System.Resources.ResourceLocator,System.String,System.Collections.Generic.Dictionary{System.String,System.Resources.ResourceLocator},System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="copyOfCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Runtime.CompilerServices.CustomConstantAttribute.Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Runtime.InteropServices.ComImportAttribute.GetCustomAttribute(System.RuntimeType)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.DllImportAttribute.GetCustomAttribute(System.Reflection.RuntimeMethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.FieldOffsetAttribute.GetCustomAttribute(System.Reflection.RuntimeFieldInfo)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="field">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.InAttribute.GetCustomAttribute(System.Reflection.ParameterInfo)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.GetTypeForITypeInfo(System.IntPtr)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringAnsi(System.IntPtr)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringAuto(System.IntPtr)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.PtrToStringUni(System.IntPtr)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr,``0)">
    <typeparameter name="T"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </typeparameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.PtrToStructure``1(System.IntPtr)">
    <typeparameter name="T"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </typeparameter>
  </member>
  <member name="M:System.Runtime.InteropServices.MarshalAsAttribute.GetCustomAttribute(System.Int32,System.Reflection.Module)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="scope">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.MarshalAsAttribute.GetCustomAttribute(System.Reflection.ParameterInfo)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.MarshalAsAttribute.GetCustomAttribute(System.Reflection.RuntimeFieldInfo)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="field">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.OptionalAttribute.GetCustomAttribute(System.Reflection.ParameterInfo)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.OutAttribute.GetCustomAttribute(System.Reflection.ParameterInfo)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.PreserveSigAttribute.GetCustomAttribute(System.Reflection.RuntimeMethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.StructLayoutAttribute.GetCustomAttribute(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="T:System.Runtime.InteropServices.UnmanagedCallersOnlyAttribute">
    <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="P:System.Runtime.Serialization.SerializationInfoEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.RuntimeType.ActivatorCache.GetEntry(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.RuntimeType.Cache">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.RuntimeType.GetConstructorCandidates(System.String,System.Reflection.BindingFlags,System.Reflection.CallingConventions,System.Type[],System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.RuntimeType.GetEventCandidates(System.String,System.Reflection.BindingFlags,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.RuntimeType.GetFieldCandidates(System.String,System.Reflection.BindingFlags,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.RuntimeType.GetMethodCandidates(System.String,System.Reflection.BindingFlags,System.Reflection.CallingConventions,System.Type[],System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.RuntimeType.GetNestedTypeCandidates(System.String,System.Reflection.BindingFlags,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.RuntimeType.GetPropertyCandidates(System.String,System.Reflection.BindingFlags,System.Type[],System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.RuntimeType.GetPropertyInfo(System.RuntimeTypeHandle,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.RuntimeType.MakeArrayType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.RuntimeType.MakeArrayType(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.RuntimeType.MakeByRefType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.RuntimeType.MakeGenericType(System.Type[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.RuntimeType.MakePointerType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.RuntimeType.PrivateGetType(System.String,System.Boolean,System.Boolean,System.Boolean,System.Threading.StackCrawlMark@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.PrivateGetType(System.String,System.Boolean,System.Boolean,System.Threading.StackCrawlMark@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.RuntimeTypeCache.GetGenericMethodInfo(System.RuntimeMethodHandle)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.RuntimeType.RuntimeTypeCache.GetMemberCache``1(System.RuntimeType.RuntimeTypeCache.MemberInfoCache{``0}@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.RuntimeType.RuntimeTypeCache.GetNameSpace">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.RuntimeType.RuntimeTypeCache.MemberInfoCache`1.Populate(System.String,System.Reflection.MemberListType,System.RuntimeType.RuntimeTypeCache.CacheType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.RuntimeType.RuntimeTypeCache.MemberInfoCache`1.PopulateConstructors(System.RuntimeType.RuntimeTypeCache.Filter)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.RuntimeType.RuntimeTypeCache.MemberInfoCache`1.PopulateEvents(System.RuntimeType.RuntimeTypeCache.Filter)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.RuntimeType.RuntimeTypeCache.MemberInfoCache`1.PopulateFields(System.RuntimeType.RuntimeTypeCache.Filter)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.RuntimeType.RuntimeTypeCache.MemberInfoCache`1.PopulateInterfaces(System.RuntimeType.RuntimeTypeCache.Filter)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.RuntimeType.RuntimeTypeCache.MemberInfoCache`1.PopulateMethods(System.RuntimeType.RuntimeTypeCache.Filter)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.RuntimeType.RuntimeTypeCache.MemberInfoCache`1.PopulateNestedClasses(System.RuntimeType.RuntimeTypeCache.Filter)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.RuntimeType.RuntimeTypeCache.MemberInfoCache`1.PopulateProperties(System.RuntimeType.RuntimeTypeCache.Filter)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.RuntimeType.RuntimeTypeCache.MemberInfoCache`1.ReflectedType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.RuntimeTypeHandle.GetRuntimeType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.RuntimeTypeHandle.GetTypeByNameUsingCARules(System.String,System.Reflection.Module)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scope">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.SByte.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.AccessControl.EventWaitHandleSecurity._HandleErrorCode(System.Int32,System.String,System.Runtime.InteropServices.SafeHandle,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Policy.ApplicationTrust.ObjectFromXml(System.Security.SecurityElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="elObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Policy.ApplicationTrust.ObjectToXml(System.String,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tag">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Policy.ApplicationTrust.ToXml">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Policy.Evidence.Copy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Policy.Evidence.GetAssemblyEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Policy.Evidence.GetHostEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Policy.Evidence.ShallowCopy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.SecureString.Copy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.SecurityException.ByteArrayToObject(System.Byte[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.SecurityException.getMethod">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.SecurityException.MakeSecurityException(System.Reflection.AssemblyName,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.RuntimeMethodHandle,System.Security.Permissions.SecurityAction,System.Object,System.Security.IPermission)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.SecurityException.ObjectToByteArray(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.SecurityException.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.SecurityException.ToString(System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="T:System.SerializableAttribute">
    <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags,JetBrains.Annotations.ImplicitUseTargetFlags)">
      <argument>8</argument> 
      <argument>3</argument> 
    </attribute>
  </member>
  <member name="M:System.SerializableAttribute.GetCustomAttribute(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.SharedStatics.GetSharedStringMaker">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.SharedStatics.Remoting_Identity_IDGuid">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Signature.GetCustomModifiers(System.Int32,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Single.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.Concat(System.Object,System.Object,System.Object,System.Object,)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.String.ConcatArray(System.String[],System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.ConvertToAnsi_BestFit_Throw(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.String.CreateString(System.SByte*,System.Int32,System.Int32,System.Text.Encoding)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.String.CreateStringFromEncoding(System.Byte*,System.Int32,System.Text.Encoding)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.CtorCharArray(System.Char[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.String.CtorCharArrayStartLength(System.Char[],System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.CtorCharCount(System.Char,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.String.CtorCharPtr(System.Char*)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="ptr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.CtorCharPtrStartLength(System.Char*,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.String.GetStringForStringBuilder(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.GetStringForStringBuilder(System.String,System.Int32,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.InternalCopy(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.InternalSplitKeepEmptyEntries(System.Int32[],System.Int32[],System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="sepList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.InternalSplitOmitEmptyEntries(System.Int32[],System.Int32[],System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="sepList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.InternalSubString(System.Int32,System.Int32,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.String.InternalSubStringWithChecks(System.Int32,System.Int32,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.String.Normalize">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.String.Normalize(System.Text.NormalizationForm)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.String.Remove(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.String.SmallCharToUpper(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="strIn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.TrimHelper(System.Char[],System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="trimChars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.StringComparer.Create(System.Globalization.CultureInfo,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.StringComparer.CurrentCulture">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.StringComparer.CurrentCultureIgnoreCase">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.SZArrayHelper.GetEnumerator``1">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.SZArrayHelper.SZGenericArrayEnumerator`1.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.SZArrayHelper.SZGenericArrayEnumerator`1.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Text.Decoder.FallbackBuffer">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.DecoderFallback.CreateFallbackBuffer">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Text.Encoder.FallbackBuffer">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.EncoderFallback.CreateFallbackBuffer">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.Encoding.CreateDefaultEncoding">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.Encoding.DefaultDecoder.GetRealObject(System.Runtime.Serialization.StreamingContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.Encoding.DefaultEncoder.GetRealObject(System.Runtime.Serialization.StreamingContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.Encoding.GetBestFitBytesToUnicodeData">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.Encoding.GetBestFitUnicodeToBytesData">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Encoding.GetEncodingCodePage(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.Encoding.GetEncodings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.EncodingInfo.GetEncoding">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.Normalization.Normalize(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="strInput">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Normalization.Normalize(System.String,System.Text.NormalizationForm)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="strInput">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.StringBuilder.GetNewString(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="currentString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.UTF8Encoding.GetBytesUnknown(System.Byte*@,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Threading.EventWaitHandle.OpenExisting(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.EventWaitHandle.OpenExisting(System.String,System.Security.AccessControl.EventWaitHandleRights)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.ExecutionContext.Capture">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Threading.ExecutionContext.Capture(System.Threading.StackCrawlMark@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Threading.ExecutionContext.CreateCopy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Threading.Mutex.OpenExisting(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Mutex.OpenExisting(System.String,System.Security.AccessControl.MutexRights)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.SynchronizationContext.CreateCopy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Threading.ThreadPool.RegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.Int32,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="callBack">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.ThreadPool.RegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.Int64,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="callBack">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.ThreadPool.RegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.TimeSpan,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="callBack">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.ThreadPool.RegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.UInt32,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="callBack">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.ThreadPool.RegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.UInt32,System.Boolean,System.Threading.StackCrawlMark@,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="callBack">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.Int32,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="callBack">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.Int64,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="callBack">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.TimeSpan,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="callBack">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject(System.Threading.WaitHandle,System.Threading.WaitOrTimerCallback,System.Object,System.UInt32,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="callBack">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeSpan.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Type.AssemblyQualifiedName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Type.BaseType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Type.DeclaringMethod">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Type.DefaultBinder">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Type.GetElementType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Type.GetEvent(System.String,System.Reflection.BindingFlags)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Type.GetField(System.String,System.Reflection.BindingFlags)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Type.GetRootElementType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Type.GetType(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Type.GetType(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>throwOnError:true => notnull; throwOnError:false=>canbenull;</argument>
    </attribute>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Type.GetType(System.String,System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>throwOnError:true => notnull; throwOnError:false=>canbenull;</argument>
    </attribute>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Type.Namespace">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Type.ReflectedType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Type.ResolveTypeRelativeTo(System.String,System.Int32,System.Int32,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="serverType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Type.StructLayoutAttribute">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.TypedReference.GetTargetType(System.TypedReference)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.TypeInitializationException.TypeName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.TypeLoadException.TypeName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.UInt16.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UInt32.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UInt64.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UnitySerializationHolder.AddElementTypes(System.Runtime.Serialization.SerializationInfo,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UnitySerializationHolder.MakeElementTypes(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Utf8String.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Tuple.Create``1(``0)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Tuple.Create``2(``0,``1)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Tuple.Create``3(``0,``1,``2)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Tuple.Create``4(``0,``1,``2,``3)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Tuple.Create``5(``0,``1,``2,``3,``4)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Tuple.Create``6(``0,``1,``2,``3,``4,``5)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Tuple.Create``7(``0,``1,``2,``3,``4,``5,``6)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.IDictionaryEnumerator.Key">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.AppDomainSetup.ApplicationTrust">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.AppDomainSetup.InternalGetApplicationTrust">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Array.UnsafeCreateInstance(System.Type,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="elementType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.CreateAttributeArrayHelper(System.Type,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="elementType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.InternalParamGetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="param">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Boolean.TrimWhiteSpaceAndNull(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CrossAppDomainMarshaledException.InternalToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Delegate.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Delegate.CreateDelegateNoSecurityCheck(System.Type,System.Object,System.RuntimeMethodHandle)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Enum.GetHashEntry(System.RuntimeType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="enumType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.Calendar.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.CalendarData.CalendarIdToCultureName(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.CalendarData.GetCalendarData(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.CultureData.AnsiToLower(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="testString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CultureData.ConvertWin32GroupString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.CultureData.CreateCultureData(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.CultureData.DateSeparator(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureData.DefaultCalendar">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.CultureData.DeriveShortTimesFromLong">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.CultureData.DoEnumShortTimeFormats">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.CultureData.DoEnumTimeFormats">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.CultureData.DoGetLocaleInfo(System.String,System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.CultureData.DoGetLocaleInfo(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.CultureData.GetCalendar(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.CultureData.GetDateSeparator(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CultureData.GetSeparator(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="timeParts">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CultureData.GetTimeSeparator(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CultureData.ReescapeWin32String(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.CultureData.ReescapeWin32Strings(System.String[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureData.SAM1159">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureData.SCURRENCY">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureData.SENGCOUNTRY">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureData.SENGLISHLANGUAGE">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureData.SINTLSYMBOL">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureData.SISO3166CTRYNAME">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureData.SISO639LANGNAME">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureData.SLIST">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureData.SLOCALIZEDCOUNTRY">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureData.SLOCALIZEDLANGUAGE">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureData.SNAME">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureData.SNAN">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureData.SNATIVECOUNTRY">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureData.SNATIVELANGUAGE">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureData.SNEGINFINITY">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureData.SPARENT">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureData.SPERCENT">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureData.SPERMILLE">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureData.SPM2359">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureData.SPOSINFINITY">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureData.SREGIONNAME">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.CultureData.StripSecondsFromPattern(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="time">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Globalization.CultureData.TimeSeparator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.CultureData.UnescapeNlsString(System.String,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Globalization.CultureData.WAGROUPING">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureData.WAMONGROUPING">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.CultureInfo.GetCultureByName(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Globalization.DateTimeFormatInfo.AllLongDatePatterns">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.DateTimeFormatInfo.AllLongTimePatterns">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.DateTimeFormatInfo.AllShortDatePatterns">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.DateTimeFormatInfo.AllShortTimePatterns">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.DateTimeFormatInfo.AllYearMonthPatterns">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.DateTimeFormatInfo.AMDesignator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.DateTimeFormatInfo.Culture">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.DateTimeFormatInfo.GetMergedPatterns(System.String[],System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="patterns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Globalization.DateTimeFormatInfo.PMDesignator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.JapaneseCalendar.AbbrevEraNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.JapaneseCalendar.EnglishEraNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.JapaneseCalendar.EraNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.JapaneseCalendar.GetEraFromValue(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.JapaneseCalendar.GetErasFromRegistry">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.KoreanCalendar.InitEraInfo">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.RegionInfo.DisplayName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.TaiwanCalendar.InitEraInfo">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.TextInfo.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.ThaiBuddhistCalendar.InitEraInfo">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.TimeSpanFormat.Format(System.TimeSpan,System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.TimeSpanFormat.FormatCustomized(System.TimeSpan,System.String,System.Globalization.DateTimeFormatInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.TimeSpanFormat.FormatStandard(System.TimeSpan,System.Boolean,System.String,System.Globalization.TimeSpanFormat.Pattern)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.TimeSpanParse.TimeSpanResult.GetTimeSpanParseException">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.IO.Directory.EnumerateDirectories(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.EnumerateDirectories(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="searchPattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.EnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="searchPattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.EnumerateFiles(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.EnumerateFiles(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="searchPattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="searchPattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.EnumerateFileSystemEntries(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="searchPattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.EnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="searchPattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.EnumerateFileSystemNames(System.String,System.String,System.IO.SearchOption,System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="searchPattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.InternalCreateDirectoryHelper(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.InternalEnumerateDirectories(System.String,System.String,System.IO.SearchOption)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="searchPattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.InternalEnumerateFiles(System.String,System.String,System.IO.SearchOption)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="searchPattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.InternalEnumerateFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="searchPattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.InternalGetCurrentDirectory(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.IO.Directory.InternalGetFileDirectoryNames(System.String,System.String,System.String,System.Boolean,System.Boolean,System.IO.SearchOption,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="userPathOriginal">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="searchPattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.UnsafeCreateDirectory(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.UnsafeGetCurrentDirectory">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.IO.Directory.UnsafeGetDirectories(System.String,System.String,System.IO.SearchOption)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="searchPattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.UnsafeGetFiles(System.String,System.String,System.IO.SearchOption)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="searchPattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.InternalCopy(System.String,System.String,System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="sourceFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="destFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.InternalReadAllBytes(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.InternalReadAllText(System.String,System.Text.Encoding,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.UnsafeReadAllBytes(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.UnsafeReadAllText(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.FileSystemEnumerableFactory.CreateDirectoryInfoIterator(System.String,System.String,System.String,System.IO.SearchOption)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="originalUserPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="searchPattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.FileSystemEnumerableFactory.CreateFileInfoIterator(System.String,System.String,System.String,System.IO.SearchOption)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="originalUserPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="searchPattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.FileSystemEnumerableFactory.CreateFileNameIterator(System.String,System.String,System.String,System.Boolean,System.Boolean,System.IO.SearchOption,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="originalUserPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="searchPattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.FileSystemEnumerableFactory.CreateFileSystemInfoIterator(System.String,System.String,System.String,System.IO.SearchOption)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="originalUserPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="searchPattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.FileSystemEnumerableIterator`1.CreateSearchResult(System.IO.Directory.SearchData,Microsoft.Win32.Win32Native.WIN32_FIND_DATA)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="localSearchData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="findData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.FileSystemEnumerableIterator`1.GetNormalizedSearchCriteria(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="fullSearchString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="fullPathMod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.FileSystemEnumerableIterator`1.NormalizeSearchPattern(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="searchPattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Iterator`1.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.IO.Iterator`1.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.IO.Path.Combine(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="path2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="path3">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Path.Combine(System.String[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="paths">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Path.InternalGetTempFileName(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.IO.Path.NormalizePath(System.String,System.Boolean,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Path.RemoveLongPathPrefix(System.Text.StringBuilder)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Path.ToBase32StringSuitableForDirName(System.Byte[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="buff">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Path.UnsafeGetFullPath(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Path.UnsafeGetTempFileName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.IO.Stream.BlockingBeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Stream.BlockingBeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.IO.Stream.SynchronousAsyncResult.AsyncWaitHandle">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ModuleHandle.ResolveMethodHandleInternal(System.Reflection.RuntimeModule,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ModuleHandle.ResolveMethodHandleInternal(System.Reflection.RuntimeModule,System.Int32,System.RuntimeTypeHandle[],System.RuntimeTypeHandle[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Associates.AssignAssociates(System.Int32,System.RuntimeType,System.RuntimeType)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="declaredType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="reflectedType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttribute.CreateAttributeArrayHelper(System.Type,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="elementType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeData.GetCustomAttributeRecords(System.Reflection.RuntimeModule,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeData.GetCustomAttributes(System.Reflection.RuntimeModule,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeData.GetCustomAttributesInternal(System.Reflection.RuntimeAssembly)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeData.GetCustomAttributesInternal(System.Reflection.RuntimeConstructorInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeData.GetCustomAttributesInternal(System.Reflection.RuntimeEventInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeData.GetCustomAttributesInternal(System.Reflection.RuntimeFieldInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeData.GetCustomAttributesInternal(System.Reflection.RuntimeMethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeData.GetCustomAttributesInternal(System.Reflection.RuntimeParameterInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeData.GetCustomAttributesInternal(System.Reflection.RuntimePropertyInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeData.GetCustomAttributesInternal(System.RuntimeType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeTypedArgument.ResolveType(System.Reflection.RuntimeModule,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="scope">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.__ExceptionInfo.EnlargeArray(System.Type[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="incoming">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilder.GetCustomAttributesData">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilder.GetNativeHandle">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilder.InternalDefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Threading.StackCrawlMark@,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder},System.Security.SecurityContextSource)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Reflection.Emit.InternalAssemblyBuilder.ImageRuntimeVersion">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="url">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.DefineDocumentNoLock(System.String,System.Guid,System.Guid,System.Guid)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.GetNativeHandle">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.SymWrapperCore.SymWriter.CreateSymWriter">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.SymWrapperCore.SymWriter.System#Diagnostics#SymbolStore#ISymbolWriter#DefineDocument(System.String,System.Guid,System.Guid,System.Guid)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilderInstantiation.MakeGenericType(System.Type,System.Type[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="typeArguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.MdFieldInfo.GetOptionalCustomModifiers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.MdFieldInfo.GetRequiredCustomModifiers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.MetadataImport.GetUserString(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.MethodBase.ConstructName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.MethodBase.ConstructParameters(System.Reflection.ParameterInfo[],System.Reflection.CallingConventions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.MethodBase.ConstructParameters(System.Type[],System.Reflection.CallingConventions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.PseudoCustomAttribute.GetCustomAttributes(System.Reflection.RuntimeAssembly,System.RuntimeType,System.Boolean,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="caType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.PseudoCustomAttribute.GetCustomAttributes(System.Reflection.RuntimeConstructorInfo,System.RuntimeType,System.Boolean,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="ctor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="caType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.PseudoCustomAttribute.GetCustomAttributes(System.Reflection.RuntimeEventInfo,System.RuntimeType,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.PseudoCustomAttribute.GetCustomAttributes(System.Reflection.RuntimeFieldInfo,System.RuntimeType,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="field">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="caType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.PseudoCustomAttribute.GetCustomAttributes(System.Reflection.RuntimeMethodInfo,System.RuntimeType,System.Boolean,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="caType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.PseudoCustomAttribute.GetCustomAttributes(System.Reflection.RuntimeModule,System.RuntimeType,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.PseudoCustomAttribute.GetCustomAttributes(System.Reflection.RuntimeParameterInfo,System.RuntimeType,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="caType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.PseudoCustomAttribute.GetCustomAttributes(System.Reflection.RuntimePropertyInfo,System.RuntimeType,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.PseudoCustomAttribute.GetCustomAttributes(System.RuntimeType,System.RuntimeType,System.Boolean,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="caType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.RuntimeAssembly.GetCustomAttributesData">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.RuntimeAssembly.GetLocale">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.RuntimeAssembly.GetManifestResourceStream(System.String,System.Threading.StackCrawlMark@,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.RuntimeAssembly.GetManifestResourceStream(System.Type,System.String,System.Boolean,System.Threading.StackCrawlMark@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.RuntimeAssembly.GetNativeHandle">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.RuntimeAssembly.GetVersion">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.RuntimeAssembly.OnModuleResolveEvent(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.RuntimeConstructorInfo.GetCustomAttributesData">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.RuntimeEventInfo.GetCustomAttributesData">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.RuntimeFieldInfo.GetCustomAttributesData">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.RuntimeMethodInfo.GetCustomAttributesData">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.RuntimeModule.ConvertToTypeHandleArray(System.Type[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.RuntimeModule.GetNativeHandle">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.RuntimeParameterInfo.DefiningMethod">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.RuntimeParameterInfo.GetCustomAttributesData">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.RuntimeParameterInfo.GetParameters(System.IRuntimeMethodInfo,System.Reflection.MemberInfo,System.Signature)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="sig">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.RuntimeParameterInfo.GetParameters(System.IRuntimeMethodInfo,System.Reflection.MemberInfo,System.Signature,System.Reflection.ParameterInfo@,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="sig">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="methodHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.RuntimePropertyInfo.GetCustomAttributesData">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.RuntimePropertyInfo.GetIndexParametersNoCopy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.StrongNameKeyPair.ComputePublicKey">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Resources.ManifestBasedResourceGroveler.CaseInsensitiveManifestResourceStreamLookup(System.Reflection.RuntimeAssembly,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="satellite">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ManifestBasedResourceGroveler.GetManifestResourceStream(System.Reflection.RuntimeAssembly,System.String,System.Threading.StackCrawlMark@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="satellite">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ManifestBasedResourceGroveler.GetNeutralResourcesLanguage(System.Reflection.Assembly,System.Resources.UltimateResourceFallbackLocation@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ManifestBasedResourceGroveler.GrovelForResourceSet(System.Globalization.CultureInfo,System.Collections.Generic.Dictionary{System.String,System.Resources.ResourceSet},System.Boolean,System.Boolean,System.Threading.StackCrawlMark@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localResourceSets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceManager.InternalGetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean,System.Threading.StackCrawlMark@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Resources.ResourceManager.ResourceManagerMediator.GetResourceFileName(System.Globalization.CultureInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceManager.ResourceManagerMediator.ObtainSatelliteContractVersion(System.Reflection.Assembly)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceReader._LoadObjectV1(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Resources.ResourceReader._LoadObjectV2(System.Int32,System.Resources.ResourceTypeCode@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Runtime.CompilerServices.JitHelpers.UnsafeCast``1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Runtime.InteropServices.InAttribute.GetCustomAttribute(System.Reflection.RuntimeParameterInfo)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.MarshalAsAttribute.GetCustomAttribute(System.Int32,System.Reflection.RuntimeModule)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="scope">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.MarshalAsAttribute.GetCustomAttribute(System.Reflection.RuntimeParameterInfo)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.OptionalAttribute.GetCustomAttribute(System.Reflection.RuntimeParameterInfo)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.OutAttribute.GetCustomAttribute(System.Reflection.RuntimeParameterInfo)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.SafeBuffer.NotInitialized">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.RuntimeMethodHandle.EnsureNonNullMethodInfo(System.IRuntimeMethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.GetCustomAttributesData">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.RuntimeType.GetEnumNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.RuntimeType.GetPropertyInfo(System.RuntimeType,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="reflectedType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.RuntimeType.RemotingCache">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.RuntimeType.RuntimeTypeCache.GetGenericMethodInfo(System.RuntimeMethodHandleInternal)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.RuntimeType.RuntimeTypeCache.MemberInfoCache`1.GetListByName(System.Char*,System.Int32,System.Byte*,System.Int32,System.Reflection.MemberListType,System.RuntimeType.RuntimeTypeCache.CacheType)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="pName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pUtf8Name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeTypeHandle.CopyRuntimeTypeHandles(System.RuntimeTypeHandle[],System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.RuntimeTypeHandle.CopyRuntimeTypeHandles(System.Type[],System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.RuntimeTypeHandle.GetTypeChecked">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.RuntimeTypeHandle.GetTypeHelper(System.Type,System.Type[],System.IntPtr,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="typeStart">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.SecurityException.MakeSecurityException(System.Reflection.AssemblyName,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.RuntimeMethodHandleInternal,System.Security.Permissions.SecurityAction,System.Object,System.Security.IPermission)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.String.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.String.Concat(System.Collections.Generic.IEnumerable{System.String})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.Concat``1(System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.ConvertToAnsi(System.Int32,System.Boolean,System.Boolean,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.String.CreateTrimmedString(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.String.Join(System.String,System.Collections.Generic.IEnumerable{System.String})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.Join(System.String,System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.Join``1(System.String,System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.SplitInternal(System.Char[],System.Int32,System.StringSplitOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.String.TrimHelper(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.StubHelpers.AnsiCharMarshaler.DoAnsiConversion(System.String,System.Boolean,System.Boolean,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.StubHelpers.CSTRMarshaler.ConvertToManaged(System.IntPtr)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.StubHelpers.StubHelpers.GetHRExceptionObject(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.StubHelpers.VBByValStrMarshaler.ConvertToManaged(System.IntPtr,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.StubHelpers.WSTRBufferMarshaler.ConvertToManaged(System.IntPtr)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.Clear">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.FindChunkForByte(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.FindChunkForIndex(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.Next(System.Text.StringBuilder)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="chunk">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.ThreadPool.GetGloballyQueuedWorkItemsForDebugger">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Threading.ThreadPool.GetLocallyQueuedWorkItemsForDebugger">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Threading.ThreadPool.GetQueuedWorkItemsForDebugger">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Threading.ThreadPool.ToObjectArray(System.Collections.Generic.IEnumerable{System.Threading.IThreadPoolWorkItem})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="workitems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeSpan.ToString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.TimeZoneInfo.CreateAdjustmentRuleFromTimeZoneInformation(Microsoft.Win32.Win32Native.RegistryTimeZoneInformation,System.DateTime,System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.TimeZoneInfo.GetLocalTzFile">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.TimeZoneInfo.TZif_GetZoneAbbreviation(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="zoneAbbreviations">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Tuple`1.System#ITuple#ToString(System.Text.StringBuilder)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="sb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Tuple`2.System#ITuple#ToString(System.Text.StringBuilder)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="sb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Tuple`3.System#ITuple#ToString(System.Text.StringBuilder)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="sb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Tuple`4.System#ITuple#ToString(System.Text.StringBuilder)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="sb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Tuple`5.System#ITuple#ToString(System.Text.StringBuilder)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="sb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Tuple`6.System#ITuple#ToString(System.Text.StringBuilder)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="sb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Tuple`7.System#ITuple#ToString(System.Text.StringBuilder)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="sb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Type.GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Type.GetEnumName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Type.GetEnumUnderlyingType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Type.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="returnType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Type.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Version.Parse(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Version.VersionResult.GetVersionParseException">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.IObservable`1.Subscribe(System.IObserver{`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="observer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
    <parameter name="assemblyFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
    <parameter name="domain">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="assemblyFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
    <parameter name="domain">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.AggregateException.Flatten">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.AggregateException.InnerExceptions">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Array.UnsafeCreateInstance(System.Type,System.Int32[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="elementType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="lengths">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.UnsafeCreateInstance(System.Type,System.Int32[],System.Int32[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="elementType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="lengths">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="lowerBounds">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.UnsafeCreateInstance(System.Type,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="elementType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetKeys">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetValues">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.ToArray">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Concurrent.ConcurrentDictionary`2.DictionaryEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentQueue`1.ToArray">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentQueue`1.Segment.ToList(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentQueue`1.Segment.UnsafeGrow">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentStack`1.ToArray">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentStack`1.ToList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.Contracts.Contract.OldValue``1(``0)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.Contracts.Contract.Result``1">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.Contracts.Contract.ValueAtReturn``1(``0@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="P:System.Diagnostics.Contracts.ContractException.Failure">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.CompareInfo.CreateSortKey(System.String,System.Globalization.CompareOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CultureData.GetCultures(System.Globalization.CultureTypes)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureData.SADURATION">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureData.STEXTINFO">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.CultureInfo.GetCultures(System.Globalization.CultureTypes)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureInfo.Region">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.TaiwanLunisolarCalendar.InitEraInfo">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.IO.Directory.InternalGetFileDirectoryNames(System.String,System.String,System.String,System.Boolean,System.Boolean,System.IO.SearchOption)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="searchPattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="userPathOriginal">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.InternalReadAllLines(System.String,System.Text.Encoding)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.FileSystemEnumerableFactory.CreateFileNameIterator(System.String,System.String,System.String,System.Boolean,System.Boolean,System.IO.SearchOption)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="searchPattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="originalUserPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Path.Combine(System.String,System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="path2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="path3">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="path4">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Path.RemoveLongPathPrefix(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Stream.NullStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.CustomAttributeData.GetCustomAttributesInternal(System.Reflection.RuntimeModule)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilder.GetOnDiskAssemblyModuleBuilder">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.RuntimeAssembly.CreateWebPermission(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.RuntimeAssembly.EnumerateCache(System.Reflection.AssemblyName)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="partialName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Reflection.RuntimeAssembly.Cache">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.RuntimeAssembly.FullName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.RuntimeAssembly.Location">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.RuntimeConstructorInfo.RemotingCache">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.RuntimeEventInfo.RemotingCache">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.RuntimeFieldInfo.RemotingCache">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.RuntimeMethodInfo.RemotingCache">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.RuntimeModule.GetCustomAttributesData">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.RuntimeModule.FullyQualifiedName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.RuntimeParameterInfo.RemotingCache">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.RuntimePropertyInfo.RemotingCache">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Resources.FileBasedResourceGroveler.CreateResourceSet(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Resources.FileBasedResourceGroveler.FindResourceFile(System.Globalization.CultureInfo,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.CompilerServices.TypeForwardedToAttribute.GetCustomAttribute(System.Reflection.RuntimeAssembly)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.StructLayoutAttribute.GetCustomAttribute(System.RuntimeType)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.GetEnumValues">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Policy.Evidence.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Policy.Evidence.GetAssemblyEvidence``1">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Policy.Evidence.GetDelayEvaluatedHostEvidence``1">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Policy.Evidence.GetHostEvidence``1">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Policy.Evidence.GetEvidenceTypeDescriptor(System.Type,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="evidenceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Policy.Evidence.GetRawAssemblyEvidenceEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Policy.Evidence.GetRawHostEvidenceEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Policy.Evidence.HandleDuplicateEvidence(System.Security.Policy.EvidenceBase,System.Security.Policy.EvidenceBase,System.Security.Policy.Evidence.DuplicateEvidenceAction)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="duplicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Policy.Evidence.GetHostEvidenceNoLock(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Policy.Evidence.GenerateHostEvidence(System.Type,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Policy.Evidence.RawSerialize">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.Policy.Evidence.WrapLegacyEvidence(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.SerializableAttribute.GetCustomAttribute(System.RuntimeType)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.StubHelpers.StubHelpers.GetCOMHRExceptionObject(System.Int32,System.IntPtr,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken,System.Threading.CancellationToken)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tokens">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Threading.SemaphoreSlim.AvailableWaitHandle">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Threading.SemaphoreSlim.WaitAsync">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>  
  </member>
  <member name="M:System.Threading.SemaphoreSlim.WaitAsync(System.Threading.CancellationToken)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>  
  </member>
  <member name="M:System.Threading.SemaphoreSlim.WaitAsync(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>  
  </member>
  <member name="M:System.Threading.SemaphoreSlim.WaitAsync(System.TimeSpan)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>  
  </member>
  <member name="M:System.Threading.SemaphoreSlim.WaitAsync(System.TimeSpan,System.Threading.CancellationToken)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>  
  </member>
  <member name="M:System.Threading.SemaphoreSlim.WaitAsync(System.Int32,System.Threading.CancellationToken)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>  
  </member>
  <member name="M:System.Threading.SparselyPopulatedArrayFragment`1.SafeAtomicRemove(System.Int32,`0)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.Tasks.TaskScheduler,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.StackCrawlMark@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="continuationAction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.Tasks.TaskScheduler,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.StackCrawlMark@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task`1.StartNew(System.Threading.Tasks.Task,System.Func{`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.InternalTaskOptions,System.Threading.Tasks.TaskScheduler,System.Threading.StackCrawlMark@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Threading.Tasks.Task`1.DebuggerDisplayMethodDescription">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Threading.Tasks.Task`1.StartNew(System.Threading.Tasks.Task,System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.InternalTaskOptions,System.Threading.Tasks.TaskScheduler,System.Threading.StackCrawlMark@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.ContingentPropertyCreator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Threading.Tasks.Task.CreateReplicaTask(System.Action{System.Object},System.Object,System.Threading.Tasks.Task,System.Threading.Tasks.TaskScheduler,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.InternalTaskOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="taskReplicaDelegate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="parentTask">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskScheduler,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.StackCrawlMark@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="continuationAction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskScheduler,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.StackCrawlMark@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.InternalStartNew(System.Threading.Tasks.Task,System.Object,System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskScheduler,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.InternalTaskOptions,System.Threading.StackCrawlMark@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="action">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.InternalStartNew(System.Threading.Tasks.Task,System.Object,System.Object,System.Threading.Tasks.TaskScheduler,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.InternalTaskOptions,System.Threading.ExecutionContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="action">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Threading.Tasks.Task.CurrentStackGuard">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Threading.Tasks.Task.DebuggerDisplayMethodDescription">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Threading.Tasks.TaskExceptionHolder.CreateExceptionObject(System.Boolean,System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.Tasks.TaskContinuationOptions,System.Threading.CancellationToken,System.Threading.Tasks.TaskScheduler,System.Threading.StackCrawlMark@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.Tasks.TaskContinuationOptions,System.Threading.CancellationToken,System.Threading.Tasks.TaskScheduler,System.Threading.StackCrawlMark@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.CreateCanceledTask(System.Threading.Tasks.TaskContinuationOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.Tasks.TaskContinuationOptions,System.Threading.CancellationToken,System.Threading.Tasks.TaskScheduler,System.Threading.StackCrawlMark@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.Tasks.TaskContinuationOptions,System.Threading.CancellationToken,System.Threading.Tasks.TaskScheduler,System.Threading.StackCrawlMark@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0},System.Threading.CancellationToken)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0},System.Threading.Tasks.TaskCreationOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.CheckMultiContinuationTasksAndCopy(System.Threading.Tasks.Task[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.CheckMultiContinuationTasksAndCopy``1(System.Threading.Tasks.Task{``0}[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.Tasks.TaskContinuationOptions,System.Threading.CancellationToken,System.Threading.Tasks.TaskScheduler,System.Threading.StackCrawlMark@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0},System.Threading.Tasks.TaskContinuationOptions,System.Threading.CancellationToken,System.Threading.Tasks.TaskScheduler,System.Threading.StackCrawlMark@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task[]},System.Threading.Tasks.TaskContinuationOptions,System.Threading.CancellationToken,System.Threading.Tasks.TaskScheduler,System.Threading.StackCrawlMark@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationAction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]},System.Threading.Tasks.TaskContinuationOptions,System.Threading.CancellationToken,System.Threading.Tasks.TaskScheduler,System.Threading.StackCrawlMark@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationAction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskContinuationOptions,System.Threading.CancellationToken,System.Threading.Tasks.TaskScheduler,System.Threading.StackCrawlMark@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.Tasks.TaskContinuationOptions,System.Threading.CancellationToken,System.Threading.Tasks.TaskScheduler,System.Threading.StackCrawlMark@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.CreateCanceledTask(System.Threading.Tasks.TaskContinuationOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.IAsyncResult,System.Func{System.IAsyncResult,``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="endMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskContinuationOptions,System.Threading.CancellationToken,System.Threading.Tasks.TaskScheduler,System.Threading.StackCrawlMark@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationAction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``0},System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="beginMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="endMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}},System.Threading.Tasks.TaskContinuationOptions,System.Threading.CancellationToken,System.Threading.Tasks.TaskScheduler,System.Threading.StackCrawlMark@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationAction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.IAsyncResult,System.Func{System.IAsyncResult,``0},System.Threading.Tasks.TaskCreationOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="endMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``0},System.Object,System.Threading.Tasks.TaskCreationOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="beginMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="endMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``1},``0,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="beginMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="endMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.IAsyncResult,System.Func{System.IAsyncResult,``0},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="endMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``1},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="beginMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="endMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="beginMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="endMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``2},``0,``1,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="beginMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="endMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="beginMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="endMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``2},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="beginMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="endMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.FromAsync``4(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``3},``0,``1,``2,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="beginMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="endMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="beginMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="endMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler,System.Threading.StackCrawlMark@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="endMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="action">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.FromAsync``4(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``3},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="beginMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="endMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action{System.Object},System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="action">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0},System.Threading.CancellationToken)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0},System.Threading.Tasks.TaskCreationOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action,System.Threading.Tasks.TaskCreationOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="action">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="beginMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="endMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action,System.Threading.CancellationToken)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="action">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action{System.Object},System.Object,System.Threading.CancellationToken)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="action">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action{System.Object},System.Object,System.Threading.Tasks.TaskCreationOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="action">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.FromAsyncCoreLogic(System.IAsyncResult,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCompletionSource{System.Object})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="endMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="tcs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object,System.Threading.CancellationToken)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object,System.Threading.Tasks.TaskCreationOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="action">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action{System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="action">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.InternalTaskOptions,System.Threading.Tasks.TaskScheduler)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="action">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskScheduler.GetThreadStatics">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Threading.Tasks.TaskScheduler.GetScheduledTasksForDebugger">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Threading.Tasks.TaskScheduler.GetTaskSchedulersForDebugger">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Threading.ThreadLocal`1.GetTypesFromIndex">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Threading.ThreadLocal`1.CreateValue">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.TimeZoneInfo.GetAdjustmentRules">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.TypeNameParser.EscapeTypeName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TypeNameParser.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type},System.Boolean,System.Boolean,System.Threading.StackCrawlMark@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TypeNameParser.ResolveType(System.Reflection.Assembly,System.String[],System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type},System.Boolean,System.Boolean,System.Threading.StackCrawlMark@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="names">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UnitySerializationHolder.AddElementTypes(System.Runtime.Serialization.SerializationInfo,System.RuntimeType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.FileBasedResourceGroveler.GrovelForResourceSet(System.Globalization.CultureInfo,System.Collections.Generic.Dictionary{System.String,System.Resources.ResourceSet},System.Boolean,System.Boolean,System.Threading.StackCrawlMark@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localResourceSets">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentQueue`1.ToList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureData.FONTSIGNATURE">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureData.SABBREVCTRYNAME">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureData.SABBREVLANGNAME">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureData.SCONSOLEFALLBACKNAME">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureData.SENGLISHCURRENCY">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureData.SISO3166CTRYNAME2">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureData.SKEYBOARDSTOINSTALL">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureData.SISO639LANGNAME2">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureData.SNATIVECURRENCY">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureData.SOPENTYPELANGUAGETAG">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.CultureData.SSCRIPTS">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.NumberFormatInfo.NativeDigits">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.IO.Directory.InternalGetDirectories(System.String,System.String,System.IO.SearchOption)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="searchPattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.InternalGetFiles(System.String,System.String,System.IO.SearchOption)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="searchPattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.InternalGetFileSystemEntries(System.String,System.String,System.IO.SearchOption)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="searchPattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.LoadFrom(System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="assemblyFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilder.GetVersion">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.Emit.AssemblyBuilder.FullName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.GetCustomAttributesData">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.RuntimeAssembly.PermissionSet">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Runtime.InteropServices.ComEventsHelper.Remove(System.Object,System.Guid,System.Int32,System.Delegate)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Policy.Evidence.GetEvidenceTypeDescriptor(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="evidenceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Policy.Evidence.GetHostEvidence(System.Type,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="continuationAction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.CancellationToken)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="continuationAction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.Tasks.TaskScheduler)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="continuationAction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.CancellationToken)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.Tasks.TaskContinuationOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.Tasks.TaskContinuationOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="continuationAction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="continuationAction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.Tasks.TaskScheduler)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="continuationAction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="continuationAction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskContinuationOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="continuationAction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskScheduler)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="continuationAction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskContinuationOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskScheduler)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="continuationAction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.GetExceptions(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Threading.Tasks.Task.Exception">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.CancellationToken)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.Tasks.TaskContinuationOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.Tasks.TaskContinuationOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.CancellationToken)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.CancellationToken)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.Tasks.TaskContinuationOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.CancellationToken)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.Tasks.TaskContinuationOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.IAsyncResult,System.Func{System.IAsyncResult,`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="endMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="beginMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="endMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.IAsyncResult,System.Func{System.IAsyncResult,`0},System.Threading.Tasks.TaskCreationOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="endMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="beginMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="endMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.IAsyncResult,System.Func{System.IAsyncResult,`0},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="endMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="beginMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="endMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="beginMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="endMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="beginMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="endMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="beginMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="endMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="beginMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="endMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,``2,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="beginMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="endMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationAction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task[]})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationAction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task[]},System.Threading.CancellationToken)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationAction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task[]},System.Threading.Tasks.TaskContinuationOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationAction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]},System.Threading.Tasks.TaskContinuationOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationAction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]},System.Threading.CancellationToken)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationAction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.CancellationToken)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.Tasks.TaskContinuationOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0},System.Threading.CancellationToken)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0},System.Threading.Tasks.TaskContinuationOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationAction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task[]},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationAction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationAction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationAction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationAction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationAction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskContinuationOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationAction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.Tasks.TaskContinuationOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}},System.Threading.Tasks.TaskContinuationOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationAction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.CancellationToken)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskContinuationOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationAction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="continuationAction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="endMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="beginMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="endMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="endMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="endMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="beginMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="endMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="beginMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="endMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,``2,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="beginMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="endMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type},System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type},System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TypeNameParser.ConstructType(System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type},System.Boolean,System.Boolean,System.Threading.StackCrawlMark@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Threading.Tasks.TaskScheduler.SystemThreadingTasks_TaskSchedulerDebugView.ScheduledTasks">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.IO.File.InternalReadAllText(System.String,System.Text.Encoding)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Reflection.Emit.AssemblyBuilder.PermissionSet">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefineProperty(System.String,System.Reflection.PropertyAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Policy.Evidence.GetHostEvidence(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Threading.Tasks.SystemThreadingTasks_FutureDebugView`1.Exception">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Threading.Tasks.SystemThreadingTasks_TaskDebugView.Exception">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.IO.Iterator`1.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Concurrent.ConcurrentDictionary`2.DictionaryEnumerator.Value">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Concurrent.ConcurrentDictionary`2.DictionaryEnumerator.Key">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Module.GetSignerCertificate">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Threading.Tasks.TaskScheduler.GetScheduledTasks">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.String.FastAllocateString(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.String.InsertInternal(System.Int32,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.String.PadHelper(System.Int32,System.Char,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.String.RemoveInternal(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.String.ReplaceInternal(System.Char,System.Char)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.String.ReplaceInternal(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.TextInfo.InternalChangeCaseString(System.IntPtr,System.String,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="F:System.String.Empty">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Type.GetConstructor(System.Type[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="P:System.Reflection.MemberInfo.DeclaringType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="F:System.DBNull.Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="F:System.Reflection.Missing.Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.IO.Path.GetDirectoryName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>null=&gt;null</argument>
    </attribute>
    <parameter name="path">
    </parameter>
  </member>
  <member name="M:System.IO.Path.GetExtension(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>null=&gt;null;notnull=&gt;notnull</argument>
    </attribute>
    <parameter name="path">
    </parameter>
  </member>
  <member name="M:System.IO.Path.GetFileName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>null=&gt;null;notnull=&gt;notnull</argument>
    </attribute>
    <parameter name="path">
    </parameter>
  </member>
  <member name="M:System.IO.Path.GetFileNameWithoutExtension(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>null=&gt;null;notnull=&gt;notnull</argument>
    </attribute>
    <parameter name="path">
    </parameter>
  </member>
  <member name="M:System.IO.Path.GetPathRoot(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>null=&gt;null;notnull=&gt;notnull</argument>
    </attribute>
    <parameter name="path">
    </parameter>
  </member>
  <member name="P:System.StringComparer.InvariantCulture">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>=&gt;true; =&gt;false, value: null</argument>
    </attribute>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.GetDelegateForFunctionPointer(System.IntPtr,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.WeakReference`1.TryGetTarget(`0@)">
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>=&gt;true, target: notnull; =&gt;false, target: null</argument>
    </attribute>
  </member>
  <member name="P:System.WeakReference`1.Target">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Exception.InnerException">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="F:System.Type.EmptyTypes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Collections.Generic.IReadOnlyDictionary`2.Keys">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="P:System.Collections.Generic.IReadOnlyDictionary`2.Values">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.IReadOnlyDictionary`2.TryGetValue(`0,`1@)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>=&gt;true; =&gt;false, value: null</argument>
    </attribute>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.Empty``1">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.Dictionary`2.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="P:System.Collections.ObjectModel.Collection`1.Items">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DateTime.Now">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.DateTime.Today">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTime.ToUniversalTime">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="P:System.DateTime.UtcNow">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Delegate.Method">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.FormattableString.Format">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.FormattableString.GetArguments">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.FormattableString.Invariant(System.FormattableString)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="formattable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.FormattableString.ToString(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.DateTimeFormatInfo.Calendar">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.DateTimeFormatInfo.FullDateTimePattern">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.DateTimeFormatInfo.LongDatePattern">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.DateTimeFormatInfo.LongTimePattern">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.DateTimeFormatInfo.MonthDayPattern">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.DateTimeFormatInfo.ShortDatePattern">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.DateTimeFormatInfo.ShortTimePattern">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Globalization.DateTimeFormatInfo.YearMonthPattern">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.IAsyncResult.AsyncWaitHandle">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Int32.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Int32.ToString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Int64.ToString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.IO.MemoryStream.GetBuffer">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Assembly.Load(System.Byte[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Assembly.Load(System.Byte[],System.Byte[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Assembly.LoadFile(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Assembly)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Module)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.MethodBase.GetCurrentMethod">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.MethodBody.GetILAsByteArray">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Runtime.CompilerServices.AsyncTaskMethodBuilder.Task">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.Task">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Runtime.CompilerServices.FormattableStringFactory.Create(System.String,System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.Format(System.IFormatProvider,System.String,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.Format(System.IFormatProvider,System.String,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.Format(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.StringComparer.InvariantCultureIgnoreCase">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.StringComparer.Ordinal">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.StringComparer.OrdinalIgnoreCase">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="P:System.Threading.Tasks.Task.CompletedTask">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Threading.Tasks.Task.Factory">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Threading.Tasks.Task.FromCanceled(System.Threading.CancellationToken)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Threading.Tasks.Task.FromCanceled``1(System.Threading.CancellationToken)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Threading.Tasks.Task.FromException(System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="exception">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.FromException``1(System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="exception">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.FromResult``1(``0)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Threading.Tasks.Task.Run(System.Action)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="action">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.Run(System.Action,System.Threading.CancellationToken)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="action">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.Run(System.Func{System.Threading.Tasks.Task})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.Run(System.Func{System.Threading.Tasks.Task},System.Threading.CancellationToken)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.Run``1(System.Func{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.Run``1(System.Func{``0},System.Threading.CancellationToken)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.Run``1(System.Func{System.Threading.Tasks.Task{``0}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.Run``1(System.Func{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.Delay(System.TimeSpan)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Threading.Tasks.Task.Delay(System.TimeSpan,System.Threading.CancellationToken)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Threading.Tasks.Task.Delay(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Threading.Tasks.Task.Delay(System.Int32,System.Threading.CancellationToken)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Threading.Tasks.Task`1.Factory">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Threading.Tasks.TaskScheduler.Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Threading.Tasks.TaskScheduler.Default">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.TimeZoneInfo.ConvertTimeToUtc(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.TimeZoneInfo.GetSystemTimeZones">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.TimeZoneInfo.Id">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.TimeZoneInfo.Local">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.TimeZoneInfo.Utc">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Type.FullName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.ArgumentException.#ctor(System.String,System.String)">
    <parameter name="paramName">
      <attribute ctor="M:JetBrains.Annotations.InvokerParameterNameAttribute.#ctor"/>
    </parameter>
    <parameter name="message">
    </parameter>
  </member>
  <member name="M:System.ArgumentException.#ctor(System.String,System.String,System.Exception)">
    <parameter name="paramName">
      <attribute ctor="M:JetBrains.Annotations.InvokerParameterNameAttribute.#ctor"/>
    </parameter>
    <parameter name="message">
    </parameter>
  </member>
  <member name="M:System.ArgumentNullException.#ctor(System.String)">
    <parameter name="paramName">
      <attribute ctor="M:JetBrains.Annotations.InvokerParameterNameAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ArgumentNullException.#ctor(System.String,System.String)">
    <parameter name="paramName">
      <attribute ctor="M:JetBrains.Annotations.InvokerParameterNameAttribute.#ctor"/>
    </parameter>
    <parameter name="message">
    </parameter>
  </member>
  <member name="M:System.ArgumentOutOfRangeException.#ctor(System.String)">
    <parameter name="paramName">
      <attribute ctor="M:JetBrains.Annotations.InvokerParameterNameAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.String)">
    <parameter name="paramName">
      <attribute ctor="M:JetBrains.Annotations.InvokerParameterNameAttribute.#ctor"/>
    </parameter>
    <parameter name="message">
    </parameter>
  </member>
  <member name="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Object,System.String)">
    <parameter name="paramName">
      <attribute ctor="M:JetBrains.Annotations.InvokerParameterNameAttribute.#ctor"/>
    </parameter>
    <parameter name="message">
    </parameter>
  </member>
  <member name="M:System.Array.Exists``1(``0[],System.Predicate{``0})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.Find``1(``0[],System.Predicate{``0})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.FindIndex``1(``0[],System.Predicate{``0})">
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.FindIndex``1(``0[],System.Int32,System.Predicate{``0})">
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.FindIndex``1(``0[],System.Int32,System.Int32,System.Predicate{``0})">
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.FindLast``1(``0[],System.Predicate{``0})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.FindLastIndex``1(``0[],System.Predicate{``0})">
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.FindLastIndex``1(``0[],System.Int32,System.Int32,System.Predicate{``0})">
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.ForEach``1(``0[],System.Action{``0})">
    <parameter name="action">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.Sort``1(``0[],System.Comparison{``0})">
    <parameter name="comparison">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.TrueForAll``1(``0[],System.Predicate{``0})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,`1,System.Func{`0,`1,`1})">
    <parameter name="updateValueFactory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1})">
    <parameter name="addValueFactory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="updateValueFactory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
    <parameter name="valueFactory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate``1(`0,System.Func{`0,``0,`1},System.Func{`0,`1,``0,`1},``0)">
    <parameter name="addValueFactory">
      <attribute ctor="M:JetBrains.Annotations.RequireStaticDelegateAttribute.#ctor"/>
    </parameter>
    <parameter name="updateValueFactory">
      <attribute ctor="M:JetBrains.Annotations.RequireStaticDelegateAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd``1(`0,System.Func{`0,``0,`1},``0)">
    <parameter name="valueFactory">
      <attribute ctor="M:JetBrains.Annotations.RequireStaticDelegateAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.IDictionary.Add(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>6</argument>
    </attribute>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.IDictionary.Contains(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.IDictionary.Remove(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>3</argument>
    </attribute>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.IDictionary.Item(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.ICustomAttributeProvider.IsDefined(System.Type,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ArgumentException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.BinarySearch(System.Array,System.Object)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.BinarySearch(System.Array,System.Object,System.Collections.IComparer)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.BinarySearch(System.Array,System.Int32,System.Int32,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.BinarySearch(System.Array,System.Int32,System.Int32,System.Object,System.Collections.IComparer)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.Clear(System.Array,System.Int32,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.Copy(System.Array,System.Array,System.Int32)">
    <parameter name="sourceArray">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="destinationArray">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.Copy(System.Array,System.Array,System.Int64)">
    <parameter name="sourceArray">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="destinationArray">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.Copy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)">
    <parameter name="sourceArray">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="destinationArray">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.Copy(System.Array,System.Int64,System.Array,System.Int64,System.Int64)">
    <parameter name="sourceArray">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="destinationArray">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.CopyTo(System.Array,System.Int64)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.GetValue(System.Int32[])">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="indices">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.IndexOf(System.Array,System.Object)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.IndexOf(System.Array,System.Object,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.IndexOf(System.Array,System.Object,System.Int32,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.LastIndexOf(System.Array,System.Object)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.LastIndexOf(System.Array,System.Object,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.LastIndexOf(System.Array,System.Object,System.Int32,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.Reverse(System.Array)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.Reverse(System.Array,System.Int32,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.SetValue(System.Object,System.Int32[])">
    <parameter name="indices">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.Sort(System.Array)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.Sort(System.Array,System.Array)">
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.Sort(System.Array,System.Collections.IComparer)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.Sort(System.Array,System.Array,System.Collections.IComparer)">
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.Sort(System.Array,System.Int32,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.Sort(System.Array,System.Array,System.Int32,System.Int32)">
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.Sort(System.Array,System.Int32,System.Int32,System.Collections.IComparer)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.Sort(System.Array,System.Array,System.Int32,System.Int32,System.Collections.IComparer)">
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.BitConverter.ToBoolean(System.Byte[],System.Int32)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.BitConverter.ToChar(System.Byte[],System.Int32)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.BitConverter.ToDouble(System.Byte[],System.Int32)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.BitConverter.ToInt16(System.Byte[],System.Int32)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.BitConverter.ToInt32(System.Byte[],System.Int32)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.BitConverter.ToInt64(System.Byte[],System.Int32)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.BitConverter.ToSingle(System.Byte[],System.Int32)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.BitConverter.ToUInt16(System.Byte[],System.Int32)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.BitConverter.ToUInt32(System.Byte[],System.Int32)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.BitConverter.ToUInt64(System.Byte[],System.Int32)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Boolean.Parse(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Byte.Parse(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Byte.Parse(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Char.GetNumericValue(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Char.IsControl(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Char.IsDigit(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Char.IsLetter(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Char.IsLetterOrDigit(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Char.IsLower(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Char.IsNumber(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Char.IsPunctuation(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Char.IsSeparator(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Char.IsSurrogate(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Char.IsSymbol(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Char.IsUpper(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Char.IsWhiteSpace(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Char.Parse(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.DictionaryEntry.#ctor(System.Object,System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.#ctor(System.Collections.Generic.IList{`0})">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
    <parameter name="inArray">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="outArray">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Convert.ToBase64CharArray(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Base64FormattingOptions)">
    <parameter name="inArray">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="outArray">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Convert.ToChar(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Convert.ToSByte(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)">
    <parameter name="calendar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)">
    <parameter name="calendar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Decimal.#ctor(System.Int32[])">
    <parameter name="bits">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Double.Parse(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Double.Parse(System.String,System.Globalization.NumberStyles)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Double.Parse(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Guid.#ctor(System.Byte[])">
    <parameter name="b">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Guid.#ctor(System.String)">
    <parameter name="g">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Guid.#ctor(System.Int32,System.Int16,System.Int16,System.Byte[])">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Int16.Parse(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Int16.Parse(System.String,System.Globalization.NumberStyles)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Int16.Parse(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Int16.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Int32.Parse(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Int64.Parse(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.MustUseReturnValueAttribute.#ctor(System.String)">
      <argument>Fewer bytes can be read than requested</argument>
    </attribute>
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.MustUseReturnValueAttribute.#ctor(System.String)">
      <argument>Fewer bytes can be read than requested</argument>
    </attribute>
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.BinaryReader.Read(System.Span{System.Byte})">
    <attribute ctor="M:JetBrains.Annotations.MustUseReturnValueAttribute.#ctor(System.String)">
      <argument>Fewer bytes can be read than requested</argument>
    </attribute>
  </member>
  <member name="M:System.IO.BinaryReader.Read(System.Span{System.Char})">
    <attribute ctor="M:JetBrains.Annotations.MustUseReturnValueAttribute.#ctor(System.String)">
      <argument>Fewer bytes can be read than requested</argument>
    </attribute>
  </member>
  <member name="M:System.IO.BinaryWriter.Write(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.BinaryWriter.Write(System.Byte[])">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.BinaryWriter.Write(System.Char[])">
    <parameter name="chars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.BinaryWriter.Write(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.BinaryWriter.Write(System.Char[],System.Int32,System.Int32)">
    <parameter name="chars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.GetCreationTime(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.GetCreationTimeUtc(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.GetLastAccessTime(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.GetLastAccessTimeUtc(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.GetLastWriteTime(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.GetLastWriteTimeUtc(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.GetParent(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.Move(System.String,System.String)">
    <parameter name="sourceDirName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="destDirName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.SetCreationTime(System.String,System.DateTime)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.SetCreationTimeUtc(System.String,System.DateTime)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.SetCurrentDirectory(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.SetLastAccessTime(System.String,System.DateTime)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.SetLastAccessTimeUtc(System.String,System.DateTime)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.SetLastWriteTime(System.String,System.DateTime)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.SetLastWriteTimeUtc(System.String,System.DateTime)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.Delete(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.Move(System.String,System.String)">
    <parameter name="sourceFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="destFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Stream.EndRead(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Stream.EndWrite(System.IAsyncResult)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.MustUseReturnValueAttribute.#ctor(System.String)">
      <argument>Fewer bytes can be read than requested</argument>
    </attribute>
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Stream.Read(System.Span{System.Byte})">
    <attribute ctor="M:JetBrains.Annotations.MustUseReturnValueAttribute.#ctor(System.String)">
      <argument>Fewer bytes can be read than requested</argument>
    </attribute>
  </member>
  <member name="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.MustUseReturnValueAttribute.#ctor(System.String)">
      <argument>Fewer bytes can be read than requested</argument>
    </attribute>
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
    <attribute ctor="M:JetBrains.Annotations.MustUseReturnValueAttribute.#ctor(System.String)">
      <argument>Fewer bytes can be read than requested</argument>
    </attribute>
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Stream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
    <attribute ctor="M:JetBrains.Annotations.MustUseReturnValueAttribute.#ctor(System.String)">
      <argument>Fewer bytes can be read than requested</argument>
    </attribute>    
  </member>
  <member name="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Random.NextBytes(System.Byte[])">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.GetAssembly(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.AssemblyName.GetAssemblyName(System.String)">
    <parameter name="assemblyFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.DefaultMemberAttribute.#ctor(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="memberName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Module.GetMethod(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Module.GetMethod(System.String,System.Type[])">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.Serialization.SerializationInfo.#ctor(System.Type,System.Runtime.Serialization.IFormatterConverter)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="converter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Byte)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Char)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.DateTime)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Decimal)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Double)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int16)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int32)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Int64)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.SByte)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Single)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt16)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt32)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.UInt64)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Object,System.Type)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.Serialization.SerializationInfo.GetBoolean(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.Serialization.SerializationInfo.GetByte(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.Serialization.SerializationInfo.GetChar(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.Serialization.SerializationInfo.GetDateTime(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.Serialization.SerializationInfo.GetDecimal(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.Serialization.SerializationInfo.GetDouble(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.Serialization.SerializationInfo.GetInt16(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.Serialization.SerializationInfo.GetInt32(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.Serialization.SerializationInfo.GetInt64(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.Serialization.SerializationInfo.GetSByte(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.Serialization.SerializationInfo.GetSingle(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.Serialization.SerializationInfo.GetString(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.Serialization.SerializationInfo.GetUInt16(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.Serialization.SerializationInfo.GetUInt32(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.Serialization.SerializationInfo.GetUInt64(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.Serialization.SerializationInfo.GetValue(System.String,System.Type)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.Serialization.SerializationInfo.SetType(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.SByte.Parse(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.SByte.Parse(System.String,System.Globalization.NumberStyles)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.SByte.Parse(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.SByte.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Single.Parse(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Single.Parse(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.#ctor(System.Char[],System.Int32,System.Int32)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.Compare(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.Compare(System.String,System.String,System.Globalization.CultureInfo,System.Globalization.CompareOptions)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Boolean,System.Globalization.CultureInfo)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CultureInfo,System.Globalization.CompareOptions)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.Contains(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
    <parameter name="destination">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.EndsWith(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.EndsWith(System.String,System.StringComparison)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.EndsWith(System.String,System.Boolean,System.Globalization.CultureInfo)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.IndexOf(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.IndexOf(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.IndexOf(System.String,System.StringComparison)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.IndexOf(System.String,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.IndexOf(System.String,System.Int32,System.StringComparison)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.IndexOfAny(System.Char[])">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="anyOf">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.IndexOfAny(System.Char[],System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="anyOf">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.IndexOfAny(System.Char[],System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="anyOf">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.IsInterned(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.LastIndexOf(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.LastIndexOf(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.LastIndexOf(System.String,System.StringComparison)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.LastIndexOf(System.String,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.LastIndexOf(System.String,System.Int32,System.StringComparison)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.LastIndexOfAny(System.Char[])">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="anyOf">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.LastIndexOfAny(System.Char[],System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="anyOf">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.LastIndexOfAny(System.Char[],System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="anyOf">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.StartsWith(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.StartsWith(System.String,System.StringComparison)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.StartsWith(System.String,System.Boolean,System.Globalization.CultureInfo)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Encoding.GetByteCount(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Encoding.GetByteCount(System.Char[])">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="chars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="chars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
    <parameter name="chars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Encoding.GetCharCount(System.Byte[])">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="chars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[])">
    <parameter name="waitHandles">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32)">
    <parameter name="waitHandles">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan)">
    <parameter name="waitHandles">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32,System.Boolean)">
    <parameter name="waitHandles">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)">
    <parameter name="waitHandles">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[])">
    <parameter name="waitHandles">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32)">
    <parameter name="waitHandles">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan)">
    <parameter name="waitHandles">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)">
    <parameter name="waitHandles">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)">
    <parameter name="waitHandles">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Type.GetTypeHandle(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TypedReference.SetTypedReference(System.TypedReference,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UInt16.Parse(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UInt16.Parse(System.String,System.Globalization.NumberStyles)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UInt16.Parse(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UInt16.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UInt32.Parse(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UInt64.Parse(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UInt64.Parse(System.String,System.Globalization.NumberStyles)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UInt64.Parse(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UInt64.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>6</argument>
    </attribute>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Generic.IDictionary`2.Item(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.IDictionary`2.Remove(`0)">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>3</argument>
    </attribute>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.__DTString.#ctor(System.String,System.Globalization.DateTimeFormatInfo)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.__DTString.#ctor(System.String,System.Globalization.DateTimeFormatInfo,System.Boolean)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.__DTString.GetRegularToken(System.TokenType@,System.Int32@,System.Globalization.DateTimeFormatInfo)">
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.__DTString.GetSeparatorToken(System.Globalization.DateTimeFormatInfo,System.Int32@,System.Char@)">
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.__DTString.Match(System.String)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.__DTString.MatchLongestWords(System.String[],System.Int32@)">
    <parameter name="words">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.__DTString.MatchSpecifiedWord(System.String)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.__DTString.MatchSpecifiedWord(System.String,System.Int32)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.__DTString.MatchSpecifiedWords(System.String,System.Boolean,System.Int32@)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.AccessViolationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Activator.InternalCreateInstanceWithNoMemberAccessCheck(System.Type,System.Boolean)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.AppDomainManager.CreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)">
    <parameter name="friendlyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.AppDomainManager.CreateDomainHelper(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)">
    <parameter name="friendlyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.AppDomainSetup.#ctor(System.ActivationContext)">
    <parameter name="activationContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.AppDomainSetup.#ctor(System.Runtime.Hosting.ActivationArguments)">
    <parameter name="activationArguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.AppDomainSetup.IsFilePath(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.AppDomainSetup.SetupDefaultApplicationBase(System.String)">
    <parameter name="imageLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ApplicationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ArgumentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ArgumentNullException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ArgumentOutOfRangeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ArithmeticException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.ArrayEnumerator.#ctor(System.Array,System.Int32,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.BinarySearch``1(``0[],``0)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.BinarySearch``1(``0[],``0,System.Collections.Generic.IComparer{``0})">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.BinarySearch``1(``0[],System.Int32,System.Int32,``0)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.BinarySearch``1(``0[],System.Int32,System.Int32,``0,System.Collections.Generic.IComparer{``0})">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.FindLastIndex``1(``0[],System.Int32,System.Predicate{``0})">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.GetValue(System.Int64[])">
    <parameter name="indices">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.IndexOf``1(``0[],``0)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.IndexOf``1(``0[],``0,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.IndexOf``1(``0[],``0,System.Int32,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.LastIndexOf``1(``0[],``0)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.LastIndexOf``1(``0[],``0,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.LastIndexOf``1(``0[],``0,System.Int32,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.SetValue(System.Object,System.Int64[])">
    <parameter name="indices">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.Sort``1(``0[])">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.Sort``1(``0[],System.Collections.Generic.IComparer{``0})">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.Sort``1(``0[],System.Int32,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.Sort``1(``0[],System.Int32,System.Int32,System.Collections.Generic.IComparer{``0})">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.Sort``2(``0[],``1[])">
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.Sort``2(``0[],``1[],System.Collections.Generic.IComparer{``0})">
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.Sort``2(``0[],``1[],System.Int32,System.Int32)">
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.Sort``2(``0[],``1[],System.Int32,System.Int32,System.Collections.Generic.IComparer{``0})">
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.System#Collections#IList#Add(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.System#Collections#IList#Contains(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.System#Collections#IList#Remove(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.SZArrayEnumerator.#ctor(System.Array)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ArraySegment`1.#ctor(`0[])">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ArraySegment`1.#ctor(`0[],System.Int32,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ArrayTypeMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.AddAttributesToList(System.Collections.ArrayList,System.Attribute[],System.Collections.Hashtable)">
    <parameter name="attributeList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.CopyToArrayList(System.Collections.ArrayList,System.Attribute[],System.Collections.Hashtable)">
    <parameter name="attributeList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.GetParentDefinition(System.Reflection.EventInfo)">
    <parameter name="ev">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.GetParentDefinition(System.Reflection.PropertyInfo)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.InternalGetAttributeUsage(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.InternalGetCustomAttributes(System.Reflection.EventInfo,System.Type,System.Boolean)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.InternalGetCustomAttributes(System.Reflection.PropertyInfo,System.Type,System.Boolean)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.InternalIsDefined(System.Reflection.EventInfo,System.Type,System.Boolean)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.InternalIsDefined(System.Reflection.PropertyInfo,System.Type,System.Boolean)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.InternalParamIsDefined(System.Reflection.MethodInfo,System.Reflection.ParameterInfo,System.Type,System.Boolean)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="param">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.BadImageFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.BCLDebug.CheckEnabled(System.String)">
    <parameter name="switchName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.BCLDebug.CheckEnabled(System.String,System.LogLevel,System.Diagnostics.LogSwitch@)">
    <parameter name="switchName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.BCLDebug.DumpStack(System.String)">
    <parameter name="switchName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.BCLDebug.Log(System.String,System.LogLevel,System.Object[])">
    <parameter name="messages">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="switchName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.BCLDebug.Log(System.String,System.String)">
    <parameter name="switchName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.BCLDebug.Trace(System.String,System.Object[])">
    <parameter name="messages">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="switchName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.BCLDebug.Trace(System.String,System.String,System.Object[])">
    <parameter name="switchName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="messages">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Buffer.memcpyimpl(System.Byte*,System.Byte*,System.Int32)">
    <parameter name="src">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="dest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Buffer.ZeroMemory(System.Byte*,System.Int64)">
    <parameter name="src">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Byte.Parse(System.String,System.Globalization.NumberStyles,System.Globalization.NumberFormatInfo)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Char.ConvertToUtf32(System.String,System.Int32)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Char.GetUnicodeCategory(System.String,System.Int32)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Char.IsHighSurrogate(System.String,System.Int32)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Char.IsLowSurrogate(System.String,System.Int32)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Char.IsSurrogatePair(System.String,System.Int32)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.EmptyReadOnlyDictionaryInternal.Add(System.Object,System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.EmptyReadOnlyDictionaryInternal.Contains(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.EmptyReadOnlyDictionaryInternal.Remove(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.ArraySortHelper`1.BinarySearch(`0[],System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.ArraySortHelper`1.InternalBinarySearch(`0[],System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.ArraySortHelper`1.QuickSort(`0[],System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.ArraySortHelper`1.Sort(`0[],System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.ArraySortHelper`1.SwapIfGreaterWithItems(`0[],System.Collections.Generic.IComparer{`0},System.Int32,System.Int32)">
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.ArraySortHelper`2.QuickSort(`0[],`1[],System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.ArraySortHelper`2.Sort(`0[],`1[],System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.ArraySortHelper`2.SwapIfGreaterWithItems(`0[],`1[],System.Collections.Generic.IComparer{`0},System.Int32,System.Int32)">
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
    <parameter name="dictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
    <parameter name="dictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.Dictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.Dictionary`2.Enumerator.#ctor(System.Collections.Generic.Dictionary{`0,`1},System.Int32)">
    <parameter name="dictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.Dictionary`2.FindEntry(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.Dictionary`2.Insert(`0,`1,System.Boolean)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.Dictionary`2.IsCompatibleKey(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Generic.Dictionary`2.Item(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.Dictionary`2.KeyCollection.#ctor(System.Collections.Generic.Dictionary{`0,`1})">
    <parameter name="dictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.Dictionary`2.KeyCollection.Enumerator.#ctor(System.Collections.Generic.Dictionary{`0,`1})">
    <parameter name="dictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.Dictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Add(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.Dictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Contains(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.Dictionary`2.KeyCollection.System#Collections#Generic#ICollection{TKey}#Remove(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.Dictionary`2.Remove(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.Dictionary`2.ValueCollection.#ctor(System.Collections.Generic.Dictionary{`0,`1})">
    <parameter name="dictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.Dictionary`2.ValueCollection.Enumerator.#ctor(System.Collections.Generic.Dictionary{`0,`1})">
    <parameter name="dictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.Dictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Add(`1)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.Dictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Contains(`1)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.Dictionary`2.ValueCollection.System#Collections#Generic#ICollection{TValue}#Remove(`1)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.Dictionary`2.VerifyKey(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.EqualityComparer`1.IndexOf(`0[],`0,System.Int32,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.EqualityComparer`1.LastIndexOf(`0[],`0,System.Int32,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.GenericArraySortHelper`1.BinarySearch(`0[],System.Int32,System.Int32,`0)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.GenericArraySortHelper`1.BinarySearch(`0[],System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.GenericArraySortHelper`1.QuickSort(`0[],System.Int32,System.Int32)">
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.GenericArraySortHelper`1.Sort(`0[],System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.GenericArraySortHelper`1.SwapIfGreaterWithItems(`0[],System.Int32,System.Int32)">
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.GenericArraySortHelper`2.QuickSort(`0[],`1[],System.Int32,System.Int32)">
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.GenericArraySortHelper`2.Sort(`0[],`1[],System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.GenericArraySortHelper`2.SwapIfGreaterWithItems(`0[],`1[],System.Int32,System.Int32)">
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.KeyNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.Mscorlib_CollectionDebugView`1.#ctor(System.Collections.Generic.ICollection{`0})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.Mscorlib_DictionaryDebugView`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
    <parameter name="dictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.Mscorlib_DictionaryKeyCollectionDebugView`2.#ctor(System.Collections.Generic.ICollection{`0})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.Mscorlib_DictionaryValueCollectionDebugView`2.#ctor(System.Collections.Generic.ICollection{`1})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.ListDictionaryInternal.NodeEnumerator.#ctor(System.Collections.ListDictionaryInternal)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.ListDictionaryInternal.NodeKeyValueCollection.NodeKeyValueEnumerator.#ctor(System.Collections.ListDictionaryInternal,System.Boolean)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.ObjectModel.Collection`1.#ctor(System.Collections.Generic.IList{`0})">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.ObjectModel.Collection`1.Remove(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Convert.ConvertToBase64Array(System.Char*,System.Byte*,System.Int32,System.Int32,System.Boolean)">
    <parameter name="outChars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="inData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Convert.ToChar(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.CultureAwareComparer.#ctor(System.Globalization.CultureInfo,System.Boolean)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DataMisalignedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)">
    <parameter name="calendar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTime.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.DateTimeKind)">
    <parameter name="calendar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTime.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeFormat.ExpandPredefinedFormat(System.String,System.DateTime@,System.Globalization.DateTimeFormatInfo@,System.TimeSpan@)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeFormat.FormatCustomizedRoundripTimeZone(System.DateTime,System.TimeSpan,System.Text.StringBuilder)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeFormat.FormatCustomizedTimeZone(System.DateTime,System.TimeSpan,System.String,System.Int32,System.Boolean,System.Text.StringBuilder)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeFormat.FormatDayOfWeek(System.Int32,System.Int32,System.Globalization.DateTimeFormatInfo)">
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeFormat.FormatDigits(System.Text.StringBuilder,System.Int32,System.Int32)">
    <parameter name="outputBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeFormat.FormatHebrewMonthName(System.DateTime,System.Int32,System.Int32,System.Globalization.DateTimeFormatInfo)">
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeFormat.FormatMonth(System.Int32,System.Int32,System.Globalization.DateTimeFormatInfo)">
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeFormat.GetRealFormat(System.String,System.Globalization.DateTimeFormatInfo)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeFormat.HebrewFormatDigits(System.Text.StringBuilder,System.Int32)">
    <parameter name="outputBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeFormat.IsUseGenitiveForm(System.String,System.Int32,System.Int32,System.Char)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeFormat.ParseNextChar(System.String,System.Int32)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeFormat.ParseQuoteString(System.String,System.Int32,System.Text.StringBuilder)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeFormat.ParseRepeatPattern(System.String,System.Int32,System.Char)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.TimeSpan)">
    <parameter name="calendar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeOffset.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeParse.AdjustTimeMark(System.Globalization.DateTimeFormatInfo,System.DateTimeRawInfo@)">
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeParse.CheckDefaultDateTime(System.DateTimeResult@,System.Globalization.Calendar@,System.Globalization.DateTimeStyles)">
    <parameter name="cal">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeParse.DoStrictParse(System.String,System.String,System.Globalization.DateTimeStyles,System.Globalization.DateTimeFormatInfo,System.DateTimeResult@)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="formatParam">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeParse.ExpandPredefinedFormat(System.String,System.Globalization.DateTimeFormatInfo@,System.ParsingInfo@,System.DateTimeResult@)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeParse.GetDateOfNNDS(System.DateTimeResult@,System.DateTimeRawInfo@,System.Globalization.DateTimeFormatInfo)">
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeParse.GetDayOfMN(System.DateTimeResult@,System.Globalization.DateTimeStyles@,System.DateTimeRawInfo@,System.Globalization.DateTimeFormatInfo)">
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeParse.GetDayOfMNN(System.DateTimeResult@,System.DateTimeRawInfo@,System.Globalization.DateTimeFormatInfo)">
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeParse.GetDayOfNM(System.DateTimeResult@,System.Globalization.DateTimeStyles@,System.DateTimeRawInfo@,System.Globalization.DateTimeFormatInfo)">
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeParse.GetDayOfNN(System.DateTimeResult@,System.Globalization.DateTimeStyles@,System.DateTimeRawInfo@,System.Globalization.DateTimeFormatInfo)">
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeParse.GetDayOfNNN(System.DateTimeResult@,System.DateTimeRawInfo@,System.Globalization.DateTimeFormatInfo)">
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeParse.GetDayOfNNY(System.DateTimeResult@,System.DateTimeRawInfo@,System.Globalization.DateTimeFormatInfo)">
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeParse.GetDayOfYNN(System.DateTimeResult@,System.DateTimeRawInfo@,System.Globalization.DateTimeFormatInfo)">
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeParse.GetHebrewDayOfNM(System.DateTimeResult@,System.DateTimeRawInfo@,System.Globalization.DateTimeFormatInfo)">
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeParse.GetMonthDayOrder(System.String,System.Globalization.DateTimeFormatInfo,System.Int32@)">
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeParse.GetYearMonthDayOrder(System.String,System.Globalization.DateTimeFormatInfo,System.Int32@)">
    <parameter name="datePattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeParse.GetYearMonthOrder(System.String,System.Globalization.DateTimeFormatInfo,System.Int32@)">
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeParse.Lex(System.DateTimeParse.DS,System.__DTString@,System.DateTimeToken@,System.DateTimeRawInfo@,System.DateTimeResult@,System.Globalization.DateTimeFormatInfo@)">
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeParse.MatchAbbreviatedDayName(System.__DTString@,System.Globalization.DateTimeFormatInfo,System.Int32@)">
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeParse.MatchAbbreviatedMonthName(System.__DTString@,System.Globalization.DateTimeFormatInfo,System.Int32@)">
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeParse.MatchAbbreviatedTimeMark(System.__DTString@,System.Globalization.DateTimeFormatInfo,System.DateTimeParse.TM@)">
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeParse.MatchDayName(System.__DTString@,System.Globalization.DateTimeFormatInfo,System.Int32@)">
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeParse.MatchEraName(System.__DTString@,System.Globalization.DateTimeFormatInfo,System.Int32@)">
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeParse.MatchMonthName(System.__DTString@,System.Globalization.DateTimeFormatInfo,System.Int32@)">
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeParse.MatchTimeMark(System.__DTString@,System.Globalization.DateTimeFormatInfo,System.DateTimeParse.TM@)">
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeParse.MatchWord(System.__DTString@,System.String)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeParse.Parse(System.String,System.Globalization.DateTimeFormatInfo,System.Globalization.DateTimeStyles)">
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeParse.Parse(System.String,System.Globalization.DateTimeFormatInfo,System.Globalization.DateTimeStyles,System.TimeSpan@)">
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeParse.ParseByFormat(System.__DTString@,System.__DTString@,System.ParsingInfo@,System.Globalization.DateTimeFormatInfo,System.DateTimeResult@)">
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeParse.ParseExact(System.String,System.String,System.Globalization.DateTimeFormatInfo,System.Globalization.DateTimeStyles)">
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeParse.ParseExact(System.String,System.String,System.Globalization.DateTimeFormatInfo,System.Globalization.DateTimeStyles,System.TimeSpan@)">
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeParse.ParseExactMultiple(System.String,System.String[],System.Globalization.DateTimeFormatInfo,System.Globalization.DateTimeStyles)">
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeParse.ParseExactMultiple(System.String,System.String[],System.Globalization.DateTimeFormatInfo,System.Globalization.DateTimeStyles,System.TimeSpan@)">
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeParse.ProcessHebrewTerminalState(System.DateTimeParse.DS,System.DateTimeResult@,System.Globalization.DateTimeStyles@,System.DateTimeRawInfo@,System.Globalization.DateTimeFormatInfo)">
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeParse.ProcessTerminaltState(System.DateTimeParse.DS,System.DateTimeResult@,System.Globalization.DateTimeStyles@,System.DateTimeRawInfo@,System.Globalization.DateTimeFormatInfo)">
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeParse.TryParse(System.String,System.Globalization.DateTimeFormatInfo,System.Globalization.DateTimeStyles,System.DateTime@)">
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeParse.TryParse(System.String,System.Globalization.DateTimeFormatInfo,System.Globalization.DateTimeStyles,System.DateTime@,System.TimeSpan@)">
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeParse.TryParse(System.String,System.Globalization.DateTimeFormatInfo,System.Globalization.DateTimeStyles,System.DateTimeResult@)">
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeParse.TryParseExact(System.String,System.String,System.Globalization.DateTimeFormatInfo,System.Globalization.DateTimeStyles,System.DateTime@)">
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeParse.TryParseExact(System.String,System.String,System.Globalization.DateTimeFormatInfo,System.Globalization.DateTimeStyles,System.DateTime@,System.TimeSpan@)">
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeParse.TryParseExact(System.String,System.String,System.Globalization.DateTimeFormatInfo,System.Globalization.DateTimeStyles,System.DateTimeResult@)">
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeParse.TryParseExactMultiple(System.String,System.String[],System.Globalization.DateTimeFormatInfo,System.Globalization.DateTimeStyles,System.DateTime@)">
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeParse.TryParseExactMultiple(System.String,System.String[],System.Globalization.DateTimeFormatInfo,System.Globalization.DateTimeStyles,System.DateTime@,System.TimeSpan@)">
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeParse.TryParseExactMultiple(System.String,System.String[],System.Globalization.DateTimeFormatInfo,System.Globalization.DateTimeStyles,System.DateTimeResult@)">
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeParse.TryParseQuoteString(System.String,System.Int32,System.Text.StringBuilder,System.Int32@)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Decimal.GetBytes(System.Decimal,System.Byte[])">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Decimal.Parse(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Decimal.Parse(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Decimal.ToDecimal(System.Byte[])">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DefaultBinder.CompareMethodSigAndName(System.Reflection.MethodBase,System.Reflection.MethodBase)">
    <parameter name="m1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="m2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DefaultBinder.CreateParamOrder(System.Int32[],System.Reflection.ParameterInfo[],System.String[])">
    <parameter name="paramOrder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="names">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DefaultBinder.ExactBinding(System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])">
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DefaultBinder.ExactPropertyBinding(System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])">
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DefaultBinder.FindMostDerivedNewSlotMeth(System.Reflection.MethodBase[],System.Int32)">
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DefaultBinder.FindMostSpecific(System.Reflection.ParameterInfo[],System.Int32[],System.Type,System.Reflection.ParameterInfo[],System.Int32[],System.Type,System.Type[],System.Object[])">
    <parameter name="p1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="paramOrder1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="p2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="paramOrder2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DefaultBinder.FindMostSpecificField(System.Reflection.FieldInfo,System.Reflection.FieldInfo)">
    <parameter name="cur1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="cur2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DefaultBinder.FindMostSpecificMethod(System.Reflection.MethodBase,System.Int32[],System.Type,System.Reflection.MethodBase,System.Int32[],System.Type,System.Type[],System.Object[])">
    <parameter name="m1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="m2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="paramOrder1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="paramOrder2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DefaultBinder.FindMostSpecificProperty(System.Reflection.PropertyInfo,System.Reflection.PropertyInfo)">
    <parameter name="cur1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="cur2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DefaultBinder.FindMostSpecificType(System.Type,System.Type,System.Type)">
    <parameter name="c1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="c2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DefaultBinder.GetHierarchyDepth(System.Type)">
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DefaultBinder.ReorderParams(System.Int32[],System.Object[])">
    <parameter name="paramOrder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="vars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Delegate.#ctor(System.Object,System.String)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Delegate.#ctor(System.Type,System.String)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Delegate.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.DebuggerTypeProxyAttribute.#ctor(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Log.AddStream(System.IO.Stream)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Log.Error(System.Diagnostics.LogSwitch,System.String)">
    <parameter name="logswitch">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Log.Error(System.String,System.String)">
    <parameter name="switchname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Log.LogMessage(System.Diagnostics.LoggingLevels,System.Diagnostics.LogSwitch,System.String)">
    <parameter name="logswitch">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Log.Status(System.Diagnostics.LogSwitch,System.String)">
    <parameter name="logswitch">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Log.Status(System.String,System.String)">
    <parameter name="switchname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Log.Trace(System.Diagnostics.LogSwitch,System.String)">
    <parameter name="logswitch">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Log.Trace(System.String,System.String)">
    <parameter name="switchname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Log.Warning(System.Diagnostics.LogSwitch,System.String)">
    <parameter name="logswitch">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Log.Warning(System.String,System.String)">
    <parameter name="switchname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.LogSwitch.#ctor(System.String,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.LogSwitch.#ctor(System.String,System.String,System.Diagnostics.LogSwitch)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.LogSwitch.GetSwitch(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.StackTrace.#ctor(System.Exception)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Boolean)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32,System.Boolean)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.StackTrace.CalculateFramesToSkip(System.Diagnostics.StackFrameHelper,System.Int32)">
    <parameter name="StackF">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DivideByZeroException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DllNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Double.Parse(System.String,System.Globalization.NumberStyles,System.Globalization.NumberFormatInfo)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.Globalization.NumberFormatInfo,System.Double@)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DuplicateWaitObjectException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.EntryPointNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Enum.BinarySearch(System.UInt64[],System.UInt64)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Enum.GetValueField(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Enum.InternalFlagsFormat(System.Type,System.Object)">
    <parameter name="eT">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Enum.InternalFormat(System.Type,System.Object)">
    <parameter name="eT">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Enum.InternalFormattedHexString(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Enum.InternalGetValueAsString(System.Type,System.Object)">
    <parameter name="enumType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Enum.IsDefined(System.Type,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="enumType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Exception.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ExecutionEngineException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.FieldAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.FormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.GC.GetGeneration(System.WeakReference)">
    <parameter name="wo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.GC.ReRegisterForFinalize(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.GC.SuppressFinalize(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CharUnicodeInfo.GetBidiCategory(System.String,System.Int32)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CharUnicodeInfo.GetDecimalDigitValue(System.String,System.Int32)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CharUnicodeInfo.GetDigitValue(System.String,System.Int32)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CharUnicodeInfo.GetNumericValue(System.String,System.Int32)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.String,System.Int32)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CharUnicodeInfo.InternalConvertToUtf32(System.String,System.Int32)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CharUnicodeInfo.InternalConvertToUtf32(System.String,System.Int32,System.Int32@)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CharUnicodeInfo.InternalGetUnicodeCategory(System.String,System.Int32)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CharUnicodeInfo.InternalGetUnicodeCategory(System.String,System.Int32,System.Int32@)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CharUnicodeInfo.IsWhiteSpace(System.String,System.Int32)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CompareInfo.GetHashCodeOfString(System.String,System.Globalization.CompareOptions)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Globalization.CompareOptions)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CompareInfo.IndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Globalization.CompareOptions)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CompareInfo.IndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CompareInfo.IsPrefix(System.String,System.String)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CompareInfo.IsPrefix(System.String,System.String,System.Globalization.CompareOptions)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CompareInfo.IsSortable(System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CompareInfo.IsSuffix(System.String,System.String)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="suffix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CompareInfo.IsSuffix(System.String,System.String,System.Globalization.CompareOptions)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="suffix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Globalization.CompareOptions)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Globalization.CompareOptions)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.Char,System.Int32,System.Int32,System.Globalization.CompareOptions)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Globalization.CompareOptions)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Globalization.CompareOptions)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CompareInfo.LastIndexOf(System.String,System.String,System.Int32,System.Int32,System.Globalization.CompareOptions)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CompareInfo.SyntheticIndexOf(System.String,System.String,System.Int32,System.Int32,System.Int32)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CompareInfo.SyntheticIsPrefix(System.String,System.Int32,System.Int32,System.String,System.Int32)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CompareInfo.SyntheticIsSuffix(System.String,System.Int32,System.Int32,System.String,System.Int32)">
    <parameter name="suffix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CompareInfo.SyntheticLastIndexOf(System.String,System.String,System.Int32,System.Int32,System.Int32)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CultureInfo.#ctor(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CultureInfo.#ctor(System.String,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CultureInfo.#ctor(System.String,System.String)">
    <parameter name="cultureName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="textAndCompareCultureName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CultureInfo.CheckDomainSafetyObject(System.Object,System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="container">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CultureInfo.CheckNeutral(System.Globalization.CultureInfo)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CultureInfo.VerifyCultureName(System.Globalization.CultureInfo,System.Boolean)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.DateTimeFormatInfo.AddMonthNames(System.Globalization.TokenHashValue[],System.String)">
    <parameter name="temp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.DateTimeFormatInfo.CheckNullValue(System.String[],System.Int32)">
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.DateTimeFormatInfo.GetEra(System.String)">
    <parameter name="eraName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.DateTimeFormatInfo.InsertAtCurrentHashNode(System.Globalization.TokenHashValue[],System.String,System.Char,System.TokenType,System.Int32,System.Int32,System.Int32,System.Int32)">
    <parameter name="hashTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.DateTimeFormatInfo.InsertHash(System.Globalization.TokenHashValue[],System.String,System.TokenType,System.Int32)">
    <parameter name="hashTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.DateTimeFormatInfo.SetAllDateTimePatterns(System.String[],System.Char)">
    <parameter name="patterns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.DateTimeFormatInfoScanner.AddDateWordOrPostfix(System.String,System.String)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.DateTimeFormatInfoScanner.AddDateWords(System.String,System.Int32,System.String)">
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.DateTimeFormatInfoScanner.ArrayElementsBeginWithDigit(System.String[])">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.DateTimeFormatInfoScanner.ArrayElementsHaveSpace(System.String[])">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.DateTimeFormatInfoScanner.EqualStringArrays(System.String[],System.String[])">
    <parameter name="array1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="array2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.DateTimeFormatInfoScanner.GetFormatFlagGenitiveMonth(System.String[],System.String[],System.String[],System.String[])">
    <parameter name="monthNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="genitveMonthNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="abbrevMonthNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="genetiveAbbrevMonthNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.DateTimeFormatInfoScanner.GetFormatFlagUseSpaceInDayNames(System.String[],System.String[])">
    <parameter name="dayNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="abbrevDayNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.DateTimeFormatInfoScanner.GetFormatFlagUseSpaceInMonthNames(System.String[],System.String[],System.String[],System.String[])">
    <parameter name="monthNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="genitveMonthNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="abbrevMonthNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="genetiveAbbrevMonthNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.DateTimeFormatInfoScanner.ScanDateWord(System.String)">
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.DateTimeFormatInfoScanner.ScanRepeatChar(System.String,System.Char,System.Int32,System.Int32@)">
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.DateTimeFormatInfoScanner.SkipWhiteSpacesAndNonLetter(System.String,System.Int32)">
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.EncodingTable.GetCodePageFromName(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.GregorianCalendar.InternalGetWeekOfYearFullDays(System.Globalization.Calendar,System.DateTime,System.Int32,System.Int32,System.Int32)">
    <parameter name="cal">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.GregorianCalendarHelper.#ctor(System.Globalization.Calendar,System.Globalization.EraInfo[])">
    <parameter name="cal">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="eraInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.HebrewCalendar.GetLunarMonthDay(System.Int32,System.Globalization.HebrewCalendar.__DateBuffer)">
    <parameter name="lunarDate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.HebrewCalendar.GetResult(System.Globalization.HebrewCalendar.__DateBuffer,System.Int32)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.IdnMapping.ValidateStd3AndAscii(System.String,System.Boolean,System.Boolean)">
    <parameter name="unicode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.NumberFormatInfo.CheckGroupSize(System.String,System.Int32[])">
    <parameter name="groupSize">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.NumberFormatInfo.VerifyDecimalSeparator(System.String,System.String)">
    <parameter name="decSep">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.NumberFormatInfo.VerifyGroupSeparator(System.String,System.String)">
    <parameter name="groupSep">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.NumberFormatInfo.VerifyNativeDigits(System.String[],System.String)">
    <parameter name="nativeDig">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.RegionInfo.#ctor(System.Globalization.CultureTableRecord)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.RegionInfo.#ctor(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.SortKey.#ctor(System.Int32,System.String,System.Globalization.CompareOptions)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.SortKey.#ctor(System.Void*,System.Int32,System.String,System.Globalization.CompareOptions)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.SortKey.Compare(System.Globalization.SortKey,System.Globalization.SortKey)">
    <parameter name="sortkey1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="sortkey2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.StringInfo.GetCurrentTextElementLen(System.String,System.Int32,System.Int32,System.Globalization.UnicodeCategory@,System.Int32@)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.TextInfo.#ctor(System.Globalization.CultureTableRecord)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.TextInfo.GetCaseInsensitiveHashCode(System.String)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.TextInfo.IndexOfStringOrdinalIgnoreCase(System.String,System.String,System.Int32,System.Int32)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.TextInfo.LastIndexOfStringOrdinalIgnoreCase(System.String,System.String,System.Int32,System.Int32)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Guid.HexsToChars(System.Char[],System.Int32,System.Int32,System.Int32)">
    <parameter name="guidChars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Guid.IsHexPrefix(System.String,System.Int32)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IndexOutOfRangeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.InsufficientMemoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Int16.Parse(System.String,System.Globalization.NumberStyles,System.Globalization.NumberFormatInfo)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Int32.Parse(System.String,System.IFormatProvider)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Int64.Parse(System.String,System.Globalization.NumberStyles)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Int64.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Int64.Parse(System.String,System.IFormatProvider)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IntPtr.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.InvalidCastException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.InvalidOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.InvalidProgramException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.BinaryReader.#ctor(System.IO.Stream)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.BinaryReader.InternalReadChars(System.Char[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.BinaryWriter.#ctor(System.IO.Stream)">
    <parameter name="output">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.BinaryWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
    <parameter name="output">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.Delete(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.Delete(System.String,System.Boolean)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.Delete(System.String,System.String,System.Boolean)">
    <parameter name="fullPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="userPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.DeleteHelper(System.String,System.String,System.Boolean)">
    <parameter name="fullPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="userPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.GetAccessControl(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.GetDemandDir(System.String,System.Boolean)">
    <parameter name="fullPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.InternalCreateDirectory(System.String,System.String,System.Security.AccessControl.DirectorySecurity)">
    <parameter name="fullPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.InternalExists(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.SetAccessControl(System.String,System.Security.AccessControl.DirectorySecurity)">
    <parameter name="directorySecurity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.DirectoryNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.DriveNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.EndOfStreamException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.AppendAllText(System.String,System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="contents">
    </parameter>
  </member>
  <member name="M:System.IO.File.AppendAllText(System.String,System.String,System.Text.Encoding)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="contents">
    </parameter>
  </member>
  <member name="M:System.IO.File.Copy(System.String,System.String)">
    <parameter name="sourceFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="destFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.Copy(System.String,System.String,System.Boolean)">
    <parameter name="sourceFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="destFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.Decrypt(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.Encrypt(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.FillAttributeInfo(System.String,Microsoft.Win32.Win32Native.WIN32_FILE_ATTRIBUTE_DATA@,System.Boolean,System.Boolean)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.GetAccessControl(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.GetAccessControl(System.String,System.Security.AccessControl.AccessControlSections)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.GetAttributes(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.GetCreationTime(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.GetCreationTimeUtc(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.GetLastAccessTime(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.GetLastAccessTimeUtc(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.GetLastWriteTime(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.GetLastWriteTimeUtc(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.InternalExists(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.Replace(System.String,System.String,System.String)">
    <parameter name="sourceFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="destinationFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="destinationBackupFileName">
    </parameter>
  </member>
  <member name="M:System.IO.File.Replace(System.String,System.String,System.String,System.Boolean)">
    <parameter name="sourceFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="destinationFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="destinationBackupFileName">
    </parameter>
  </member>
  <member name="M:System.IO.File.SetAccessControl(System.String,System.Security.AccessControl.FileSecurity)">
    <parameter name="fileSecurity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.SetAttributes(System.String,System.IO.FileAttributes)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.SetCreationTime(System.String,System.DateTime)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.SetCreationTimeUtc(System.String,System.DateTime)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.SetLastAccessTime(System.String,System.DateTime)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.SetLastAccessTimeUtc(System.String,System.DateTime)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.SetLastWriteTime(System.String,System.DateTime)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.SetLastWriteTimeUtc(System.String,System.DateTime)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.WriteAllBytes(System.String,System.Byte[])">
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.WriteAllLines(System.String,System.String[])">
    <parameter name="contents">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.WriteAllLines(System.String,System.String[],System.Text.Encoding)">
    <parameter name="contents">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.WriteAllText(System.String,System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="contents">
    </parameter>
  </member>
  <member name="M:System.IO.File.WriteAllText(System.String,System.String,System.Text.Encoding)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="contents">
    </parameter>
  </member>
  <member name="M:System.IO.FileLoadException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.FileNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess)">
    <parameter name="handle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32)">
    <parameter name="handle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.FileStream.#ctor(Microsoft.Win32.SafeHandles.SafeFileHandle,System.IO.FileAccess,System.Int32,System.Boolean)">
    <parameter name="handle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.FileStream.AsyncFSCallback(System.UInt32,System.UInt32,System.Threading.NativeOverlapped*)">
    <parameter name="pOverlapped">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.FileStream.ReadCore(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.FileStream.ReadFileNative(Microsoft.Win32.SafeHandles.SafeFileHandle,System.Byte[],System.Int32,System.Int32,System.Threading.NativeOverlapped*,System.Int32@)">
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.FileStream.SetAccessControl(System.Security.AccessControl.FileSecurity)">
    <parameter name="fileSecurity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.FileStream.WriteCore(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.FileStream.WriteFileNative(Microsoft.Win32.SafeHandles.SafeFileHandle,System.Byte[],System.Int32,System.Int32,System.Threading.NativeOverlapped*,System.Int32@)">
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.IOException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.MemoryStream.#ctor(System.Byte[])">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Boolean)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.MemoryStream.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean,System.Boolean)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.MemoryStream.WriteTo(System.IO.Stream)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Path.CharArrayStartsWithOrdinal(System.Char*,System.Int32,System.String,System.Boolean)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="compareTo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Path.CharArrayStartsWithOrdinal(System.Char[],System.Int32,System.String,System.Boolean)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="compareTo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Path.CheckInvalidPathChars(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Path.CheckSearchPattern(System.String)">
    <parameter name="searchPattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Path.GetRootLength(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Path.InternalCombine(System.String,System.String)">
    <parameter name="path1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="path2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Path.SafeSetStackPointerValue(System.Char*,System.Int32,System.Char)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Path.TryExpandShortFileName(System.Char*,System.Int32@,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Path.TryExpandShortFileName(System.Char[],System.Int32@,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.PathTooLongException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.PinnedBufferMemoryStream.#ctor(System.Byte[])">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Stream.NullStream.Read(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Stream.SyncStream.#ctor(System.IO.Stream)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.UnmanagedMemoryStream.#ctor(System.Byte*,System.Int64)">
    <parameter name="pointer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.UnmanagedMemoryStream.#ctor(System.Byte*,System.Int64,System.Int64,System.IO.FileAccess)">
    <parameter name="pointer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.UnmanagedMemoryStream.#ctor(System.Byte*,System.Int64,System.Int64,System.IO.FileAccess,System.Boolean)">
    <parameter name="pointer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.UnmanagedMemoryStream.Initialize(System.Byte*,System.Int64,System.Int64,System.IO.FileAccess)">
    <parameter name="pointer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.UnmanagedMemoryStream.Initialize(System.Byte*,System.Int64,System.Int64,System.IO.FileAccess,System.Boolean)">
    <parameter name="pointer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.MarshalByRefObject.__RaceSetServerIdentity(System.Runtime.Remoting.ServerIdentity)">
    <parameter name="id">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.MarshalByRefObject.CanCastToXmlType(System.String,System.String)">
    <parameter name="xmlTypeNamespace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.MarshalByRefObject.CanCastToXmlTypeHelper(System.Type,System.MarshalByRefObject)">
    <parameter name="castType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.MarshalByRefObject.IsInstanceOfType(System.Type)">
    <parameter name="T">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.MemberAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.MethodAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.MissingFieldException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.MissingMemberException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.MissingMethodException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.MulticastDelegate.#ctor(System.Object,System.String)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.MulticastDelegate.#ctor(System.Type,System.String)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.MulticastDelegate.EqualInvocationLists(System.Object[],System.Object[],System.Int32,System.Int32)">
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="b">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.MulticastDelegate.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.MulticastDelegate.InvocationListEquals(System.MulticastDelegate)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.MulticastDelegate.TrySetSlot(System.Object[],System.Int32,System.Object)">
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.MulticastNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.NonSerializedAttribute.IsDefined(System.Reflection.RuntimeFieldInfo)">
    <parameter name="field">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.NotFiniteNumberException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.NotImplementedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.NotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.NullReferenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Number.ParseDecimal(System.String,System.Globalization.NumberStyles,System.Globalization.NumberFormatInfo)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Number.ParseDouble(System.String,System.Globalization.NumberStyles,System.Globalization.NumberFormatInfo)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="numfmt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Number.ParseInt32(System.String,System.Globalization.NumberStyles,System.Globalization.NumberFormatInfo)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Number.ParseInt64(System.String,System.Globalization.NumberStyles,System.Globalization.NumberFormatInfo)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Number.ParseSingle(System.String,System.Globalization.NumberStyles,System.Globalization.NumberFormatInfo)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="numfmt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Number.ParseUInt32(System.String,System.Globalization.NumberStyles,System.Globalization.NumberFormatInfo)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Number.ParseUInt64(System.String,System.Globalization.NumberStyles,System.Globalization.NumberFormatInfo)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Number.StringToNumber(System.String,System.Globalization.NumberStyles,System.Number.NumberBuffer@,System.Globalization.NumberFormatInfo,System.Boolean)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Number.TrailingZeros(System.String,System.Int32)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ObjectDisposedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.OperationCanceledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.OutOfMemoryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.OverflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.PlatformNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RankException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.AmbiguousMatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.AddStrongName(System.Security.Policy.Evidence,System.Byte[],System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.Assembly)">
    <parameter name="evidence">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="blob">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="strSimpleName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.AddX509Certificate(System.Security.Policy.Evidence,System.Byte[])">
    <parameter name="evidence">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.AptcaCheck(System.Reflection.Assembly)">
    <parameter name="sourceAssembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.CreateSecurityIdentity(System.Reflection.Assembly,System.String,System.Int32,System.Byte[],System.Byte[],System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[],System.Security.Policy.Evidence)">
    <parameter name="strSimpleName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.CulturesEqual(System.Globalization.CultureInfo,System.Globalization.CultureInfo)">
    <parameter name="defCI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.DecodeSerializedEvidence(System.Security.Policy.Evidence,System.Byte[])">
    <parameter name="evidence">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="serializedEvidence">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.DemandPermission(System.String,System.Boolean,System.Int32)">
    <parameter name="codeBase">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean)">
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.InternalGetSatelliteAssembly(System.Globalization.CultureInfo,System.Version,System.Boolean)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.InternalLoad(System.Reflection.AssemblyName,System.Security.Policy.Evidence,System.Threading.StackCrawlMark@,System.Boolean)">
    <parameter name="assemblyRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.InternalLoad(System.String,System.Security.Policy.Evidence,System.Threading.StackCrawlMark@,System.Boolean)">
    <parameter name="assemblyString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.InternalLoadFrom(System.String,System.Security.Policy.Evidence,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm,System.Boolean,System.Threading.StackCrawlMark@)">
    <parameter name="assemblyFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.IsDefined(System.Type,System.Boolean)">
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.IsSimplyNamed(System.Reflection.AssemblyName)">
    <parameter name="partialName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.Load(System.Reflection.AssemblyName)">
    <parameter name="assemblyRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)">
    <parameter name="assemblyRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.Load(System.String)">
    <parameter name="assemblyString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.Load(System.String,System.Security.Policy.Evidence)">
    <parameter name="assemblyString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence)">
    <parameter name="assemblyFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)">
    <parameter name="assemblyFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.LoadWithPartialName(System.String)">
    <parameter name="partialName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.LoadWithPartialName(System.String,System.Security.Policy.Evidence)">
    <parameter name="partialName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.LoadWithPartialNameHack(System.String,System.Boolean)">
    <parameter name="partialName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.LoadWithPartialNameInternal(System.String,System.Security.Policy.Evidence,System.Threading.StackCrawlMark@)">
    <parameter name="partialName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.nDefineDynamicModule(System.Reflection.Assembly,System.Boolean,System.String,System.Threading.StackCrawlMark@)">
    <parameter name="containingAssembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.ReflectionOnlyLoad(System.String)">
    <parameter name="assemblyString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.ReflectionOnlyLoadFrom(System.String)">
    <parameter name="assemblyFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.AssemblyFileVersionAttribute.#ctor(System.String)">
    <parameter name="version">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.AssemblyName.#ctor(System.String)">
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Associates.AssignAssociates(System.Reflection.AssociateRecord*,System.Int32,System.RuntimeTypeHandle,System.RuntimeTypeHandle,System.Reflection.RuntimeMethodInfo@,System.Reflection.RuntimeMethodInfo@,System.Reflection.RuntimeMethodInfo@,System.Reflection.RuntimeMethodInfo@,System.Reflection.RuntimeMethodInfo@,System.Reflection.MethodInfo[]@,System.Boolean@,System.Reflection.BindingFlags@)">
    <parameter name="associates">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="names">
    </parameter>
  </member>
  <member name="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Binder.SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])">
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Binder.SelectProperty(System.Reflection.BindingFlags,System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])">
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CerHashtable`2.Insert(`0[],`1[],System.Int32@,`0,`1)">
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Reflection.CerHashtable`2.Item(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_2(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.ConstructorInfo.System#Runtime#InteropServices#_ConstructorInfo#Invoke_4(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttribute.AttributeUsageCheck(System.RuntimeType,System.Boolean,System.Object[],System.Collections.IList)">
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttribute.CreateCaObject(System.Reflection.Module,System.RuntimeMethodHandle,System.IntPtr@,System.IntPtr,System.Int32@)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttribute.FilterCustomAttributeRecord(System.Reflection.CustomAttributeRecord,System.Reflection.MetadataImport,System.Reflection.Assembly@,System.Reflection.Module,System.Reflection.MetadataToken,System.RuntimeType,System.Boolean,System.Object[],System.Collections.IList,System.RuntimeType@,System.RuntimeMethodHandle@,System.Boolean@,System.Boolean@)">
    <parameter name="decoratedModule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeFilterType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="lastAptcaOkAssembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="derivedAttributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttribute.GetAttributeUsage(System.RuntimeType)">
    <parameter name="decoratedAttribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttribute.GetCustomAttributes(System.Reflection.Assembly,System.RuntimeType)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="caType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttribute.GetCustomAttributes(System.Reflection.Module,System.RuntimeType)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.RuntimeType)">
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="caType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttribute.GetCustomAttributes(System.Reflection.RuntimeConstructorInfo,System.RuntimeType)">
    <parameter name="ctor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="caType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttribute.GetCustomAttributes(System.Reflection.RuntimeEventInfo,System.RuntimeType)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttribute.GetCustomAttributes(System.Reflection.RuntimeFieldInfo,System.RuntimeType)">
    <parameter name="field">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="caType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttribute.GetCustomAttributes(System.Reflection.RuntimeMethodInfo,System.RuntimeType,System.Boolean)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="caType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttribute.GetCustomAttributes(System.Reflection.RuntimePropertyInfo,System.RuntimeType)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttribute.GetCustomAttributes(System.RuntimeType,System.RuntimeType,System.Boolean)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="caType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttribute.GetPropertyOrFieldData(System.Reflection.Module,System.IntPtr@,System.IntPtr,System.String@,System.Boolean@,System.Type@,System.Object@)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttribute.IsCustomAttributeDefined(System.Reflection.Module,System.Int32,System.RuntimeType)">
    <parameter name="decoratedModule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeFilterType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttribute.IsCustomAttributeDefined(System.Reflection.Module,System.Int32,System.RuntimeType,System.Boolean)">
    <parameter name="decoratedModule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeFilterType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttribute.IsDefined(System.Reflection.Assembly,System.RuntimeType)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="caType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttribute.IsDefined(System.Reflection.Module,System.RuntimeType)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="caType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttribute.IsDefined(System.Reflection.ParameterInfo,System.RuntimeType)">
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="caType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttribute.IsDefined(System.Reflection.RuntimeConstructorInfo,System.RuntimeType)">
    <parameter name="ctor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="caType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttribute.IsDefined(System.Reflection.RuntimeEventInfo,System.RuntimeType)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="caType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttribute.IsDefined(System.Reflection.RuntimeFieldInfo,System.RuntimeType)">
    <parameter name="field">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="caType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttribute.IsDefined(System.Reflection.RuntimeMethodInfo,System.RuntimeType,System.Boolean)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="caType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttribute.IsDefined(System.Reflection.RuntimePropertyInfo,System.RuntimeType)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="caType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttribute.IsDefined(System.RuntimeType,System.RuntimeType,System.Boolean)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="caType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeData.#ctor(System.Reflection.Module,System.Reflection.CustomAttributeRecord)">
    <parameter name="scope">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeData.Filter(System.Collections.Generic.IList{System.Reflection.CustomAttributeData},System.Type,System.Int32)">
    <parameter name="attrs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeData.Filter(System.Collections.Generic.IList{System.Reflection.CustomAttributeData},System.Type,System.String)">
    <parameter name="attrs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeData.Init(System.Object)">
    <parameter name="pca">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeData.Init(System.Runtime.InteropServices.DllImportAttribute)">
    <parameter name="dllImport">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeData.Init(System.Runtime.InteropServices.FieldOffsetAttribute)">
    <parameter name="fieldOffset">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeData.Init(System.Runtime.InteropServices.MarshalAsAttribute)">
    <parameter name="marshalAs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeData.InitCustomAttributeType(System.Type,System.Reflection.Module)">
    <parameter name="parameterType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeData.TypeToCustomAttributeEncoding(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeEncodedArgument.ParseAttributeArguments(System.Reflection.ConstArray,System.Reflection.CustomAttributeCtorParameter[]@,System.Reflection.CustomAttributeNamedParameter[]@,System.Reflection.Module)">
    <parameter name="customAttributeModule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="memberInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeNamedParameter.#ctor(System.String,System.Reflection.CustomAttributeEncoding,System.Reflection.CustomAttributeType)">
    <parameter name="argumentName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Reflection.Module,System.Reflection.CustomAttributeEncodedArgument)">
    <parameter name="scope">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.__ExceptionInfo.IsInner(System.Reflection.Emit.__ExceptionInfo)">
    <parameter name="exc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilder.AddResourceFile(System.String,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilder.AddResourceFile(System.String,System.String,System.Reflection.ResourceAttributes)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilder.AddResourceFileNoLock(System.String,System.String,System.Reflection.ResourceAttributes)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilder.DefineNestedComType(System.Type,System.Int32,System.Int32)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource(System.Byte[])">
    <parameter name="resource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource(System.String)">
    <parameter name="resourceFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResourceNoLock(System.Byte[])">
    <parameter name="resource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResourceNoLock(System.String)">
    <parameter name="resourceFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])">
    <parameter name="con">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="binaryAttribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)">
    <parameter name="customBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilder.SetCustomAttributeNoLock(System.Reflection.ConstructorInfo,System.Byte[])">
    <parameter name="con">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="binaryAttribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilder.SetCustomAttributeNoLock(System.Reflection.Emit.CustomAttributeBuilder)">
    <parameter name="customBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint(System.Reflection.MethodInfo)">
    <parameter name="entryMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint(System.Reflection.MethodInfo,System.Reflection.Emit.PEFileKinds)">
    <parameter name="entryMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilder.SetEntryPointNoLock(System.Reflection.MethodInfo,System.Reflection.Emit.PEFileKinds)">
    <parameter name="entryMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilderData.AddCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])">
    <parameter name="binaryAttribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilderData.AddModule(System.Reflection.Emit.ModuleBuilder)">
    <parameter name="dynModule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ConstructorBuilder.#ctor(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type[],System.Reflection.Module,System.Reflection.Emit.TypeBuilder)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="mod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ConstructorBuilder.#ctor(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type[],System.Type[][],System.Type[][],System.Reflection.Module,System.Reflection.Emit.TypeBuilder)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="mod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ConstructorBuilder.AddDeclarativeSecurity(System.Security.Permissions.SecurityAction,System.Security.PermissionSet)">
    <parameter name="pset">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ConstructorBuilder.GetCustomAttributes(System.Type,System.Boolean)">
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ConstructorBuilder.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ConstructorBuilder.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ConstructorBuilder.IsDefined(System.Type,System.Boolean)">
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])">
    <parameter name="con">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="binaryAttribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)">
    <parameter name="customBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ConstructorOnTypeBuilderInstantiation.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ConstructorOnTypeBuilderInstantiation.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[])">
    <parameter name="con">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="constructorArgs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.FieldInfo[],System.Object[])">
    <parameter name="con">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="constructorArgs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namedFields">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="fieldValues">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.PropertyInfo[],System.Object[])">
    <parameter name="con">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="constructorArgs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namedProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="propertyValues">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.CustomAttributeBuilder.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.PropertyInfo[],System.Object[],System.Reflection.FieldInfo[],System.Object[])">
    <parameter name="con">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="constructorArgs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namedProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="propertyValues">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namedFields">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="fieldValues">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.CustomAttributeBuilder.CreateCustomAttribute(System.Reflection.Emit.ModuleBuilder,System.Int32)">
    <parameter name="mod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.CustomAttributeBuilder.CreateCustomAttribute(System.Reflection.Emit.ModuleBuilder,System.Int32,System.Int32,System.Boolean)">
    <parameter name="mod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.CustomAttributeBuilder.EmitString(System.IO.BinaryWriter,System.String)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.CustomAttributeBuilder.EmitType(System.IO.BinaryWriter,System.Type)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.CustomAttributeBuilder.EmitValue(System.IO.BinaryWriter,System.Type,System.Object)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.CustomAttributeBuilder.InitCustomAttributeBuilder(System.Reflection.ConstructorInfo,System.Object[],System.Reflection.PropertyInfo[],System.Object[],System.Reflection.FieldInfo[],System.Object[])">
    <parameter name="con">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="constructorArgs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namedProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="propertyValues">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namedFields">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="fieldValues">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.CustomAttributeBuilder.PrepareCreateCustomAttributeToDisk(System.Reflection.Emit.ModuleBuilder)">
    <parameter name="mod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.CustomAttributeBuilder.ValidateType(System.Type)">
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.DynamicILGenerator.UsingNamespace(System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.DynamicILInfo.#ctor(System.Reflection.Emit.DynamicScope,System.Reflection.Emit.DynamicMethod,System.Byte[])">
    <parameter name="scope">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.DynamicILInfo.SetCode(System.Byte*,System.Int32,System.Int32)">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.DynamicILInfo.SetExceptions(System.Byte*,System.Int32)">
    <parameter name="exceptions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.DynamicILInfo.SetLocalSignature(System.Byte*,System.Int32)">
    <parameter name="localSignature">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Reflection.Module,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="m">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="owner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[])">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Reflection.Module)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="m">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Reflection.Module,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="m">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Type)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="owner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.DynamicMethod.#ctor(System.String,System.Type,System.Type[],System.Type,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="owner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.DynamicMethod.Init(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type,System.Reflection.Module,System.Boolean,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.DynamicMethod.PerformSecurityCheck(System.Reflection.Module,System.Threading.StackCrawlMark@,System.Boolean)">
    <parameter name="m">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.DynamicMethod.PerformSecurityCheck(System.Type,System.Threading.StackCrawlMark@,System.Boolean)">
    <parameter name="owner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.DynamicMethod.RTDynamicMethod.EmptyCAHolder.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)">
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.DynamicMethod.RTDynamicMethod.EmptyCAHolder.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)">
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.DynamicMethod.RTDynamicMethod.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.DynamicResolver.#ctor(System.Reflection.Emit.DynamicILGenerator)">
    <parameter name="ilGenerator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.DynamicResolver.#ctor(System.Reflection.Emit.DynamicILInfo)">
    <parameter name="dynamicILInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.EnumBuilder.#ctor(System.String,System.Type,System.Reflection.TypeAttributes,System.Reflection.Module)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="underlyingType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.EnumBuilder.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.EnumBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])">
    <parameter name="con">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="binaryAttribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.EnumBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)">
    <parameter name="customBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.EventBuilder.AddOtherMethod(System.Reflection.Emit.MethodBuilder)">
    <parameter name="mdBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.EventBuilder.SetAddOnMethod(System.Reflection.Emit.MethodBuilder)">
    <parameter name="mdBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.EventBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])">
    <parameter name="con">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="binaryAttribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.EventBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)">
    <parameter name="customBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.EventBuilder.SetRaiseMethod(System.Reflection.Emit.MethodBuilder)">
    <parameter name="mdBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.EventBuilder.SetRemoveOnMethod(System.Reflection.Emit.MethodBuilder)">
    <parameter name="mdBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.FieldBuilder.#ctor(System.Reflection.Emit.TypeBuilder,System.String,System.Type,System.Type[],System.Type[],System.Reflection.FieldAttributes)">
    <parameter name="typeBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="fieldName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.FieldBuilder.GetCustomAttributes(System.Type,System.Boolean)">
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.FieldBuilder.GetValue(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.FieldBuilder.IsDefined(System.Type,System.Boolean)">
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.FieldBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])">
    <parameter name="con">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="binaryAttribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.FieldBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)">
    <parameter name="customBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.FieldBuilder.SetMarshal(System.Reflection.Emit.UnmanagedMarshal)">
    <parameter name="unmanagedMarshal">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.FieldBuilder.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="val">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.FieldOnTypeBuilderInstantiation.GetValue(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.FieldOnTypeBuilderInstantiation.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetCustomAttributes(System.Type,System.Boolean)">
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetEvent(System.String,System.Reflection.BindingFlags)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetField(System.String,System.Reflection.BindingFlags)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetInterface(System.String,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetInterfaceMap(System.Type)">
    <parameter name="interfaceType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetNestedType(System.String,System.Reflection.BindingFlags)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.GenericTypeParameterBuilder.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.GenericTypeParameterBuilder.IsDefined(System.Type,System.Boolean)">
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.GenericTypeParameterBuilder.IsSubclassOf(System.Type)">
    <parameter name="c">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.GenericTypeParameterBuilder.MakeGenericType(System.Type[])">
    <parameter name="typeArguments">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.GenericTypeParameterBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])">
    <parameter name="con">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="binaryAttribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.GenericTypeParameterBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)">
    <parameter name="customBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.ConstructorInfo)">
    <parameter name="con">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label[])">
    <parameter name="labels">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.LocalBuilder)">
    <parameter name="local">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.SignatureHelper)">
    <parameter name="signature">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.FieldInfo)">
    <parameter name="field">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.MethodInfo)">
    <parameter name="meth">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.String)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Type)">
    <parameter name="cls">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ILGenerator.EmitCall(System.Reflection.Emit.OpCode,System.Reflection.MethodInfo,System.Type[])">
    <parameter name="methodInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ILGenerator.EmitWriteLine(System.Reflection.Emit.LocalBuilder)">
    <parameter name="localBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ILGenerator.EmitWriteLine(System.Reflection.FieldInfo)">
    <parameter name="fld">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ILGenerator.EmitWriteLine(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ILGenerator.GetMemberRefToken(System.Reflection.MethodBase,System.Type[])">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ILGenerator.GetMethodToken(System.Reflection.MethodBase,System.Type[])">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ILGenerator.PutInteger4(System.Int32,System.Int32,System.Byte[])">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ILGenerator.SortExceptions(System.Reflection.Emit.__ExceptionInfo[])">
    <parameter name="exceptions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ILGenerator.ThrowException(System.Type)">
    <parameter name="excType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ILGenerator.UsingNamespace(System.String)">
    <parameter name="usingNamespace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.LineNumberInfo.EmitLineNumberInfo(System.Diagnostics.SymbolStore.ISymbolWriter)">
    <parameter name="symWriter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.LocalSymInfo.EmitLocalSymInfo(System.Diagnostics.SymbolStore.ISymbolWriter)">
    <parameter name="symWriter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.MethodBuilder.#ctor(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Reflection.Module,System.Reflection.Emit.TypeBuilder,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="mod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.MethodBuilder.#ctor(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][],System.Reflection.Module,System.Reflection.Emit.TypeBuilder,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="mod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.MethodBuilder.AddDeclarativeSecurity(System.Security.Permissions.SecurityAction,System.Security.PermissionSet)">
    <parameter name="pset">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.MethodBuilder.CreateMethodBodyHelper(System.Reflection.Emit.ILGenerator)">
    <parameter name="il">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.MethodBuilder.GetCustomAttributes(System.Type,System.Boolean)">
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.MethodBuilder.Init(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][],System.Reflection.Module,System.Reflection.Emit.TypeBuilder,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="mod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.MethodBuilder.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.MethodBuilder.IsDefined(System.Type,System.Boolean)">
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.MethodBuilder.IsKnownCA(System.Reflection.ConstructorInfo)">
    <parameter name="con">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.MethodBuilder.MakeGenericMethod(System.Type[])">
    <parameter name="typeArguments">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.MethodBuilder.ParseCA(System.Reflection.ConstructorInfo,System.Byte[])">
    <parameter name="con">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.MethodBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])">
    <parameter name="con">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="binaryAttribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.MethodBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)">
    <parameter name="customBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.MethodBuilder.SetMarshal(System.Reflection.Emit.UnmanagedMarshal)">
    <parameter name="unmanagedMarshal">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.MethodBuilderInstantiation.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.MethodBuilderInstantiation.MakeGenericMethod(System.Type[])">
    <parameter name="arguments">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.MethodOnTypeBuilderInstantiation.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.MethodOnTypeBuilderInstantiation.MakeGenericMethod(System.Type[])">
    <parameter name="typeArgs">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.#ctor(System.Reflection.Emit.AssemblyBuilder,System.Reflection.Emit.ModuleBuilder)">
    <parameter name="internalModuleBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.DefineManifestResource(System.String,System.IO.Stream,System.Reflection.ResourceAttributes)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.DefineManifestResourceNoLock(System.String,System.IO.Stream,System.Reflection.ResourceAttributes)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource(System.Byte[])">
    <parameter name="resource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource(System.String)">
    <parameter name="resourceFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResourceFileInternalNoLock(System.String)">
    <parameter name="resourceFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResourceInternalNoLock(System.Byte[])">
    <parameter name="resource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.GetArrayMethodToken(System.Type,System.String,System.Reflection.CallingConventions,System.Type,System.Type[])">
    <parameter name="arrayClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="methodName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.GetArrayMethodTokenNoLock(System.Type,System.String,System.Reflection.CallingConventions,System.Type,System.Type[])">
    <parameter name="arrayClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="methodName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.GetConstructorToken(System.Reflection.ConstructorInfo)">
    <parameter name="con">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.GetFieldToken(System.Reflection.FieldInfo)">
    <parameter name="field">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.GetFieldTokenNoLock(System.Reflection.FieldInfo)">
    <parameter name="field">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.GetMemberRefToken(System.Reflection.MethodBase,System.Type[])">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.GetMethodToken(System.Reflection.MethodInfo)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.GetMethodTokenInternal(System.Reflection.MethodInfo)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.GetMethodTokenNoLock(System.Reflection.MethodInfo,System.Boolean)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.GetModuleBuilder(System.Reflection.Module)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.GetRootElementType(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.GetSignatureToken(System.Byte[],System.Int32)">
    <parameter name="sigBytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.GetSignatureToken(System.Reflection.Emit.SignatureHelper)">
    <parameter name="sigHelper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.GetType(System.String,System.Type)">
    <parameter name="baseType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.GetTypeNoLock(System.String,System.Boolean,System.Boolean)">
    <parameter name="className">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.GetTypeRefNested(System.Type,System.Reflection.Module,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="refedModule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.GetTypeToken(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.GetTypeToken(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.GetTypeTokenInternal(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.GetTypeTokenInternal(System.Type,System.Boolean)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.GetTypeTokenWorkerNoLock(System.Type,System.Boolean)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.InternalGetConstructorToken(System.Reflection.ConstructorInfo,System.Boolean)">
    <parameter name="con">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])">
    <parameter name="con">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="binaryAttribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)">
    <parameter name="customBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.SetEntryPoint(System.Reflection.MethodInfo)">
    <parameter name="entryPoint">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.SetUserEntryPoint(System.Reflection.MethodInfo)">
    <parameter name="entryPoint">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.SetUserEntryPointNoLock(System.Reflection.MethodInfo)">
    <parameter name="entryPoint">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilderData.#ctor(System.Reflection.Emit.ModuleBuilder,System.String,System.String)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilderData.Init(System.Reflection.Emit.ModuleBuilder,System.String,System.String)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ParameterBuilder.#ctor(System.Reflection.Emit.MethodBuilder,System.Int32,System.Reflection.ParameterAttributes,System.String)">
    <parameter name="methodBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])">
    <parameter name="con">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="binaryAttribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ParameterBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)">
    <parameter name="customBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ParameterBuilder.SetMarshal(System.Reflection.Emit.UnmanagedMarshal)">
    <parameter name="unmanagedMarshal">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.PropertyBuilder.#ctor(System.Reflection.Module,System.String,System.Reflection.Emit.SignatureHelper,System.Reflection.PropertyAttributes,System.Type,System.Reflection.Emit.PropertyToken,System.Reflection.Emit.TypeBuilder)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.PropertyBuilder.AddOtherMethod(System.Reflection.Emit.MethodBuilder)">
    <parameter name="mdBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.PropertyBuilder.GetCustomAttributes(System.Type,System.Boolean)">
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.PropertyBuilder.IsDefined(System.Type,System.Boolean)">
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.PropertyBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])">
    <parameter name="con">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="binaryAttribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.PropertyBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)">
    <parameter name="customBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.PropertyBuilder.SetGetMethod(System.Reflection.Emit.MethodBuilder)">
    <parameter name="mdBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.PropertyBuilder.SetSetMethod(System.Reflection.Emit.MethodBuilder)">
    <parameter name="mdBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.PropertyBuilder.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.REDocument.EmitLineNumberInfo(System.Diagnostics.SymbolStore.ISymbolWriter)">
    <parameter name="symWriter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ScopeTree.EmitScopeTree(System.Diagnostics.SymbolStore.ISymbolWriter)">
    <parameter name="symWriter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.SignatureHelper.#ctor(System.Reflection.Module,System.Int32,System.Int32,System.Type,System.Type[],System.Type[])">
    <parameter name="returnType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.SignatureHelper.#ctor(System.Reflection.Module,System.Int32,System.Type,System.Type[],System.Type[])">
    <parameter name="returnType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.SignatureHelper.#ctor(System.Reflection.Module,System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.SignatureHelper.AddArgument(System.Type)">
    <parameter name="clsArgument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.SignatureHelper.AddArgument(System.Type,System.Boolean)">
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.SignatureHelper.AddArgument(System.Type,System.Type[],System.Type[])">
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.SignatureHelper.AddOneArgTypeHelper(System.Type)">
    <parameter name="clsArgument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.SignatureHelper.AddOneArgTypeHelper(System.Type,System.Boolean)">
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.SignatureHelper.AddOneArgTypeHelper(System.Type,System.Type[],System.Type[])">
    <parameter name="clsArgument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.SignatureHelper.AddOneArgTypeHelperWorker(System.Type,System.Boolean)">
    <parameter name="clsArgument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.SignatureHelper.InternalAddRuntimeType(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.SymbolMethod.GetCustomAttributes(System.Type,System.Boolean)">
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.SymbolMethod.GetToken(System.Reflection.Emit.ModuleBuilder)">
    <parameter name="mod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.SymbolMethod.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.SymbolMethod.IsDefined(System.Type,System.Boolean)">
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.SymbolType.FormCompoundType(System.Char[],System.Type,System.Int32)">
    <parameter name="baseType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.SymbolType.GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.SymbolType.GetCustomAttributes(System.Type,System.Boolean)">
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.SymbolType.GetEvent(System.String,System.Reflection.BindingFlags)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.SymbolType.GetField(System.String,System.Reflection.BindingFlags)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.SymbolType.GetInterface(System.String,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.SymbolType.GetInterfaceMap(System.Type)">
    <parameter name="interfaceType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.SymbolType.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.SymbolType.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.SymbolType.GetNestedType(System.String,System.Reflection.BindingFlags)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.SymbolType.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.SymbolType.IsDefined(System.Type,System.Boolean)">
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.SymbolType.SetElementType(System.Type)">
    <parameter name="baseType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.SymbolType.SetFormat(System.Char[],System.Int32,System.Int32)">
    <parameter name="bFormat">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.#ctor(System.Reflection.Emit.TypeBuilder,System.Reflection.Emit.GenericTypeParameterBuilder[])">
    <parameter name="genTypeDef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.#ctor(System.String,System.Int32,System.Reflection.Emit.MethodBuilder)">
    <parameter name="declMeth">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.#ctor(System.String,System.Int32,System.Reflection.Emit.TypeBuilder)">
    <parameter name="declType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.#ctor(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Module,System.Reflection.Emit.PackingSize,System.Int32,System.Reflection.Emit.TypeBuilder)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.#ctor(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[],System.Reflection.Module,System.Reflection.Emit.PackingSize,System.Reflection.Emit.TypeBuilder)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.AddDeclarativeSecurity(System.Security.Permissions.SecurityAction,System.Security.PermissionSet)">
    <parameter name="pset">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.AddDeclarativeSecurityNoLock(System.Security.Permissions.SecurityAction,System.Security.PermissionSet)">
    <parameter name="pset">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.AddInterfaceImplementation(System.Type)">
    <parameter name="interfaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.CustAttr.#ctor(System.Reflection.ConstructorInfo,System.Byte[])">
    <parameter name="con">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="binaryAttribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.CustAttr.#ctor(System.Reflection.Emit.CustomAttributeBuilder)">
    <parameter name="customBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.CustAttr.Bake(System.Reflection.Emit.ModuleBuilder,System.Int32)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefineMethodOverride(System.Reflection.MethodInfo,System.Reflection.MethodInfo)">
    <parameter name="methodInfoBody">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="methodInfoDeclaration">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefineMethodOverrideNoLock(System.Reflection.MethodInfo,System.Reflection.MethodInfo)">
    <parameter name="methodInfoBody">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="methodInfoDeclaration">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.Init(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[],System.Reflection.Module,System.Reflection.Emit.PackingSize,System.Int32,System.Reflection.Emit.TypeBuilder)">
    <parameter name="fullname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.InternalAddDeclarativeSecurity(System.Reflection.Module,System.Int32,System.Security.Permissions.SecurityAction,System.Byte[])">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.InternalAddInterfaceImpl(System.Int32,System.Int32,System.Reflection.Module)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.InternalCreateCustomAttribute(System.Int32,System.Int32,System.Byte[],System.Reflection.Module,System.Boolean)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.InternalCreateCustomAttribute(System.Int32,System.Int32,System.Byte[],System.Reflection.Module,System.Boolean,System.Boolean)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.InternalDefineClass(System.String,System.Int32,System.Int32[],System.Reflection.TypeAttributes,System.Reflection.Module,System.Guid,System.Int32,System.Int32)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.InternalDefineEvent(System.Reflection.Module,System.Int32,System.String,System.Int32,System.Int32)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.InternalDefineField(System.Int32,System.String,System.Byte[],System.Int32,System.Reflection.FieldAttributes,System.Reflection.Module)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.InternalDefineGenParam(System.String,System.Int32,System.Int32,System.Int32,System.Int32[],System.Reflection.Module,System.Int32)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.InternalDefineMethod(System.Int32,System.String,System.Byte[],System.Int32,System.Reflection.MethodAttributes,System.Reflection.Module)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.InternalDefineMethodImpl(System.Reflection.Module,System.Int32,System.Int32,System.Int32)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.InternalDefineMethodSemantics(System.Reflection.Module,System.Int32,System.Reflection.MethodSemanticsAttributes,System.Int32)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.InternalDefineMethodSpec(System.Int32,System.Byte[],System.Int32,System.Reflection.Module)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.InternalDefineProperty(System.Reflection.Module,System.Int32,System.String,System.Int32,System.Byte[],System.Int32,System.Int32,System.Int32)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.InternalGetTokenFromSig(System.Reflection.Module,System.Byte[],System.Int32)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.InternalSetClassLayout(System.Reflection.Module,System.Int32,System.Reflection.Emit.PackingSize,System.Int32)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.InternalSetConstantValue(System.Reflection.Module,System.Int32,System.Variant@)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.InternalSetFieldOffset(System.Reflection.Module,System.Int32,System.Int32)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.InternalSetMarshalInfo(System.Reflection.Module,System.Int32,System.Byte[],System.Int32)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.InternalSetMethodIL(System.Int32,System.Boolean,System.Byte[],System.Byte[],System.Int32,System.Int32,System.Int32,System.Reflection.Emit.__ExceptionInstance[],System.Int32[],System.Int32[],System.Reflection.Module)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.InternalSetMethodImpl(System.Reflection.Module,System.Int32,System.Reflection.MethodImplAttributes)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.InternalSetParamInfo(System.Reflection.Module,System.Int32,System.Int32,System.Reflection.ParameterAttributes,System.String)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.InternalSetParentType(System.Int32,System.Int32,System.Reflection.Module)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.InternalSetPInvokeData(System.Reflection.Module,System.String,System.String,System.Int32,System.Int32,System.Int32)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.IsPublicComType(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.IsSubclassOf(System.Type)">
    <parameter name="c">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.MakeGenericType(System.Type[])">
    <parameter name="typeArguments">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.SetConstantValue(System.Reflection.Module,System.Int32,System.Type,System.Object)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="destType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])">
    <parameter name="con">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="binaryAttribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)">
    <parameter name="customBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.TermCreateClass(System.Int32,System.Reflection.Module)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilderInstantiation.GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilderInstantiation.GetCustomAttributes(System.Type,System.Boolean)">
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilderInstantiation.GetEvent(System.String,System.Reflection.BindingFlags)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilderInstantiation.GetField(System.String,System.Reflection.BindingFlags)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilderInstantiation.GetInterface(System.String,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilderInstantiation.GetInterfaceMap(System.Type)">
    <parameter name="interfaceType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilderInstantiation.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilderInstantiation.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilderInstantiation.GetNestedType(System.String,System.Reflection.BindingFlags)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilderInstantiation.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilderInstantiation.IsDefined(System.Type,System.Boolean)">
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilderInstantiation.IsSubclassOf(System.Type)">
    <parameter name="c">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilderInstantiation.MakeGenericType(System.Type[])">
    <parameter name="inst">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeNameBuilder.AddElementType(System.Type)">
    <parameter name="elementType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeNameBuilder.ConstructAssemblyQualifiedNameWorker(System.Type,System.Reflection.Emit.TypeNameBuilder.Format)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeNameBuilder.ToString(System.Type,System.Reflection.Emit.TypeNameBuilder.Format)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.FieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.InvalidFilterCriteriaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.MdFieldInfo.GetValue(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.MdFieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.MetadataImport.GetAssociates(System.Int32,System.Reflection.AssociateRecord*,System.Int32)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.MetadataToken.IsTokenOfType(System.Int32,System.Reflection.MetadataTokenType[])">
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Module.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Module.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Module.GetType(System.String)">
    <parameter name="className">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Module.GetType(System.String,System.Boolean)">
    <parameter name="className">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Module.GetType(System.String,System.Boolean,System.Boolean)">
    <parameter name="className">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Module.InternalGetMemberRef(System.Reflection.Module,System.Int32,System.Int32)">
    <parameter name="refedModule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Module.InternalGetTypeToken(System.String,System.Reflection.Module,System.String,System.Int32)">
    <parameter name="refedModule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.ParameterInfo.#ctor(System.Reflection.ParameterInfo,System.Reflection.Emit.MethodBuilderInstantiation)">
    <parameter name="accessor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.ParameterInfo.#ctor(System.Reflection.ParameterInfo,System.Reflection.MemberInfo)">
    <parameter name="accessor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.ParameterInfo.#ctor(System.Reflection.ParameterInfo,System.Reflection.RuntimePropertyInfo)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="accessor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.ParameterInfo.GetCustomAttributes(System.Type,System.Boolean)">
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.ParameterInfo.GetReturnParameter(System.Reflection.MethodBase,System.Reflection.MemberInfo,System.Signature)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="sig">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.ParameterInfo.IsDefined(System.Type,System.Boolean)">
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Pointer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Pointer.Unbox(System.Object)">
    <parameter name="ptr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.PseudoCustomAttribute.IsDefined(System.Reflection.Assembly,System.Type)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="caType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.PseudoCustomAttribute.IsDefined(System.Reflection.ParameterInfo,System.Type)">
    <parameter name="caType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.PseudoCustomAttribute.IsDefined(System.Reflection.RuntimeConstructorInfo,System.Type)">
    <parameter name="ctor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="caType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.PseudoCustomAttribute.IsDefined(System.Reflection.RuntimeFieldInfo,System.Type)">
    <parameter name="field">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="caType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.PseudoCustomAttribute.IsDefined(System.Reflection.RuntimeMethodInfo,System.Type)">
    <parameter name="caType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.PseudoCustomAttribute.IsDefined(System.RuntimeType,System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="caType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.PseudoCustomAttribute.IsSecurityAttribute(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.ReflectionTypeLoadException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.RtFieldInfo.InternalGetValue(System.Object,System.Boolean)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.RtFieldInfo.InternalGetValue(System.Object,System.Boolean,System.Boolean)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.RtFieldInfo.InternalSetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo,System.Boolean)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.RtFieldInfo.InternalSetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo,System.Boolean,System.Boolean)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.RuntimeConstructorInfo.CheckCanCreateInstance(System.Type,System.Boolean)">
    <parameter name="declaringType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.RuntimeEventInfo.#ctor(System.Int32,System.RuntimeType,System.RuntimeType.RuntimeTypeCache,System.Boolean@)">
    <parameter name="declaredType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="reflectedTypeCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.RuntimeMethodInfo.ConstructName(System.Reflection.MethodBase)">
    <parameter name="mi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.RuntimeMethodInfo.ConstructParameters(System.Reflection.ParameterInfo[],System.Reflection.CallingConventions)">
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.RuntimeMethodInfo.ConstructParameters(System.Type[],System.Reflection.CallingConventions)">
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.RuntimeMethodInfo.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Boolean)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.RuntimePropertyInfo.#ctor(System.Int32,System.RuntimeType,System.RuntimeType.RuntimeTypeCache,System.Boolean@)">
    <parameter name="declaredType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="reflectedTypeCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.RuntimePropertyInfo.EqualsSig(System.Reflection.RuntimePropertyInfo)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.StrongNameKeyPair.#ctor(System.Byte[])">
    <parameter name="keyPairArray">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.StrongNameKeyPair.#ctor(System.IO.FileStream)">
    <parameter name="keyPairFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.StrongNameKeyPair.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.StrongNameKeyPair.#ctor(System.String)">
    <parameter name="keyPairContainer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.TargetException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.TargetInvocationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.TargetParameterCountException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.TypeDelegator.#ctor(System.Type)">
    <parameter name="delegatingType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.TypeDelegator.GetEvent(System.String,System.Reflection.BindingFlags)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.TypeDelegator.GetField(System.String,System.Reflection.BindingFlags)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.TypeDelegator.GetInterface(System.String,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.TypeDelegator.GetInterfaceMap(System.Type)">
    <parameter name="interfaceType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.TypeDelegator.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.TypeDelegator.GetNestedType(System.String,System.Reflection.BindingFlags)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.MissingManifestResourceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.MissingSatelliteAssemblyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.NeutralResourcesLanguageAttribute.#ctor(System.String)">
    <parameter name="cultureName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.NeutralResourcesLanguageAttribute.#ctor(System.String,System.Resources.UltimateResourceFallbackLocation)">
    <parameter name="cultureName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceManager.#ctor(System.String,System.Reflection.Assembly)">
    <parameter name="baseName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceManager.#ctor(System.String,System.Reflection.Assembly,System.Type)">
    <parameter name="baseName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceManager.#ctor(System.String,System.String,System.Type)">
    <parameter name="baseName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="resourceDir">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceManager.#ctor(System.Type)">
    <parameter name="resourceSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceManager.AddResourceSet(System.Collections.Hashtable,System.Globalization.CultureInfo,System.Resources.ResourceSet@)">
    <parameter name="localResourceSets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="rs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceManager.CompareNames(System.String,System.String,System.Reflection.AssemblyName)">
    <parameter name="asmTypeName1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="typeName2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="asmName2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceManager.CreateResourceSet(System.IO.Stream,System.Reflection.Assembly)">
    <parameter name="store">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceManager.GetResourceSet(System.Globalization.CultureInfo,System.Boolean,System.Boolean)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceManager.GetSatelliteAssembly(System.Globalization.CultureInfo)">
    <parameter name="lookForCulture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceReader.#ctor(System.IO.Stream)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceReader.#ctor(System.IO.Stream,System.Collections.Generic.Dictionary{System.String,System.Resources.ResourceLocator})">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceReader.CompareStringEqualsName(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceReader.FindPosForResource(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceReader.GetResourceData(System.String,System.String@,System.Byte[]@)">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="resourceType">
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceReader.ReadUnalignedI4(System.Int32*)">
    <parameter name="p">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceSet.#ctor(System.IO.Stream)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceSet.#ctor(System.Resources.IResourceReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.RuntimeResourceSet.#ctor(System.IO.Stream)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.SatelliteContractVersionAttribute.#ctor(System.String)">
    <parameter name="version">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.CompilerServices.RuntimeHelpers.EnterMonitorAndTryCode(System.Object)">
    <parameter name="helper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.CompilerServices.RuntimeHelpers.ExecuteBackoutCodeHelper(System.Object,System.Object,System.Boolean)">
    <parameter name="backoutCode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.CompilerServices.RuntimeHelpers.ExitMonitorOnBackout(System.Object,System.Boolean)">
    <parameter name="helper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.CompilerServices.RuntimeWrappedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.CompilerServices.TypeDependencyAttribute.#ctor(System.String)">
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.COMException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.ComImportAttribute.IsDefined(System.RuntimeType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.Type)">
    <parameter name="sourceInterface">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.Type,System.Type)">
    <parameter name="sourceInterface1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="sourceInterface2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.Type,System.Type,System.Type)">
    <parameter name="sourceInterface1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="sourceInterface2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="sourceInterface3">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.Type,System.Type,System.Type,System.Type)">
    <parameter name="sourceInterface1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="sourceInterface2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="sourceInterface3">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="sourceInterface4">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.CurrencyWrapper.#ctor(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.DllImportAttribute.IsDefined(System.Reflection.RuntimeMethodInfo)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.ErrorWrapper.#ctor(System.Object)">
    <parameter name="errorCode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.ExternalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.FieldOffsetAttribute.IsDefined(System.Reflection.RuntimeFieldInfo)">
    <parameter name="field">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.InAttribute.IsDefined(System.Reflection.ParameterInfo)">
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.InvalidComObjectException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.InvalidOleVariantTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.CreateWrapperOfType(System.Object,System.Type)">
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.FinalReleaseComObject(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.GenerateProgIdForType(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.GetComObjectData(System.Object,System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.GetComSlotForMethodInfo(System.Reflection.MemberInfo)">
    <parameter name="m">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.GetFunctionPointerForDelegate(System.Delegate)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.GetHINSTANCE(System.Reflection.Module)">
    <parameter name="m">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.GetTypeInfoName(System.Runtime.InteropServices.ComTypes.ITypeInfo)">
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.GetTypeInfoName(System.Runtime.InteropServices.UCOMITypeInfo)">
    <parameter name="pTI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.GetTypeLibName(System.Runtime.InteropServices.ComTypes.ITypeLib)">
    <parameter name="typelib">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.GetTypeLibName(System.Runtime.InteropServices.UCOMITypeLib)">
    <parameter name="pTLB">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.NumParamBytes(System.Reflection.MethodInfo)">
    <parameter name="m">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.OffsetOf(System.Type,System.String)">
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="fieldName">
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.Prelink(System.Reflection.MethodInfo)">
    <parameter name="m">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.PrelinkAll(System.Type)">
    <parameter name="c">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.ReleaseComObject(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.SecureStringToBSTR(System.Security.SecureString)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemAnsi(System.Security.SecureString)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.SecureStringToCoTaskMemUnicode(System.Security.SecureString)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocAnsi(System.Security.SecureString)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.SecureStringToGlobalAllocUnicode(System.Security.SecureString)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.SetComObjectData(System.Object,System.Object,System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.MarshalAsAttribute.IsDefined(System.Reflection.ParameterInfo)">
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.MarshalAsAttribute.IsDefined(System.Reflection.RuntimeFieldInfo)">
    <parameter name="field">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.MarshalDirectiveException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.OptionalAttribute.IsDefined(System.Reflection.ParameterInfo)">
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.OutAttribute.IsDefined(System.Reflection.ParameterInfo)">
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.PreserveSigAttribute.IsDefined(System.Reflection.RuntimeMethodInfo)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.SafeArrayRankMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.SafeArrayTypeMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.SEHException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.StructLayoutAttribute.IsDefined(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.Serialization.SerializationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeFieldHandle.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeMethodHandle.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeMethodHandle.CheckLinktimeDemands(System.Reflection.Module,System.Int32)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeMethodHandle.InvokeMethodFast(System.Object,System.Object[],System.Signature,System.Reflection.MethodAttributes,System.RuntimeTypeHandle)">
    <parameter name="sig">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeMethodHandle.IsVisibleFromModule(System.Reflection.Module)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.ActivatorCache.InitializeCacheEntry(System.RuntimeType.ActivatorCacheEntry)">
    <parameter name="ace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.CanCastTo(System.RuntimeType,System.RuntimeType)">
    <parameter name="fromType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="toType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.CheckValue(System.Object,System.Reflection.Binder,System.Globalization.CultureInfo,System.Reflection.BindingFlags)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.FilterApplyBase(System.Reflection.MemberInfo,System.Reflection.BindingFlags,System.Boolean,System.Boolean,System.Boolean,System.String,System.Boolean)">
    <parameter name="memberInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.FilterApplyMethodBaseInfo(System.Reflection.MethodBase,System.Reflection.BindingFlags,System.Reflection.CallingConventions,System.Type[])">
    <parameter name="methodBase">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.FilterApplyMethodBaseInfo(System.Reflection.MethodBase,System.Reflection.BindingFlags,System.String,System.Reflection.CallingConventions,System.Type[],System.Boolean)">
    <parameter name="methodBase">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.FilterApplyPrefixLookup(System.Reflection.MemberInfo,System.String,System.Boolean)">
    <parameter name="memberInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.FilterApplyType(System.Type,System.Reflection.BindingFlags,System.String,System.Boolean,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.GetMethodBase(System.Reflection.Module,System.Int32)">
    <parameter name="scope">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.RuntimeTypeCache.#ctor(System.RuntimeType)">
    <parameter name="runtimeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.RuntimeTypeCache.GetConstructorList(System.Reflection.MemberListType,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.RuntimeTypeCache.GetEventList(System.Reflection.MemberListType,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.RuntimeTypeCache.GetFieldList(System.Reflection.MemberListType,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.RuntimeTypeCache.GetInterfaceList(System.Reflection.MemberListType,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.RuntimeTypeCache.GetMemberList``1(System.RuntimeType.RuntimeTypeCache.MemberInfoCache{``0}@,System.Reflection.MemberListType,System.String,System.RuntimeType.RuntimeTypeCache.CacheType)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.RuntimeTypeCache.GetMethodList(System.Reflection.MemberListType,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.RuntimeTypeCache.GetNestedTypeList(System.Reflection.MemberListType,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.RuntimeTypeCache.GetPropertyList(System.Reflection.MemberListType,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.RuntimeTypeCache.MemberInfoCache`1.AddElementTypes(System.Type,System.Collections.Generic.IList{System.Type})">
    <parameter name="template">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.RuntimeTypeCache.MemberInfoCache`1.GetMemberList(System.Reflection.MemberListType,System.String,System.RuntimeType.RuntimeTypeCache.CacheType)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.RuntimeTypeCache.MemberInfoCache`1.Insert(System.Reflection.CerArrayList{`0}@,System.String,System.Reflection.MemberListType)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.RuntimeTypeCache.MemberInfoCache`1.MergeWithGlobalList(System.Reflection.CerArrayList{`0})">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.RuntimeTypeCache.MemberInfoCache`1.PopulateEvents(System.RuntimeType.RuntimeTypeCache.Filter,System.RuntimeTypeHandle,System.Collections.Hashtable,System.Collections.Generic.List{System.Reflection.RuntimeEventInfo})">
    <parameter name="csEventInfos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.RuntimeTypeCache.MemberInfoCache`1.PopulateEvents(System.RuntimeType.RuntimeTypeCache.Filter,System.RuntimeTypeHandle,System.Reflection.MetadataImport,System.Int32*,System.Int32,System.Collections.Hashtable,System.Collections.Generic.List{System.Reflection.RuntimeEventInfo})">
    <parameter name="tkAssociates">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="csEventInfos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.RuntimeTypeCache.MemberInfoCache`1.PopulateLiteralFields(System.RuntimeType.RuntimeTypeCache.Filter,System.RuntimeTypeHandle,System.Collections.Generic.List{System.Reflection.RuntimeFieldInfo})">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.RuntimeTypeCache.MemberInfoCache`1.PopulateProperties(System.RuntimeType.RuntimeTypeCache.Filter,System.RuntimeTypeHandle,System.Collections.Hashtable,System.Collections.Generic.List{System.Reflection.RuntimePropertyInfo})">
    <parameter name="csPropertyInfos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.RuntimeTypeCache.MemberInfoCache`1.PopulateProperties(System.RuntimeType.RuntimeTypeCache.Filter,System.RuntimeTypeHandle,System.Int32*,System.Int32,System.Collections.Hashtable,System.Collections.Generic.List{System.Reflection.RuntimePropertyInfo})">
    <parameter name="tkAssociates">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="csPropertyInfos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.RuntimeTypeCache.MemberInfoCache`1.PopulateRtFields(System.RuntimeType.RuntimeTypeCache.Filter,System.Int32**,System.Int32,System.RuntimeTypeHandle,System.Collections.Generic.List{System.Reflection.RuntimeFieldInfo})">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.RuntimeTypeCache.MemberInfoCache`1.PopulateRtFields(System.RuntimeType.RuntimeTypeCache.Filter,System.RuntimeTypeHandle,System.Collections.Generic.List{System.Reflection.RuntimeFieldInfo})">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.SanityCheckGenericArguments(System.Type[],System.Type[])">
    <parameter name="genericArguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="genericParamters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.ThrowIfTypeNeverValidGenericArgument(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.ValidateGenericArguments(System.Reflection.MemberInfo,System.Type[],System.Exception)">
    <parameter name="genericArguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.WrapArgsForInvokeCall(System.Object[],System.Int32[])">
    <parameter name="aArgs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="aWrapperTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeTypeHandle.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)">
    <parameter name="rule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.AddAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)">
    <parameter name="rule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.Persist(Microsoft.Win32.SafeHandles.SafeWaitHandle)">
    <parameter name="handle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)">
    <parameter name="rule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleAll(System.Security.AccessControl.EventWaitHandleAccessRule)">
    <parameter name="rule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.EventWaitHandleAccessRule)">
    <parameter name="rule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)">
    <parameter name="rule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRuleAll(System.Security.AccessControl.EventWaitHandleAuditRule)">
    <parameter name="rule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.EventWaitHandleAuditRule)">
    <parameter name="rule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.ResetAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)">
    <parameter name="rule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.SetAccessRule(System.Security.AccessControl.EventWaitHandleAccessRule)">
    <parameter name="rule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.AccessControl.EventWaitHandleSecurity.SetAuditRule(System.Security.AccessControl.EventWaitHandleAuditRule)">
    <parameter name="rule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.CryptographicException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Cryptography.CryptographicException.#ctor(System.String,System.String)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Policy.ApplicationTrust.FromXml(System.Security.SecurityElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Policy.Evidence.#ctor(System.Char[])">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Policy.Evidence.AddAssembly(System.Object)">
    <parameter name="id">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Policy.Evidence.AddHost(System.Object)">
    <parameter name="id">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.SecureString.#ctor(System.Char*,System.Int32)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.SecureString.#ctor(System.Security.SecureString)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.SecurityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.SecurityException.ToStringHelper(System.Text.StringBuilder,System.String,System.Object)">
    <parameter name="sb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.VerificationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.SerializableAttribute.IsDefined(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.Globalization.NumberFormatInfo,System.Single@)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.StackOverflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.AppendInPlace(System.Char*,System.Int32,System.Int32)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.AppendInPlace(System.String,System.Int32)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.AppendInPlace(System.String,System.Int32,System.Int32,System.Int32)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.CompareOrdinalHelper(System.String,System.String)">
    <parameter name="strA">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="strB">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.EqualsHelper(System.String,System.String)">
    <parameter name="strA">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="strB">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.FillStringChecked(System.String,System.Int32,System.String)">
    <parameter name="dest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="src">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.IndexOf(System.String,System.Int32,System.Int32,System.StringComparison)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.InsertInPlace(System.Int32,System.String,System.Int32,System.Int32,System.Int32)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.InternalCopy(System.String,System.IntPtr,System.Int32)">
    <parameter name="src">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.InternalMemCpy(System.String,System.Int32,System.String,System.Int32,System.Int32)">
    <parameter name="src">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="dst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.MakeSeparatorList(System.Char[],System.Int32[]@)">
    <parameter name="sepList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.MakeSeparatorList(System.String[],System.Int32[]@,System.Int32[]@)">
    <parameter name="separators">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="sepList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="lengthList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.wcslen(System.Char*)">
    <parameter name="ptr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.wstrcpy(System.Char*,System.Char*,System.Int32)">
    <parameter name="smem">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.wstrcpyPtrAligned(System.Char*,System.Char*,System.Int32)">
    <parameter name="dmem">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="smem">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.StringComparer.GetHashCode(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.StringComparer.GetHashCode(System.String)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.SystemException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.SZArrayHelper.SZGenericArrayEnumerator`1.#ctor(`0[])">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Decoder.Convert(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="chars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Decoder.Convert(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="chars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Decoder.GetCharCount(System.Byte*,System.Int32,System.Boolean)">
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32)">
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32,System.Boolean)">
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Decoder.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Boolean)">
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="chars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
    <parameter name="chars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Decoder.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32,System.Boolean)">
    <parameter name="chars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Decoder.SerializeDecoder(System.Runtime.Serialization.SerializationInfo)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.DecoderExceptionFallbackBuffer.Throw(System.Byte[],System.Int32)">
    <parameter name="bytesUnknown">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.DecoderFallbackBuffer.Fallback(System.Byte[],System.Int32)">
    <parameter name="bytesUnknown">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.DecoderFallbackBuffer.InternalFallback(System.Byte[],System.Byte*)">
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.DecoderFallbackBuffer.InternalFallback(System.Byte[],System.Byte*,System.Char*@)">
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="chars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.DecoderFallbackBuffer.ThrowLastBytesRecursive(System.Byte[])">
    <parameter name="bytesUnknown">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.DecoderFallbackException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.DecoderNLS.#ctor(System.Text.Encoding)">
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.DecoderReplacementFallback.#ctor(System.String)">
    <parameter name="replacement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.DecoderReplacementFallbackBuffer.#ctor(System.Text.DecoderReplacementFallback)">
    <parameter name="fallback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.DecoderReplacementFallbackBuffer.InternalFallback(System.Byte[],System.Byte*)">
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Encoder.Convert(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
    <parameter name="chars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)">
    <parameter name="chars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Encoder.GetByteCount(System.Char*,System.Int32,System.Boolean)">
    <parameter name="chars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Encoder.GetByteCount(System.Char[],System.Int32,System.Int32,System.Boolean)">
    <parameter name="chars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Encoder.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean)">
    <parameter name="chars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)">
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="chars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Encoder.SerializeEncoder(System.Runtime.Serialization.SerializationInfo)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.EncoderFallbackException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.EncoderNLS.#ctor(System.Text.Encoding)">
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.EncoderReplacementFallback.#ctor(System.String)">
    <parameter name="replacement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.EncoderReplacementFallbackBuffer.#ctor(System.Text.EncoderReplacementFallback)">
    <parameter name="fallback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Encoding.DefaultDecoder.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Encoding.DefaultEncoder.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Encoding.DeserializeEncoding(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Encoding.EncodingByteBuffer.#ctor(System.Text.Encoding,System.Text.EncoderNLS,System.Byte*,System.Int32,System.Char*,System.Int32)">
    <parameter name="inEncoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Encoding.EncodingCharBuffer.#ctor(System.Text.Encoding,System.Text.DecoderNLS,System.Char*,System.Int32,System.Byte*,System.Int32)">
    <parameter name="enc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Encoding.EncodingCharBuffer.Fallback(System.Byte[])">
    <parameter name="byteBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Encoding.SerializeEncoding(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.InternalDecoderBestFitFallbackBuffer.#ctor(System.Text.InternalDecoderBestFitFallback)">
    <parameter name="fallback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.InternalDecoderBestFitFallbackBuffer.InternalFallback(System.Byte[],System.Byte*)">
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.InternalDecoderBestFitFallbackBuffer.TryBestFit(System.Byte[])">
    <parameter name="bytesCheck">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.InternalEncoderBestFitFallbackBuffer.#ctor(System.Text.InternalEncoderBestFitFallback)">
    <parameter name="fallback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Latin1Encoding.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Latin1Encoding.GetCharCount(System.Byte*,System.Int32,System.Text.DecoderNLS)">
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Normalization.GuessLength(System.String)">
    <parameter name="strInput">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Normalization.IsNormalized(System.String)">
    <parameter name="strInput">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Normalization.IsNormalized(System.String,System.Text.NormalizationForm)">
    <parameter name="strInput">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.StringBuilder.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
    <parameter name="destination">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.StringBuilder.NeedsAllocation(System.String,System.Int32)">
    <parameter name="currentString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.UnicodeEncoding.Decoder.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.UnicodeEncoding.Decoder.#ctor(System.Text.UnicodeEncoding)">
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.UTF32Encoding.UTF32Decoder.#ctor(System.Text.UTF32Encoding)">
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.UTF7Encoding.Decoder.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.UTF7Encoding.Decoder.#ctor(System.Text.UTF7Encoding)">
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.UTF7Encoding.Encoder.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.UTF7Encoding.Encoder.#ctor(System.Text.UTF7Encoding)">
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.UTF7Encoding.GetByteCount(System.Char*,System.Int32,System.Text.EncoderNLS)">
    <parameter name="chars">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.UTF7Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Text.EncoderNLS)">
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="chars">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.UTF7Encoding.GetCharCount(System.Byte*,System.Int32,System.Text.DecoderNLS)">
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.UTF7Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Text.DecoderNLS)">
    <parameter name="chars">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.UTF8Encoding.FallbackInvalidByteSequence(System.Byte*,System.Int32,System.Text.DecoderFallbackBuffer)">
    <parameter name="fallback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.UTF8Encoding.FallbackInvalidByteSequence(System.Byte*@,System.Int32,System.Text.DecoderFallbackBuffer,System.Char*@)">
    <parameter name="fallback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.UTF8Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Text.EncoderNLS)">
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="chars">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.UTF8Encoding.UTF8Decoder.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.UTF8Encoding.UTF8Decoder.#ctor(System.Text.UTF8Encoding)">
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.UTF8Encoding.UTF8Encoder.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.UTF8Encoding.UTF8Encoder.#ctor(System.Text.UTF8Encoding)">
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading._IOCompletionCallback.IOCompletionCallback_Context(System.Object)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading._ThreadPoolWaitCallback.PerformWaitCallbackInternal(System.Threading._ThreadPoolWaitCallback)">
    <parameter name="tpWaitCallBack">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading._ThreadPoolWaitCallback.WaitCallback_Context(System.Object)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading._ThreadPoolWaitOrTimerCallback.PerformWaitOrTimerCallback(System.Object,System.Boolean)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading._ThreadPoolWaitOrTimerCallback.WaitOrTimerCallback_Context(System.Object,System.Boolean)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading._ThreadPoolWaitOrTimerCallback.WaitOrTimerCallback_Context_f(System.Object)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading._ThreadPoolWaitOrTimerCallback.WaitOrTimerCallback_Context_t(System.Object)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.AbandonedMutexException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.EventWaitHandle.#ctor(Microsoft.Win32.SafeHandles.SafeWaitHandle)">
    <parameter name="handle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.EventWaitHandle.SetAccessControl(System.Security.AccessControl.EventWaitHandleSecurity)">
    <parameter name="eventSecurity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.ExecutionContext.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext,System.Threading.ContextCallback,System.Object)">
    <parameter name="executionContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="callback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.ExecutionContext.runFinallyCode(System.Object,System.Boolean)">
    <parameter name="userData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.ExecutionContext.runTryCode(System.Object)">
    <parameter name="userData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Monitor.Pulse(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Monitor.PulseAll(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Monitor.Wait(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Monitor.Wait(System.Object,System.Int32)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Monitor.Wait(System.Object,System.Int32,System.Boolean)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Monitor.Wait(System.Object,System.TimeSpan)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Monitor.Wait(System.Object,System.TimeSpan,System.Boolean)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Mutex.#ctor(Microsoft.Win32.SafeHandles.SafeWaitHandle)">
    <parameter name="handle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Mutex.MutexCleanupCode(System.Object,System.Boolean)">
    <parameter name="userData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Mutex.SetAccessControl(System.Security.AccessControl.MutexSecurity)">
    <parameter name="mutexSecurity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Overlapped.Free(System.Threading.NativeOverlapped*)">
    <parameter name="nativeOverlappedPtr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Overlapped.Unpack(System.Threading.NativeOverlapped*)">
    <parameter name="nativeOverlappedPtr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.SynchronizationContext.InvokeWaitMethodHelper(System.Threading.SynchronizationContext,System.IntPtr[],System.Boolean,System.Int32)">
    <parameter name="syncContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="waitHandles">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.SynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.SynchronizationContext.Wait(System.IntPtr[],System.Boolean,System.Int32)">
    <parameter name="waitHandles">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.SynchronizationLockException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.ThreadAbortException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.ThreadHelper.ThreadStart_Context(System.Object)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.ThreadInterruptedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.ThreadPool.BindHandle(System.Runtime.InteropServices.SafeHandle)">
    <parameter name="osHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.ThreadPool.QueueUserWorkItem(System.Threading.WaitCallback)">
    <parameter name="callBack">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.ThreadPool.QueueUserWorkItem(System.Threading.WaitCallback,System.Object)">
    <parameter name="callBack">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.ThreadPool.QueueUserWorkItemHelper(System.Threading.WaitCallback,System.Object,System.Threading.StackCrawlMark@,System.Boolean)">
    <parameter name="callBack">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.ThreadPool.UnsafeQueueUserWorkItem(System.Threading.WaitCallback,System.Object)">
    <parameter name="callBack">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.ThreadStartException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.ThreadStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback)">
    <parameter name="callback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.Int32,System.Int32)">
    <parameter name="callback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.Int64,System.Int64)">
    <parameter name="callback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.TimeSpan,System.TimeSpan)">
    <parameter name="callback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.UInt32,System.UInt32)">
    <parameter name="callback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Timer.Dispose(System.Threading.WaitHandle)">
    <parameter name="notifyObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Timer.TimerSetup(System.Threading.TimerCallback,System.Object,System.UInt32,System.UInt32,System.Threading.StackCrawlMark@)">
    <parameter name="callback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.WaitHandle.SetHandleInternal(Microsoft.Win32.SafeHandles.SafeWaitHandle)">
    <parameter name="handle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle)">
    <parameter name="toSignal">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="toWaitOn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.Int32,System.Boolean)">
    <parameter name="toSignal">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="toWaitOn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.TimeSpan,System.Boolean)">
    <parameter name="toSignal">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="toWaitOn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.WaitHandleCannotBeOpenedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Type.GetInterface(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Type.GetInterfaceMap(System.Type)">
    <parameter name="interfaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Type.GetNestedType(System.String,System.Reflection.BindingFlags)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Type.IsSubclassOf(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="c">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TypedReference.MakeTypedReference(System.Object,System.Reflection.FieldInfo[])">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="flds">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TypeInitializationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TypeLoadException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TypeUnloadedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UIntPtr.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UnauthorizedAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UnitySerializationHolder.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UnitySerializationHolder.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UnitySerializationHolder.GetUnitySerializationInfo(System.Runtime.Serialization.SerializationInfo,System.Int32,System.String,System.Reflection.Assembly)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UnitySerializationHolder.GetUnitySerializationInfo(System.Runtime.Serialization.SerializationInfo,System.Reflection.Missing)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UnitySerializationHolder.GetUnitySerializationInfo(System.Runtime.Serialization.SerializationInfo,System.Type)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Utf8String.GetUtf8StringByteLength(System.Void*)">
    <parameter name="pUtf8String">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Version.#ctor(System.String)">
    <parameter name="version">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.WeakReference.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.IArraySortHelper`1.BinarySearch(`0[],System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.IArraySortHelper`1.Sort(`0[],System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.IArraySortHelper`2.Sort(`0[],`1[],System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.ICollection`1.Add(`0)">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>6</argument>
    </attribute>
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.ICollection`1.Contains(`0)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.ICollection`1.Remove(`0)">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>3</argument>
    </attribute>
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.IList`1.IndexOf(`0)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>6</argument>
    </attribute>
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.IComparer.Compare(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.IList.Add(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>6</argument>
    </attribute>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.IList.Contains(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)">
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)">
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)">
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.Win32.Win32Native.RegistryTimeZoneInformation.#ctor(System.Byte[])">
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:Microsoft.Win32.Win32Native.WIN32_FILE_ATTRIBUTE_DATA.PopulateFrom(Microsoft.Win32.Win32Native.WIN32_FIND_DATA)">
    <parameter name="findData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.AppDomainSetup.SetupDefaults(System.String)">
    <parameter name="imageLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Array.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.AddAttributesToList(System.Collections.Generic.List{System.Attribute},System.Attribute[],System.Collections.Generic.Dictionary{System.Type,System.AttributeUsageAttribute})">
    <parameter name="attributeList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.CopyToArrayList(System.Collections.Generic.List{System.Attribute},System.Attribute[],System.Collections.Generic.Dictionary{System.Type,System.AttributeUsageAttribute})">
    <parameter name="attributeList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.GetParentDefinition(System.Reflection.ParameterInfo)">
    <parameter name="param">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Attribute.InternalParamIsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
    <parameter name="param">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Buffer.ByteLength(System.Array)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Buffer.GetByte(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Buffer.SetByte(System.Array,System.Int32,System.Byte)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.Comparer`1.Compare(`0,`0)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.Comparer`1.System#Collections#IComparer#Compare(System.Object,System.Object)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.Dictionary`2.GetValueOrDefault(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf(`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.DateTimeFormat.FormatDigits(System.Text.StringBuilder,System.Int32,System.Int32,System.Boolean)">
    <parameter name="outputBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Decimal.SetBits(System.Int32[])">
    <parameter name="bits">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.AssertFilter.AssertFailure(System.String,System.String,System.Diagnostics.StackTrace)">
    <parameter name="location">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Contracts.Contract.Exists(System.Int32,System.Int32,System.Predicate{System.Int32})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Contracts.Contract.Exists``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Contracts.Contract.ForAll(System.Int32,System.Int32,System.Predicate{System.Int32})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Contracts.Contract.ForAll``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Enum.HasFlag(System.Enum)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="flag">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Enum.InternalFlagsFormat(System.RuntimeType,System.Object)">
    <parameter name="eT">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Enum.InternalFormat(System.RuntimeType,System.Object)">
    <parameter name="eT">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Enum.InternalGetNames(System.RuntimeType)">
    <parameter name="enumType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Enum.InternalGetValues(System.RuntimeType)">
    <parameter name="enumType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Enum.TryParseEnum(System.Type,System.String,System.Boolean,System.Enum.EnumResult@)">
    <parameter name="enumType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CompareInfo.#ctor(System.Globalization.CultureInfo)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CultureData.GetIndexOfNextTokenAfterSeconds(System.String,System.Int32,System.Boolean@)">
    <parameter name="time">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CultureData.GetNFIValues(System.Globalization.NumberFormatInfo)">
    <parameter name="nfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CultureData.IndexOfTimePart(System.String,System.Int32,System.String)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="timeParts">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CultureInfo.VerifyCultureName(System.String,System.Boolean)">
    <parameter name="cultureName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.JapaneseCalendar.CompareEraRanges(System.Globalization.EraInfo,System.Globalization.EraInfo)">
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="b">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.RegionInfo.#ctor(System.Globalization.CultureData)">
    <parameter name="cultureData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.TextInfo.#ctor(System.Globalization.CultureData)">
    <parameter name="cultureData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.TextInfo.CompareOrdinalIgnoreCase(System.String,System.String)">
    <parameter name="str1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="str2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.TextInfo.GetHashCodeOrdinalIgnoreCase(System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.TimeSpanFormat.FormatLiterals.Init(System.String,System.Boolean)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.TimeSpanParse.ParseExactLiteral(System.Globalization.TimeSpanParse.TimeSpanTokenizer@,System.Text.StringBuilder)">
    <parameter name="enquotedString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.TimeSpanParse.TimeSpanRawInfo.Init(System.Globalization.DateTimeFormatInfo)">
    <parameter name="dtfi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.TimeSpanParse.TryParseByFormat(System.String,System.String,System.Globalization.TimeSpanStyles,System.Globalization.TimeSpanParse.TimeSpanResult@)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Guid.HexsToChars(System.Char[],System.Int32,System.Int32,System.Int32,System.Boolean)">
    <parameter name="guidChars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Guid.Parse(System.String)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Guid.ParseExact(System.String,System.String)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Guid.TryParseGuidWithDashes(System.String,System.Guid.GuidResult@)">
    <parameter name="guidString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Guid.TryParseGuidWithHexPrefix(System.String,System.Guid.GuidResult@)">
    <parameter name="guidString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Guid.TryParseGuidWithNoStyle(System.String,System.Guid.GuidResult@)">
    <parameter name="guidString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.Delete(System.String,System.String,System.Boolean,System.Boolean)">
    <parameter name="fullPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="userPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.DeleteHelper(System.String,System.String,System.Boolean,System.Boolean)">
    <parameter name="fullPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="userPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.InternalCreateDirectory(System.String,System.String,System.Object)">
    <parameter name="fullPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.InternalCreateDirectory(System.String,System.String,System.Object,System.Boolean)">
    <parameter name="fullPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.InternalExists(System.String,System.Int32@)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.InternalMove(System.String,System.String,System.Boolean)">
    <parameter name="sourceDirName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="destDirName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.SearchData.#ctor(System.String,System.String,System.IO.SearchOption)">
    <parameter name="fullPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.UnsafeDelete(System.String,System.Boolean)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Directory.UnsafeMove(System.String,System.String)">
    <parameter name="sourceDirName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="destDirName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="contents">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="contents">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.InternalAppendAllText(System.String,System.String,System.Text.Encoding)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.InternalDelete(System.String,System.Boolean)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.InternalGetCreationTimeUtc(System.String,System.Boolean)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.InternalGetLastAccessTimeUtc(System.String,System.Boolean)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.InternalGetLastWriteTimeUtc(System.String,System.Boolean)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.InternalMove(System.String,System.String,System.Boolean)">
    <parameter name="sourceFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="destFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.InternalWriteAllBytes(System.String,System.Byte[],System.Boolean)">
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.InternalWriteAllLines(System.IO.TextWriter,System.Collections.Generic.IEnumerable{System.String})">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="contents">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.InternalWriteAllText(System.String,System.String,System.Text.Encoding,System.Boolean)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.ReadLines(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.ReadLines(System.String,System.Text.Encoding)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.UnsafeCopy(System.String,System.String,System.Boolean)">
    <parameter name="sourceFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="destFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.UnsafeDelete(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.UnsafeMove(System.String,System.String)">
    <parameter name="sourceFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="destFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.UnsafeWriteAllBytes(System.String,System.Byte[])">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.UnsafeWriteAllText(System.String,System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="contents">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="contents">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.Boolean)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.String,System.Boolean)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.String,System.Boolean,System.Boolean,System.Boolean)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.FileStream.Init(System.String,System.IO.FileMode,System.IO.FileAccess,System.Int32,System.Boolean,System.IO.FileShare,System.Int32,System.IO.FileOptions,Microsoft.Win32.Win32Native.SECURITY_ATTRIBUTES,System.String,System.Boolean,System.Boolean,System.Boolean)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.FileSystemEnumerableHelpers.IsDir(Microsoft.Win32.Win32Native.WIN32_FIND_DATA)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.FileSystemEnumerableHelpers.IsFile(Microsoft.Win32.Win32Native.WIN32_FIND_DATA)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.FileSystemEnumerableIterator`1.#ctor(System.String,System.String,System.String,System.IO.SearchOption,System.IO.SearchResultHandler{`0},System.Boolean)">
    <parameter name="originalUserPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="searchPattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.FileSystemEnumerableIterator`1.#ctor(System.String,System.String,System.String,System.String,System.IO.SearchOption,System.IO.SearchResultHandler{`0},System.Boolean)">
    <parameter name="fullPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="normalizedSearchPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.FileSystemEnumerableIterator`1.AddSearchableDirsToStack(System.IO.Directory.SearchData)">
    <parameter name="localSearchData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.FileSystemEnumerableIterator`1.DoDemand(System.String)">
    <parameter name="fullPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.FileSystemEnumerableIterator`1.GetFullSearchString(System.String,System.String)">
    <parameter name="fullPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="searchPattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Path.AddLongPathPrefix(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Path.CombineNoChecks(System.String,System.String)">
    <parameter name="path1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="path2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Path.IsRelative(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.SearchResultHandler`1.CreateObject(System.IO.SearchResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.SearchResultHandler`1.IsResultIncluded(System.IO.SearchResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Stream.CopyTo(System.IO.Stream)">
    <parameter name="destination">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)">
    <parameter name="destination">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Stream.InternalCopyTo(System.IO.Stream,System.Int32)">
    <parameter name="destination">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Stream.NullStream.Write(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ModuleHandle.ContainsPropertyMatchingHash(System.Reflection.RuntimeModule,System.Int32,System.UInt32)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ModuleHandle.GetMetadataImport(System.Reflection.RuntimeModule)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ModuleHandle.GetModuleType(System.Reflection.RuntimeModule)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ModuleHandle.GetPEKind(System.Reflection.RuntimeModule,System.Reflection.PortableExecutableKinds@,System.Reflection.ImageFileMachine@)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ModuleHandle.ResolveMethodHandleInternalCore(System.Reflection.RuntimeModule,System.Int32,System.IntPtr[],System.Int32,System.IntPtr[],System.Int32)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ModuleHandle.ResolveTypeHandleInternal(System.Reflection.RuntimeModule,System.Int32,System.RuntimeTypeHandle[],System.RuntimeTypeHandle[])">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ModuleHandle.ValidateModulePointer(System.Reflection.RuntimeModule)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.MulticastDelegate.RemoveImpl(System.Delegate)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.GetType(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.GetType(System.String,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.GetType(System.String,System.Boolean,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.Load(System.IO.Stream)">
    <parameter name="assemblyStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.Load(System.IO.Stream,System.IO.Stream)">
    <parameter name="assemblyStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Associates.AssignAssociates(System.Reflection.AssociateRecord*,System.Int32,System.RuntimeType,System.RuntimeType,System.Reflection.RuntimeMethodInfo@,System.Reflection.RuntimeMethodInfo@,System.Reflection.RuntimeMethodInfo@,System.Reflection.RuntimeMethodInfo@,System.Reflection.RuntimeMethodInfo@,System.Reflection.MethodInfo[]@,System.Boolean@,System.Reflection.BindingFlags@)">
    <parameter name="associates">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="declaringType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="reflectedType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttribute.AllowCriticalCustomAttributes(System.Reflection.MethodBase)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttribute.AllowCriticalCustomAttributes(System.Reflection.RuntimeFieldInfo)">
    <parameter name="field">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttribute.AllowCriticalCustomAttributes(System.Reflection.RuntimeParameterInfo)">
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttribute.AllowCriticalCustomAttributes(System.RuntimeType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttribute.FilterCustomAttributeRecord(System.Reflection.CustomAttributeRecord,System.Reflection.MetadataImport,System.Reflection.Assembly@,System.Reflection.RuntimeModule,System.Reflection.MetadataToken,System.RuntimeType,System.Boolean,System.Object[],System.Collections.IList,System.RuntimeType@,System.IRuntimeMethodInfo@,System.Boolean@,System.Boolean@)">
    <parameter name="decoratedModule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeFilterType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="lastAptcaOkAssembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="derivedAttributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttribute.GetCustomAttributes(System.Reflection.RuntimeAssembly,System.RuntimeType)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="caType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttribute.GetCustomAttributes(System.Reflection.RuntimeModule,System.RuntimeType)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttribute.GetCustomAttributes(System.Reflection.RuntimeParameterInfo,System.RuntimeType)">
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="caType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttribute.GetPropertyOrFieldData(System.Reflection.RuntimeModule,System.IntPtr@,System.IntPtr,System.String@,System.Boolean@,System.RuntimeType@,System.Object@)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttribute.IsCustomAttributeDefined(System.Reflection.RuntimeModule,System.Int32,System.RuntimeType)">
    <parameter name="decoratedModule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeFilterType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttribute.IsCustomAttributeDefined(System.Reflection.RuntimeModule,System.Int32,System.RuntimeType,System.Boolean)">
    <parameter name="decoratedModule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeFilterType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttribute.IsDefined(System.Reflection.RuntimeAssembly,System.RuntimeType)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="caType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttribute.IsDefined(System.Reflection.RuntimeModule,System.RuntimeType)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="caType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttribute.IsDefined(System.Reflection.RuntimeParameterInfo,System.RuntimeType)">
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="caType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeData.#ctor(System.Reflection.RuntimeModule,System.Reflection.CustomAttributeRecord)">
    <parameter name="scope">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeData.Init(System.Runtime.CompilerServices.TypeForwardedToAttribute)">
    <parameter name="forwardedTo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeData.InitCustomAttributeType(System.RuntimeType)">
    <parameter name="parameterType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeData.TypeToCustomAttributeEncoding(System.RuntimeType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeEncodedArgument.ParseAttributeArguments(System.Reflection.ConstArray,System.Reflection.CustomAttributeCtorParameter[]@,System.Reflection.CustomAttributeNamedParameter[]@,System.Reflection.RuntimeModule)">
    <parameter name="customAttributeCtorParameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="customAttributeNamedParameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="customAttributeModule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Reflection.CustomAttributeTypedArgument)">
    <parameter name="memberInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Reflection.RuntimeModule,System.Reflection.CustomAttributeEncodedArgument)">
    <parameter name="scope">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Type,System.Object)">
    <parameter name="argumentType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeTypedArgument.CanonicalizeValue(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilder.#ctor(System.AppDomain,System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Threading.StackCrawlMark@,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder},System.Security.SecurityContextSource)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ConstructorBuilder.#ctor(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type[],System.Reflection.Emit.ModuleBuilder,System.Reflection.Emit.TypeBuilder)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="mod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ConstructorBuilder.#ctor(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type[],System.Type[][],System.Type[][],System.Reflection.Emit.ModuleBuilder,System.Reflection.Emit.TypeBuilder)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="mod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.DynamicILGenerator.GetCallableMethod(System.Reflection.RuntimeModule,System.Reflection.Emit.DynamicMethod)">
    <parameter name="dm">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.DynamicILInfo.GetCallableMethod(System.Reflection.RuntimeModule,System.Reflection.Emit.DynamicMethod)">
    <parameter name="dm">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.EventBuilder.SetMethodSemantics(System.Reflection.Emit.MethodBuilder,System.Reflection.MethodSemanticsAttributes)">
    <parameter name="mdBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ILGenerator.GetMethodToken(System.Reflection.MethodBase,System.Type[],System.Boolean)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ILGenerator.PutInteger4InArray(System.Int32,System.Int32,System.Byte[])">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.MethodBuilder.#ctor(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][],System.Reflection.Emit.ModuleBuilder,System.Reflection.Emit.TypeBuilder,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="mod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.MethodBuilder.Init(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][],System.Reflection.Emit.ModuleBuilder,System.Reflection.Emit.TypeBuilder,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="mod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.GetStringConstant(System.String)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.PropertyBuilder.#ctor(System.Reflection.Emit.ModuleBuilder,System.String,System.Reflection.Emit.SignatureHelper,System.Reflection.PropertyAttributes,System.Type,System.Reflection.Emit.PropertyToken,System.Reflection.Emit.TypeBuilder)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.PropertyBuilder.SetMethodSemantics(System.Reflection.Emit.MethodBuilder,System.Reflection.MethodSemanticsAttributes)">
    <parameter name="mdBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.SignatureHelper.#ctor(System.Reflection.Module,System.Reflection.MdSigCallingConvention,System.Int32,System.Type,System.Type[],System.Type[])">
    <parameter name="returnType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.SignatureHelper.#ctor(System.Reflection.Module,System.Reflection.MdSigCallingConvention,System.Type,System.Type[],System.Type[])">
    <parameter name="returnType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.SymWrapperCore.SymWriter.System#Diagnostics#SymbolStore#ISymbolWriter#DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
    <parameter name="signature">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.SymWrapperCore.SymWriter.System#Diagnostics#SymbolStore#ISymbolWriter#DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])">
    <parameter name="document">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.SymWrapperCore.SymWriter.System#Diagnostics#SymbolStore#ISymbolWriter#SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.DefineCustomAttribute(System.Reflection.Emit.ModuleBuilder,System.Int32,System.Int32,System.Byte[],System.Boolean,System.Boolean)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.SetConstantValue(System.Reflection.Emit.ModuleBuilder,System.Int32,System.Type,System.Object)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="destType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.PseudoCustomAttribute.GetSecurityAttributes(System.Reflection.RuntimeModule,System.Int32,System.Boolean,System.Object[]@)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.PseudoCustomAttribute.IsDefined(System.Reflection.RuntimeAssembly,System.RuntimeType)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="caType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.PseudoCustomAttribute.IsDefined(System.Reflection.RuntimeConstructorInfo,System.RuntimeType)">
    <parameter name="ctor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="caType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.PseudoCustomAttribute.IsDefined(System.Reflection.RuntimeFieldInfo,System.RuntimeType)">
    <parameter name="field">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="caType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.PseudoCustomAttribute.IsDefined(System.Reflection.RuntimeMethodInfo,System.RuntimeType)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="caType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.PseudoCustomAttribute.IsDefined(System.Reflection.RuntimeParameterInfo,System.RuntimeType)">
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="caType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.PseudoCustomAttribute.IsDefined(System.RuntimeType,System.RuntimeType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="caType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.PseudoCustomAttribute.IsSecurityAttribute(System.RuntimeType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.RuntimeAssembly.InternalGetSatelliteAssembly(System.Globalization.CultureInfo,System.Version,System.Threading.StackCrawlMark@)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.RuntimeAssembly.InternalLoad(System.String,System.Security.Policy.Evidence,System.Threading.StackCrawlMark@,System.Boolean)">
    <parameter name="assemblyString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.RuntimeAssembly.InternalLoadAssemblyName(System.Reflection.AssemblyName,System.Security.Policy.Evidence,System.Threading.StackCrawlMark@,System.Boolean,System.Boolean)">
    <parameter name="assemblyRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.RuntimeAssembly.InternalLoadFrom(System.String,System.Security.Policy.Evidence,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm,System.Boolean,System.Boolean,System.Threading.StackCrawlMark@)">
    <parameter name="assemblyFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.RuntimeAssembly.InternalLoadFromStream(System.IO.Stream,System.IO.Stream,System.Threading.StackCrawlMark@)">
    <parameter name="assemblyStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.RuntimeModule.GetMethodInternal(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.RuntimeParameterInfo.#ctor(System.Reflection.RuntimeParameterInfo,System.Reflection.MemberInfo)">
    <parameter name="accessor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.RuntimeParameterInfo.#ctor(System.Reflection.RuntimeParameterInfo,System.Reflection.RuntimePropertyInfo)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="accessor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.RuntimeParameterInfo.GetReturnParameter(System.IRuntimeMethodInfo,System.Reflection.MemberInfo,System.Signature)">
    <parameter name="sig">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ManifestBasedResourceGroveler.CreateResourceSet(System.IO.Stream,System.Reflection.Assembly)">
    <parameter name="store">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ManifestBasedResourceGroveler.UltimateFallbackFixup(System.Globalization.CultureInfo)">
    <parameter name="lookForCulture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceManager.#ctor(System.String,System.Reflection.Assembly,System.Boolean)">
    <parameter name="baseName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceManager.AddResourceSet(System.Collections.Generic.Dictionary{System.String,System.Resources.ResourceSet},System.String,System.Resources.ResourceSet@)">
    <parameter name="localResourceSets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="cultureName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="rs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceManager.ResourceManagerMediator.#ctor(System.Resources.ResourceManager)">
    <parameter name="rm">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceManager.ResourceManagerMediator.TryLookingForSatellite(System.Globalization.CultureInfo)">
    <parameter name="lookForCulture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceManager.TryLookingForSatellite(System.Globalization.CultureInfo)">
    <parameter name="lookForCulture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceReader.#ctor(System.String)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceSet.#ctor(System.String)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceSet.GetCaseInsensitiveObjectInternal(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ResourceSet.GetObjectInternal(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Add(`0,`1)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable{`0,`1}.CreateValueCallback)">
    <parameter name="createValueCallback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Remove(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.CompilerServices.TypeForwardedFromAttribute.#ctor(System.String)">
    <parameter name="assemblyFullName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.InAttribute.IsDefined(System.Reflection.RuntimeParameterInfo)">
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Object)">
    <parameter name="structure">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.SizeOf(System.Type)">
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.MarshalAsAttribute.IsDefined(System.Reflection.RuntimeParameterInfo)">
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.OptionalAttribute.IsDefined(System.Reflection.RuntimeParameterInfo)">
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.OutAttribute.IsDefined(System.Reflection.RuntimeParameterInfo)">
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.Versioning.TargetFrameworkAttribute.#ctor(System.String)">
    <parameter name="frameworkName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeFieldHandle.GetApproxDeclaringType(System.IRuntimeFieldInfo)">
    <parameter name="field">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeMethodHandle.ConstructInstantiation(System.IRuntimeMethodInfo)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeMethodHandle.GetAttributes(System.IRuntimeMethodInfo)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeMethodHandle.GetDeclaringType(System.IRuntimeMethodInfo)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeMethodHandle.GetMethodInstantiationInternal(System.IRuntimeMethodInfo)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeMethodHandle.GetMethodInstantiationPublic(System.IRuntimeMethodInfo)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeMethodHandle.GetName(System.IRuntimeMethodInfo)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeMethodHandle.GetSlot(System.IRuntimeMethodInfo)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeMethodHandle.HasMethodInstantiation(System.IRuntimeMethodInfo)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeMethodHandle.InvokeMethodFast(System.IRuntimeMethodInfo,System.Object,System.Object[],System.Signature,System.Reflection.MethodAttributes,System.RuntimeType)">
    <parameter name="sig">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeMethodHandle.IsGenericMethodDefinition(System.IRuntimeMethodInfo)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeMethodHandle.IsVisibleFromModule(System.IRuntimeMethodInfo,System.Reflection.RuntimeModule)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeMethodHandle.PerformSecurityCheck(System.Object,System.IRuntimeMethodInfo,System.RuntimeType,System.UInt32)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.FilterApplyConstructorInfo(System.Reflection.RuntimeConstructorInfo,System.Reflection.BindingFlags,System.Reflection.CallingConventions,System.Type[])">
    <parameter name="constructor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.FilterApplyMethodBase(System.Reflection.MethodBase,System.Reflection.BindingFlags,System.Reflection.BindingFlags,System.Reflection.CallingConventions,System.Type[])">
    <parameter name="methodBase">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.FilterApplyMethodInfo(System.Reflection.RuntimeMethodInfo,System.Reflection.BindingFlags,System.Reflection.CallingConventions,System.Type[])">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.GetFieldInfo(System.IRuntimeFieldInfo)">
    <parameter name="fieldHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.GetFieldInfo(System.RuntimeType,System.IRuntimeFieldInfo)">
    <parameter name="field">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.GetMethodBase(System.IRuntimeMethodInfo)">
    <parameter name="methodHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.GetMethodBase(System.Reflection.RuntimeModule,System.Int32)">
    <parameter name="scope">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.GetMethodBase(System.RuntimeType,System.IRuntimeMethodInfo)">
    <parameter name="methodHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.GetType(System.String,System.Boolean,System.Boolean,System.Boolean,System.Threading.StackCrawlMark@)">
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.RuntimeTypeCache.MemberInfoCache`1.PopulateEvents(System.RuntimeType.RuntimeTypeCache.Filter,System.RuntimeType,System.Collections.Generic.Dictionary{System.String,System.Reflection.RuntimeEventInfo},System.Collections.Generic.List{System.Reflection.RuntimeEventInfo})">
    <parameter name="declaringType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="csEventInfos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.RuntimeTypeCache.MemberInfoCache`1.PopulateEvents(System.RuntimeType.RuntimeTypeCache.Filter,System.RuntimeType,System.Reflection.MetadataImport,System.Int32*,System.Int32,System.Collections.Generic.Dictionary{System.String,System.Reflection.RuntimeEventInfo},System.Collections.Generic.List{System.Reflection.RuntimeEventInfo})">
    <parameter name="declaringType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="tkEvents">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="csEventInfos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.RuntimeTypeCache.MemberInfoCache`1.PopulateLiteralFields(System.RuntimeType.RuntimeTypeCache.Filter,System.RuntimeType,System.Collections.Generic.List{System.Reflection.RuntimeFieldInfo})">
    <parameter name="declaringType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.RuntimeTypeCache.MemberInfoCache`1.PopulateProperties(System.RuntimeType.RuntimeTypeCache.Filter,System.RuntimeType,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.Reflection.RuntimePropertyInfo}},System.Boolean[],System.Collections.Generic.List{System.Reflection.RuntimePropertyInfo})">
    <parameter name="declaringType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="csPropertyInfos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.RuntimeTypeCache.MemberInfoCache`1.PopulateProperties(System.RuntimeType.RuntimeTypeCache.Filter,System.RuntimeType,System.Int32*,System.Int32,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.Reflection.RuntimePropertyInfo}},System.Boolean[],System.Collections.Generic.List{System.Reflection.RuntimePropertyInfo})">
    <parameter name="declaringType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="tkProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="csPropertyInfos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.RuntimeTypeCache.MemberInfoCache`1.PopulateRtFields(System.RuntimeType.RuntimeTypeCache.Filter,System.IntPtr*,System.Int32,System.RuntimeType,System.Collections.Generic.List{System.Reflection.RuntimeFieldInfo})">
    <parameter name="ppFieldHandles">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.RuntimeTypeCache.MemberInfoCache`1.PopulateRtFields(System.RuntimeType.RuntimeTypeCache.Filter,System.RuntimeType,System.Collections.Generic.List{System.Reflection.RuntimeFieldInfo})">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.SanityCheckGenericArguments(System.RuntimeType[],System.RuntimeType[])">
    <parameter name="genericArguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="genericParamters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.ThrowIfTypeNeverValidGenericArgument(System.RuntimeType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.TryChangeType(System.Object,System.Reflection.Binder,System.Globalization.CultureInfo,System.Boolean)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeType.ValidateGenericArguments(System.Reflection.MemberInfo,System.RuntimeType[],System.Exception)">
    <parameter name="genericArguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeTypeHandle.GetGenericTypeDefinition(System.RuntimeType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeTypeHandle.GetTypeByNameUsingCARules(System.String,System.Reflection.RuntimeModule)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scope">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeTypeHandle.IsVisibleFromModule(System.Reflection.RuntimeModule)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.SByte.Parse(System.String,System.Globalization.NumberStyles,System.Globalization.NumberFormatInfo)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Policy.ApplicationTrust.#ctor(System.Security.PermissionSet)">
    <parameter name="defaultGrantSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Policy.ApplicationTrust.#ctor(System.Security.PermissionSet,System.Collections.Generic.IEnumerable{System.Security.Policy.StrongName})">
    <parameter name="defaultGrantSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="fullTrustAssemblies">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Signature.#ctor(System.IRuntimeFieldInfo,System.RuntimeType)">
    <parameter name="fieldHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Signature.#ctor(System.IRuntimeMethodInfo,System.RuntimeType[],System.RuntimeType,System.Reflection.CallingConventions)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.Globalization.NumberFormatInfo)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.CompareOrdinalIgnoreCaseHelper(System.String,System.String)">
    <parameter name="strA">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="strB">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.LastIndexOf(System.String,System.Int32,System.Int32,System.StringComparison)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.StringComparer.Compare(System.Object,System.Object)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.StringComparer.Compare(System.String,System.String)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.StringComparer.Equals(System.String,System.String)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.StubHelpers.AsAnyMarshaler.ConvertArrayToNative(System.Object,System.Int32)">
    <parameter name="pManagedHome">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.StubHelpers.AsAnyMarshaler.ConvertLayoutToNative(System.Object,System.Int32)">
    <parameter name="pManagedHome">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.StubHelpers.AsAnyMarshaler.ConvertStringBuilderToNative(System.Text.StringBuilder,System.Int32)">
    <parameter name="pManagedHome">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.StubHelpers.AsAnyMarshaler.ConvertStringToNative(System.String,System.Int32)">
    <parameter name="pManagedHome">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.StubHelpers.AsAnyMarshaler.ConvertToManaged(System.Object,System.IntPtr)">
    <parameter name="pManagedHome">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.StubHelpers.StubHelpers.AddToCleanupList(System.StubHelpers.CleanupWorkList@,System.Runtime.InteropServices.SafeHandle)">
    <parameter name="handle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.StubHelpers.StubHelpers.SafeHandleAddRef(System.Runtime.InteropServices.SafeHandle,System.Boolean@)">
    <parameter name="pHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.StubHelpers.StubHelpers.SafeHandleRelease(System.Runtime.InteropServices.SafeHandle)">
    <parameter name="pHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Encoding.DefaultEncoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)">
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Encoding.GetByteCount(System.Char*,System.Int32)">
    <parameter name="chars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Encoding.GetByteCount(System.Char*,System.Int32,System.Text.EncoderNLS)">
    <parameter name="chars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
    <parameter name="chars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Text.EncoderNLS)">
    <parameter name="chars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Encoding.GetCharCount(System.Byte*,System.Int32)">
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Encoding.GetCharCount(System.Byte*,System.Int32,System.Text.DecoderNLS)">
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="chars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32,System.Text.DecoderNLS)">
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="chars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.StringBuilder.#ctor(System.Text.StringBuilder)">
    <parameter name="from">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.StringBuilder.AppendHelper(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.StringBuilder.Insert(System.Int32,System.Char*,System.Int32)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.StringBuilder.ReplaceAllInChunk(System.Int32[],System.Int32,System.Text.StringBuilder,System.Int32,System.String)">
    <parameter name="replacements">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="sourceChunk">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.StringBuilder.ReplaceInPlaceAtChunk(System.Text.StringBuilder@,System.Int32@,System.Char*,System.Int32)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.StringBuilder.StartsWith(System.Text.StringBuilder,System.Int32,System.Int32,System.String)">
    <parameter name="chunk">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.StringBuilder.ThreadSafeCopy(System.Char*,System.Char[],System.Int32,System.Int32)">
    <parameter name="sourcePtr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="destination">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.StringBuilder.ThreadSafeCopy(System.Char[],System.Int32,System.Char[],System.Int32,System.Int32)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="destination">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext,System.Threading.ContextCallback,System.Object,System.Boolean)">
    <parameter name="executionContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="callback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.QueueUserWorkItemCallback.WaitCallback_Context(System.Object)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.ThreadPoolWorkQueue.Dequeue(System.Threading.ThreadPoolWorkQueueThreadLocals,System.Threading.IThreadPoolWorkItem@,System.Boolean@)">
    <parameter name="tl">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.WaitHandle.InternalWaitOne(System.Runtime.InteropServices.SafeHandle,System.Int64,System.Boolean,System.Boolean)">
    <parameter name="waitableSafeHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.#ctor(System.Byte[],System.Boolean)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.ConvertUtcToTimeZone(System.Int64,System.TimeZoneInfo,System.Boolean@)">
    <parameter name="destinationTimeZone">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.GetIsDaylightSavings(System.DateTime,System.TimeZoneInfo.AdjustmentRule,System.Globalization.DaylightTime,System.TimeZoneInfoOptions)">
    <parameter name="daylightTime">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.GetUtcOffset(System.DateTime,System.TimeZoneInfo,System.TimeZoneInfoOptions)">
    <parameter name="zone">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.GetUtcOffsetFromUtc(System.DateTime,System.TimeZoneInfo,System.Boolean@,System.Boolean@)">
    <parameter name="zone">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.TZif_CreateFirstMultiYearRule(System.Collections.Generic.List{System.TimeZoneInfo.AdjustmentRule}@,System.TimeSpan,System.DateTime,System.Int32,System.Int32,System.Int32,System.DateTime[],System.TimeZoneInfo.TZifType[],System.Byte[],System.Boolean[],System.Boolean[])">
    <parameter name="rulesList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="transitionType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="typeOfLocalTime">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="StandardTime">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="GmtTime">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.TZif_CreateLastMultiYearRule(System.Collections.Generic.List{System.TimeZoneInfo.AdjustmentRule}@,System.TimeSpan,System.DateTime,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTime[],System.TimeZoneInfo.TZifType[],System.Byte[],System.Boolean[],System.Boolean[])">
    <parameter name="rulesList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="transitionType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="typeOfLocalTime">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="StandardTime">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="GmtTime">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.TZif_CreateMiddleMultiYearRules(System.Collections.Generic.List{System.TimeZoneInfo.AdjustmentRule}@,System.TimeSpan,System.DateTime)">
    <parameter name="rulesList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.TZif_GenerateAdjustmentRule(System.Int32@,System.Collections.Generic.List{System.TimeZoneInfo.AdjustmentRule}@,System.DateTime[],System.Byte[],System.TimeZoneInfo.TZifType[],System.Boolean[],System.Boolean[])">
    <parameter name="rulesList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="dts">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="typeOfLocalTime">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="transitionType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="StandardTime">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="GmtTime">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.TZif_GenerateAdjustmentRules(System.TimeZoneInfo.AdjustmentRule[]@,System.DateTime[],System.Byte[],System.TimeZoneInfo.TZifType[],System.Boolean[],System.Boolean[])">
    <parameter name="dts">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="typeOfLocalTime">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="transitionType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="StandardTime">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="GmtTime">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.TZif_ParseRaw(System.Byte[],System.TimeZoneInfo.TZifHead@,System.DateTime[]@,System.Byte[]@,System.TimeZoneInfo.TZifType[]@,System.String@,System.Boolean[]@,System.Boolean[]@)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.TZif_ToInt32(System.Byte[],System.Int32)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.TZifHead.#ctor(System.Byte[],System.Int32)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeZoneInfo.TZifType.#ctor(System.Byte[],System.Int32)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Tuple`1.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Tuple`1.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Tuple`1.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Tuple`1.System#ITuple#GetHashCode(System.Collections.IEqualityComparer)">
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Tuple`2.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Tuple`2.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Tuple`2.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Tuple`2.System#ITuple#GetHashCode(System.Collections.IEqualityComparer)">
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Tuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Tuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Tuple`3.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Tuple`3.System#ITuple#GetHashCode(System.Collections.IEqualityComparer)">
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Tuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Tuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Tuple`4.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Tuple`4.System#ITuple#GetHashCode(System.Collections.IEqualityComparer)">
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Tuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Tuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Tuple`5.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Tuple`5.System#ITuple#GetHashCode(System.Collections.IEqualityComparer)">
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Tuple`6.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Tuple`6.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Tuple`6.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Tuple`6.System#ITuple#GetHashCode(System.Collections.IEqualityComparer)">
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Tuple`7.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Tuple`7.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Tuple`7.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Tuple`7.System#ITuple#GetHashCode(System.Collections.IEqualityComparer)">
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Tuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)">
    <parameter name="rest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Tuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)">
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Tuple`8.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)">
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Tuple`8.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)">
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Tuple`8.System#ITuple#GetHashCode(System.Collections.IEqualityComparer)">
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Tuple`8.System#ITuple#ToString(System.Text.StringBuilder)">
    <parameter name="sb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Type.BinarySearch(System.Array,System.Object)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Type.IsEnumDefined(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UInt16.Parse(System.String,System.Globalization.NumberStyles,System.Globalization.NumberFormatInfo)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UInt32.Parse(System.String,System.Globalization.NumberStyles)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UInt32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UInt32.Parse(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IObserver`1.OnError(System.Exception)">
    <parameter name="error">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.AggregateException.#ctor(System.String,System.Exception)">
    <parameter name="innerException">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.AggregateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.AggregateException.#ctor(System.String,System.Collections.Generic.IList{System.Exception})">
    <parameter name="innerExceptions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.AggregateException.Handle(System.Func{System.Exception,System.Boolean})">
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.AppDomainSetup.ByteArraysAreDifferent(System.Byte[],System.Byte[])">
    <parameter name="A">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="B">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`0})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Int32,System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.CopyToEntries(System.Collections.DictionaryEntry[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.CopyToObjects(System.Object[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.CopyToPairs(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,`1)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.InitializeFromCollection(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd(`0,`1)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove(`0,`1@)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.GrowTable(System.Collections.Concurrent.ConcurrentDictionary{`0,`1}.Node[])">
    <parameter name="buckets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.DictionaryEnumerator.#ctor(System.Collections.Concurrent.ConcurrentDictionary{`0,`1})">
    <parameter name="dictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate(`0,`1,`1)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentQueue`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentQueue`1.InitializeFromCollection(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentStack`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentStack`1.InitializeFromCollection(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentStack`1.CopyRemovedItems(System.Collections.Concurrent.ConcurrentStack{`0}.Node,`0[],System.Int32,System.Int32)">
    <parameter name="head">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentStack`1.PushRange(`0[])">
    <parameter name="items">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentStack`1.PushCore(System.Collections.Concurrent.ConcurrentStack{`0}.Node,System.Collections.Concurrent.ConcurrentStack{`0}.Node)">
    <parameter name="tail">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentStack`1.TryPopRange(`0[])">
    <parameter name="items">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentStack`1.PushRange(`0[],System.Int32,System.Int32)">
    <parameter name="items">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentStack`1.TryPopRange(`0[],System.Int32,System.Int32)">
    <parameter name="items">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentStack`1.ValidatePushPopRangeInput(`0[],System.Int32,System.Int32)">
    <parameter name="items">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.SystemCollectionsConcurrent_ProducerConsumerCollectionDebugView`1.#ctor(System.Collections.Concurrent.IProducerConsumerCollection{`0})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Contracts.ContractException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CalendarData.FindUnescapedCharacter(System.String,System.Char)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CultureNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.DateTimeFormatInfo.#ctor(System.Globalization.CultureData,System.Globalization.Calendar)">
    <parameter name="cal">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="cultureData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.DateTimeFormatInfo.InitializeOverridableProperties(System.Globalization.CultureData,System.Int32)">
    <parameter name="cultureData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.JapaneseLunisolarCalendar.TrimEras(System.Globalization.EraInfo[])">
    <parameter name="baseEras">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.RegionInfo.SetName(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.TextInfo.AddNonLetter(System.Text.StringBuilder@,System.String@,System.Int32,System.Int32)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.TextInfo.AddTitlecaseLetter(System.Text.StringBuilder@,System.String@,System.Int32,System.Int32)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.FileSystemEnumerableIterator`1.#ctor(System.String,System.String,System.String,System.String,System.IO.SearchOption,System.IO.SearchResultHandler{`0})">
    <parameter name="fullPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="normalizedSearchPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.FileSystemEnumerableIterator`1.#ctor(System.String,System.String,System.String,System.IO.SearchOption,System.IO.SearchResultHandler{`0})">
    <parameter name="searchPattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="originalUserPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.Path.HasLongPathPrefix(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.UnmanagedMemoryAccessor.WriteArray``1(System.Int64,``0[],System.Int32,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.UnmanagedMemoryAccessor.ReadArray``1(System.Int64,``0[],System.Int32,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.UnmanagedMemoryAccessor.Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.UnmanagedMemoryStream.Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess,System.Boolean)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.MarshalByRefObject.CanCastToXmlTypeHelper(System.RuntimeType,System.MarshalByRefObject)">
    <parameter name="castType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ModuleHandle.GetAssembly(System.Reflection.RuntimeModule)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.ModuleHandle.ResolveFieldHandleInternal(System.Reflection.RuntimeModule,System.Int32,System.RuntimeTypeHandle[],System.RuntimeTypeHandle[])">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttribute.SpecialAllowCriticalAttributes(System.RuntimeType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilder.AddDeclarativeSecurity(System.Security.PermissionSet,System.Security.Permissions.SecurityAction)">
    <parameter name="pset">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.Reflection.RuntimeAssembly,System.Boolean,System.String,System.String,System.Threading.StackCrawlMark@,System.IntPtr@,System.Boolean,System.Int32@)">
    <parameter name="containingAssembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilder.DefineExportedTypeInMemory(System.Type,System.Int32,System.Int32)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.PseudoCustomAttribute.VerifyPseudoCustomAttribute(System.RuntimeType)">
    <parameter name="pca">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.RuntimeAssembly.CulturesEqual(System.Globalization.CultureInfo,System.Globalization.CultureInfo)">
    <parameter name="defCI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.RuntimeAssembly.DemandPermission(System.String,System.Boolean,System.Int32)">
    <parameter name="codeBase">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.RuntimeAssembly.IsSimplyNamed(System.Reflection.AssemblyName)">
    <parameter name="partialName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.RuntimeAssembly.LoadWithPartialNameInternal(System.String,System.Security.Policy.Evidence,System.Threading.StackCrawlMark@)">
    <parameter name="partialName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.RuntimeAssembly.LoadWithPartialNameHack(System.String,System.Boolean)">
    <parameter name="partialName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.RuntimeAssembly.LoadWithPartialNameInternal(System.Reflection.AssemblyName,System.Security.Policy.Evidence,System.Threading.StackCrawlMark@)">
    <parameter name="an">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ManifestBasedResourceGroveler.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Threading.StackCrawlMark@)">
    <parameter name="lookForCulture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.GetTypeInfoNameInternal(System.Runtime.InteropServices.ComTypes.ITypeInfo,System.Boolean@)">
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.GetTypeLibGuidForAssembly(System.Reflection.Assembly)">
    <parameter name="asm">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.GetTypeLibVersionForAssembly(System.Reflection.Assembly,System.Int32@,System.Int32@)">
    <parameter name="inputAssembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.GetTypeLibNameInternal(System.Runtime.InteropServices.ComTypes.ITypeLib)">
    <parameter name="typelib">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.SafeBuffer.ReadArray``1(System.UInt64,``0[],System.Int32,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.SafeBuffer.WriteArray``1(System.UInt64,``0[],System.Int32,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.StructLayoutAttribute.IsDefined(System.RuntimeType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.Serialization.SafeSerializationEventArgs.AddSerializedState(System.Runtime.Serialization.ISafeSerializationData)">
    <parameter name="serializedState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.RuntimeMethodHandle.IsTokenSecurityTransparent(System.Reflection.Module,System.Int32)">
    <parameter name="module">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Policy.Evidence.AddAssemblyEvidence``1(``0)">
    <parameter name="evidence">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Policy.Evidence.AddHostEvidence``1(``0)">
    <parameter name="evidence">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Policy.Evidence.GetEvidenceIndexType(System.Security.Policy.EvidenceBase)">
    <parameter name="evidence">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Policy.Evidence.RemoveType(System.Type)">
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.SecureString.InitializeSecureString(System.Char*,System.Int32)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.SerializableAttribute.IsDefined(System.RuntimeType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.CancellationToken.Register(System.Action)">
    <parameter name="callback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.CancellationToken.Register(System.Action,System.Boolean)">
    <parameter name="callback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.CancellationToken.Register(System.Action{System.Object},System.Object)">
    <parameter name="callback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.CancellationToken.Register(System.Action{System.Object},System.Object,System.Boolean,System.Boolean)">
    <parameter name="callback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.CancellationTokenSource.CancellationCallbackCoreWork_OnSyncContext(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.CancellationTokenSource.InternalRegister(System.Action{System.Object},System.Object,System.Threading.SynchronizationContext,System.Threading.ExecutionContext)">
    <parameter name="callback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.LazyInitializer.EnsureInitializedCore``1(``0@,System.Func{``0})">
    <parameter name="valueFactory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.LazyInitializer.EnsureInitializedCore``1(``0@,System.Boolean@,System.Object@,System.Func{``0})">
    <parameter name="valueFactory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.Int32)">
    <parameter name="condition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.SynchronizationContextTaskScheduler.PostCallback(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task`1.InvokeFuture(System.Object)">
    <parameter name="futureAsObj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.#ctor(System.Object,System.Object,System.Threading.Tasks.Task,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.InternalTaskOptions,System.Threading.Tasks.TaskScheduler)">
    <parameter name="action">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.AddExceptionsForCompletedTask(System.Collections.Generic.List{System.Exception}@,System.Threading.Tasks.Task)">
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.AddCompletionAction(System.Action{System.Threading.Tasks.Task})">
    <parameter name="action">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.ContinueWithCore(System.Threading.Tasks.Task,System.Threading.Tasks.TaskScheduler,System.Threading.Tasks.TaskContinuationOptions)">
    <parameter name="continuationTask">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.FastWaitAll(System.Threading.Tasks.Task[])">
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.RunSynchronously(System.Threading.Tasks.TaskScheduler)">
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.InternalRunSynchronously(System.Threading.Tasks.TaskScheduler)">
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.ProcessChildCompletion(System.Threading.Tasks.Task)">
    <parameter name="childTask">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.Start(System.Threading.Tasks.TaskScheduler)">
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.TaskCancelCallback(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.ExecuteSelfReplicating(System.Threading.Tasks.Task)">
    <parameter name="root">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.WaitAllSTAAnd64Aware(System.Threading.WaitHandle[],System.Int32,System.Threading.CancellationToken)">
    <parameter name="waitHandles">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.Int32,System.Threading.CancellationToken)">
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.Int32,System.Threading.CancellationToken)">
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Exception)">
    <parameter name="exception">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Exception)">
    <parameter name="exception">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Collections.Generic.IEnumerable{System.Exception})">
    <parameter name="exceptions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskExceptionHolder.Add(System.Object)">
    <parameter name="exceptionObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.FromAsyncImpl(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)">
    <parameter name="beginMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="endMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.FromAsyncImpl``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)">
    <parameter name="beginMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="endMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(System.IAsyncResult,System.Func{System.IAsyncResult,`0},System.Threading.Tasks.TaskCompletionSource{`0})">
    <parameter name="endMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="tcs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.FromAsyncImpl(System.IAsyncResult,System.Func{System.IAsyncResult,`0},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler,System.Threading.StackCrawlMark@)">
    <parameter name="asyncResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="endMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.FromAsyncImpl``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)">
    <parameter name="beginMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="endMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory`1.FromAsyncImpl``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)">
    <parameter name="beginMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="endMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.CommonCWAllLogic(System.Threading.Tasks.Task[])">
    <parameter name="tasksCopy">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskFactory.CommonCWAnyLogic(System.Threading.Tasks.Task[])">
    <parameter name="tasksCopy">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskScheduler.TryExecuteTask(System.Threading.Tasks.Task)">
    <parameter name="task">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskScheduler.RegisterTaskScheduler(System.Threading.Tasks.TaskScheduler)">
    <parameter name="ts">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskScheduler.UnregisterTaskScheduler(System.Threading.Tasks.TaskScheduler)">
    <parameter name="ts">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskScheduler.TryRunInline(System.Threading.Tasks.Task,System.Boolean,System.Object)">
    <parameter name="task">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskSchedulerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.ThreadLocal`1.#ctor(System.Func{`0})">
    <parameter name="valueFactory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TypeNameParser.ResolveAssembly(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Boolean,System.Threading.StackCrawlMark@)">
    <parameter name="asmName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UnitySerializationHolder.GetUnitySerializationInfo(System.Runtime.Serialization.SerializationInfo,System.Int32,System.String,System.Reflection.RuntimeAssembly)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.UnitySerializationHolder.GetUnitySerializationInfo(System.Runtime.Serialization.SerializationInfo,System.RuntimeType)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentStack`1.CopyTo(`0[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryAddInternal(`0,`1,System.Boolean,System.Boolean,`1@)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryRemoveInternal(`0,`1@,System.Boolean,`1)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.AggregateException.#ctor(System.String,System.Exception[])">
    <parameter name="innerExceptions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`0})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CultureData.IsResourcePresent(System.String)">
    <parameter name="resourceKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.InsufficientExecutionStackException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.InternalReplace(System.String,System.String,System.String,System.Boolean)">
    <parameter name="sourceFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="destinationFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.UnmanagedMemoryAccessor.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.UnmanagedMemoryAccessor.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.UnmanagedMemoryStream.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.UnmanagedMemoryStream.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.UnmanagedMemoryStream.#ctor(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess,System.Boolean)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.UnmanagedMemoryStream.Initialize(System.Runtime.InteropServices.SafeBuffer,System.Int64,System.Int64,System.IO.FileAccess)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.UnsafeLoadFrom(System.String)">
    <parameter name="assemblyFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.MethodBuilder.#ctor(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Reflection.Emit.ModuleBuilder,System.Reflection.Emit.TypeBuilder,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="mod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.ComEventsHelper.Combine(System.Object,System.Guid,System.Int32,System.Delegate)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.GetManagedTypeInfoNameInternal(System.Runtime.InteropServices.ComTypes.ITypeLib,System.Runtime.InteropServices.ComTypes.ITypeInfo)">
    <parameter name="typeLib">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Policy.Evidence.AddAssemblyEvidenceNoLock(System.Security.Policy.EvidenceBase,System.Type,System.Security.Policy.Evidence.DuplicateEvidenceAction)">
    <parameter name="evidence">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="evidenceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Policy.Evidence.AddAssemblyEvidence(System.Security.Policy.EvidenceBase,System.Type,System.Security.Policy.Evidence.DuplicateEvidenceAction)">
    <parameter name="evidence">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="evidenceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Policy.Evidence.AddHostEvidenceNoLock(System.Security.Policy.EvidenceBase,System.Type,System.Security.Policy.Evidence.DuplicateEvidenceAction)">
    <parameter name="evidence">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="evidenceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.CancellationToken.Register(System.Action{System.Object},System.Object,System.Boolean)">
    <parameter name="callback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.CancellationToken.InternalRegisterWithoutEC(System.Action{System.Object},System.Object)">
    <parameter name="callback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.LazyInitializer.EnsureInitialized``1(``0@,System.Func{``0})">
    <parameter name="valueFactory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.LazyInitializer.EnsureInitialized``1(``0@,System.Boolean@,System.Object@,System.Func{``0})">
    <parameter name="valueFactory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean})">
    <parameter name="condition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.TimeSpan)">
    <parameter name="condition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.#ctor(System.Action,System.Threading.CancellationToken)">
    <parameter name="action">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.#ctor(System.Action)">
    <parameter name="action">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.#ctor(System.Action{System.Object},System.Object)">
    <parameter name="action">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.#ctor(System.Action,System.Threading.Tasks.TaskCreationOptions)">
    <parameter name="action">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.#ctor(System.Action,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)">
    <parameter name="action">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.#ctor(System.Action{System.Object},System.Object,System.Threading.Tasks.TaskCreationOptions)">
    <parameter name="action">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.#ctor(System.Action{System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)">
    <parameter name="action">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.#ctor(System.Action{System.Object},System.Object,System.Threading.Tasks.Task,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.InternalTaskOptions,System.Threading.Tasks.TaskScheduler,System.Threading.StackCrawlMark@)">
    <parameter name="action">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.#ctor(System.Action{System.Object},System.Object,System.Threading.CancellationToken)">
    <parameter name="action">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.AddException(System.Object)">
    <parameter name="exceptionObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.HandleException(System.Exception)">
    <parameter name="unhandledException">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.Int32)">
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.Threading.CancellationToken)">
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.Int32)">
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.TimeSpan)">
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.Threading.CancellationToken)">
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.TimeSpan)">
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskCanceledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Collections.Generic.IEnumerable{System.Exception})">
    <parameter name="exceptions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskScheduler.TryRunInline(System.Threading.Tasks.Task,System.Boolean)">
    <parameter name="task">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TypeAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Activator.CreateInstanceFromInternal(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)">
    <parameter name="assemblyFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.AggregateException.#ctor(System.Exception[])">
    <parameter name="innerExceptions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IO.File.InternalWriteAllText(System.String,System.String,System.Text.Encoding)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Policy.Evidence.AddHostEvidence(System.Security.Policy.EvidenceBase,System.Type,System.Security.Policy.Evidence.DuplicateEvidenceAction)">
    <parameter name="evidence">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="evidenceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Policy.Evidence.GetAssemblyEvidenceNoLock(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task`1.TrySetException(System.Object)">
    <parameter name="exceptionObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[])">
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[])">
    <parameter name="tasks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Security.Policy.Evidence.GetAssemblyEvidence(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentQueue`1.CopyTo(`0[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.Concurrent.ConcurrentDictionary`2.Item(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.FileBasedResourceGroveler.HasNeutralResources(System.Globalization.CultureInfo,System.String)">
    <parameter name="defaultResName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#IDictionary{TKey@TValue}#Remove(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Globalization.CultureData.IsReplacementCultureName(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskScheduler.TryExecuteTaskInline(System.Threading.Tasks.Task,System.Boolean)">
    <parameter name="task">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.SynchronizationContextTaskScheduler.QueueTask(System.Threading.Tasks.Task)">
    <parameter name="task">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskScheduler.QueueTask(System.Threading.Tasks.Task)">
    <parameter name="task">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.QueueUserWorkItemCallback.System#Threading#IThreadPoolWorkItem#MarkAborted(System.Threading.ThreadAbortException)">
    <parameter name="tae">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Resources.ManifestBasedResourceGroveler.HasNeutralResources(System.Globalization.CultureInfo,System.String)">
    <parameter name="defaultResName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task.System#Threading#IThreadPoolWorkItem#MarkAborted(System.Threading.ThreadAbortException)">
    <parameter name="tae">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.System#Collections#Generic#IDictionary{TKey@TValue}#Add(`0,`1)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Object.Equals(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.IEquatable`1.Equals(`0)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.Generic.IComparer`1.Compare(`0,`0)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Buffer.BlockCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)">
    <parameter name="src">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="dst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Collections.IDictionary.get_Item(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Assembly,System.Type)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Module,System.Type)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Assembly)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Module)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo,System.Boolean)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Assembly,System.Type)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Module,System.Type)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.Byte[],System.Int32,System.IntPtr,System.Int32)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.Char[],System.Int32,System.IntPtr,System.Int32)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.Double[],System.Int32,System.IntPtr,System.Int32)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.Int16[],System.Int32,System.IntPtr,System.Int32)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.Int32[],System.Int32,System.IntPtr,System.Int32)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.Int64[],System.Int32,System.IntPtr,System.Int32)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Byte[],System.Int32,System.Int32)">
    <parameter name="destination">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Char[],System.Int32,System.Int32)">
    <parameter name="destination">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Double[],System.Int32,System.Int32)">
    <parameter name="destination">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int16[],System.Int32,System.Int32)">
    <parameter name="destination">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int32[],System.Int32,System.Int32)">
    <parameter name="destination">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Int64[],System.Int32,System.Int32)">
    <parameter name="destination">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.IntPtr[],System.Int32,System.Int32)">
    <parameter name="destination">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr,System.Single[],System.Int32,System.Int32)">
    <parameter name="destination">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.IntPtr[],System.Int32,System.IntPtr,System.Int32)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.Copy(System.Single[],System.Int32,System.IntPtr,System.Int32)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObject(System.Object,System.Type)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="T">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.GetComInterfaceForObjectInContext(System.Object,System.Type)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.GetIDispatchForObjectInContext(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="strA">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="strB">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="strA">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="strB">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.StringComparison)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="strA">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="strB">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.String.CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="strA">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="strB">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Monitor.IsEntered(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task`1.#ctor(System.Func{`0})">
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task`1.#ctor(System.Func{`0},System.Threading.CancellationToken)">
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task`1.#ctor(System.Func{`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)">
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task`1.#ctor(System.Func{`0},System.Threading.Tasks.TaskCreationOptions)">
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken)">
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)">
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)">
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Threading.Tasks.TaskScheduler.TryDequeue(System.Threading.Tasks.Task)">
    <parameter name="task">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.TimeSpan.Parse(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Version.TryParse(System.String,System.Version@)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Collections.ICollection.Count">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.ICollection.get_Count">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.ICollection.get_SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>0</argument>
    </attribute>
  </member>
  <member name="P:System.Collections.ICollection.IsSynchronized">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>0</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.ICollection.get_IsSynchronized">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>0</argument>
    </attribute>
  </member>
  <member name="P:System.Collections.Generic.ICollection`1.Count">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.ICollection`1.get_Count">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="P:System.Collections.Generic.ICollection`1.IsReadOnly">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>0</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.ICollection`1.get_IsReadOnly">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>0</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.ICollection`1.Clear">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>2</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.IList.get_Item(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.IList.set_Item(System.Int32,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>6</argument>
    </attribute>
  </member>
  <member name="P:System.Collections.IList.IsReadOnly">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>0</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.IList.get_IsReadOnly">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>0</argument>
    </attribute>
  </member>
  <member name="P:System.Collections.IList.IsFixedSize">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>0</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.IList.get_IsFixedSize">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>0</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.IList.Clear">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>2</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.IList.IndexOf(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.IList.Insert(System.Int32,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>6</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.IList.Remove(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>2</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.IList.RemoveAt(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>2</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.IList`1.get_Item(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.IList`1.set_Item(System.Int32,`0)">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>6</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>2</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.IDictionary.set_Item(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>6</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.IDictionary.get_Keys">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.IDictionary.get_Values">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="P:System.Collections.IDictionary.IsReadOnly">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>0</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.IDictionary.get_IsReadOnly">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>0</argument>
    </attribute>
  </member>
  <member name="P:System.Collections.IDictionary.IsFixedSize">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>0</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.IDictionary.get_IsFixedSize">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>0</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.IDictionary.Clear">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>2</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.IDictionary`2.get_Item(`0)">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.IDictionary`2.set_Item(`0,`1)">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>6</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.IDictionary`2.get_Keys">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.IDictionary`2.get_Values">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.Dictionary`2.get_Comparer">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>0</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.Dictionary`2.get_Keys">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.Dictionary`2.get_Values">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.Dictionary`2.ContainsValue(`1)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>6</argument>
    </attribute>
  </member>
  <member name="P:System.Collections.Generic.IReadOnlyCollection`1.Count">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.IReadOnlyCollection`1.get_Count">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.IReadOnlyDictionary`2.get_Item(`0)">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.IReadOnlyDictionary`2.get_Keys">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.IReadOnlyDictionary`2.get_Values">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="M:System.Collections.Generic.IReadOnlyList`1.get_Item(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
      <argument>1</argument>
    </attribute>
  </member>
  <member name="P:System.AppDomainSetup.AppDomainInitializerArguments">
  </member>
  <member name="P:System.AppDomainSetup.ApplicationBase">
  </member>
  <member name="P:System.AppDomainSetup.ApplicationName">
  </member>
  <member name="P:System.AppDomainSetup.CachePath">
  </member>
  <member name="P:System.AppDomainSetup.ConfigurationFile">
  </member>
  <member name="P:System.AppDomainSetup.DynamicBase">
  </member>
  <member name="P:System.AppDomainSetup.LicenseFile">
  </member>
  <member name="P:System.AppDomainSetup.PrivateBinPath">
  </member>
  <member name="P:System.AppDomainSetup.PrivateBinPathProbe">
  </member>
  <member name="P:System.AppDomainSetup.ShadowCopyDirectories">
  </member>
  <member name="P:System.AppDomainSetup.ShadowCopyFiles">
  </member>
  <member name="P:System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.Category">
  </member>
  <member name="P:System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.CheckId">
  </member>
  <member name="P:System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.Justification">
  </member>
  <member name="P:System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.MessageId">
  </member>
  <member name="P:System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.Scope">
  </member>
  <member name="P:System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.Target">
  </member>
  <member name="P:System.Globalization.DateTimeFormatInfo.NativeCalendarName">
  </member>
  <member name="P:System.IO.FileLoadException.FileName">
  </member>
  <member name="P:System.IO.FileNotFoundException.FileName">
  </member>
  <member name="P:System.IO.FileStream.Name">
  </member>
  <member name="F:System.IO.Path.AltDirectorySeparatorChar">
  </member>
  <member name="F:System.IO.Path.DirectorySeparatorChar">
  </member>
  <member name="F:System.IO.Path.InvalidPathChars">
  </member>
  <member name="F:System.IO.Path.PathSeparator">
  </member>
  <member name="F:System.IO.Path.VolumeSeparatorChar">
  </member>
  <member name="P:System.Reflection.AssemblyCompanyAttribute.Company">
  </member>
  <member name="P:System.Reflection.AssemblyConfigurationAttribute.Configuration">
  </member>
  <member name="P:System.Reflection.AssemblyCopyrightAttribute.Copyright">
  </member>
  <member name="P:System.Reflection.AssemblyCultureAttribute.Culture">
  </member>
  <member name="P:System.Reflection.AssemblyDefaultAliasAttribute.DefaultAlias">
  </member>
  <member name="P:System.Reflection.AssemblyDescriptionAttribute.Description">
  </member>
  <member name="P:System.Reflection.AssemblyFileVersionAttribute.Version">
  </member>
  <member name="P:System.Reflection.AssemblyInformationalVersionAttribute.InformationalVersion">
  </member>
  <member name="P:System.Reflection.AssemblyKeyFileAttribute.KeyFile">
  </member>
  <member name="P:System.Reflection.AssemblyKeyNameAttribute.KeyName">
  </member>
  <member name="P:System.Reflection.AssemblyName.CodeBase">
  </member>
  <member name="P:System.Reflection.AssemblyName.EscapedCodeBase">
  </member>
  <member name="P:System.Reflection.AssemblyName.Name">
  </member>
  <member name="P:System.Reflection.AssemblyProductAttribute.Product">
  </member>
  <member name="P:System.Reflection.AssemblyTitleAttribute.Title">
  </member>
  <member name="P:System.Reflection.AssemblyTrademarkAttribute.Trademark">
  </member>
  <member name="P:System.Reflection.AssemblyVersionAttribute.Version">
  </member>
  <member name="F:System.Reflection.ConstructorInfo.ConstructorName">
  </member>
  <member name="F:System.Reflection.ConstructorInfo.TypeConstructorName">
  </member>
  <member name="P:System.Reflection.DefaultMemberAttribute.MemberName">
  </member>
  <member name="P:System.Reflection.ManifestResourceInfo.FileName">
  </member>
  <member name="P:System.Reflection.ObfuscationAttribute.Feature">
  </member>
  <member name="P:System.Reflection.ParameterInfo.Name">
  </member>
  <member name="P:System.Reflection.TypeDelegator.AssemblyQualifiedName">
  </member>
  <member name="P:System.Reflection.TypeDelegator.FullName">
  </member>
  <member name="P:System.Reflection.TypeDelegator.Name">
  </member>
  <member name="P:System.Reflection.TypeDelegator.Namespace">
  </member>
  <member name="P:System.Reflection.Emit.AssemblyBuilder.CodeBase">
  </member>
  <member name="P:System.Reflection.Emit.AssemblyBuilder.Location">
  </member>
  <member name="P:System.Reflection.Emit.ConstructorBuilder.Name">
  </member>
  <member name="P:System.Reflection.Emit.DynamicMethod.Name">
  </member>
  <member name="P:System.Reflection.Emit.EnumBuilder.AssemblyQualifiedName">
  </member>
  <member name="P:System.Reflection.Emit.EnumBuilder.FullName">
  </member>
  <member name="P:System.Reflection.Emit.EnumBuilder.Name">
  </member>
  <member name="P:System.Reflection.Emit.EnumBuilder.Namespace">
  </member>
  <member name="P:System.Reflection.Emit.FieldBuilder.Name">
  </member>
  <member name="P:System.Reflection.Emit.GenericTypeParameterBuilder.AssemblyQualifiedName">
  </member>
  <member name="P:System.Reflection.Emit.GenericTypeParameterBuilder.FullName">
  </member>
  <member name="P:System.Reflection.Emit.GenericTypeParameterBuilder.Name">
  </member>
  <member name="P:System.Reflection.Emit.GenericTypeParameterBuilder.Namespace">
  </member>
  <member name="P:System.Reflection.Emit.MethodBuilder.Name">
  </member>
  <member name="P:System.Reflection.Emit.ParameterBuilder.Name">
  </member>
  <member name="P:System.Reflection.Emit.PropertyBuilder.Name">
  </member>
  <member name="P:System.Reflection.Emit.TypeBuilder.AssemblyQualifiedName">
  </member>
  <member name="P:System.Reflection.Emit.TypeBuilder.FullName">
  </member>
  <member name="P:System.Reflection.Emit.TypeBuilder.Name">
  </member>
  <member name="P:System.Reflection.Emit.TypeBuilder.Namespace">
  </member>
  <member name="P:System.Resources.MissingSatelliteAssemblyException.CultureName">
  </member>
  <member name="P:System.Resources.NeutralResourcesLanguageAttribute.CultureName">
  </member>
  <member name="P:System.Resources.SatelliteContractVersionAttribute.Version">
  </member>
  <member name="P:System.Runtime.CompilerServices.AccessedThroughPropertyAttribute.PropertyName">
  </member>
  <member name="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName">
  </member>
  <member name="P:System.Runtime.InteropServices.ComSourceInterfacesAttribute.Value">
  </member>
  <member name="P:System.Runtime.InteropServices.DllImportAttribute.Value">
  </member>
  <member name="F:System.Runtime.InteropServices.DllImportAttribute.EntryPoint">
  </member>
  <member name="P:System.Runtime.InteropServices.GuidAttribute.Value">
  </member>
  <member name="P:System.Runtime.InteropServices.ProgIdAttribute.Value">
  </member>
  <member name="P:System.Runtime.Serialization.SerializationEntry.Name">
  </member>
  <member name="P:System.Security.SecurityException.GrantedSet">
  </member>
  <member name="P:System.Security.SecurityException.PermissionState">
  </member>
  <member name="P:System.Security.SecurityException.RefusedSet">
  </member>
  <member name="P:System.Security.SecurityException.Url">
  </member>
  <member name="P:System.Text.EncodingInfo.DisplayName">
  </member>
  <member name="P:System.Text.EncodingInfo.Name">
  </member>
  <member name="M:System.ArgumentNullException.#ctor(System.String,System.Exception)">
    <parameter name="message">
    </parameter>
  </member>
  <member name="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Exception)">
    <parameter name="message">
    </parameter>
  </member>
  <member name="M:System.Type.GetEvent(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Type.GetField(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Type.GetInterface(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Type.GetInterface(System.String,System.Reflection.BindingFlags)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Type.GetNestedType(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Type.GetTypeFromCLSID(System.Guid,System.String)">
    <parameter name="server">
    </parameter>
  </member>
  <member name="M:System.Type.GetTypeFromCLSID(System.Guid,System.String,System.Boolean)">
    <parameter name="server">
    </parameter>
  </member>
  <member name="M:System.Type.GetTypeFromProgID(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="progID">
    </parameter>
  </member>
  <member name="M:System.Type.GetTypeFromProgID(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="server">
    </parameter>
  </member>
  <member name="M:System.Type.GetTypeFromProgID(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="progID">
    </parameter>
    <parameter name="server">
    </parameter>
  </member>
  <member name="M:System.Type.GetTypeFromProgID(System.String,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="progID">
    </parameter>
    <parameter name="server">
    </parameter>
  </member>
  <member name="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
    <parameter name="name">
    </parameter>
    <parameter name="namedParameters">
    </parameter>
  </member>
  <member name="M:System.AppDomainInitializer.BeginInvoke(System.String[],System.AsyncCallback,System.Object)">
    <parameter name="args">
    </parameter>
  </member>
  <member name="M:System.AppDomainInitializer.Invoke(System.String[])">
    <parameter name="args">
    </parameter>
  </member>
  <member name="M:System.Guid.ToString(System.String,System.IFormatProvider)">
    <parameter name="format">
    </parameter>
  </member>
  <member name="M:System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)">
    <parameter name="category">
    </parameter>
    <parameter name="message">
    </parameter>
  </member>
  <member name="M:System.Diagnostics.CodeAnalysis.SuppressMessageAttribute.#ctor(System.String,System.String)">
    <parameter name="category">
    </parameter>
    <parameter name="checkId">
    </parameter>
  </member>
  <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)">
    <parameter name="url">
    </parameter>
  </member>
  <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.OpenNamespace(System.String)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Diagnostics.SymbolStore.ISymbolWriter.UsingNamespace(System.String)">
    <parameter name="fullName">
    </parameter>
  </member>
  <member name="M:System.Globalization.CharUnicodeInfo.GetDecimalDigitValue(System.Char)">
    <parameter name="ch">
    </parameter>
  </member>
  <member name="M:System.Globalization.CharUnicodeInfo.GetDigitValue(System.Char)">
    <parameter name="ch">
    </parameter>
  </member>
  <member name="M:System.Globalization.CharUnicodeInfo.GetNumericValue(System.Char)">
    <parameter name="ch">
    </parameter>
  </member>
  <member name="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)">
    <parameter name="ch">
    </parameter>
  </member>
  <member name="M:System.IO.File.Exists(System.String)">
    <parameter name="path">
    </parameter>
  </member>
  <member name="M:System.IO.File.Move(System.String,System.String,System.Boolean)">
    <parameter name="sourceFileName">
    </parameter>
    <parameter name="destFileName">
    </parameter>
  </member>
  <member name="M:System.IO.FileLoadException.#ctor(System.String,System.String,System.Exception)">
    <parameter name="fileName">
    </parameter>
  </member>
  <member name="M:System.IO.FileLoadException.#ctor(System.String,System.String)">
    <parameter name="fileName">
    </parameter>
  </member>
  <member name="M:System.IO.FileNotFoundException.#ctor(System.String,System.String,System.Exception)">
    <parameter name="fileName">
    </parameter>
  </member>
  <member name="M:System.IO.FileNotFoundException.#ctor(System.String,System.String)">
    <parameter name="fileName">
    </parameter>
  </member>
  <member name="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
    <parameter name="path">
    </parameter>
  </member>
  <member name="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.Security.AccessControl.FileSystemRights,System.IO.FileShare,System.Int32,System.IO.FileOptions,System.Security.AccessControl.FileSecurity)">
    <parameter name="path">
    </parameter>
  </member>
  <member name="M:System.IO.FileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.FileOptions)">
    <parameter name="path">
    </parameter>
  </member>
  <member name="M:System.IO.Path.HasExtension(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="path">
    </parameter>
  </member>
  <member name="M:System.IO.Path.IsPathRooted(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="path">
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.CreateQualifiedName(System.String,System.String)">
    <parameter name="assemblyName">
    </parameter>
    <parameter name="typeName">
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.GetModule(System.String)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.LoadFile(System.String,System.Security.Policy.Evidence)">
    <parameter name="path">
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[])">
    <parameter name="moduleName">
    </parameter>
  </member>
  <member name="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[],System.Byte[])">
    <parameter name="moduleName">
    </parameter>
  </member>
  <member name="M:System.Reflection.AssemblyCompanyAttribute.#ctor(System.String)">
    <parameter name="company">
    </parameter>
  </member>
  <member name="M:System.Reflection.AssemblyConfigurationAttribute.#ctor(System.String)">
    <parameter name="configuration">
    </parameter>
  </member>
  <member name="M:System.Reflection.AssemblyCopyrightAttribute.#ctor(System.String)">
    <parameter name="copyright">
    </parameter>
  </member>
  <member name="M:System.Reflection.AssemblyCultureAttribute.#ctor(System.String)">
    <parameter name="culture">
    </parameter>
  </member>
  <member name="M:System.Reflection.AssemblyDefaultAliasAttribute.#ctor(System.String)">
    <parameter name="defaultAlias">
    </parameter>
  </member>
  <member name="M:System.Reflection.AssemblyDescriptionAttribute.#ctor(System.String)">
    <parameter name="description">
    </parameter>
  </member>
  <member name="M:System.Reflection.AssemblyInformationalVersionAttribute.#ctor(System.String)">
    <parameter name="informationalVersion">
    </parameter>
  </member>
  <member name="M:System.Reflection.AssemblyKeyFileAttribute.#ctor(System.String)">
    <parameter name="keyFile">
    </parameter>
  </member>
  <member name="M:System.Reflection.AssemblyKeyNameAttribute.#ctor(System.String)">
    <parameter name="keyName">
    </parameter>
  </member>
  <member name="M:System.Reflection.AssemblyProductAttribute.#ctor(System.String)">
    <parameter name="product">
    </parameter>
  </member>
  <member name="M:System.Reflection.AssemblyTitleAttribute.#ctor(System.String)">
    <parameter name="title">
    </parameter>
  </member>
  <member name="M:System.Reflection.AssemblyTrademarkAttribute.#ctor(System.String)">
    <parameter name="trademark">
    </parameter>
  </member>
  <member name="M:System.Reflection.AssemblyVersionAttribute.#ctor(System.String)">
    <parameter name="version">
    </parameter>
  </member>
  <member name="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
    <parameter name="name">
    </parameter>
    <parameter name="namedParameters">
    </parameter>
  </member>
  <member name="M:System.Reflection.TypeDelegator.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Reflection.TypeDelegator.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Reflection.TypeDelegator.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
    <parameter name="name">
    </parameter>
    <parameter name="namedParameters">
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource(System.String,System.String,System.String,System.String,System.String)">
    <parameter name="product">
    </parameter>
    <parameter name="productVersion">
    </parameter>
    <parameter name="company">
    </parameter>
    <parameter name="copyright">
    </parameter>
    <parameter name="trademark">
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilder.GetFile(System.String)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilder.GetManifestResourceInfo(System.String)">
    <parameter name="resourceName">
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilder.GetManifestResourceStream(System.String)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilder.GetManifestResourceStream(System.Type,System.String)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilder.Save(System.String,System.Reflection.PortableExecutableKinds,System.Reflection.ImageFileMachine)">
    <parameter name="assemblyFileName">
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.AssemblyBuilder.Save(System.String)">
    <parameter name="assemblyFileName">
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ConstructorBuilder.SetSymCustomAttribute(System.String,System.Byte[])">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.DynamicILInfo.GetTokenFor(System.String)">
    <parameter name="literal">
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.EnumBuilder.GetEvent(System.String,System.Reflection.BindingFlags)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.EnumBuilder.GetField(System.String,System.Reflection.BindingFlags)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.EnumBuilder.GetInterface(System.String,System.Boolean)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.EnumBuilder.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.EnumBuilder.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.EnumBuilder.GetNestedType(System.String,System.Reflection.BindingFlags)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.EnumBuilder.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
    <parameter name="name">
    </parameter>
    <parameter name="namedParameters">
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.GenericTypeParameterBuilder.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
    <parameter name="name">
    </parameter>
    <parameter name="namedParameters">
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.LocalBuilder.SetLocalSymInfo(System.String,System.Int32,System.Int32)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.LocalBuilder.SetLocalSymInfo(System.String)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.GetType(System.String,System.Boolean,System.Boolean)">
    <parameter name="className">
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.GetType(System.String,System.Boolean)">
    <parameter name="className">
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.GetType(System.String)">
    <parameter name="className">
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.ModuleBuilder.SetSymCustomAttribute(System.String,System.Byte[])">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.GetEvent(System.String,System.Reflection.BindingFlags)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.GetField(System.String,System.Reflection.BindingFlags)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.GetInterface(System.String,System.Boolean)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.GetNestedType(System.String,System.Reflection.BindingFlags)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Reflection.Emit.TypeBuilder.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Resources.MissingSatelliteAssemblyException.#ctor(System.String,System.String)">
    <parameter name="cultureName">
    </parameter>
  </member>
  <member name="M:System.Runtime.CompilerServices.AccessedThroughPropertyAttribute.#ctor(System.String)">
    <parameter name="propertyName">
    </parameter>
  </member>
  <member name="M:System.Runtime.CompilerServices.IndexerNameAttribute.#ctor(System.String)">
    <parameter name="indexerName">
    </parameter>
  </member>
  <member name="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)">
    <parameter name="assemblyName">
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.ComSourceInterfacesAttribute.#ctor(System.String)">
    <parameter name="sourceInterfaces">
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.GuidAttribute.#ctor(System.String)">
    <parameter name="guid">
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.BindToMoniker(System.String)">
    <parameter name="monikerName">
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Marshal.GetActiveObject(System.String)">
    <parameter name="progID">
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.ProgIdAttribute.#ctor(System.String)">
    <parameter name="progId">
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.GetObjectParam(System.String,System.Object@)">
    <parameter name="pszKey">
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.RegisterObjectParam(System.String,System.Object)">
    <parameter name="pszKey">
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.ComTypes.IBindCtx.RevokeObjectParam(System.String)">
    <parameter name="pszKey">
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.ComTypes.IEnumString.Next(System.Int32,System.String[],System.IntPtr)">
    <parameter name="rgelt">
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.GetDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String@)">
    <parameter name="ppszDisplayName">
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.ComTypes.IMoniker.ParseDisplayName(System.Runtime.InteropServices.ComTypes.IBindCtx,System.Runtime.InteropServices.ComTypes.IMoniker,System.String,System.Int32@,System.Runtime.InteropServices.ComTypes.IMoniker@)">
    <parameter name="ppszDisplayName">
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.ComTypes.IPersistFile.GetCurFile(System.String@)">
    <parameter name="ppszFileName">
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.ComTypes.IPersistFile.Load(System.String,System.Int32)">
    <parameter name="ppszFileName">
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.ComTypes.IPersistFile.Save(System.String,System.Boolean)">
    <parameter name="ppszFileName">
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.ComTypes.IPersistFile.SaveCompleted(System.String)">
    <parameter name="ppszFileName">
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.ComTypes.ITypeComp.Bind(System.String,System.Int32,System.Int16,System.Runtime.InteropServices.ComTypes.ITypeInfo@,System.Runtime.InteropServices.ComTypes.DESCKIND@,System.Runtime.InteropServices.ComTypes.BINDPTR@)">
    <parameter name="szName">
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.ComTypes.ITypeComp.BindType(System.String,System.Int32,System.Runtime.InteropServices.ComTypes.ITypeInfo@,System.Runtime.InteropServices.ComTypes.ITypeComp@)">
    <parameter name="szName">
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)">
    <parameter name="strName">
    </parameter>
    <parameter name="strDocString">
    </parameter>
    <parameter name="strHelpFile">
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetIDsOfNames(System.String[],System.Int32,System.Int32[])">
    <parameter name="rgszNames">
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetMops(System.Int32,System.String@)">
    <parameter name="pBstrMops">
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo.GetNames(System.Int32,System.String[],System.Int32,System.Int32@)">
    <parameter name="rgBstrNames">
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)">
    <parameter name="strName">
    </parameter>
    <parameter name="strDocString">
    </parameter>
    <parameter name="strHelpFile">
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetDocumentation2(System.Int32,System.String@,System.Int32@,System.String@)">
    <parameter name="pbstrHelpString">
    </parameter>
    <parameter name="pdwHelpStringContext">
    </parameter>
    <parameter name="pbstrHelpStringDll">
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetIDsOfNames(System.String[],System.Int32,System.Int32[])">
    <parameter name="rgszNames">
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetMops(System.Int32,System.String@)">
    <parameter name="pBstrMops">
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.ComTypes.ITypeInfo2.GetNames(System.Int32,System.String[],System.Int32,System.Int32@)">
    <parameter name="rgBstrNames">
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)">
    <parameter name="strName">
    </parameter>
    <parameter name="strDocString">
    </parameter>
    <parameter name="strHelpFile">
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetDocumentation(System.Int32,System.String@,System.String@,System.Int32@,System.String@)">
    <parameter name="strName">
    </parameter>
    <parameter name="strDocString">
    </parameter>
    <parameter name="strHelpFile">
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.GetDocumentation2(System.Int32,System.String@,System.Int32@,System.String@)">
    <parameter name="pbstrHelpString">
    </parameter>
    <parameter name="pdwHelpStringContext">
    </parameter>
    <parameter name="pbstrHelpStringDll">
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.ComTypes.ITypeLib2.IsName(System.String,System.Int32)">
    <parameter name="szNameBuf">
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Expando.IExpando.AddField(System.String)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Expando.IExpando.AddMethod(System.String,System.Delegate)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Runtime.InteropServices.Expando.IExpando.AddProperty(System.String)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Security.SecurityException.#ctor(System.String,System.Type,System.String)">
    <parameter name="state">
    </parameter>
  </member>
  <member name="M:System.Threading.EventWaitHandle.#ctor(System.Boolean,System.Threading.EventResetMode,System.String)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Threading.EventWaitHandle.#ctor(System.Boolean,System.Threading.EventResetMode,System.String,System.Boolean@)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Threading.EventWaitHandle.#ctor(System.Boolean,System.Threading.EventResetMode,System.String,System.Boolean@,System.Security.AccessControl.EventWaitHandleSecurity)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Threading.Mutex.#ctor(System.Boolean,System.String)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Threading.Mutex.#ctor(System.Boolean,System.String,System.Boolean@)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Threading.Mutex.#ctor(System.Boolean,System.String,System.Boolean@,System.Security.AccessControl.MutexSecurity)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="P:System.ArraySegment`1.Array">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Threading.CancellationToken.ThrowIfCancellationRequested">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Threading.CancellationToken.ThrowIfSourceDisposed">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTimeOffset.ToOffset(System.TimeSpan)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTimeOffset.Add(System.TimeSpan)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTimeOffset.AddDays(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTimeOffset.AddHours(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTimeOffset.AddMilliseconds(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTimeOffset.AddMinutes(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTimeOffset.AddMonths(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTimeOffset.AddSeconds(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTimeOffset.AddTicks(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTimeOffset.AddYears(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTimeOffset.EqualsExact(System.DateTimeOffset)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTimeOffset.Subtract(System.DateTimeOffset)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTimeOffset.Subtract(System.TimeSpan)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTimeOffset.ToFileTime">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTimeOffset.ToLocalTime">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTimeOffset.ToUniversalTime">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.StackFrame.GetMethod">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.StackFrame.GetNativeOffset">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.StackFrame.GetILOffset">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.StackFrame.GetFileLineNumber">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.StackFrame.GetFileColumnNumber">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.Debugger.IsLogging">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Object.Equals(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Object.GetHashCode">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Object.ReferenceEquals(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Attribute.Match(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.Contracts.Contract.Ensures(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.Contracts.Contract.Ensures(System.Boolean,System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.Contracts.Contract.EnsuresOnThrow``1(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.Contracts.Contract.EnsuresOnThrow``1(System.Boolean,System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.Contracts.Contract.ForAll``1(System.Predicate{``0})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.Contracts.Contract.Exists``1(System.Predicate{``0})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.Contracts.Contract.WritableBytes(System.UIntPtr)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.Contracts.Contract.WritableBytes(System.IntPtr)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.Contracts.Contract.WritableBytes(System.Void*)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.Contracts.Contract.ReadableBytes(System.UIntPtr)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.Contracts.Contract.ReadableBytes(System.IntPtr)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Diagnostics.Contracts.Contract.ReadableBytes(System.Void*)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Array.GetLowerBound(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Array.GetUpperBound(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Array.GetLongLength(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Array.GetLength(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Array.GetValue(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Array.GetValue(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Array.get_Rank">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Array.get_Length">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Array.get_LongLength">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Byte.TryParse(System.String,System.Byte@)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Byte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Byte@)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Char.GetNumericValue(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Char.IsSymbol(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Char.IsSurrogate(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Char.IsSeparator(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Char.IsNumber(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Char.IsControl(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Char.ToLower(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Char.ToUpper(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Char.IsLetterOrDigit(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Char.IsPunctuation(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Char.IsLower(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Char.IsUpper(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Char.IsWhiteSpace(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Char.IsLetter(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Char.IsDigit(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Collections.IEqualityComparer.Equals(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.op_GreaterThanOrEqual(System.Decimal,System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.op_GreaterThan(System.Decimal,System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.op_LessThanOrEqual(System.Decimal,System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.op_LessThan(System.Decimal,System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.op_Inequality(System.Decimal,System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.op_Equality(System.Decimal,System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.op_Modulus(System.Decimal,System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.op_Division(System.Decimal,System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.op_Multiply(System.Decimal,System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.op_Subtraction(System.Decimal,System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.op_Addition(System.Decimal,System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.op_Decrement(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.op_Increment(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.op_UnaryNegation(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.op_UnaryPlus(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Double">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Single">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt64">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Int64">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt32">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Int32">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.UInt16">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Int16">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Char">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.SByte">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.op_Explicit(System.Decimal)~System.Byte">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.op_Explicit(System.Double)~System.Decimal">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.op_Explicit(System.Single)~System.Decimal">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.op_Implicit(System.UInt64)~System.Decimal">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.op_Implicit(System.Int64)~System.Decimal">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.op_Implicit(System.UInt32)~System.Decimal">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.op_Implicit(System.Int32)~System.Decimal">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.op_Implicit(System.Char)~System.Decimal">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.op_Implicit(System.UInt16)~System.Decimal">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.op_Implicit(System.Int16)~System.Decimal">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.op_Implicit(System.SByte)~System.Decimal">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.op_Implicit(System.Byte)~System.Decimal">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.Truncate(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.ToSingle(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.ToUInt64(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.ToUInt32(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.ToUInt16(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.ToInt64(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.ToInt32(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.ToDouble(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.ToInt16(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.ToSByte(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.ToByte(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.Subtract(System.Decimal,System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.Round(System.Decimal,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.Negate(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.Multiply(System.Decimal,System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.Remainder(System.Decimal,System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.ToString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.Floor(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.Equals(System.Decimal,System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.Divide(System.Decimal,System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.Compare(System.Decimal,System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Decimal.Add(System.Decimal,System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Delegate.op_Inequality(System.Delegate,System.Delegate)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Delegate.op_Equality(System.Delegate,System.Delegate)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Delegate.Combine(System.Delegate[])">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Double.IsInfinity(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Double.IsNaN(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Double.IsNegativeInfinity(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Double.IsPositiveInfinity(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Double.TryParse(System.String,System.Double@)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Double.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Double@)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Int16.TryParse(System.String,System.Int16@)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Int16.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int16@)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.IntPtr.op_Inequality(System.IntPtr,System.IntPtr)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.IntPtr.op_Equality(System.IntPtr,System.IntPtr)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.IntPtr.op_Explicit(System.Int32)~System.IntPtr">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.IntPtr.op_Explicit(System.IntPtr)~System.Int64">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.IntPtr.op_Explicit(System.IntPtr)~System.Void*">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.IntPtr.op_Explicit(System.IntPtr)~System.Int32">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.IntPtr.op_Explicit(System.Int64)~System.IntPtr">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.IntPtr.op_Explicit(System.Void*)~System.IntPtr">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.IntPtr.ToInt32">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.IntPtr.ToInt64">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.IntPtr.ToPointer">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.IntPtr.ToString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Nullable`1.op_Explicit(System.Nullable{`0})~`0">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Nullable`1.op_Implicit(`0)~System.Nullable{`0}">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Nullable`1.GetValueOrDefault">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Nullable`1.GetValueOrDefault(`0)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="P:System.Nullable`1.HasValue">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.SByte.TryParse(System.String,System.SByte@)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.SByte.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.SByte@)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Security.SecureString.IsReadOnly">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Single.IsInfinity(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Single.IsNaN(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Single.IsNegativeInfinity(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Single.IsPositiveInfinity(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Single.TryParse(System.String,System.Single@)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.op_Inequality(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.op_Equality(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.LastIndexOf(System.Char,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.LastIndexOf(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.LastIndexOf(System.Char,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.IndexOf(System.Char,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.IndexOf(System.Char,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.IndexOf(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.CompareOrdinal(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.Compare(System.String,System.String,System.StringComparison)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.Compare(System.String,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.Compare(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.Equals(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.Equals(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.Equals(System.String,System.StringComparison)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.Equals(System.String,System.String,System.StringComparison)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.String.get_Length">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Type.Equals(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Type.IsAssignableFrom(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Type.IsInstanceOfType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Type.GetGenericTypeDefinition">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Type.GetArrayRank">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Type.GetTypeCode(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.UInt16.TryParse(System.String,System.UInt16@)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.UInt16.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt16@)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.UInt32.ToString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.UInt32.TryParse(System.String,System.UInt32@)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.UInt32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt32@)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.UInt64.TryParse(System.String,System.UInt64@)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.UInt64.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt64@)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.UIntPtr.op_Inequality(System.UIntPtr,System.UIntPtr)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.UIntPtr.op_Equality(System.UIntPtr,System.UIntPtr)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.UIntPtr.op_Explicit(System.UInt32)~System.UIntPtr">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.UInt32">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.UInt64">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.UIntPtr.op_Explicit(System.UIntPtr)~System.Void*">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.UIntPtr.op_Explicit(System.UInt64)~System.UIntPtr">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.UIntPtr.op_Explicit(System.Void*)~System.UIntPtr">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.UIntPtr.ToPointer">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.UIntPtr.ToUInt32">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.UIntPtr.ToUInt64">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.GetTypeCode(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.IsDBNull(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToBoolean(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToBoolean(System.Byte)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToBoolean(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToBoolean(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToBoolean(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToBoolean(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToBoolean(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToBoolean(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToBoolean(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToBoolean(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToBoolean(System.SByte)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToBoolean(System.Int16)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToBoolean(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToBoolean(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToBoolean(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToBoolean(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToBoolean(System.Object,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToBoolean(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToByte(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToByte(System.Byte)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToByte(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToByte(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToByte(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToByte(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToByte(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToByte(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToByte(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToByte(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToByte(System.SByte)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToByte(System.Int16)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToByte(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToByte(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToByte(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToByte(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToByte(System.Object,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToByte(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToByte(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToChar(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToChar(System.Byte)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToChar(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToChar(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToChar(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToChar(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToChar(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToChar(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToChar(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToChar(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToChar(System.SByte)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToChar(System.Int16)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToChar(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToChar(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToChar(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToChar(System.Object,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDateTime(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDateTime(System.Byte)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDateTime(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDateTime(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDateTime(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDateTime(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDateTime(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDateTime(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDateTime(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDateTime(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDateTime(System.SByte)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDateTime(System.Int16)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDateTime(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDateTime(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDateTime(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDateTime(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDateTime(System.Object,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDateTime(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDecimal(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDecimal(System.Byte)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDecimal(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDecimal(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDecimal(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDecimal(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDecimal(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDecimal(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDecimal(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDecimal(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDecimal(System.SByte)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDecimal(System.Int16)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDecimal(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDecimal(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDecimal(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDecimal(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDecimal(System.Object,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDecimal(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDouble(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDouble(System.Byte)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDouble(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDouble(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDouble(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDouble(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDouble(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDouble(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDouble(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDouble(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDouble(System.SByte)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDouble(System.Int16)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDouble(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDouble(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDouble(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDouble(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDouble(System.Object,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToDouble(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt16(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt16(System.Byte)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt16(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt16(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt16(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt16(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt16(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt16(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt16(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt16(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt16(System.SByte)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt16(System.Int16)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt16(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt16(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt16(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt16(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt16(System.Object,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt16(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt16(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt32(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt32(System.Byte)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt32(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt32(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt32(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt32(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt32(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt32(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt32(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt32(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt32(System.SByte)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt32(System.Int16)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt32(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt32(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt32(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt32(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt32(System.Object,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt32(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt32(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt64(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt64(System.Byte)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt64(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt64(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt64(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt64(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt64(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt64(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt64(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt64(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt64(System.SByte)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt64(System.Int16)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt64(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt64(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt64(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt64(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt64(System.Object,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt64(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToInt64(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToSByte(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToSByte(System.Byte)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToSByte(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToSByte(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToSByte(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToSByte(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToSByte(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToSByte(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToSByte(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToSByte(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToSByte(System.SByte)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToSByte(System.Int16)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToSByte(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToSByte(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToSByte(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToSByte(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToSByte(System.Object,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToSByte(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToSingle(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToSingle(System.Byte)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToSingle(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToSingle(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToSingle(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToSingle(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToSingle(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToSingle(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToSingle(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToSingle(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToSingle(System.SByte)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToSingle(System.Int16)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToSingle(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToSingle(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToSingle(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToSingle(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToSingle(System.Object,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToSingle(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt16(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt16(System.Byte)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt16(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt16(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt16(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt16(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt16(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt16(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt16(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt16(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt16(System.SByte)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt16(System.Int16)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt16(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt16(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt16(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt16(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt16(System.Object,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt16(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt16(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt32(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt32(System.Byte)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt32(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt32(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt32(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt32(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt32(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt32(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt32(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt32(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt32(System.SByte)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt32(System.Int16)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt32(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt32(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt32(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt32(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt32(System.Object,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt32(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt32(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt64(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt64(System.Byte)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt64(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt64(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt64(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt64(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt64(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt64(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt64(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt64(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt64(System.SByte)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt64(System.Int16)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt64(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt64(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt64(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt64(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt64(System.Object,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt64(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Convert.ToUInt64(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTime.ToBinary">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTime.ToLocalTime">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTime.ToFileTimeUtc">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTime.ToFileTime">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTime.ToOADate">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTime.Subtract(System.TimeSpan)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTime.Subtract(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTime.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTime.ParseExact(System.String,System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTime.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTime.Parse(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTime.Parse(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTime.IsLeapYear(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTime.FromOADate(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTime.FromFileTimeUtc(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTime.FromFileTime(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTime.Equals(System.DateTime,System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTime.DaysInMonth(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTime.Compare(System.DateTime,System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTime.AddYears(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTime.AddTicks(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTime.AddSeconds(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTime.AddMonths(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTime.AddMinutes(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTime.AddMilliseconds(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTime.AddHours(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTime.AddDays(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.DateTime.Add(System.TimeSpan)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.Calendar.ToFourDigitYear(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.Calendar.IsLeapYear(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.Calendar.IsLeapYear(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.Calendar.GetYear(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.Calendar.GetMonthsInYear(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.Calendar.GetMonth(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.Calendar.GetMinute(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.Calendar.GetMilliseconds(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.Calendar.GetHour(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.Calendar.GetEra(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.Calendar.GetDaysInYear(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.Calendar.GetDaysInYear(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.Calendar.GetDayOfYear(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.Calendar.GetDayOfWeek(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Globalization.Calendar.GetDayOfMonth(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Guid.op_Inequality(System.Guid,System.Guid)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Guid.op_Equality(System.Guid,System.Guid)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.IComparable.CompareTo(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.IComparable`1.CompareTo(`0)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.IConvertible.GetTypeCode">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.IConvertible.ToBoolean(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.IConvertible.ToByte(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.IConvertible.ToChar(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.IConvertible.ToDateTime(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.IConvertible.ToDecimal(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.IConvertible.ToDouble(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.IConvertible.ToInt16(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.IConvertible.ToInt32(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.IConvertible.ToInt64(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.IConvertible.ToSByte(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.IConvertible.ToSingle(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.IConvertible.ToUInt16(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.IConvertible.ToUInt32(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.IConvertible.ToUInt64(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Abs(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Abs(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Abs(System.SByte)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Abs(System.Int16)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Abs(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Abs(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Abs(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Acos(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Asin(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Atan(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Atan2(System.Double,System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.BigMul(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Ceiling(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Ceiling(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Cos(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Cosh(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.DivRem(System.Int32,System.Int32,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.DivRem(System.Int64,System.Int64,System.Int64@)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Exp(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Floor(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Floor(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.IEEERemainder(System.Double,System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Log(System.Double,System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Log(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Log10(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Max(System.Int16,System.Int16)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Max(System.Byte,System.Byte)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Max(System.SByte,System.SByte)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Max(System.Single,System.Single)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Max(System.UInt64,System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Max(System.Decimal,System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Max(System.Double,System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Max(System.Int64,System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Max(System.UInt16,System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Max(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Max(System.UInt32,System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Min(System.UInt16,System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Min(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Min(System.Byte,System.Byte)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Min(System.Int16,System.Int16)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Min(System.UInt32,System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Min(System.Single,System.Single)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Min(System.Double,System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Min(System.Int64,System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Min(System.UInt64,System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Min(System.Decimal,System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Min(System.SByte,System.SByte)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Pow(System.Double,System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Round(System.Double,System.MidpointRounding)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Round(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Round(System.Double,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Round(System.Double,System.Int32,System.MidpointRounding)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Round(System.Decimal,System.Int32,System.MidpointRounding)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Round(System.Decimal,System.MidpointRounding)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Round(System.Decimal,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Round(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Sign(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Sign(System.SByte)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Sign(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Sign(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Sign(System.Int16)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Sign(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Sign(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Sin(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Sinh(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Sqrt(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Tan(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Tanh(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Truncate(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Math.Truncate(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.MethodBase.GetMethodImplementationFlags">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Reflection.Module.IsResource">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.Encoding.GetMaxCharCount(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.Encoding.GetMaxByteCount(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.StringBuilder.Equals(System.Text.StringBuilder)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.TimeSpan.Compare(System.TimeSpan,System.TimeSpan)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.TimeSpan.Duration">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.TimeSpan.Equals(System.TimeSpan,System.TimeSpan)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.TimeSpan.FromDays(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.TimeSpan.FromHours(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.TimeSpan.FromMilliseconds(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.TimeSpan.FromMinutes(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.TimeSpan.FromSeconds(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.TimeSpan.FromTicks(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.TimeSpan.Add(System.TimeSpan)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.TimeSpan.Negate">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.TimeSpan.Subtract(System.TimeSpan)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.TimeSpan.TryParse(System.String,System.TimeSpan@)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Exception.GetType">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Enum.GetTypeCode">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Enum.TryParse``1(System.String,``0@)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Enum.TryParse``1(System.String,System.Boolean,``0@)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Type.IsEquivalentTo(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Threading.Interlocked.CompareExchange(System.Object@,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>location1:null=&gt;null;location1:notnull=&gt;notnull;</argument>
    </attribute>
  </member>
  <member name="M:System.Threading.Interlocked.CompareExchange``1(``0@,``0,``0)">
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>location1:null=&gt;null;location1:notnull=&gt;notnull;</argument>
    </attribute>
  </member>
  <member name="T:System.Lazy`1">
    <typeparameter name="T"> 
      <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseKindFlags)">
        <argument>8</argument>
      </attribute>
    </typeparameter>
  </member>
</assembly>
