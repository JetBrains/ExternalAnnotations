<?xml version="1.0" encoding="utf-8"?>
<assembly name="System.Linq">
  <member name="M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.CombinePredicates``1(System.Func{``0,System.Boolean},System.Func{``0,System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Enumerable.CombineSelectors``3(System.Func{``0,``1},System.Func{``1,``2})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="elementSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="elementSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="resultSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="resultSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="elementSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="resultSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="elementSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="resultSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="outer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="inner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="outerKeySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="innerKeySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="resultSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="outer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="inner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="outerKeySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="innerKeySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="resultSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Iterator`1.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Enumerable.Iterator`1.Select``1(System.Func{`0,``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Linq.Enumerable.Iterator`1.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Enumerable.Iterator`1.Where(System.Func{`0,System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="outer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="inner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="outerKeySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="innerKeySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="resultSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="outer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="inner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="outerKeySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="innerKeySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="resultSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="collectionSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="resultSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="collectionSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="resultSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.SkipLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.TakeLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="elementSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="elementSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="elementSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="elementSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="first">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="second">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="resultSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.EnumerableSorter`1.Sort(`0[],System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="elements">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Lookup`2.Create``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,`0},System.Func{``0,`1},System.Collections.Generic.IEqualityComparer{`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="elementSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Lookup`2.CreateForJoin(System.Collections.Generic.IEnumerable{`1},System.Func{`1,`0},System.Collections.Generic.IEqualityComparer{`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Lookup`2.GetGrouping(`0,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.OrderedEnumerable`1.System#Linq#IOrderedEnumerable{TElement}#CreateOrderedEnumerable``1(System.Func{`0,``0},System.Collections.Generic.IComparer{``0},System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Linq.SystemCore_EnumerableDebugView.Items">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Linq.SystemCore_EnumerableDebugView`1.Items">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Linq.Enumerable.Iterator`1.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Enumerable.Iterator`1.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Enumerable.Iterator`1.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Error.ArgumentArrayHasTooManyElements(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Error.ArgumentNotIEnumerableGeneric(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Error.ArgumentNotLambda(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Error.ArgumentNotSequence(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Error.ArgumentNotValid(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Error.ArgumentNull(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Error.ArgumentOutOfRange(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Error.IncompatibleElementTypes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Error.MoreThanOneElement">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Error.MoreThanOneMatch">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Error.NoArgumentMatchingMethodsInQueryable(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Error.NoElements">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Error.NoMatch">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Error.NoMethodOnType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Error.NoMethodOnTypeMatchingArguments(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Error.NoNameMatchingMethodsInQueryable(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Error.NotImplemented">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Error.NotSupported">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.GroupedEnumerable`3.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Lookup`2.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.OrderedEnumerable`1.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Linq.SystemCore_EnumerableDebugViewEmptyException.Empty">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="first">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="second">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="first">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="second">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="first">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="second">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="first">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="second">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="first">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="second">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Range(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Enumerable.Repeat``1(``0,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <return>
      <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
        <argument>6</argument>  <!-- CollectionAccessType.UpdatedContent -->
      </attribute>
    </return>
  </member>
  <member name="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <return>
      <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
        <argument>6</argument>  <!-- CollectionAccessType.UpdatedContent -->
      </attribute>
    </return>
  </member>
  <member name="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <return>
      <attribute ctor="M:JetBrains.Annotations.CollectionAccessAttribute.#ctor(JetBrains.Annotations.CollectionAccessType)">
        <argument>6</argument>  <!-- CollectionAccessType.UpdatedContent -->
      </attribute>
    </return>
  </member>
  <member name="M:System.Linq.Enumerable.TryGetNonEnumeratedCount``1(System.Collections.Generic.IEnumerable{``0},System.Int32@)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NoEnumerationAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="first">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="second">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="first">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="second">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.IOrderedEnumerable`1.CreateOrderedEnumerable``1(System.Func{`0,``0},System.Collections.Generic.IComparer{``0},System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Lookup`2.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Linq.ILookup`2.Item(`0)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Empty``1">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Buffer`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="func">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="func">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="func">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="resultSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.MaxBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.MaxBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.MinBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.MinBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.EnumerableSorter`1.ComputeKeys(`0[],System.Int32)">
    <parameter name="elements">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.EnumerableSorter`1.QuickSort(System.Int32[],System.Int32,System.Int32)">
    <parameter name="map">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.GroupedEnumerable`3.#ctor(System.Collections.Generic.IEnumerable{`0},System.Func{`0,`1},System.Func{`0,`2},System.Collections.Generic.IEqualityComparer{`1})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="elementSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Lookup`2.Contains(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Linq.Lookup`2.Item(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.OrderedEnumerable`2.#ctor(System.Collections.Generic.IEnumerable{`0},System.Func{`0,`1},System.Collections.Generic.IComparer{`1},System.Boolean)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Set`1.Add(`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Set`1.Contains(`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Set`1.Find(`0,System.Boolean)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Set`1.Remove(`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.SystemCore_EnumerableDebugView.#ctor(System.Collections.IEnumerable)">
    <parameter name="enumerable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.SystemCore_EnumerableDebugView`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="enumerable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="first">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="second">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="first">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
    <parameter name="second">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ILookup`2.Contains(`0)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>notnull=&gt;notnull;null=&gt;null</argument>
    </attribute>
  </member>
  <member name="P:System.Linq.IQueryable.ElementType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Linq.IQueryable.Expression">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Linq.IQueryable.Provider">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Linq.Expressions.BinaryExpression.Left">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Linq.Expressions.BinaryExpression.Right">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Linq.Expressions.ConditionalExpression.IfFalse">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Linq.Expressions.ConditionalExpression.IfTrue">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Linq.Expressions.ConditionalExpression.Test">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Linq.Expressions.ElementInit.AddMethod">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Linq.Expressions.ElementInit.Arguments">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Linq.Expressions.Expression.Type">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Add(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.AddChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.And(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.AndAlso(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="indexes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="indexes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.ArrayIndex(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="index">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.ArrayLength(System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Bind(System.Reflection.MemberInfo,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Bind(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="propertyAccessor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="expressions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="expressions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="expressions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Block(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="expressions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Block(System.Type,System.Linq.Expressions.Expression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="expressions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="expressions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Linq.Expressions.Expression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="expressions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Block(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="expressions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg3">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Block(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg3">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg4">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.String,System.Type[],System.Linq.Expressions.Expression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="methodName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Call(System.Type,System.String,System.Type[],System.Linq.Expressions.Expression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="methodName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Coalesce(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="test">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ifTrue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ifFalse">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Constant(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Constant(System.Object,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.ConvertChecked(System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Divide(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="addMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.ElementInit(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="addMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.ExclusiveOr(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Reflection.FieldInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="field">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="fieldName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.GetActionType(System.Type[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="typeArgs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.GetFuncType(System.Type[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="typeArgs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.GreaterThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.GreaterThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="body">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="body">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="body">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="delegateType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="body">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="delegateType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="body">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.LeftShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.LessThan(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.LessThanOrEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Linq.Expressions.ElementInit[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="initializers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="initializers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Linq.Expressions.ElementInit[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="propertyAccessor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="initializers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.ListBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="propertyAccessor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="initializers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="newExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="initializers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.ElementInit[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="newExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="initializers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.Expression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="newExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="initializers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="newExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="initializers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="newExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="initializers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.ListInit(System.Linq.Expressions.NewExpression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="newExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="initializers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.MakeBinary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.MakeMemberAccess(System.Linq.Expressions.Expression,System.Reflection.MemberInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="operand">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.MakeUnary(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Type,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="operand">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="bindings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MemberInfo,System.Linq.Expressions.MemberBinding[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="bindings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Linq.Expressions.MemberBinding[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="propertyAccessor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="bindings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.MemberBind(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="propertyAccessor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="bindings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="newExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="bindings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.MemberInit(System.Linq.Expressions.NewExpression,System.Linq.Expressions.MemberBinding[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="newExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="bindings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Modulo(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Multiply(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.MultiplyChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Negate(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.NegateChecked(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="constructor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.New(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="constructor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Linq.Expressions.Expression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="constructor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="constructor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.New(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Reflection.MemberInfo[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="constructor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Linq.Expressions.Expression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="bounds">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.NewArrayBounds(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="bounds">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Linq.Expressions.Expression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="initializers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.NewArrayInit(System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="initializers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Not(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.NotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Boolean,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Or(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.OrElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Parameter(System.Type,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Power(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="propertyAccessor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.PropertyOrField(System.Linq.Expressions.Expression,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="propertyOrFieldName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Quote(System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.RightShift(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Subtract(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.SubtractChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.TypeAs(System.Linq.Expressions.Expression,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.TypeIs(System.Linq.Expressions.Expression,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.UnaryPlus(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Variable(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Variable(System.Type,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Linq.Expressions.InvocationExpression.Arguments">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Linq.Expressions.InvocationExpression.Expression">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Linq.Expressions.LambdaExpression.Body">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Linq.Expressions.LambdaExpression.Parameters">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.LambdaExpression.Compile">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Linq.Expressions.ListInitExpression.Initializers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Linq.Expressions.ListInitExpression.NewExpression">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Linq.Expressions.MemberAssignment.Expression">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.MemberBinding.#ctor(System.Linq.Expressions.MemberBindingType,System.Reflection.MemberInfo)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Linq.Expressions.MemberBinding.Member">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Linq.Expressions.MemberExpression.Member">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Linq.Expressions.MemberInitExpression.Bindings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Linq.Expressions.MemberInitExpression.NewExpression">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Linq.Expressions.MemberListBinding.Initializers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Linq.Expressions.MemberMemberBinding.Bindings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Linq.Expressions.MethodCallExpression.Arguments">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Linq.Expressions.MethodCallExpression.Method">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Linq.Expressions.NewArrayExpression.Expressions">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Linq.Expressions.NewExpression.Arguments">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Linq.Expressions.NewExpression.Constructor">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Linq.Expressions.TypeBinaryExpression.Expression">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Linq.Expressions.TypeBinaryExpression.TypeOperand">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Linq.Expressions.UnaryExpression.Operand">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Cast``1(System.Linq.IQueryable)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Concat``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="source2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0},``0)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEqualityComparer{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="source2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="source2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="elementSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="resultSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="elementSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="elementSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="resultSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="resultSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="elementSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="resultSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="outer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="inner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="outerKeySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="innerKeySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="resultSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="outer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="inner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="outerKeySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="innerKeySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="resultSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="source2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="source2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="outer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="inner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="outerKeySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="innerKeySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="resultSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="outer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="inner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="outerKeySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="innerKeySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="resultSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.OfType``1(System.Linq.IQueryable)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ItemNotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Reverse``1(System.Linq.IQueryable{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,``1}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="collectionSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="resultSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="collectionSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="resultSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="source2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="source2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Skip``1(System.Linq.IQueryable{``0},System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Take``1(System.Linq.IQueryable{``0},System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="source2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="source2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.BinaryExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Linq.Expressions.BinaryExpression.Conversion">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Linq.Expressions.BinaryExpression.Method">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.BinaryExpression.Update(System.Linq.Expressions.Expression,System.Linq.Expressions.LambdaExpression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.BlockExpression.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression},System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="expressions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.CatchBlock.Update(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="body">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Compiler.LambdaCompiler.AddressOf(,System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Compiler.LambdaCompiler.AddressOfWriteBack">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.Compiler.LambdaCompiler.EmitGetIndexCall(,System.Type)">
    <parameter name="objectType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Compiler.LambdaCompiler.EmitInlinedInvoke(,System.Linq.Expressions.Compiler.LambdaCompiler.CompilationFlags)">
    <parameter name="invoke">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Compiler.LambdaCompiler.EmitSetIndexCall(,System.Type)">
    <parameter name="objectType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ConditionalExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.ConditionalExpression.Update(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="test">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ifTrue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ifFalse">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ConstantCheck.AnalyzeTypeIs(System.Linq.Expressions.UnaryExpression)">
    <parameter name="typeAs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ConstantExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.DebugInfoExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Linq.Expressions.DebugInfoExpression.Type">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.DebugViewWriter.VisitIndex">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.DebugViewWriter.VisitInvocation">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.DefaultExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="returnType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="binder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="binder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="returnType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="binder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="returnType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="binder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="returnType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="binder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg3">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="returnType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.DynamicExpression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="binder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="returnType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="delegateType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="binder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="delegateType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="binder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="delegateType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="binder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="delegateType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="binder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="delegateType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="binder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg3">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.DynamicExpression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="delegateType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="binder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Linq.Expressions.DynamicExpression.Type">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.DynamicExpression.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.ElementInit.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="arguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Accept(System.Linq.Expressions.ExpressionVisitor)">
    <parameter name="visitor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.AddAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.AddAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.AndAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.ArrayAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Assign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Break(System.Linq.Expressions.LabelTarget,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Call(System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg3">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Call(System.Reflection.MethodInfo,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg3">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg4">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="variable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="body">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Catch(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="variable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="body">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="body">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Catch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="body">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.ClearDebugInfo(System.Linq.Expressions.SymbolDocumentInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="document">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Condition(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="test">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ifTrue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ifFalse">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Continue(System.Linq.Expressions.LabelTarget,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.DebugInfo(System.Linq.Expressions.SymbolDocumentInfo,System.Int32,System.Int32,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="document">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Decrement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Default(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.DivideAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="binder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="returnType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="binder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="returnType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="binder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="returnType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="binder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="returnType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="returnType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="binder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg3">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Dynamic(System.Runtime.CompilerServices.CallSiteBinder,System.Type,System.Linq.Expressions.Expression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="returnType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="binder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Empty">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.ExclusiveOrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Field(System.Linq.Expressions.Expression,System.Type,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.GetDelegateType(System.Type[])">
    <parameter name="typeArgs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Goto(System.Linq.Expressions.LabelTarget,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.IfThen(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="test">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ifTrue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.IfThenElse(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="test">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ifTrue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ifFalse">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Increment(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.IsFalse(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.IsTrue(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Label">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Label(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Label(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Label(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Label(System.Type,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})">
    <parameter name="body">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])">
    <parameter name="body">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})">
    <parameter name="body">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})">
    <parameter name="body">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Lambda(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})">
    <parameter name="body">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})">
    <parameter name="delegateType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])">
    <parameter name="delegateType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})">
    <parameter name="delegateType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Lambda(System.Type,System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})">
    <parameter name="delegateType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.Boolean,System.Linq.Expressions.ParameterExpression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Lambda``1(System.Linq.Expressions.Expression,System.String,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.LeftShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="body">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="body">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Loop(System.Linq.Expressions.Expression,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="body">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.MakeCatchBlock(System.Type,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="body">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="delegateType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="binder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="delegateType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="binder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="delegateType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="binder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="delegateType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="binder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg3">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="delegateType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="binder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arg2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.MakeDynamic(System.Type,System.Runtime.CompilerServices.CallSiteBinder,System.Linq.Expressions.Expression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="delegateType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="binder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.MakeGoto(System.Linq.Expressions.GotoExpressionKind,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.MakeIndex(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.MakeTry(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="body">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.ModuloAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.MultiplyAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.MultiplyAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.OnesComplement(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.OrAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Parameter(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.PostDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.PostIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.PowerAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.PreDecrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.PreIncrementAssign(System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="indexer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Reflection.PropertyInfo,System.Linq.Expressions.Expression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="indexer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.String,System.Linq.Expressions.Expression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression,System.Type,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Reduce">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.Expression.ReduceAndCheck">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.Expression.ReduceExtensions">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.Expression.ReferenceEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.ReferenceNotEqual(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Rethrow">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Rethrow(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Return(System.Linq.Expressions.LabelTarget,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.RightShiftAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.RuntimeVariables(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="variables">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.RuntimeVariables(System.Linq.Expressions.ParameterExpression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="variables">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.SubtractAssign(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.SubtractAssignChecked(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.LambdaExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="switchValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="switchValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="switchValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Switch(System.Linq.Expressions.Expression,System.Linq.Expressions.SwitchCase[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="switchValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="switchValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Switch(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.MethodInfo,System.Linq.Expressions.SwitchCase[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="switchValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="body">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.SwitchCase(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="body">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.SymbolDocument(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.SymbolDocument(System.String,System.Guid,System.Guid,System.Guid)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Throw(System.Linq.Expressions.Expression,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.TryCatch(System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="body">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.TryCatchFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.CatchBlock[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="body">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.TryFault(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="body">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.TryFinally(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="body">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.TryGetActionType(System.Type[],System.Type@)">
    <parameter name="typeArgs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.TryGetFuncType(System.Type[],System.Type@)">
    <parameter name="typeArgs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.TypeEqual(System.Linq.Expressions.Expression,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.Unbox(System.Linq.Expressions.Expression,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
    <parameter name="visitor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression`1.Accept(System.Linq.Expressions.ExpressionVisitor)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.Expression`1.Compile(System.Runtime.CompilerServices.DebugInfoGenerator)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="debugInfoGenerator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression`1.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionStringBuilder.VisitIndex">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionStringBuilder.VisitInvocation">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="nodes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="nodes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="elementVisitor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>node:null=&gt;null</argument>
    </attribute>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="nodes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitBlock(System.Linq.Expressions.BlockExpression)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitGoto(System.Linq.Expressions.GotoExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitIndex">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitInvocation">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitLabel(System.Linq.Expressions.LabelExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitLoop(System.Linq.Expressions.LoopExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitTry(System.Linq.Expressions.TryExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.GotoExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.GotoExpression.Update(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.IndexExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="object">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.InvocationExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.InvocationExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.LabelExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.LabelExpression.Update(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.LambdaExpression.Compile(System.Runtime.CompilerServices.DebugInfoGenerator)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="debugInfoGenerator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.LambdaExpression.CompileToMethod(System.Reflection.Emit.MethodBuilder)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.LambdaExpression.CompileToMethod(System.Reflection.Emit.MethodBuilder,System.Runtime.CompilerServices.DebugInfoGenerator)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="debugInfoGenerator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ListInitExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.ListInitExpression.Update(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="newExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="initializers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.LoopExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.LoopExpression.Update(System.Linq.Expressions.LabelTarget,System.Linq.Expressions.LabelTarget,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="body">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.MemberAssignment.Update(System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.MemberExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.MemberExpression.Update(System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.MemberInitExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.MemberInitExpression.Update(System.Linq.Expressions.NewExpression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="newExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="bindings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.MemberListBinding.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ElementInit})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="initializers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.MemberMemberBinding.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="bindings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Linq.Expressions.MethodCallExpression.Object">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.MethodCallExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.NewArrayExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.NewArrayExpression.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="expressions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.NewExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.NewExpression.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.ParameterExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Linq.Expressions.ParameterExpression.Type">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.RuntimeVariablesExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Linq.Expressions.RuntimeVariablesExpression.Type">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.RuntimeVariablesExpression.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="variables">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.SwitchCase.Update(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="body">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.SwitchExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.SwitchExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.SwitchCase},System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="switchValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.TryExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.TryExpression.Update(System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.CatchBlock},System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="body">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.TypeBinaryExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Linq.Expressions.TypeBinaryExpression.Type">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.TypeBinaryExpression.Update(System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.UnaryExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Expressions.UnaryExpression.Update(System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="operand">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.IQueryProvider.CreateQuery(System.Linq.Expressions.Expression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.IQueryProvider.CreateQuery``1(System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.IQueryProvider.Execute(System.Linq.Expressions.Expression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.IQueryProvider.Execute``1(System.Linq.Expressions.Expression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.OrderedParallelQuery`1.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Parallel.AsynchronousChannelMergeEnumerator`1.#ctor(System.Linq.Parallel.QueryTaskGroupState,System.Linq.Parallel.AsynchronousChannel{`0}[])">
    <parameter name="channels">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Parallel.AsynchronousChannelMergeEnumerator`1.WaitAny(System.Threading.ManualResetEventSlim[])">
    <parameter name="events">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Parallel.MergeExecutor`1.MakeAsynchronousChannels(System.Int32,System.Linq.ParallelMergeOptions,System.Threading.CancellationToken)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Parallel.OrderPreservingPipeliningMergeHelper`1.#ctor(System.Linq.Parallel.PartitionedStream{`0,System.Int32},System.Threading.Tasks.TaskScheduler,System.Linq.Parallel.CancellationState,System.Boolean,System.Int32)">
    <parameter name="partitions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Parallel.OrderPreservingPipeliningMergeHelper`1.OrderedPipeliningMergeEnumerator.#ctor(System.Linq.Parallel.OrderPreservingPipeliningMergeHelper{`0})">
    <parameter name="mergeHelper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Parallel.OrderPreservingPipeliningMergeHelper`1.System#Linq#Parallel#IMergeHelper{TOutput}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Parallel.OrderPreservingPipeliningSpoolingTask`1.Spool(System.Linq.Parallel.QueryTaskGroupState,System.Linq.Parallel.PartitionedStream{`0,System.Int32},System.Boolean[],System.Boolean[],System.Boolean[],System.Collections.Generic.Queue{System.Linq.Parallel.Pair{System.Int32,`0}}[],System.Object[],System.Threading.Tasks.TaskScheduler,System.Boolean)">
    <parameter name="groupState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="partitions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="buffers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="bufferLocks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="taskScheduler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Parallel.Set`1.Add(`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Parallel.Set`1.Contains(`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Parallel.Set`1.Find(`0,System.Boolean)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Parallel.Set`1.Remove(`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Aggregate``1(System.Linq.ParallelQuery{``0},System.Func{``0,``0,``0})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="func">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Aggregate``2(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="func">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="updateAccumulatorFunc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="combineAccumulatorsFunc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="resultSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="func">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="resultSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Aggregate``3(System.Linq.ParallelQuery{``0},System.Func{``1},System.Func{``1,``0,``1},System.Func{``1,``1,``1},System.Func{``1,``2})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="seedFactory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="updateAccumulatorFunc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="combineAccumulatorsFunc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="resultSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.All``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Any``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.AsEnumerable``1(System.Linq.ParallelQuery{``0})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.AsOrdered(System.Linq.ParallelQuery)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.AsOrdered``1(System.Linq.ParallelQuery{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Concurrent.Partitioner{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.AsSequential``1(System.Linq.ParallelQuery{``0})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.AsUnordered``1(System.Linq.ParallelQuery{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Decimal})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Double})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int32})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Int64})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Average(System.Linq.ParallelQuery{System.Single})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Average``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Cast``1(System.Linq.ParallelQuery)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Concat``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="first">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="second">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Contains``1(System.Linq.ParallelQuery{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Count``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.DefaultIfEmpty``1(System.Linq.ParallelQuery{``0},``0)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Distinct``1(System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.ElementAt``1(System.Linq.ParallelQuery{``0},System.Int32)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.ElementAtOrDefault``1(System.Linq.ParallelQuery{``0},System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="second">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="first">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Except``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="first">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="second">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.First``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.FirstOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.ForAll``1(System.Linq.ParallelQuery{``0},System.Action{``0})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="action">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.GroupBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="elementSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="elementSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="resultSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.GroupBy``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="resultSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})">
    <parameter name="elementSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="resultSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.GroupBy``4(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="elementSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="resultSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="innerKeySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="resultSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="outerKeySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="outer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="inner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.GroupJoin``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="outer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="inner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="outerKeySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="innerKeySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="resultSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="second">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="first">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Intersect``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="first">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="second">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="innerKeySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="outerKeySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="resultSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="outer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="inner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Join``4(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="outer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="inner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="outerKeySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="innerKeySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="resultSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Last``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.LastOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.LongCount``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Decimal})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Double})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int32})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Int64})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Max(System.Linq.ParallelQuery{System.Single})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Max``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Max``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Decimal})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Double})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int32})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Int64})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Min(System.Linq.ParallelQuery{System.Single})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Min``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Min``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.OfType``1(System.Linq.ParallelQuery)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.OrderBy``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.OrderByDescending``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Range(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Repeat``1(``0,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Reverse``1(System.Linq.ParallelQuery{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Select``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.SelectMany``2(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="collectionSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="resultSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.SelectMany``3(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="collectionSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="resultSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
    <parameter name="first">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="second">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.SequenceEqual``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
    <parameter name="first">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="second">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Single``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.SingleOrDefault``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Skip``1(System.Linq.ParallelQuery{``0},System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.SkipWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Decimal})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Double})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int32})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Int64})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Decimal}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Double}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int32}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Int64}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Nullable{System.Single}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Sum(System.Linq.ParallelQuery{System.Single})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Decimal})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Double})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int64})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Decimal}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Double}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int32}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Int64}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Nullable{System.Single}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Sum``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Single})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Take``1(System.Linq.ParallelQuery{``0},System.Int32)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.TakeWhile``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.ThenBy``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.ThenByDescending``2(System.Linq.OrderedParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.ToArray``1(System.Linq.ParallelQuery{``0})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.ToDictionary``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="elementSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.ToDictionary``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="elementSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.ToList``1(System.Linq.ParallelQuery{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.ToLookup``2(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2})">
    <parameter name="elementSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.ToLookup``3(System.Linq.ParallelQuery{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="elementSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="first">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="second">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Union``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``0},System.Collections.Generic.IEqualityComparer{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="first">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="second">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Where``1(System.Linq.ParallelQuery{``0},System.Func{``0,System.Int32,System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.WithCancellation``1(System.Linq.ParallelQuery{``0},System.Threading.CancellationToken)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.WithDegreeOfParallelism``1(System.Linq.ParallelQuery{``0},System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.WithExecutionMode``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelExecutionMode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.WithMergeOptions``1(System.Linq.ParallelQuery{``0},System.Linq.ParallelMergeOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelEnumerable.Zip``3(System.Linq.ParallelQuery{``0},System.Linq.ParallelQuery{``1},System.Func{``0,``1,``2})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="first">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="second">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="resultSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.ParallelQuery`1.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.Queryable.Aggregate``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``0,``0}})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="func">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Aggregate``2(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="func">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0},``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="func">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.All``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Decimal})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Double})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int32})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int64})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Decimal}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Double}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int32}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int64}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Single}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Average(System.Linq.IQueryable{System.Single})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.ElementAt``1(System.Linq.IQueryable{``0},System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.ElementAtOrDefault``1(System.Linq.IQueryable{``0},System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.First``1(System.Linq.IQueryable{``0})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.First``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Max``1(System.Linq.IQueryable{``0})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Max``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Min``1(System.Linq.IQueryable{``0})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Min``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Decimal})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Double})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int32})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int64})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Decimal}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Double}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int32}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int64}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Single}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Single})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}})">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Queryable.Zip``3(System.Linq.IQueryable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="source1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="source2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="resultSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Expression`1.Compile">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Linq.CLookup`2.System#Linq#ILookup{TKey@TElement}#Contains(`0)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
</assembly>
