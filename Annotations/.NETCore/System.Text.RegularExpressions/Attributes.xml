<?xml version="1.0" encoding="utf-8"?>
<assembly name="System.Text.RegularExpressions">
  <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String)">
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.RegexPatternAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions)">
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.RegexPatternAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.RegexPatternAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.RegexPatternAttribute.#ctor"/>
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.RegexPatternAttribute.#ctor"/>
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.RegexPatternAttribute.#ctor"/>
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.RegexPatternAttribute.#ctor"/>
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.RegexPatternAttribute.#ctor"/>
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.RegexPatternAttribute.#ctor"/>
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.RegexPatternAttribute.#ctor"/>
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.RegexPatternAttribute.#ctor"/>
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.RegexPatternAttribute.#ctor"/>
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.RegexPatternAttribute.#ctor"/>
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="replacement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.RegexPatternAttribute.#ctor"/>
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="replacement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.RegexPatternAttribute.#ctor"/>
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="replacement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.RegexPatternAttribute.#ctor"/>
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="evaluator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.RegexPatternAttribute.#ctor"/>
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="evaluator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.RegexPatternAttribute.#ctor"/>
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="evaluator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.RegexPatternAttribute.#ctor"/>
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.RegexPatternAttribute.#ctor"/>
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
      <attribute ctor="M:JetBrains.Annotations.RegexPatternAttribute.#ctor"/>
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Match(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.IsMatch(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.GroupNumberFromName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.GroupNameFromNumber(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.GetGroupNumbers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.GetGroupNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Unescape(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Escape(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Capture.GetLeftSubstring">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.Capture.GetRightSubstring">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.CaptureCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Text.RegularExpressions.CaptureCollection.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.ExclusiveReference.Get">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.GroupCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Text.RegularExpressions.GroupCollection.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.Match.GroupToStringImpl(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.Match.LastGroupToStringImpl">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.MatchCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Text.RegularExpressions.MatchCollection.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Compile(System.Text.RegularExpressions.RegexCode,System.Text.RegularExpressions.RegexOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Run(System.Boolean,System.Int32,System.String,System.Int32,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCharClass.ConvertOldStringsToClass(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="set">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="category">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCharClass.NegateCategory(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCharClass.Parse(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="charClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCharClass.ParseRecursive(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="charClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCharClass.ToStringClass">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCode.MakeException(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexFC.GetFirstChars(System.Globalization.CultureInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexFCD.FirstChars(System.Text.RegularExpressions.RegexTree)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexNode.MakeQuantifier(System.Boolean,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexNode.ReduceGroup">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexNode.ReduceRep">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexNode.ReduceSet">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexNode.ReverseLeft">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexParser.Escape(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexParser.MakeException(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexParser.Parse(System.String,System.Text.RegularExpressions.RegexOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexParser.ParseProperty">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexParser.ParseReplacement(System.String,System.Collections.Hashtable,System.Int32,System.Collections.Hashtable,System.Text.RegularExpressions.RegexOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexParser.ScanBackslash">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexParser.ScanBasicBackslash">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexParser.ScanCapname">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexParser.ScanCharClass(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexParser.ScanCharClass(System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexParser.ScanDollar">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexParser.ScanGroupOpen">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexParser.Unescape(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexReplacement.Replace(System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="evaluator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="regex">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexReplacement.Replace(System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="regex">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexReplacement.Replacement(System.Text.RegularExpressions.Match)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexReplacement.Split(System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="regex">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexRunner.Scan(System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="regex">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexRunner.TidyMatch(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexRunnerFactory.CreateInstance">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexWriter.MakeException(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexWriter.RegexCodeFromRegexTree(System.Text.RegularExpressions.RegexTree)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexWriter.Write(System.Text.RegularExpressions.RegexTree)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Text.RegularExpressions.Capture.Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Text.RegularExpressions.CaptureCollection.Item(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Text.RegularExpressions.Group.Captures">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.Group.Synchronized(System.Text.RegularExpressions.Group)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="inner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Text.RegularExpressions.Match.Empty">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Text.RegularExpressions.Match.Groups">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.Match.NextMatch">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.Match.Result(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="replacement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Match.Synchronized(System.Text.RegularExpressions.Match)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="inner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Match(System.String,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Matches(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="replacement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="evaluator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="replacement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="evaluator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="replacement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Replace(System.String,System.Text.RegularExpressions.MatchEvaluator,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="evaluator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Split(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.Split(System.String,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexParser.ParseReplacement(System.String,System.Collections.Generic.Dictionary{System.Int32,System.Int32},System.Int32,System.Collections.Generic.Dictionary{System.String,System.Int32},System.Text.RegularExpressions.RegexOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Text.RegularExpressions.CaptureCollection.#ctor(System.Text.RegularExpressions.Group)">
    <parameter name="group">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.CaptureCollection.CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.ExclusiveReference.Release(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Group.#ctor(System.String,System.Int32[],System.Int32)">
    <parameter name="caps">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)">
    <parameter name="groupname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.MatchCollection.#ctor(System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32,System.Int32)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.Boolean)">
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName)">
    <parameter name="regexinfos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="assemblyname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[])">
    <parameter name="regexinfos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="assemblyname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.CompileToAssembly(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[],System.String)">
    <parameter name="assemblyname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="regexinfos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="resourceFile">
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.CompileToAssemblyInternal(System.Text.RegularExpressions.RegexCompilationInfo[],System.Reflection.AssemblyName,System.Reflection.Emit.CustomAttributeBuilder[],System.String,System.Security.Policy.Evidence)">
    <parameter name="regexinfos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="assemblyname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.Regex.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="si">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexBoyerMoore.#ctor(System.String,System.Boolean,System.Boolean,System.Globalization.CultureInfo)">
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexBoyerMoore.IsMatch(System.String,System.Int32,System.Int32,System.Int32)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexBoyerMoore.MatchPattern(System.String,System.Int32)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexBoyerMoore.Scan(System.String,System.Int32,System.Int32,System.Int32)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCharClass.AddCategoryFromName(System.String,System.Boolean,System.Boolean,System.String)">
    <parameter name="categoryName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCharClass.AddCharClass(System.Text.RegularExpressions.RegexCharClass)">
    <parameter name="cc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCharClass.AddLowercase(System.Globalization.CultureInfo)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCharClass.AddSet(System.String)">
    <parameter name="set">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCharClass.CharInCategory(System.Char,System.String,System.Int32,System.Int32,System.Int32)">
    <parameter name="set">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCharClass.CharInCategoryGroup(System.Char,System.Globalization.UnicodeCategory,System.String,System.Int32@)">
    <parameter name="category">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCharClass.CharInClass(System.Char,System.String)">
    <parameter name="set">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCharClass.CharInClassInternal(System.Char,System.String,System.Int32,System.Int32,System.Int32)">
    <parameter name="set">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCharClass.CharInClassRecursive(System.Char,System.String,System.Int32)">
    <parameter name="set">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCharClass.IsEmpty(System.String)">
    <parameter name="charClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCharClass.IsMergeable(System.String)">
    <parameter name="charClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCharClass.IsSingleton(System.String)">
    <parameter name="set">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCharClass.IsSingletonInverse(System.String)">
    <parameter name="set">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCharClass.IsSubtraction(System.String)">
    <parameter name="charClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCharClass.SingleRangeComparer.Compare(System.Object,System.Object)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCharClass.SingletonChar(System.String)">
    <parameter name="set">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCode.#ctor(System.Int32[],System.Collections.ArrayList,System.Int32,System.Collections.Hashtable,System.Int32,System.Text.RegularExpressions.RegexBoyerMoore,System.Text.RegularExpressions.RegexPrefix,System.Int32,System.Boolean)">
    <parameter name="stringlist">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexFC.#ctor(System.String,System.Boolean,System.Boolean)">
    <parameter name="charClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexFC.AddFC(System.Text.RegularExpressions.RegexFC,System.Boolean)">
    <parameter name="fc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexFCD.Anchors(System.Text.RegularExpressions.RegexTree)">
    <parameter name="tree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexFCD.CalculateFC(System.Int32,System.Text.RegularExpressions.RegexNode,System.Int32)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexFCD.Prefix(System.Text.RegularExpressions.RegexTree)">
    <parameter name="tree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexFCD.RegexFCFromRegexTree(System.Text.RegularExpressions.RegexTree)">
    <parameter name="tree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexInterpreter.#ctor(System.Text.RegularExpressions.RegexCode,System.Globalization.CultureInfo)">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexInterpreter.Stringmatch(System.String)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexNode.AddChild(System.Text.RegularExpressions.RegexNode)">
    <parameter name="newChild">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexParser.CaptureSlotFromName(System.String)">
    <parameter name="capname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexParser.IsCaptureName(System.String)">
    <parameter name="capname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexParser.NoteCaptureName(System.String,System.Int32)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexReplacement.#ctor(System.String,System.Text.RegularExpressions.RegexNode,System.Collections.Hashtable)">
    <parameter name="concat">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexReplacement.ReplacementImpl(System.Text.StringBuilder,System.Text.RegularExpressions.Match)">
    <parameter name="sb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexRunner.CharInClass(System.Char,System.String)">
    <parameter name="charClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexRunner.CharInSet(System.Char,System.String,System.String)">
    <parameter name="set">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="category">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexWriter.EmitFragment(System.Int32,System.Text.RegularExpressions.RegexNode,System.Int32)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCharClass.SingleRangeComparer.Compare(System.Text.RegularExpressions.RegexCharClass.SingleRange,System.Text.RegularExpressions.RegexCharClass.SingleRange)">
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexCode.#ctor(System.Int32[],System.Collections.Generic.List{System.String},System.Int32,System.Collections.Generic.Dictionary{System.Int32,System.Int32},System.Int32,System.Text.RegularExpressions.RegexBoyerMoore,System.Text.RegularExpressions.RegexPrefix,System.Int32,System.Boolean)">
    <parameter name="stringlist">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexReplacement.#ctor(System.String,System.Text.RegularExpressions.RegexNode,System.Collections.Generic.Dictionary{System.Int32,System.Int32})">
    <parameter name="concat">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexReplacement.ReplacementImplRTL(System.Collections.Generic.List{System.String},System.Text.RegularExpressions.Match)">
    <parameter name="al">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexMatchTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Text.RegularExpressions.RegexRunner.Scan(System.Text.RegularExpressions.Regex,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.TimeSpan)">
    <parameter name="regex">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
</assembly>
