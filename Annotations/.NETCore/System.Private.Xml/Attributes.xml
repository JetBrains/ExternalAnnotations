<?xml version="1.0" encoding="utf-8"?>
<assembly name="System.Private.Xml">
  <member name="M:System.Xml.Xsl.IlGen.GenerateHelper.DeclareLocal(System.String,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.Xsl.IlGen.OptimizerPatterns.Name">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.OptimizerPatterns.Write(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="nd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.Xsl.IlGen.StaticDataManager.Collations">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Xsl.IlGen.StaticDataManager.EarlyBound">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Xsl.IlGen.StaticDataManager.GlobalNames">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Xsl.IlGen.StaticDataManager.NameFilters">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Xsl.IlGen.StaticDataManager.Names">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Xsl.IlGen.StaticDataManager.PrefixMappingsList">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Xsl.IlGen.StaticDataManager.XmlTypes">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Xsl.IlGen.StorageDescriptor.CurrentLocation">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Xsl.IlGen.StorageDescriptor.GlobalLocation">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Xsl.IlGen.StorageDescriptor.LocalLocation">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.UniqueList`1.ToArray">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILAnnotation.Write(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="nd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.Xsl.IlGen.XmlILConstructInfo.CallersInfo">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Xsl.IlGen.XmlILConstructInfo.Name">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Xsl.IlGen.XmlILConstructInfo.ParentElementInfo">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILConstructInfo.Write(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="nd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILConstructors.GetConstructor(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="className">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILConstructors.GetConstructor(System.Type,System.Type[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="className">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILMethods.GetMethod(System.Type,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="className">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="methName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILMethods.GetMethod(System.Type,System.String,System.Type[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="className">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="methName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILModule.CreateAssemblyName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILModule.CreateDelegate(System.String,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="typDelegate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILModule.DefineField(System.String,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="fieldName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILModule.DefineInitializedData(System.String,System.Byte[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILModule.DefineMethod(System.String,System.Type,System.Type[],System.String[],System.Xml.Xsl.IlGen.XmlILMethodAttributes)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="paramTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="paramNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILModule.DefineMethodBody(System.Reflection.MethodBase)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="methInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILModule.DefineTypeInitializer">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILOptimizerVisitor.EqualityIndexVisitor.VisitRoot(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILOptimizerVisitor.FoldComparison(System.Xml.Xsl.Qil.QilNodeType,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILOptimizerVisitor.NodeFinder.Visit(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILOptimizerVisitor.Optimize">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILOptimizerVisitor.Replace(System.Xml.Xsl.IlGen.XmlILOptimization,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="replacement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="original">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILStateAnalyzer.AnalyzeContent(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="nd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.ArithmeticOp(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="ndOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.CreateAggregator(System.Xml.Xsl.Qil.QilUnary,System.String,System.Xml.Xsl.IlGen.XmlILStorageMethods,System.Reflection.MethodInfo,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="ndAgg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="methods">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="methAgg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="methResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.CreateSetIterator(System.Xml.Xsl.Qil.QilBinary,System.String,System.Type,System.Reflection.MethodInfo,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="ndSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="methCreate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="methNext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="iterType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitAdd(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitAfter(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitAncestor(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitAncestorOrSelf(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitAnd(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitAttribute(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitAttributeCtor(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitAverage(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitBefore(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitChoice(System.Xml.Xsl.Qil.QilChoice)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitCommentCtor(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitConditional(System.Xml.Xsl.Qil.QilTernary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitContent(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitDataSource(System.Xml.Xsl.Qil.QilDataSource)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitDeref(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitDescendant(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitDescendantOrSelf(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitDifference(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitDivide(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitDocumentCtor(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitElementCtor(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitEq(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitError(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitFilter(System.Xml.Xsl.Qil.QilLoop)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitFollowingSibling(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitFor(System.Xml.Xsl.Qil.QilIterator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitGe(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitGt(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitIntersection(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitInvoke(System.Xml.Xsl.Qil.QilInvoke)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitIs(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitIsEmpty(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitIsType(System.Xml.Xsl.Qil.QilTargetType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitLe(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitLength(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitLet(System.Xml.Xsl.Qil.QilIterator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitLiteralQName(System.Xml.Xsl.Qil.QilName)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitLocalNameOf(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitLoop(System.Xml.Xsl.Qil.QilLoop)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitLt(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitMaximum(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitMinimum(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitModulo(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitMultiply(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitNameOf(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitNamespaceDecl(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitNamespaceUriOf(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitNe(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitNegate(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitNodeProperty(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="ndProp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitNodeRange(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitNot(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitOr(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitParameter(System.Xml.Xsl.Qil.QilParameter)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitParent(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitPICtor(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitPositionOf(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitPreceding(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitPrecedingSibling(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitPrefixOf(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitRawTextCtor(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitRoot(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitRtfCtor(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitSequence(System.Xml.Xsl.Qil.QilList)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitSort(System.Xml.Xsl.Qil.QilLoop)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitStrConcat(System.Xml.Xsl.Qil.QilStrConcat)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitStrLength(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitStrParseQName(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitSubtract(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitSum(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitTextCtor(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitTextCtor(System.Xml.Xsl.Qil.QilUnary,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="ndText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitTypeAssert(System.Xml.Xsl.Qil.QilTargetType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitUnion(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitWarning(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitXPathFollowing(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitXPathNamespace(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitXPathNodeValue(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitXPathPreceding(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitXsltConvert(System.Xml.Xsl.Qil.QilTargetType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitXsltCopy(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitXsltCopyOf(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitXsltGenerateId(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitXsltInvokeEarlyBound(System.Xml.Xsl.Qil.QilInvokeEarlyBound)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitXsltInvokeLateBound(System.Xml.Xsl.Qil.QilInvokeLateBound)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.ActualParameterList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.ActualParameterList(System.Collections.Generic.IList{System.Xml.Xsl.Qil.QilNode})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Add(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.After(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Ancestor(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.AncestorOrSelf(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.And(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Attribute(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.AttributeCtor(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Average(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Before(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.BranchList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.BranchList(System.Collections.Generic.IList{System.Xml.Xsl.Qil.QilNode})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Choice(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.CommentCtor(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Conditional(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Content(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.DataSource(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Deref(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Descendant(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.DescendantOrSelf(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Difference(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Divide(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.DocOrderDistinct(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.DocumentCtor(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.ElementCtor(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Eq(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Error(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.False">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Filter(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.FollowingSibling(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.For(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.FormalParameterList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.FormalParameterList(System.Collections.Generic.IList{System.Xml.Xsl.Qil.QilNode})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Function(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.XmlQueryType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Function(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.XmlQueryType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.FunctionList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.FunctionList(System.Collections.Generic.IList{System.Xml.Xsl.Qil.QilNode})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Ge(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.GlobalParameterList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.GlobalParameterList(System.Collections.Generic.IList{System.Xml.Xsl.Qil.QilNode})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.GlobalVariableList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.GlobalVariableList(System.Collections.Generic.IList{System.Xml.Xsl.Qil.QilNode})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Gt(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Intersection(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Invoke(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Is(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.IsEmpty(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.IsType(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Le(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Length(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Let(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.LiteralDecimal(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.LiteralDouble(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.LiteralInt32(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.LiteralInt64(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.LiteralObject(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.LiteralQName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.LiteralQName(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.LiteralString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.LiteralType(System.Xml.Xsl.XmlQueryType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.LocalNameOf(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Loop(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Lt(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Maximum(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Minimum(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Modulo(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Multiply(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.NameOf(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.NamespaceDecl(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.NamespaceUriOf(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Ne(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Negate(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.NodeRange(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Nop(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Not(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.OptimizeBarrier(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Or(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Parameter(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.XmlQueryType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Parameter(System.Xml.Xsl.XmlQueryType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Parent(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.PICtor(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.PositionOf(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Preceding(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.PrecedingSibling(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.PrefixOf(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.QilExpression(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.QilExpression(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilFactory)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="factory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.RawTextCtor(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Root(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.RtfCtor(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Sequence">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Sequence(System.Collections.Generic.IList{System.Xml.Xsl.Qil.QilNode})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Sort(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.SortKey(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.SortKeyList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.SortKeyList(System.Collections.Generic.IList{System.Xml.Xsl.Qil.QilNode})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.StrConcat(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.StrConcat(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.StrLength(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.StrParseQName(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Subtract(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Sum(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.TextCtor(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.True">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.TypeAssert(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Union(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Unknown(System.Xml.Xsl.XmlQueryType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.Warning(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.XmlContext">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.XPathFollowing(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.XPathNamespace(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.XPathNodeValue(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.XPathPreceding(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.XsltConvert(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.XsltCopy(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.XsltCopyOf(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.XsltGenerateId(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.XsltInvokeEarlyBound(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.XmlQueryType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilFactory.XsltInvokeLateBound(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilList.ShallowClone(System.Xml.Xsl.Qil.QilFactory)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilNode.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilNode.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.ActualParameterList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.ActualParameterList(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.ActualParameterList(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.ActualParameterList(System.Xml.Xsl.Qil.QilNode[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Add(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.After(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Ancestor(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.AncestorOrSelf(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.And(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.AttributeCtor(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Before(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Boolean(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.BranchList(System.Xml.Xsl.Qil.QilNode[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Choice(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilList)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="branches">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.CommentCtor(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Content(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.DataSource(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Deref(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Descendant(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.DescendantOrSelf(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Divide(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.DocOrderDistinct(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.DocumentCtor(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Double(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.ElementCtor(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Eq(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Error(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.False">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.FollowingSibling(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.For(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.FormalParameterList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.FormalParameterList(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.FormalParameterList(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.FormalParameterList(System.Xml.Xsl.Qil.QilNode[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Function(System.Xml.Xsl.Qil.QilList,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="defn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Function(System.Xml.Xsl.Qil.QilList,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.XmlQueryType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.FunctionList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Ge(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.GlobalParameterList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.GlobalVariableList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Gt(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Int32(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Invoke(System.Xml.Xsl.Qil.QilFunction,System.Xml.Xsl.Qil.QilList)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Is(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.IsEmpty(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Le(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Length(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Let(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.LocalNameOf(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Lt(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Modulo(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Multiply(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.NameOf(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.NamespaceDecl(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.NamespaceUriOf(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Ne(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Negate(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.NodeRange(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Nop(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.OptimizeBarrier(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Or(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Parameter(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilName,System.Xml.Xsl.XmlQueryType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Parameter(System.Xml.Xsl.XmlQueryType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Parent(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.PICtor(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.PositionOf(System.Xml.Xsl.Qil.QilIterator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Preceding(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.PrecedingSibling(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.PrefixOf(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.QilExpression(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilFactory)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="factory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.QName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.QName(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.QName(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.RawTextCtor(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Root(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.RtfCtor(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Sequence">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Sequence(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Sort(System.Xml.Xsl.Qil.QilIterator,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.SortKey(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.SortKeyList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.SortKeyList(System.Xml.Xsl.Qil.QilSortKey)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.StrConcat(System.Collections.Generic.IList{System.Xml.Xsl.Qil.QilNode})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.StrConcat(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.StrConcat(System.Xml.Xsl.Qil.QilNode[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.String(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.StrLength(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.StrParseQName(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Subtract(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Sum(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.TextCtor(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.True">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Union(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Unknown(System.Xml.Xsl.XmlQueryType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Warning(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.XmlContext">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.XPathFollowing(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.XPathNamespace(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.XPathNodeValue(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.XPathPreceding(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.XsltCopy(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.XsltCopyOf(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.XsltGenerateId(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.XsltInvokeEarlyBound(System.Xml.Xsl.Qil.QilNode,System.Reflection.MethodInfo,System.Xml.Xsl.XmlQueryType,System.Collections.Generic.IList{System.Xml.Xsl.Qil.QilNode})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.XsltInvokeLateBound(System.Xml.Xsl.Qil.QilNode,System.Collections.Generic.IList{System.Xml.Xsl.Qil.QilNode})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternVisitor.NoReplace(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternVisitor.QilPatterns.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternVisitor.Replace(System.Int32,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="original">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="replacement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.Visit(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitActualParameterList(System.Xml.Xsl.Qil.QilList)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitAdd(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitAfter(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitAncestor(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitAncestorOrSelf(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitAnd(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitAttribute(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitAttributeCtor(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitAverage(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitBefore(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitBranchList(System.Xml.Xsl.Qil.QilList)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitChildren(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitChoice(System.Xml.Xsl.Qil.QilChoice)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitCommentCtor(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitConditional(System.Xml.Xsl.Qil.QilTernary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitContent(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitDataSource(System.Xml.Xsl.Qil.QilDataSource)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitDeref(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitDescendant(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitDescendantOrSelf(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitDifference(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitDivide(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitDocOrderDistinct(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitDocumentCtor(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitElementCtor(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitEq(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitError(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitFalse(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitFilter(System.Xml.Xsl.Qil.QilLoop)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitFollowingSibling(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitFor(System.Xml.Xsl.Qil.QilIterator)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitFormalParameterList(System.Xml.Xsl.Qil.QilList)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitForReference(System.Xml.Xsl.Qil.QilIterator)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitFunction(System.Xml.Xsl.Qil.QilFunction)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitFunctionList(System.Xml.Xsl.Qil.QilList)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitFunctionReference(System.Xml.Xsl.Qil.QilFunction)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitGe(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitGlobalParameterList(System.Xml.Xsl.Qil.QilList)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitGlobalVariableList(System.Xml.Xsl.Qil.QilList)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitGt(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitIntersection(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitInvoke(System.Xml.Xsl.Qil.QilInvoke)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitIs(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitIsEmpty(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitIsType(System.Xml.Xsl.Qil.QilTargetType)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitLe(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitLength(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitLet(System.Xml.Xsl.Qil.QilIterator)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitLetReference(System.Xml.Xsl.Qil.QilIterator)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitLiteralDecimal(System.Xml.Xsl.Qil.QilLiteral)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitLiteralDouble(System.Xml.Xsl.Qil.QilLiteral)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitLiteralInt32(System.Xml.Xsl.Qil.QilLiteral)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitLiteralInt64(System.Xml.Xsl.Qil.QilLiteral)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitLiteralObject(System.Xml.Xsl.Qil.QilLiteral)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitLiteralQName(System.Xml.Xsl.Qil.QilName)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitLiteralString(System.Xml.Xsl.Qil.QilLiteral)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitLiteralType(System.Xml.Xsl.Qil.QilLiteral)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitLocalNameOf(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitLoop(System.Xml.Xsl.Qil.QilLoop)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitLt(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitMaximum(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitMinimum(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitModulo(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitMultiply(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitNameOf(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitNamespaceDecl(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitNamespaceUriOf(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitNe(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitNegate(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitNodeRange(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitNop(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitNot(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitNull">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitOptimizeBarrier(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitOr(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitParameter(System.Xml.Xsl.Qil.QilParameter)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitParameterReference(System.Xml.Xsl.Qil.QilParameter)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitParent(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitPICtor(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitPositionOf(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitPreceding(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitPrecedingSibling(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitPrefixOf(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitQilExpression(System.Xml.Xsl.Qil.QilExpression)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitRawTextCtor(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitRoot(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitRtfCtor(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitSequence(System.Xml.Xsl.Qil.QilList)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitSort(System.Xml.Xsl.Qil.QilLoop)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitSortKey(System.Xml.Xsl.Qil.QilSortKey)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitSortKeyList(System.Xml.Xsl.Qil.QilList)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitStrConcat(System.Xml.Xsl.Qil.QilStrConcat)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitStrLength(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitStrParseQName(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitSubtract(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitSum(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitTextCtor(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitTrue(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitTypeAssert(System.Xml.Xsl.Qil.QilTargetType)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitUnion(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitUnknown(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitWarning(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitXmlContext(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitXPathFollowing(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitXPathNamespace(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitXPathNodeValue(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitXPathPreceding(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitXsltConvert(System.Xml.Xsl.Qil.QilTargetType)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitXsltCopy(System.Xml.Xsl.Qil.QilBinary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitXsltCopyOf(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitXsltGenerateId(System.Xml.Xsl.Qil.QilUnary)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitXsltInvokeEarlyBound(System.Xml.Xsl.Qil.QilInvokeEarlyBound)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitXsltInvokeLateBound(System.Xml.Xsl.Qil.QilInvokeLateBound)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.QueryReaderSettings.CreateReader(System.IO.Stream,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.NavigatorConstructor.GetNavigator(System.String,System.String,System.Xml.XmlNameTable)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.NavigatorConstructor.GetNavigator(System.Xml.XmlEventCache,System.Xml.XmlNameTable)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="events">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.NumberFormatter.ConvertToDecimal(System.Double,System.Int32,System.Char,System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="groupSeparator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.NumberFormatter.FormatSequence(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="val">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.Xsl.Runtime.RtfNavigator.LocalName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Xsl.Runtime.RtfNavigator.Name">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Xsl.Runtime.RtfNavigator.NamespaceURI">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Xsl.Runtime.RtfNavigator.Prefix">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.RtfNavigator.ToNavigator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.TokenInfo.CreateFormat(System.String,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="formatString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.TokenInfo.CreateSeparator(System.String,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.WhitespaceRuleReader.CreateReader(System.Xml.XmlReader,System.Xml.Xsl.Runtime.WhitespaceRuleLookup)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="baseReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlCachedSequenceWriter.StartTree(System.Xml.XPath.XPathNodeType,System.Xml.IXmlNamespaceResolver,System.Xml.XmlNameTable)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlCollation.CreateSortKey(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.BooleanToAtomicValue(System.Boolean,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="runtime">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.BytesToAtomicValue(System.Byte[],System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="runtime">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.DateTimeToAtomicValue(System.DateTime,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="runtime">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.DecimalToAtomicValue(System.Decimal,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="runtime">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.DoubleToAtomicValue(System.Double,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="runtime">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.Int32ToAtomicValue(System.Int32,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="runtime">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.Int64ToAtomicValue(System.Int64,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="runtime">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.ItemsToNavigators(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="listItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.NavigatorsToItems(System.Collections.Generic.IList{System.Xml.XPath.XPathNavigator})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="listNavigators">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.SingleToAtomicValue(System.Single,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="runtime">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.StringToAtomicValue(System.String,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="runtime">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.TimeSpanToAtomicValue(System.TimeSpan,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="runtime">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.XmlQualifiedNameToAtomicValue(System.Xml.XmlQualifiedName,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="runtime">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlNavNameFilter.Create(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryContext.ConstructDocument(System.Object,System.String,System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="dataSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.Xsl.Runtime.XmlQueryContext.DefaultDataSource">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Xsl.Runtime.XmlQueryContext.DefaultNameTable">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryContext.GetDataSource(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="uriRelative">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryDataReader.ReadStringQ">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryItemSequence.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQueryItemSequence)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryItemSequence.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQueryItemSequence,System.Xml.XPath.XPathItem)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQueryNodeSequence)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQueryNodeSequence,System.Xml.XPath.XPathNavigator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="navigator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.DocOrderDistinct(System.Collections.Generic.IComparer{System.Xml.XPath.XPathNavigator})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IEnumerable{System#Xml#XPath#XPathItem}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.CheckAttributePrefix(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.EnsureValidName(System.String,System.String,System.String,System.Xml.XPath.XPathNodeType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.RemapPrefix(System.String,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.DocOrderDistinct(System.Collections.Generic.IList{System.Xml.XPath.XPathNavigator})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="seq">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.EndRtfConstruction(System.Xml.Xsl.Runtime.XmlQueryOutput@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.EnsureNavigator(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.ParseTagName(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tagName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.ParseTagName(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tagName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.SyncToNavigator(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="navigatorThat">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.TextRtfConstruction(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Xsl.Runtime.XmlQueryRuntime.XsltFunctions">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQuerySequence{`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQuerySequence{`0},`0)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlSortKey.AddSortKey(System.Xml.Xsl.Runtime.XmlSortKey)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltConvert.ConvertToType(System.Xml.Schema.XmlAtomicValue,System.Xml.Xsl.XmlQueryType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltConvert.EnsureNodeSet(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="listItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltConvert.ToNode(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="listItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltConvert.ToNode(System.Xml.XPath.XPathItem)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltConvert.ToNodeSet(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="listItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltConvert.ToNodeSet(System.Xml.XPath.XPathItem)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltConvert.ToString(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltConvert.ToString(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltFunctions.BaseUri(System.Xml.XPath.XPathNavigator)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="navigator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltFunctions.EXslObjectType(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltFunctions.MSFormatDateTime(System.String,System.String,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="lang">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="dateTime">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltFunctions.MSLocalName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltFunctions.MSNamespaceUri(System.String,System.Xml.XPath.XPathNavigator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="currentNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltFunctions.MSUtc(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="dateTime">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltFunctions.NormalizeSpace(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltFunctions.Substring(System.String,System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltFunctions.Substring(System.String,System.Double,System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltFunctions.SubstringAfter(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="s1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="s2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltFunctions.SubstringBefore(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="s1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="s2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltFunctions.SystemProperty(System.Xml.XmlQualifiedName)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltFunctions.Translate(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="mapString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="transString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltLibrary.CreateDecimalFormatter(System.String,System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="formatPicture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="characters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltLibrary.FormatMessage(System.String,System.Collections.Generic.IList{System.String})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltLibrary.NumberFormat(System.Collections.Generic.IList{System.Xml.XPath.XPathItem},System.String,System.Double,System.String,System.String,System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="formatString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="groupingSeparator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltLibrary.ToNodeSetOrRtf(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="val">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltMethods.GetMethod(System.Type,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="className">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="methName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltMethods.GetMethod(System.Type,System.String,System.Type[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="className">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="methName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XmlILGenerator.Generate(System.Xml.Xsl.Qil.QilExpression,System.Reflection.Emit.TypeBuilder)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XmlILGenerator.GenerateExecuteFunction(System.Reflection.MethodInfo,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="methRoot">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="methExec">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.Xsl.XmlQueryTypeFactory.ChoiceType.Prime">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Xsl.XmlQueryTypeFactory.ItemType.Prime">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XmlQueryTypeFactory.PrimeChoice(System.Collections.Generic.List{System.Xml.Xsl.XmlQueryType},System.Collections.Generic.IList{System.Xml.Xsl.XmlQueryType})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="accumulator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathBuilder.ArithmeticOperator(System.Xml.Xsl.XPath.XPathOperator,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathBuilder.CompareValues(System.Xml.Xsl.XPath.XPathOperator,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode,System.Xml.Schema.XmlTypeCode)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathBuilder.CreateFunctionTable">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathBuilder.JoinStep(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathBuilder.LocalNameOfFirstNode(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathBuilder.LogicalOperator(System.Xml.Xsl.XPath.XPathOperator,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathBuilder.NamespaceOfFirstNode(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathBuilder.NegateOperator(System.Xml.Xsl.XPath.XPathOperator,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathBuilder.Number(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathBuilder.String(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathBuilder.Sum(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathBuilder.System#Xml#Xsl#XPath#IFocus#GetLast">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathBuilder.System#Xml#Xsl#XPath#IFocus#GetPosition">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathBuilder.System#Xml#Xsl#XPath#IXPathEnvironment#ResolveFunction(System.String,System.String,System.Collections.Generic.IList{System.Xml.Xsl.Qil.QilNode},System.Xml.Xsl.XPath.IFocus)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="env">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathBuilder.UnionOperator(System.Xml.Xsl.XPath.XPathOperator,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathCompileException.MarkOutError">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathQilFactory.EnsureNodeSet(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathQilFactory.Error(System.String,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathQilFactory.Error(System.Xml.Xsl.ISourceLineInfo,System.String,System.String[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathQilFactory.FirstNode(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathQilFactory.InvokeCeiling(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathQilFactory.InvokeContains(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathQilFactory.InvokeEnsureNodeSet(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathQilFactory.InvokeEqualityOperator(System.Xml.Xsl.Qil.QilNodeType,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathQilFactory.InvokeFloor(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathQilFactory.InvokeFormatMessage(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathQilFactory.InvokeLang(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathQilFactory.InvokeNormalizeSpace(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathQilFactory.InvokeRelationalOperator(System.Xml.Xsl.Qil.QilNodeType,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathQilFactory.InvokeRound(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathQilFactory.InvokeStartsWith(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathQilFactory.InvokeSubstring(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathQilFactory.InvokeSubstring(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathQilFactory.InvokeSubstringAfter(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathQilFactory.InvokeSubstringBefore(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathQilFactory.InvokeTranslate(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathScanner.CreateException(System.String,System.String[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="resId">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathScanner.LexKindToString(System.Xml.Xsl.XPath.LexKind)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Xsl.XPath.XPathScanner.RawValue">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathScanner.ScanNCName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XPathConvert.DoubleToString(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XPathConvert.IntToString(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XPathConvert.SkipWhitespace(System.Char*)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="pch">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.AstFactory.ApplyImports(System.Xml.Xsl.Qil.QilName,System.Xml.Xsl.Xslt.Stylesheet,System.Xml.Xsl.Xslt.XslVersion)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.AstFactory.ApplyTemplates(System.Xml.Xsl.Qil.QilName)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.AstFactory.ApplyTemplates(System.Xml.Xsl.Qil.QilName,System.String,System.Xml.Xsl.Xslt.XsltInput.ContextInfo,System.Xml.Xsl.Xslt.XslVersion)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="ctxInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.AstFactory.Attribute(System.String,System.String,System.Xml.Xsl.Xslt.XslVersion)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.AstFactory.AttributeSet(System.Xml.Xsl.Qil.QilName)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.AstFactory.CallTemplate(System.Xml.Xsl.Qil.QilName,System.Xml.Xsl.Xslt.XsltInput.ContextInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="ctxInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.AstFactory.Choose">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.AstFactory.Comment">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.AstFactory.Copy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.AstFactory.CopyOf(System.String,System.Xml.Xsl.Xslt.XslVersion)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.AstFactory.Element(System.String,System.String,System.Xml.Xsl.Xslt.XslVersion)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.AstFactory.Error(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.AstFactory.ForEach(System.String,System.Xml.Xsl.Xslt.XsltInput.ContextInfo,System.Xml.Xsl.Xslt.XslVersion)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="ctxInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.AstFactory.If(System.String,System.Xml.Xsl.Xslt.XslVersion)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.AstFactory.Key(System.Xml.Xsl.Qil.QilName,System.String,System.String,System.Xml.Xsl.Xslt.XslVersion)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.AstFactory.List">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.AstFactory.LiteralAttribute(System.Xml.Xsl.Qil.QilName,System.String,System.Xml.Xsl.Xslt.XslVersion)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.AstFactory.LiteralElement(System.Xml.Xsl.Qil.QilName)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.AstFactory.Message(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.AstFactory.Nop">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.AstFactory.Number(System.Xml.Xsl.Xslt.NumberLevel,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.Xsl.Xslt.XslVersion)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.AstFactory.Otherwise">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.AstFactory.PI(System.String,System.Xml.Xsl.Xslt.XslVersion)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.AstFactory.QName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.AstFactory.QName(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.AstFactory.Sort(System.String,System.String,System.String,System.String,System.String,System.Xml.Xsl.Xslt.XslVersion)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.AstFactory.Template(System.Xml.Xsl.Qil.QilName,System.String,System.Xml.Xsl.Qil.QilName,System.Double,System.Xml.Xsl.Xslt.XslVersion)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.AstFactory.Text(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.AstFactory.Text(System.String,System.Xml.Xsl.Qil.SerializationHints)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.AstFactory.UseAttributeSet(System.Xml.Xsl.Qil.QilName)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.AstFactory.VarPar(System.Xml.Xsl.Xslt.XslNodeType,System.Xml.Xsl.Qil.QilName,System.String,System.Xml.Xsl.Xslt.XslVersion)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.AstFactory.WithParam(System.Xml.Xsl.Qil.QilName)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.AstFactory.XslNode(System.Xml.Xsl.Xslt.XslNodeType,System.Xml.Xsl.Qil.QilName,System.String,System.Xml.Xsl.Xslt.XslVersion)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.Compiler.CreateError(System.Xml.Xsl.ISourceLineInfo,System.String,System.String[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="lineInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.Compiler.CreateStylesheet">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Xsl.Xslt.CompilerScopeManager`1.NamespaceEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.CompilerScopeManager`1.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.FunctionFocus.GetLast">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.FunctionFocus.GetPosition">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.Key.GetDebugName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.KeyMatchBuilder.GetPredicateBuilder(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.KeyMatchBuilder.PathConvertor.ConvertReletive2Absolute(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.KeyMatchBuilder.PathConvertor.VisitFilter(System.Xml.Xsl.Qil.QilLoop)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.KeyMatchBuilder.PathConvertor.VisitLoop(System.Xml.Xsl.Qil.QilLoop)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.LoopFocus.ConstructLoop(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.LoopFocus.GetLast">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.LoopFocus.GetPosition">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.ProtoTemplate.GetDebugName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.BuildDebuggerNamespaces">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.Compile(System.Xml.Xsl.Xslt.Compiler)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileApplyImports(System.Xml.Xsl.Xslt.XslNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileAttribute(System.Xml.Xsl.Xslt.NodeCtor)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileComment(System.Xml.Xsl.Xslt.XslNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileElement(System.Xml.Xsl.Xslt.NodeCtor)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileElementAvailable(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileError(System.Xml.Xsl.Xslt.XslNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileFnKey(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.XPath.IFocus)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="env">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileFunctionAvailable(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileGenerateId(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileGlobalVarPar(System.Xml.Xsl.Xslt.VarPar)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="varPar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileLiteralAttribute(System.Xml.Xsl.Xslt.XslNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileLiteralElement(System.Xml.Xsl.Xslt.XslNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileNodeSetExpression(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileNop(System.Xml.Xsl.Xslt.XslNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileNumber(System.Xml.Xsl.Xslt.Number)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="num">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompilePI(System.Xml.Xsl.Xslt.XslNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileRootExpression(System.Xml.Xsl.Xslt.XslNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="applyTmpls">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileSingleDocument(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileSingleKey(System.Collections.Generic.List{System.Xml.Xsl.Xslt.Key},System.Xml.Xsl.Qil.QilIterator,System.Xml.Xsl.Qil.QilIterator)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="defList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileSorts(System.Collections.Generic.IList{System.Xml.Xsl.Xslt.XslNode},System.Xml.Xsl.Xslt.LoopFocus@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="content">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileStringAvt(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileStylesheet(System.Xml.Xsl.Xslt.Compiler)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileSystemProperty(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileText(System.Xml.Xsl.Xslt.Text)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileTextAvt(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="avt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileUnparsedEntityUri(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileValueOf(System.Xml.Xsl.Xslt.XslNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="valueOf">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileValueOfDoe(System.Xml.Xsl.Xslt.XslNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="valueOf">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CreateFunctionTable">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CreateGeneralKeyFunction">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CreateWithParam(System.Xml.Xsl.Qil.QilName,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CreateXslParam(System.Xml.Xsl.Qil.QilName,System.Xml.Xsl.XmlQueryType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.EnterScope(System.Xml.Xsl.Xslt.XslNode)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.EXslObjectType(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.ExtractText(System.String,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.GenerateApply(System.Xml.Xsl.Xslt.Stylesheet,System.Xml.Xsl.Xslt.XslNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.GenerateScriptCall(System.Xml.Xsl.Qil.QilName,System.Xml.Xsl.Runtime.XmlExtensionFunction,System.Collections.Generic.IList{System.Xml.Xsl.Qil.QilNode})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="scrFunc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.GetNsVar(System.Xml.Xsl.Qil.QilList)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="nsList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.InstructionList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.InvokeApplyFunction(System.Xml.Xsl.Xslt.Stylesheet,System.Xml.Xsl.Qil.QilName,System.Collections.Generic.IList{System.Xml.Xsl.Xslt.XslNode})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="mode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="actualArgs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.MatchPattern(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilIterator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.ResolvePrefixThrow(System.Boolean,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.ResolveQNameDynamic(System.Boolean,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.ResolveQNameThrow(System.Boolean,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.SetLineInfo(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.ISourceLineInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.System#Xml#Xsl#XPath#IFocus#GetLast">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.System#Xml#Xsl#XPath#IFocus#GetPosition">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.System#Xml#Xsl#XPath#IXPathEnvironment#ResolveFunction(System.String,System.String,System.Collections.Generic.IList{System.Xml.Xsl.Qil.QilNode},System.Xml.Xsl.XPath.IFocus)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="env">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.System#Xml#Xsl#XPath#IXPathEnvironment#ResolvePrefix(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilStrConcatenator.ToQil">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.Scripts.GetScriptClass(System.String,System.String,System.Xml.Xsl.IErrorHelper)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="errorHelper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="language">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.SingletonFocus.GetLast">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.SingletonFocus.GetPosition">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XPathPatternBuilder.Axis(System.Xml.Xsl.XPath.XPathAxis,System.Xml.XPath.XPathNodeType,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XPathPatternBuilder.BuildAxisFilter(System.Xml.Xsl.Qil.QilPatternFactory,System.Xml.Xsl.Qil.QilIterator,System.Xml.Xsl.XPath.XPathAxis,System.Xml.XPath.XPathNodeType,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="f">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="itr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XPathPatternBuilder.Function(System.String,System.String,System.Collections.Generic.IList{System.Xml.Xsl.Qil.QilNode})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XPathPatternBuilder.Operator(System.Xml.Xsl.XPath.XPathOperator,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XPathPatternBuilder.Predicate(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="condition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XPathPatternBuilder.String(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XPathPatternBuilder.XPathPredicateEnvironment.GetLast">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XPathPatternBuilder.XPathPredicateEnvironment.GetPosition">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XPathPatternBuilder.XPathPredicateEnvironment.ResolveFunction(System.String,System.String,System.Collections.Generic.IList{System.Xml.Xsl.Qil.QilNode},System.Xml.Xsl.XPath.IFocus)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="env">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XPathPatternBuilder.XsltFunctionFocus.GetLast">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XPathPatternBuilder.XsltFunctionFocus.GetPosition">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Xsl.Xslt.XslNode.TraceName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Xsl.Xslt.XsltInput.BaseUri">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltInput.BuildLineInfo">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltInput.GetAttributes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltInput.GetAttributes(System.Int32,System.Int32,System.String[],System.String[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="names">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltInput.GetAttributes(System.Int32,System.String,System.String@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltInput.GetAttributes(System.Int32,System.String,System.String@,System.String,System.String@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltInput.GetAttributes(System.Int32,System.String,System.String@,System.String,System.String@,System.String,System.String@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltInput.GetAttributes(System.Int32,System.String,System.String@,System.String,System.String@,System.String,System.String@,System.String,System.String@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltInput.GetAttributes(System.Int32,System.String,System.String@,System.String,System.String@,System.String,System.String@,System.String,System.String@,System.String,System.String@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltInput.GetAttributes(System.Int32,System.String,System.String@,System.String,System.String@,System.String,System.String@,System.String,System.String@,System.String,System.String@,System.String,System.String@,System.String,System.String@,System.String,System.String@,System.String,System.String@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltInput.GetAttributes(System.Int32,System.String,System.String@,System.String,System.String@,System.String,System.String@,System.String,System.String@,System.String,System.String@,System.String,System.String@,System.String,System.String@,System.String,System.String@,System.String,System.String@,System.String,System.String@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Xsl.Xslt.XsltInput.NameTable">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Xsl.Xslt.XsltInput.Uri">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.CreateReader(System.Uri,System.Xml.XmlResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="xmlResolver">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.CreateXPathQName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.LoadEndTag(System.Collections.Generic.List{System.Xml.Xsl.Xslt.XslNode})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="content">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.LoadFallbacks(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.LoadInstructions">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.LoadInstructions(System.Collections.Generic.List{System.Xml.Xsl.Xslt.XslNode})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="content">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.LoadInstructions(System.Collections.Generic.List{System.Xml.Xsl.Xslt.XslNode},System.Xml.Xsl.Xslt.XsltLoader.InstructionFlags)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="content">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.LoadInstructions(System.Xml.Xsl.Xslt.XsltLoader.InstructionFlags)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.LoadLiteralResultElement(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.LoadUnknownXsltInstruction(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.ParseOutputMethod(System.String,System.Xml.XmlOutputMethod@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.ParseUseAttributeSets(System.String,System.Xml.Xsl.ISourceLineInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.ResolveQName(System.Boolean,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.ResolveUri(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="relativeUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="baseUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.SetInfo(System.Xml.Xsl.Xslt.XslNode,System.Collections.Generic.List{System.Xml.Xsl.Xslt.XslNode},System.Xml.Xsl.Xslt.XsltInput.ContextInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="to">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.SetLineInfo(System.Xml.Xsl.Xslt.XslNode,System.Xml.Xsl.ISourceLineInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.XslApplyImports">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.XslApplyTemplates">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.XslAttribute">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.XslCallTemplate">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.XslChoose">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.XslComment">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.XslCopy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.XslCopyOf">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.XslElement">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.XslFallback">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.XslForEach">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.XslIf">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.XslMessage">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.XslNumber">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.XslOtherwise">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.XslProcessingInstruction">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.XslSort">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.XslText">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.XslValueOf">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.XslVarPar(System.Xml.Xsl.Xslt.XslNodeType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltQilFactory.DefaultValueMarker">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltQilFactory.InvokeBaseUri(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltQilFactory.InvokeCheckScriptNamespace(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltQilFactory.InvokeElementAvailable(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltQilFactory.InvokeEXslObjectType(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltQilFactory.InvokeFormatNumberDynamic(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltQilFactory.InvokeFormatNumberStatic(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltQilFactory.InvokeFunctionAvailable(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltQilFactory.InvokeIsSameNodeSort(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltQilFactory.InvokeLangToLcid(System.Xml.Xsl.Qil.QilNode,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltQilFactory.InvokeMsFormatDateTime(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltQilFactory.InvokeMsLocalName(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltQilFactory.InvokeMsNamespaceUri(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltQilFactory.InvokeMsNumber(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltQilFactory.InvokeMsStringCompare(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltQilFactory.InvokeMsUtc(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltQilFactory.InvokeNumberFormat(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltQilFactory.InvokeOnCurrentNodeChanged(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltQilFactory.InvokeOuterXml(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltQilFactory.InvokeRegisterDecimalFormat(System.Xml.Xsl.Xslt.DecimalFormatDecl)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltQilFactory.InvokeRegisterDecimalFormatter(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Xslt.DecimalFormatDecl)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltQilFactory.InvokeSystemProperty(System.Xml.Xsl.Qil.QilNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Xsl.XsltOld.ActionFrame.Node">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Xsl.XsltOld.ActionFrame.System#Xml#Xsl#XsltOld#Debugger#IStackFrame#NodeSet">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.AttributeAction.CreateAttributeQName(System.String,System.String,System.Xml.Xsl.XsltOld.InputScopeManager)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="manager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Avt.CompileAvt(System.Xml.Xsl.XsltOld.Compiler,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="avtText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.AvtEvent.Evaluate(System.Xml.Xsl.XsltOld.Processor,System.Xml.Xsl.XsltOld.ActionFrame)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.BuilderInfo.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.CloneScopeManager">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.CompileAvt(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="avtText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.CompileAvt(System.String,System.Boolean@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="avtText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.CreateApplyImportsAction">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.CreateApplyTemplatesAction">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.CreateAttributeAction">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.CreateAttributeSetAction">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.CreateBeginEvent">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.CreateCallTemplateAction">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.CreateChooseAction">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.CreateCommentAction">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.CreateCopyAction">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.CreateCopyOfAction">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.CreateElementAction">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.CreateForEachAction">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.CreateIfAction(System.Xml.Xsl.XsltOld.IfAction.ConditionType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.CreateMessageAction">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.CreateNewInstructionAction">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.CreateNumberAction">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.CreateProcessingInstructionAction">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.CreateSingleTemplateAction">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.CreateSortAction">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.CreateTemplateAction">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.CreateTextAction">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.CreateTextEvent">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.CreateUseAttributeSetsAction">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.CreateValueOfAction">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.CreateVariableAction(System.Xml.Xsl.XsltOld.VariableType)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.CreateWithParamAction">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.CreateXmlQName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="qname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.CreateXPathQName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="qname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.Xsl.XsltOld.Compiler.Debugger">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.GetSingleAttribute(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.LoadDocument(System.Xml.XmlTextReaderImpl)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.ResolveDocument(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="absoluteUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.ResolvePrefixes(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.ResolveUri(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="relativeUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.ResolveXPathNamespace(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.UnexpectedKeyword">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.DbgCompiler.CreateVariableAction(System.Xml.Xsl.XsltOld.VariableType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.DocumentScope.AddNamespace(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.ElementAction.CreateElementQName(System.String,System.String,System.Xml.Xsl.XsltOld.InputScopeManager)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="manager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.HtmlAttributeProps.Create(System.Boolean,System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.HtmlAttributeProps.CreatePropsTable">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.HtmlElementProps.Create(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.HtmlElementProps.CreatePropsTable">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.InputScope.ResolveGlobalVariable(System.Xml.XmlQualifiedName)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="qname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.InputScope.ResolveVariable(System.Xml.XmlQualifiedName)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="qname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.InputScopeManager.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.InputScopeManager.PushScope">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.InputScopeManager.ResolveNonEmptyPrefix(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.InputScopeManager.ResolveXPathNamespace(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Key.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Xsl.XsltOld.NavigatorInput.BaseURI">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Xsl.XsltOld.NavigatorInput.NamespaceURI">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Xsl.XsltOld.NavigatorOutput.Navigator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.NumberAction.Format(System.Collections.ArrayList,System.Collections.Generic.List{System.Xml.Xsl.XsltOld.NumberAction.FormatInfo},System.String,System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="numberlist">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.NumberAction.NumberingFormat.ConvertToArabic(System.Double,System.Int32,System.Int32,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.NumberAction.ParseFormat(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.NumberAction.ParseLetter(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.PrefixQName.ParseNCName(System.String,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="qname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.Xsl.XsltOld.Processor.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Processor.Evaluate(System.Xml.Xsl.XsltOld.ActionFrame,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Processor.EvaluateString(System.Xml.Xsl.XsltOld.ActionFrame,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Processor.GetCompiledQuery(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Processor.GetGlobalParameter(System.Xml.XmlQualifiedName)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="qname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Processor.GetMatchesContext">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Processor.GetNavigator(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="ruri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Processor.GetSharedStringBuilder">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Processor.GetValueOfContext">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Processor.GetValueQuery(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Processor.GetValueQuery(System.Int32,System.Xml.Xsl.XsltOld.XsltCompileContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Xsl.XsltOld.Processor.NumberList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Processor.PushNewFrame">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Processor.RunQuery(System.Xml.Xsl.XsltOld.ActionFrame,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Processor.StartQuery(System.Xml.XPath.XPathNodeIterator,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Processor.StartReader">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Xsl.XsltOld.ReaderOutput.BaseURI">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.ReaderOutput.XmlEncoder.AtributeInnerXml(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.ReaderOutput.XmlEncoder.AtributeOuterXml(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.RootAction.GetAttributeSet(System.Xml.XmlQualifiedName)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.RootAction.GetDecimalFormat(System.Xml.XmlQualifiedName)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.Xsl.XsltOld.RootAction.Output">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.SortAction.ParseLang(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Stylesheet.FindTemplate(System.Xml.XmlQualifiedName)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Stylesheet.FindTemplate(System.Xml.Xsl.XsltOld.Processor,System.Xml.XPath.XPathNavigator)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="processor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Stylesheet.FindTemplate(System.Xml.Xsl.XsltOld.Processor,System.Xml.XPath.XPathNavigator,System.Xml.XmlQualifiedName)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="mode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="processor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Stylesheet.FindTemplateImports(System.Xml.Xsl.XsltOld.Processor,System.Xml.XPath.XPathNavigator)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="processor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Stylesheet.FindTemplateImports(System.Xml.Xsl.XsltOld.Processor,System.Xml.XPath.XPathNavigator,System.Xml.XmlQualifiedName)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="mode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="processor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.TemplateAction.CloneWithoutName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.TemplateManager.FindTemplate(System.Xml.Xsl.XsltOld.Processor,System.Xml.XPath.XPathNavigator)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="processor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.VariableAction.System#Xml#Xsl#IXsltContextVariable#Evaluate(System.Xml.Xsl.XsltContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="xsltContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.XsltCompileContext.BuildKeyTable(System.Xml.Xsl.XsltOld.Key,System.Xml.XPath.XPathNavigator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="root">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.XsltCompileContext.ComposeUri(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="baseUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="thisUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.XsltCompileContext.CreateFunctionTable">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.XsltCompileContext.Document(System.Object,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.XsltCompileContext.EvaluateVariable(System.Xml.Xsl.XsltOld.VariableAction)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="variable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.XsltCompileContext.FuncElementAvailable.Invoke(System.Xml.Xsl.XsltContext,System.Object[],System.Xml.XPath.XPathNavigator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="docContext">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.XsltCompileContext.FuncFunctionAvailable.Invoke(System.Xml.Xsl.XsltContext,System.Object[],System.Xml.XPath.XPathNavigator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="docContext">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.XsltCompileContext.FuncGenerateId.Invoke(System.Xml.Xsl.XsltContext,System.Object[],System.Xml.XPath.XPathNavigator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="xsltContext">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.XsltCompileContext.FuncNodeSet.Invoke(System.Xml.Xsl.XsltContext,System.Object[],System.Xml.XPath.XPathNavigator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="docContext">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="xsltContext">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.XsltCompileContext.FuncSystemProp.Invoke(System.Xml.Xsl.XsltContext,System.Object[],System.Xml.XPath.XPathNavigator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="docContext">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.XsltCompileContext.GetExtentionMethod(System.String,System.String,System.Xml.XPath.XPathResultType[],System.Object@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.XsltCompileContext.LookupNamespace(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.XsltCompileContext.ResolveFormatName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.XsltCompileContext.ResolveFunction(System.String,System.String,System.Xml.XPath.XPathResultType[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.XsltCompileContext.ResolveVariable(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.XsltCompileContext.SystemProperty(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="qname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.XsltCompileContext.XsltFunctionImpl.Invoke(System.Xml.Xsl.XsltContext,System.Object[],System.Xml.XPath.XPathNavigator)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="docContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="xsltContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.XsltCompileContext.XsltFunctionImpl.ToIterator(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.XsltCompileContext.XsltFunctionImpl.ToNavigator(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.XsltOutput.CreateDerivedOutput(System.Xml.Xsl.XsltOld.XsltOutput.OutputMethod)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XslTransformException.CreateMessage(System.String,System.String[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslTransformException.FormatDetailedMessage">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.GenerateHelper.Call(System.Reflection.MethodInfo)">
    <parameter name="meth">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.GenerateHelper.CallCacheCount(System.Type)">
    <parameter name="itemStorageType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.GenerateHelper.CallCacheItem(System.Type)">
    <parameter name="itemStorageType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.GenerateHelper.CallGetEarlyBoundObject(System.Int32,System.Type)">
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.GenerateHelper.CallGetGlobalValue(System.Int32,System.Type)">
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.GenerateHelper.CallGetParameter(System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.GenerateHelper.CallSetGlobalValue(System.Type)">
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.GenerateHelper.CallStartRtfConstruction(System.String)">
    <parameter name="baseUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.GenerateHelper.CallToken(System.Reflection.MethodInfo)">
    <parameter name="meth">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.GenerateHelper.CallValueAs(System.Type)">
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.GenerateHelper.Construct(System.Reflection.ConstructorInfo)">
    <parameter name="constr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.GenerateHelper.ConstructLiteralQName(System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.GenerateHelper.DebugSequencePoint(System.Xml.Xsl.ISourceLineInfo)">
    <parameter name="sourceInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.GenerateHelper.Emit(System.Reflection.Emit.OpCode,System.Reflection.ConstructorInfo)">
    <parameter name="constrInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.GenerateHelper.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label[])">
    <parameter name="arrLabels">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.GenerateHelper.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.LocalBuilder)">
    <parameter name="locBldr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.GenerateHelper.Emit(System.Reflection.Emit.OpCode,System.Reflection.FieldInfo)">
    <parameter name="fldInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.GenerateHelper.Emit(System.Reflection.Emit.OpCode,System.Reflection.MethodInfo)">
    <parameter name="methInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.GenerateHelper.Emit(System.Reflection.Emit.OpCode,System.String)">
    <parameter name="strVal">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.GenerateHelper.Emit(System.Reflection.Emit.OpCode,System.Type)">
    <parameter name="typVal">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.GenerateHelper.GetFileName(System.Xml.Xsl.ISourceLineInfo)">
    <parameter name="sourceInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.GenerateHelper.LoadType(System.Type)">
    <parameter name="clrTyp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.GenerateHelper.MarkSequencePoint(System.Xml.Xsl.ISourceLineInfo)">
    <parameter name="sourceInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.GenerateHelper.MethodBegin(System.Reflection.MethodBase,System.Xml.Xsl.ISourceLineInfo,System.Boolean)">
    <parameter name="methInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.GenerateHelper.SetParameter(System.Object)">
    <parameter name="paramId">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.GenerateHelper.TailCall(System.Reflection.MethodInfo)">
    <parameter name="meth">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.GenerateHelper.TreatAs(System.Type,System.Type)">
    <parameter name="clrTypeSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="clrTypeDst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.IteratorDescriptor.#ctor(System.Xml.Xsl.IlGen.IteratorDescriptor)">
    <parameter name="iterParent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.IteratorDescriptor.EnsureItemStorageType(System.Xml.Xsl.XmlQueryType,System.Type)">
    <parameter name="storageTypeDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="xmlType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.IteratorDescriptor.EnsureLocal(System.Reflection.Emit.LocalBuilder)">
    <parameter name="bldr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.IteratorDescriptor.EnsureLocalNoCache(System.Reflection.Emit.LocalBuilder)">
    <parameter name="bldr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.IteratorDescriptor.SetIterator(System.Xml.Xsl.IlGen.IteratorDescriptor)">
    <parameter name="iterInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.OptimizerPatterns.Inherit(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.IlGen.OptimizerPatternName)">
    <parameter name="ndSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ndDst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.OptimizerPatterns.Read(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="nd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.StaticDataManager.DeclareCollation(System.String)">
    <parameter name="collation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.StaticDataManager.DeclareEarlyBound(System.String,System.Type)">
    <parameter name="ebType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.StaticDataManager.DeclareName(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.StaticDataManager.DeclareNameFilter(System.String,System.String)">
    <parameter name="nsUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="locName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.StaticDataManager.DeclarePrefixMappings(System.Collections.Generic.IList{System.Xml.Xsl.Qil.QilNode})">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.StaticDataManager.DeclareXmlType(System.Xml.Xsl.XmlQueryType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.TailCallAnalyzer.Analyze(System.Xml.Xsl.Qil.QilExpression)">
    <parameter name="qil">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.TailCallAnalyzer.AnalyzeDefinition(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="nd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.UniqueList`1.Add(`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILConstructInfo.Read(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="nd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILElementAnalyzer.AnalyzeAttributeCtor(System.Xml.Xsl.Qil.QilBinary,System.Xml.Xsl.IlGen.XmlILConstructInfo)">
    <parameter name="ndAttr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILElementAnalyzer.CheckAttributeNamespaceConstruct(System.Xml.Xsl.XmlQueryType)">
    <parameter name="typ">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILModule.#ctor(System.Reflection.Emit.TypeBuilder)">
    <parameter name="typeBldr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILModule.AddSourceDocument(System.String)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILModule.FindMethod(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILNamespaceAnalyzer.Analyze(System.Xml.Xsl.Qil.QilNode,System.Boolean)">
    <parameter name="nd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILNamespaceAnalyzer.AnalyzeContent(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="nd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILNamespaceAnalyzer.CheckNamespaceInScope(System.Xml.Xsl.Qil.QilBinary)">
    <parameter name="nd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILOptimizerVisitor.#ctor(System.Xml.Xsl.Qil.QilExpression,System.Boolean)">
    <parameter name="qil">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILOptimizerVisitor.AddStepPattern(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <parameter name="nd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILOptimizerVisitor.AllowDodReverse(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="nd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILOptimizerVisitor.AllowJoinAndDod(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="nd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILOptimizerVisitor.AreLiteralArgs(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="nd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILOptimizerVisitor.CanFoldArithmetic(System.Xml.Xsl.Qil.QilNodeType,System.Xml.Xsl.Qil.QilLiteral,System.Xml.Xsl.Qil.QilLiteral)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILOptimizerVisitor.CanFoldXsltConvert(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.XmlQueryType)">
    <parameter name="typTarget">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ndLiteral">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILOptimizerVisitor.CanFoldXsltConvertNonLossy(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.XmlQueryType)">
    <parameter name="ndLiteral">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="typTarget">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILOptimizerVisitor.DependsOn(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILOptimizerVisitor.EqualityIndexVisitor.Scan(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILOptimizerVisitor.EqualityIndexVisitor.VisitReference(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILOptimizerVisitor.ExtractLiteralValue(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="nd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILOptimizerVisitor.FoldArithmetic(System.Xml.Xsl.Qil.QilNodeType,System.Xml.Xsl.Qil.QilLiteral,System.Xml.Xsl.Qil.QilLiteral)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILOptimizerVisitor.FoldXsltConvert(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.XmlQueryType)">
    <parameter name="ndLiteral">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="typTarget">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILOptimizerVisitor.HasNestedSequence(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="nd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILOptimizerVisitor.IsConstructedExpression(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="nd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILOptimizerVisitor.IsDocOrderDistinct(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="nd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILOptimizerVisitor.IsGlobalVariable(System.Xml.Xsl.Qil.QilIterator)">
    <parameter name="iter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILOptimizerVisitor.IsLiteral(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="nd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILOptimizerVisitor.IsStepPattern(System.Xml.Xsl.IlGen.OptimizerPatterns,System.Xml.Xsl.Qil.QilNodeType)">
    <parameter name="patt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILOptimizerVisitor.IsStepPattern(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNodeType)">
    <parameter name="nd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILOptimizerVisitor.NodeCounter.Visit(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILOptimizerVisitor.NodeCounter.VisitReference(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILOptimizerVisitor.NodeFinder.Find(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILOptimizerVisitor.NodeFinder.VisitReference(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILOptimizerVisitor.NonPositional(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILStateAnalyzer.Analyze(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <parameter name="ndContent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ndConstr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILStateAnalyzer.AnalyzeChoice(System.Xml.Xsl.Qil.QilChoice,System.Xml.Xsl.IlGen.XmlILConstructInfo)">
    <parameter name="ndChoice">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILStateAnalyzer.AnalyzeConditional(System.Xml.Xsl.Qil.QilTernary,System.Xml.Xsl.IlGen.XmlILConstructInfo)">
    <parameter name="ndCond">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILStateAnalyzer.AnalyzeCopy(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.IlGen.XmlILConstructInfo)">
    <parameter name="ndCopy">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILStateAnalyzer.AnalyzeLoop(System.Xml.Xsl.Qil.QilLoop,System.Xml.Xsl.IlGen.XmlILConstructInfo)">
    <parameter name="ndLoop">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILStateAnalyzer.AnalyzeSequence(System.Xml.Xsl.Qil.QilList,System.Xml.Xsl.IlGen.XmlILConstructInfo)">
    <parameter name="ndSeq">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILStateAnalyzer.EndLoop(System.Xml.Xsl.XmlQueryType,System.Xml.Xsl.IlGen.XmlILConstructInfo)">
    <parameter name="typ">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILStateAnalyzer.MaybeAttrNmsp(System.Xml.Xsl.XmlQueryType)">
    <parameter name="typ">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILStateAnalyzer.MaybeContent(System.Xml.Xsl.XmlQueryType)">
    <parameter name="typ">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILStateAnalyzer.StartLoop(System.Xml.Xsl.XmlQueryType,System.Xml.Xsl.IlGen.XmlILConstructInfo)">
    <parameter name="typ">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILStorageMethods.#ctor(System.Type)">
    <parameter name="storageType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILTypeHelper.GetStorageType(System.Xml.Xsl.XmlQueryType)">
    <parameter name="qyTyp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.AfterEndChecks(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="ndCtor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.BeforeStartChecks(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="ndCtor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.CachesResult(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="nd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.CheckEnumAttrs(System.Xml.Xsl.IlGen.XmlILConstructInfo)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.CheckWithinContent(System.Xml.Xsl.IlGen.XmlILConstructInfo)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.Compare(System.Xml.Xsl.Qil.QilBinary)">
    <parameter name="ndComp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.ComparePosition(System.Xml.Xsl.Qil.QilBinary)">
    <parameter name="ndComp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.ConditionalBranch(System.Xml.Xsl.Qil.QilNode,System.Type,System.Reflection.Emit.LocalBuilder)">
    <parameter name="ndBranch">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="itemStorageType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.CopySequence(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="nd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.CreateContainerIterator(System.Xml.Xsl.Qil.QilUnary,System.String,System.Type,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xml.Xsl.XmlNodeKindFlags,System.Xml.Xsl.Qil.QilName,System.Xml.TriState)">
    <parameter name="ndDod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="methCreate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="methNext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="iterType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.CreateFilteredIterator(System.Xml.Xsl.Qil.QilNode,System.String,System.Type,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xml.Xsl.XmlNodeKindFlags,System.Xml.Xsl.Qil.QilName,System.Xml.TriState,System.Xml.Xsl.Qil.QilNode)">
    <parameter name="methCreate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="methNext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="iterType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ndCtxt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.CreateSimpleIterator(System.Xml.Xsl.Qil.QilNode,System.String,System.Type,System.Reflection.MethodInfo,System.Reflection.MethodInfo)">
    <parameter name="iterType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="methNext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="methCreate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ndCtxt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.ElementCachesAttributes(System.Xml.Xsl.IlGen.XmlILConstructInfo)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.EndBinding(System.Xml.Xsl.Qil.QilIterator)">
    <parameter name="ndIter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.EndNestedIterator(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="nd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.EndWriterLoop(System.Xml.Xsl.Qil.QilNode,System.Boolean,System.Reflection.Emit.Label)">
    <parameter name="nd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.Function(System.Xml.Xsl.Qil.QilFunction)">
    <parameter name="ndFunc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.GenerateConcat(System.Xml.Xsl.Qil.QilNode,System.Reflection.Emit.LocalBuilder)">
    <parameter name="ndStr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="locStringConcat">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.GenerateContainerIterator(System.Xml.Xsl.Qil.QilNode,System.Reflection.Emit.LocalBuilder,System.Reflection.Emit.Label,System.Reflection.MethodInfo,System.Type)">
    <parameter name="nd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="locIter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="methNext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.GenerateSimpleIterator(System.Type,System.Reflection.Emit.LocalBuilder,System.Reflection.MethodInfo)">
    <parameter name="locIter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="methNext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.GetItemStorageType(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="nd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.GetItemStorageType(System.Xml.Xsl.XmlQueryType)">
    <parameter name="typ">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.GetStorageType(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="nd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.GetStorageType(System.Xml.Xsl.XmlQueryType)">
    <parameter name="typ">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.HandleDodPatterns(System.Xml.Xsl.Qil.QilUnary)">
    <parameter name="ndDod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.HandleFilterPatterns(System.Xml.Xsl.Qil.QilLoop)">
    <parameter name="ndFilter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.LoadNameAndType(System.Xml.XPath.XPathNodeType,System.Xml.Xsl.Qil.QilNode,System.Boolean,System.Boolean)">
    <parameter name="ndName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.MatchesNodeKinds(System.Xml.Xsl.Qil.QilTargetType,System.Xml.Xsl.XmlQueryType,System.Xml.Xsl.XmlQueryType)">
    <parameter name="ndIsType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="typDerived">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="typBase">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.NestedConstruction(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="nd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.NestedVisit(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="nd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.NestedVisit(System.Xml.Xsl.Qil.QilNode,System.Reflection.Emit.Label)">
    <parameter name="nd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.NestedVisit(System.Xml.Xsl.Qil.QilNode,System.Type,System.Boolean)">
    <parameter name="nd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="itemStorageType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.NestedVisitEnsureCache(System.Xml.Xsl.Qil.QilNode,System.Type)">
    <parameter name="nd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="itemStorageType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.NestedVisitEnsureLocal(System.Xml.Xsl.Qil.QilNode,System.Reflection.Emit.LocalBuilder)">
    <parameter name="nd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="loc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.NestedVisitEnsureStack(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="nd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.NestedVisitEnsureStack(System.Xml.Xsl.Qil.QilNode,System.Type,System.Boolean)">
    <parameter name="nd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="itemStorageType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.NestedVisitEnsureStack(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <parameter name="ndLeft">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ndRight">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.NestedVisitWithBranch(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.IlGen.BranchingContext,System.Reflection.Emit.Label)">
    <parameter name="nd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.PrepareGlobalValues(System.Xml.Xsl.Qil.QilList)">
    <parameter name="globalIterators">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.Sequence(System.Xml.Xsl.Qil.QilList)">
    <parameter name="ndSeq">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.StartBinding(System.Xml.Xsl.Qil.QilIterator)">
    <parameter name="ndIter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.StartForBinding(System.Xml.Xsl.Qil.QilIterator,System.Xml.Xsl.IlGen.OptimizerPatterns)">
    <parameter name="ndFor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="patt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.StartLetBinding(System.Xml.Xsl.Qil.QilIterator)">
    <parameter name="ndLet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.StartWriterLoop(System.Xml.Xsl.Qil.QilNode,System.Boolean@,System.Reflection.Emit.Label@)">
    <parameter name="nd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.SyncToNavigator(System.Reflection.Emit.LocalBuilder,System.Xml.Xsl.Qil.QilNode)">
    <parameter name="locNav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ndCtxt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.TryNameCompare(System.Xml.Xsl.Qil.QilNodeType,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <parameter name="ndFirst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ndSecond">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.TryZeroCompare(System.Xml.Xsl.Qil.QilNodeType,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <parameter name="ndFirst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ndSecond">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.Visit(System.Xml.Xsl.Qil.QilExpression,System.Xml.Xsl.IlGen.GenerateHelper,System.Reflection.MethodInfo)">
    <parameter name="qil">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="methRoot">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.Visit(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="nd">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitChildren(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitFalse(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="ndFalse">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitGlobalValues(System.Xml.Xsl.Qil.QilList)">
    <parameter name="globalIterators">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitLiteralDecimal(System.Xml.Xsl.Qil.QilLiteral)">
    <parameter name="ndDec">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitLiteralDouble(System.Xml.Xsl.Qil.QilLiteral)">
    <parameter name="ndDbl">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitLiteralInt32(System.Xml.Xsl.Qil.QilLiteral)">
    <parameter name="ndInt">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitLiteralInt64(System.Xml.Xsl.Qil.QilLiteral)">
    <parameter name="ndLong">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitLiteralString(System.Xml.Xsl.Qil.QilLiteral)">
    <parameter name="ndStr">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitSortKey(System.Xml.Xsl.Qil.QilSortKey,System.Reflection.Emit.LocalBuilder)">
    <parameter name="ndKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="locKeys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitStrParseQName(System.Xml.Xsl.Qil.QilBinary,System.Boolean)">
    <parameter name="ndParsedTagName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitTrue(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="ndTrue">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.IlGen.XmlILVisitor.VisitXmlContext(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="ndCtxt">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Int32Pair.Equals(System.Object)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilCloneVisitor.Clone(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilCloneVisitor.EndScope(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilCloneVisitor.Visit(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="oldNode">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilExpression.#ctor(System.Xml.Xsl.Qil.QilNodeType,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilFactory)">
    <parameter name="factory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilName.Equals(System.Object)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilNode.Add(System.Collections.Generic.IList{System.Xml.Xsl.Qil.QilNode})">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilNode.Add(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilNode.Contains(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilNode.CopyTo(System.Xml.Xsl.Qil.QilNode[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilNode.IndexOf(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilNode.Insert(System.Int32,System.Xml.Xsl.Qil.QilNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilNode.Remove(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Conditional(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <parameter name="condition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Filter(System.Xml.Xsl.Qil.QilIterator,System.Xml.Xsl.Qil.QilNode)">
    <parameter name="variable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Loop(System.Xml.Xsl.Qil.QilIterator,System.Xml.Xsl.Qil.QilNode)">
    <parameter name="variable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Not(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternFactory.Sequence(System.Xml.Xsl.Qil.QilNode[])">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternVisitor.QilPatterns.#ctor(System.Xml.Xsl.Qil.QilPatternVisitor.QilPatterns)">
    <parameter name="toCopy">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternVisitor.Visit(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternVisitor.VisitActualParameterList(System.Xml.Xsl.Qil.QilList)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternVisitor.VisitBranchList(System.Xml.Xsl.Qil.QilList)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternVisitor.VisitFalse(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternVisitor.VisitFor(System.Xml.Xsl.Qil.QilIterator)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternVisitor.VisitFormalParameterList(System.Xml.Xsl.Qil.QilList)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternVisitor.VisitFunctionList(System.Xml.Xsl.Qil.QilList)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternVisitor.VisitGlobalParameterList(System.Xml.Xsl.Qil.QilList)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternVisitor.VisitGlobalVariableList(System.Xml.Xsl.Qil.QilList)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternVisitor.VisitLiteralDecimal(System.Xml.Xsl.Qil.QilLiteral)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternVisitor.VisitLiteralDouble(System.Xml.Xsl.Qil.QilLiteral)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternVisitor.VisitLiteralInt32(System.Xml.Xsl.Qil.QilLiteral)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternVisitor.VisitLiteralInt64(System.Xml.Xsl.Qil.QilLiteral)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternVisitor.VisitLiteralObject(System.Xml.Xsl.Qil.QilLiteral)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternVisitor.VisitLiteralQName(System.Xml.Xsl.Qil.QilName)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternVisitor.VisitLiteralString(System.Xml.Xsl.Qil.QilLiteral)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternVisitor.VisitLiteralType(System.Xml.Xsl.Qil.QilLiteral)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternVisitor.VisitParameter(System.Xml.Xsl.Qil.QilParameter)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternVisitor.VisitSortKeyList(System.Xml.Xsl.Qil.QilList)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternVisitor.VisitTrue(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternVisitor.VisitUnknown(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternVisitor.VisitXmlContext(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternVisitor.VisitXsltInvokeEarlyBound(System.Xml.Xsl.Qil.QilInvokeEarlyBound)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilPatternVisitor.VisitXsltInvokeLateBound(System.Xml.Xsl.Qil.QilInvokeLateBound)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilReplaceVisitor.RecalculateType(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.XmlQueryType)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilScopedVisitor.AfterVisit(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilScopedVisitor.BeforeVisit(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilScopedVisitor.BeginScope(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilScopedVisitor.EndScope(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.Check(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckActualParameterList(System.Xml.Xsl.Qil.QilList)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckAdd(System.Xml.Xsl.Qil.QilBinary)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckAncestorOrSelf(System.Xml.Xsl.Qil.QilUnary)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckAverage(System.Xml.Xsl.Qil.QilUnary)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckBranchList(System.Xml.Xsl.Qil.QilList)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckChoice(System.Xml.Xsl.Qil.QilChoice)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckConditional(System.Xml.Xsl.Qil.QilTernary)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckDeepCopy(System.Xml.Xsl.Qil.QilUnary)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckDescendantOrSelf(System.Xml.Xsl.Qil.QilUnary)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckDifference(System.Xml.Xsl.Qil.QilBinary)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckDivide(System.Xml.Xsl.Qil.QilBinary)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckDocOrderDistinct(System.Xml.Xsl.Qil.QilUnary)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckFilter(System.Xml.Xsl.Qil.QilLoop)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckFor(System.Xml.Xsl.Qil.QilIterator)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckFormalParameterList(System.Xml.Xsl.Qil.QilList)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckFunction(System.Xml.Xsl.Qil.QilFunction)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckFunctionList(System.Xml.Xsl.Qil.QilList)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckGlobalParameterList(System.Xml.Xsl.Qil.QilList)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckGlobalVariableList(System.Xml.Xsl.Qil.QilList)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckIntersection(System.Xml.Xsl.Qil.QilBinary)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckInvoke(System.Xml.Xsl.Qil.QilInvoke)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckLet(System.Xml.Xsl.Qil.QilIterator)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckLiteralValue(System.Xml.Xsl.Qil.QilNode,System.Type)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckLoop(System.Xml.Xsl.Qil.QilLoop)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckMaximum(System.Xml.Xsl.Qil.QilUnary)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckMinimum(System.Xml.Xsl.Qil.QilUnary)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckModulo(System.Xml.Xsl.Qil.QilBinary)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckMultiply(System.Xml.Xsl.Qil.QilBinary)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckNegate(System.Xml.Xsl.Qil.QilUnary)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckNodeRange(System.Xml.Xsl.Qil.QilBinary)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckNop(System.Xml.Xsl.Qil.QilUnary)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckOptimizeBarrier(System.Xml.Xsl.Qil.QilUnary)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckParameter(System.Xml.Xsl.Qil.QilParameter)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckSequence(System.Xml.Xsl.Qil.QilList)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckSort(System.Xml.Xsl.Qil.QilLoop)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckSortKey(System.Xml.Xsl.Qil.QilSortKey)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckSortKeyList(System.Xml.Xsl.Qil.QilList)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckSubtract(System.Xml.Xsl.Qil.QilBinary)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckSum(System.Xml.Xsl.Qil.QilUnary)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckTypeAssert(System.Xml.Xsl.Qil.QilTargetType)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckUnion(System.Xml.Xsl.Qil.QilBinary)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckUnknown(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckXsltConvert(System.Xml.Xsl.Qil.QilTargetType)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckXsltCopy(System.Xml.Xsl.Qil.QilBinary)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckXsltCopyOf(System.Xml.Xsl.Qil.QilUnary)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.CheckXsltInvokeEarlyBound(System.Xml.Xsl.Qil.QilInvokeEarlyBound)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.DistinctType(System.Xml.Xsl.XmlQueryType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilTypeChecker.FindFilterType(System.Xml.Xsl.Qil.QilIterator,System.Xml.Xsl.Qil.QilNode)">
    <parameter name="variable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="body">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.IsReference(System.Xml.Xsl.Qil.QilNode,System.Int32)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitAssumeReference(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.QilVisitor.VisitReference(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.WhitespaceRule.#ctor(System.Xml.Xsl.Runtime.XmlQueryDataReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Qil.WhitespaceRule.GetObjectData(System.Xml.Xsl.Runtime.XmlQueryDataWriter)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.QueryReaderSettings.#ctor(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.AncestorDocOrderIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter,System.Boolean)">
    <parameter name="filter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.AncestorIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter,System.Boolean)">
    <parameter name="filter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.AttributeContentIterator.Create(System.Xml.XPath.XPathNavigator)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.AttributeIterator.Create(System.Xml.XPath.XPathNavigator)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.ContentIterator.Create(System.Xml.XPath.XPathNavigator)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.DecimalFormatter.#ctor(System.String,System.Xml.Xsl.Runtime.DecimalFormat)">
    <parameter name="formatPicture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="decimalFormat">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.DecimalFormatter.Format(System.Double,System.String,System.Xml.Xsl.Runtime.DecimalFormat)">
    <parameter name="decimalFormat">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="formatPicture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.DecimalFormatter.RemoveTrailingComma(System.Text.StringBuilder,System.Int32,System.Int32)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.DescendantIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter,System.Boolean)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="filter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.DocumentOrderComparer.Compare(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator)">
    <parameter name="navThat">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="navThis">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.DocumentOrderComparer.GetDocumentIndex(System.Xml.XPath.XPathNavigator)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.DodSequenceMerge.AddSequence(System.Collections.Generic.IList{})">
    <parameter name="sequence">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.DodSequenceMerge.InsertSequence(System.Collections.Generic.IEnumerator{})">
    <parameter name="sequence">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.DodSequenceMerge.MoveAndInsertSequence(System.Collections.Generic.IEnumerator{})">
    <parameter name="sequence">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.EarlyBoundInfo.#ctor(System.String,System.Type)">
    <parameter name="ebType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.EarlyBoundInfo.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.ElementContentIterator.Create(System.Xml.XPath.XPathNavigator,System.String,System.String)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.FollowingSiblingIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.IdIterator.Create(System.Xml.XPath.XPathNavigator,System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.NamespaceIterator.Create(System.Xml.XPath.XPathNavigator)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.NodeKindContentIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNodeType)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.NodeRangeIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter,System.Xml.XPath.XPathNavigator)">
    <parameter name="start">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="filter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="end">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.NumberFormatter.#ctor(System.String,System.Int32,System.String,System.String,System.Int32)">
    <parameter name="formatString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="groupingSeparator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.NumberFormatter.FormatItem(System.Text.StringBuilder,System.Xml.XPath.XPathItem,System.Char,System.Int32)">
    <parameter name="sb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.NumberFormatterBase.ConvertToAlphabetic(System.Text.StringBuilder,System.Double,System.Char,System.Int32)">
    <parameter name="sb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.NumberFormatterBase.ConvertToRoman(System.Text.StringBuilder,System.Double,System.Boolean)">
    <parameter name="sb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.ParentIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter)">
    <parameter name="filter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.PrecedingIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter)">
    <parameter name="filter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.PrecedingSiblingDocOrderIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter)">
    <parameter name="filter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.PrecedingSiblingIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.RtfNavigator.CopyToWriter(System.Xml.XmlWriter)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.RtfNavigator.MoveToId(System.String)">
    <parameter name="id">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.RtfTextNavigator.#ctor(System.Xml.Xsl.Runtime.RtfTextNavigator)">
    <parameter name="that">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.RtfTreeNavigator.#ctor(System.Xml.Xsl.Runtime.RtfTreeNavigator)">
    <parameter name="that">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.WhitespaceRuleLookup.#ctor(System.Collections.Generic.IList{System.Xml.Xsl.Qil.WhitespaceRule})">
    <parameter name="rules">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.WhitespaceRuleLookup.Atomize(System.Xml.XmlNameTable)">
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.WhitespaceRuleLookup.InternalWhitespaceRule.Atomize(System.Xml.XmlNameTable)">
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.WhitespaceRuleLookup.InternalWhitespaceRule.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.WhitespaceRuleReader.#ctor(System.Xml.XmlReader,System.Xml.Xsl.Runtime.WhitespaceRuleLookup)">
    <parameter name="baseReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="wsRules">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlAttributeCache.WriteComment(System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlAttributeCache.WriteEndElement(System.String,System.String,System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlAttributeCache.WriteEntityRef(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlAttributeCache.WriteProcessingInstruction(System.String,System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlAttributeCache.WriteStartAttribute(System.String,System.String,System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlAttributeCache.WriteStartElement(System.String,System.String,System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlAttributeCache.WriteString(System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlAttributeCache.WriteValue(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlAttributeCache.WriteValue(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlCollation.#ctor(System.IO.BinaryReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlCollation.Create(System.String)">
    <parameter name="collationLiteral">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlCollation.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlCollation.GetObjectData(System.IO.BinaryWriter)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlDateTimeSortKey.#ctor(System.DateTime,System.Xml.Xsl.Runtime.XmlCollation)">
    <parameter name="collation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlDecimalSortKey.#ctor(System.Decimal,System.Xml.Xsl.Runtime.XmlCollation)">
    <parameter name="collation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlDoubleSortKey.#ctor(System.Double,System.Xml.Xsl.Runtime.XmlCollation)">
    <parameter name="collation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlEmptySortKey.#ctor(System.Xml.Xsl.Runtime.XmlCollation)">
    <parameter name="collation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlExtensionFunction.#ctor(System.String,System.String,System.Int32,System.Type,System.Reflection.BindingFlags)">
    <parameter name="namespaceUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlExtensionFunction.#ctor(System.String,System.String,System.Reflection.MethodInfo)">
    <parameter name="meth">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlExtensionFunction.Bind(System.Reflection.MethodInfo)">
    <parameter name="meth">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlExtensionFunction.Equals(System.Object)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlExtensionFunction.GetClrType(System.Type)">
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlExtensionFunction.InferXmlType(System.Type)">
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlExtensionFunction.Init(System.String,System.String,System.Int32,System.Type,System.Reflection.BindingFlags)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlExtensionFunction.Invoke(System.Object,System.Object[])">
    <parameter name="extObj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlExtensionFunctionTable.Bind(System.String,System.String,System.Int32,System.Type,System.Reflection.BindingFlags)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlILIndex.Add(System.String,System.Xml.XPath.XPathNavigator)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="navigator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlILIndex.Lookup(System.String)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlIntegerSortKey.#ctor(System.Int64,System.Xml.Xsl.Runtime.XmlCollation)">
    <parameter name="collation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlIntSortKey.#ctor(System.Int32,System.Xml.Xsl.Runtime.XmlCollation)">
    <parameter name="collation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlMergeSequenceWriter.CopyNamespaces(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNamespaceScope)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlMergeSequenceWriter.CopyNode(System.Xml.XPath.XPathNavigator)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlMergeSequenceWriter.CopyShallowNode(System.Xml.XPath.XPathNavigator)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlMergeSequenceWriter.StartTree(System.Xml.XPath.XPathNodeType,System.Xml.IXmlNamespaceResolver,System.Xml.XmlNameTable)">
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlMergeSequenceWriter.WriteString(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlNavigatorFilter.IsFiltered(System.Xml.XPath.XPathNavigator)">
    <parameter name="navigator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlNavigatorFilter.MoveToContent(System.Xml.XPath.XPathNavigator)">
    <parameter name="navigator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlNavigatorFilter.MoveToFollowing(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator)">
    <parameter name="navigator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlNavigatorFilter.MoveToFollowingSibling(System.Xml.XPath.XPathNavigator)">
    <parameter name="navigator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlNavigatorFilter.MoveToNextContent(System.Xml.XPath.XPathNavigator)">
    <parameter name="navigator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlNavigatorFilter.MoveToPreviousSibling(System.Xml.XPath.XPathNavigator)">
    <parameter name="navigator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlNavNeverFilter.IsFiltered(System.Xml.XPath.XPathNavigator)">
    <parameter name="navigator">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlNavNeverFilter.MoveToFirstAttributeContent(System.Xml.XPath.XPathNavigator)">
    <parameter name="navigator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlNavNeverFilter.MoveToNextAttributeContent(System.Xml.XPath.XPathNavigator)">
    <parameter name="navigator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryContext.GetLateBoundObject(System.String)">
    <parameter name="namespaceUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryContext.InvokeXsltLateBoundFunction(System.String,System.String,System.Collections.Generic.IList{System.Xml.XPath.XPathItem}[])">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryContext.LateBoundFunctionExists(System.String,System.String)">
    <parameter name="namespaceUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryContext.OnXsltMessageEncountered(System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryDataReader.#ctor(System.IO.Stream)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryDataWriter.#ctor(System.IO.Stream)">
    <parameter name="output">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryItemSequence.#ctor(System.Xml.XPath.XPathItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryItemSequence.AddClone(System.Xml.XPath.XPathItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor(System.Collections.Generic.IList{System.Xml.XPath.XPathNavigator})">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor(System.Xml.XPath.XPathNavigator)">
    <parameter name="navigator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.AddClone(System.Xml.XPath.XPathNavigator)">
    <parameter name="navigator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Add(System.Xml.XPath.XPathItem)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Contains(System.Xml.XPath.XPathItem)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#CopyTo(System.Xml.XPath.XPathItem[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Remove(System.Xml.XPath.XPathItem)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#IndexOf(System.Xml.XPath.XPathItem)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#Insert(System.Int32,System.Xml.XPath.XPathItem)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.AddNamespace(System.String,System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.CopyNamespaces(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNamespaceScope)">
    <parameter name="navigator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.CopyNamespacesHelper(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNamespaceScope)">
    <parameter name="navigator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.CopyNode(System.Xml.XPath.XPathNavigator)">
    <parameter name="navigator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.EndCopy(System.Xml.XPath.XPathNavigator)">
    <parameter name="navigator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.EndCopy(System.Xml.XPath.XPathNavigator,System.Boolean)">
    <parameter name="navigator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.LookupPrefix(System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.StartCopy(System.Xml.XPath.XPathNavigator)">
    <parameter name="navigator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.StartCopy(System.Xml.XPath.XPathNavigator,System.Boolean)">
    <parameter name="navigator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteBase64(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteChars(System.Char[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteComment(System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteDocType(System.String,System.String,System.String,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="sysid">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndElementUnchecked(System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndElementUnchecked(System.String,System.String,System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEntityRef(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteItem(System.Xml.XPath.XPathItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteNamespaceDeclaration(System.String,System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteNamespaceDeclarationUnchecked(System.String,System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteProcessingInstruction(System.String,System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteRaw(System.Char[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteRawUnchecked(System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeComputed(System.String,System.Int32)">
    <parameter name="tagName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeComputed(System.String,System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="tagName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeComputed(System.Xml.XmlQualifiedName)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeComputed(System.Xml.XPath.XPathNavigator)">
    <parameter name="navigator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeLocalName(System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeUnchecked(System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeUnchecked(System.String,System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartComputed(System.Xml.XPath.XPathNodeType,System.String,System.Int32)">
    <parameter name="tagName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartComputed(System.Xml.XPath.XPathNodeType,System.String,System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="tagName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartComputed(System.Xml.XPath.XPathNodeType,System.Xml.XmlQualifiedName)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartComputed(System.Xml.XPath.XPathNodeType,System.Xml.XPath.XPathNavigator)">
    <parameter name="navigator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementComputed(System.String,System.Int32)">
    <parameter name="tagName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementComputed(System.String,System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="tagName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementComputed(System.Xml.XmlQualifiedName)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementComputed(System.Xml.XPath.XPathNavigator)">
    <parameter name="navigator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementLocalName(System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementUnchecked(System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementUnchecked(System.String,System.String,System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartProcessingInstruction(System.String)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteString(System.String,System.Boolean)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStringUnchecked(System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteWhitespace(System.String)">
    <parameter name="ws">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.XsltCopyOf(System.Xml.XPath.XPathNavigator)">
    <parameter name="navigator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.#ctor(System.Xml.Xsl.Runtime.XmlQueryStaticData,System.Object,System.Xml.XmlResolver,System.Xml.Xsl.XsltArgumentList,System.Xml.Xsl.Runtime.XmlSequenceWriter)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.AddNewIndex(System.Xml.XPath.XPathNavigator,System.Int32,System.Xml.Xsl.Runtime.XmlILIndex)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.ChangeTypeXsltArgument(System.Int32,System.Object,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.ChangeTypeXsltArgument(System.Xml.Xsl.XmlQueryType,System.Object,System.Type)">
    <parameter name="xmlType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.ChangeTypeXsltResult(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.ChangeTypeXsltResult(System.Xml.Xsl.XmlQueryType,System.Object)">
    <parameter name="xmlType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.ComparePosition(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator)">
    <parameter name="navigatorThis">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="navigatorThat">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.CreateCollation(System.String)">
    <parameter name="collation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.CreateXmlType(System.Xml.XPath.XPathItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.DebugSetGlobalValue(System.String,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.EarlyBoundFunctionExists(System.String,System.String)">
    <parameter name="namespaceUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.FindIndex(System.Xml.XPath.XPathNavigator,System.Int32,System.Xml.Xsl.Runtime.XmlILIndex@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.GenerateId(System.Xml.XPath.XPathNavigator)">
    <parameter name="navigator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.IsInheritedNamespace(System.Xml.XPath.XPathNavigator)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.IsQNameEqual(System.Xml.XPath.XPathNavigator,System.Int32,System.Int32)">
    <parameter name="navigator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.IsQNameEqual(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator)">
    <parameter name="n1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="n2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.MatchesXmlType(System.Collections.Generic.IList{System.Xml.XPath.XPathItem},System.Int32)">
    <parameter name="seq">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.MatchesXmlType(System.Collections.Generic.IList{System.Xml.XPath.XPathItem},System.Xml.Schema.XmlTypeCode)">
    <parameter name="seq">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.MatchesXmlType(System.Xml.XPath.XPathItem,System.Int32)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.MatchesXmlType(System.Xml.XPath.XPathItem,System.Xml.Schema.XmlTypeCode)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.ParseTagName(System.String,System.Int32,System.String@,System.String@,System.String@)">
    <parameter name="tagName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.SendMessage(System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.ThrowException(System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.Contains(`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.CopyTo(`0[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.IndexOf(`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.SortByKeys(System.Array)">
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#Add(`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#Remove(`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Add(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Contains(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Remove(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryStaticData.#ctor(System.Byte[],System.Type[])">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ebTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlQueryStaticData.#ctor(System.Xml.XmlWriterSettings,System.Collections.Generic.IList{System.Xml.Xsl.Qil.WhitespaceRule},System.Xml.Xsl.IlGen.StaticDataManager)">
    <parameter name="staticData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlRawWriterWrapper.WriteEndElement(System.String,System.String,System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlRawWriterWrapper.WriteFullEndElement(System.String,System.String,System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlRawWriterWrapper.WriteXmlDeclaration(System.String)">
    <parameter name="xmldecl">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlSequenceWriter.StartTree(System.Xml.XPath.XPathNodeType,System.Xml.IXmlNamespaceResolver,System.Xml.XmlNameTable)">
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlSequenceWriter.WriteItem(System.Xml.XPath.XPathItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlSortKey.BreakSortingTie(System.Xml.Xsl.Runtime.XmlSortKey)">
    <parameter name="that">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlSortKey.CompareTo(System.Object)">
    <parameter name="that">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.AddDateTimeSortKey(System.Xml.Xsl.Runtime.XmlCollation,System.DateTime)">
    <parameter name="collation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.AddDecimalSortKey(System.Xml.Xsl.Runtime.XmlCollation,System.Decimal)">
    <parameter name="collation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.AddDoubleSortKey(System.Xml.Xsl.Runtime.XmlCollation,System.Double)">
    <parameter name="collation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.AddEmptySortKey(System.Xml.Xsl.Runtime.XmlCollation)">
    <parameter name="collation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.AddIntegerSortKey(System.Xml.Xsl.Runtime.XmlCollation,System.Int64)">
    <parameter name="collation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.AddIntSortKey(System.Xml.Xsl.Runtime.XmlCollation,System.Int32)">
    <parameter name="collation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.AddStringSortKey(System.Xml.Xsl.Runtime.XmlCollation,System.String)">
    <parameter name="collation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.AppendSortKey(System.Xml.Xsl.Runtime.XmlSortKey)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XPathFollowingIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XPathFollowingIterator.MoveFirst(System.Xml.Xsl.Runtime.XmlNavigatorFilter,System.Xml.XPath.XPathNavigator)">
    <parameter name="filter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XPathPrecedingDocOrderIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XPathPrecedingIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltConvert.InferXsltType(System.Type)">
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltConvert.ToBoolean(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})">
    <parameter name="listItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltConvert.ToBoolean(System.Xml.XPath.XPathItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltConvert.ToDateTime(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltConvert.ToDouble(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})">
    <parameter name="listItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltConvert.ToDouble(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltConvert.ToDouble(System.Xml.XPath.XPathItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltConvert.ToString(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})">
    <parameter name="listItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltConvert.ToString(System.Xml.XPath.XPathItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltFunctions.Contains(System.String,System.String)">
    <parameter name="s1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="s2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltFunctions.GetCultureInfo(System.String)">
    <parameter name="lang">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltFunctions.Lang(System.String,System.Xml.XPath.XPathNavigator)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltFunctions.MSNumber(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltFunctions.MSStringCompare(System.String,System.String,System.String,System.String)">
    <parameter name="lang">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="options">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltFunctions.OuterXml(System.Xml.XPath.XPathNavigator)">
    <parameter name="navigator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltFunctions.PrintDate(System.Char[],System.DateTime)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltFunctions.PrintMsec(System.Char[],System.Int32)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltFunctions.PrintTime(System.Char[],System.DateTime)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltFunctions.PrintYear(System.Char[],System.Int32)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltFunctions.ShortToCharArray(System.Char[],System.Int32,System.Int32)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltFunctions.StartsWith(System.String,System.String)">
    <parameter name="s1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="s2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltLibrary.CheckScriptNamespace(System.String)">
    <parameter name="nsUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltLibrary.CheckXsltValue(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})">
    <parameter name="val">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltLibrary.CompareNodeSetAndNodeSet(System.Xml.Xsl.Runtime.XsltLibrary.ComparisonOperator,System.Collections.Generic.IList{System.Xml.XPath.XPathNavigator},System.Collections.Generic.IList{System.Xml.XPath.XPathNavigator},System.TypeCode)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltLibrary.CompareNodeSetAndValue(System.Xml.Xsl.Runtime.XsltLibrary.ComparisonOperator,System.Collections.Generic.IList{System.Xml.XPath.XPathNavigator},System.Xml.XPath.XPathItem,System.TypeCode)">
    <parameter name="nodeset">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="val">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltLibrary.CompareValues(System.Xml.Xsl.Runtime.XsltLibrary.ComparisonOperator,System.Xml.XPath.XPathItem,System.Xml.XPath.XPathItem,System.TypeCode)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltLibrary.ElementAvailable(System.Xml.XmlQualifiedName)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltLibrary.EqualityOperator(System.Double,System.Collections.Generic.IList{System.Xml.XPath.XPathItem},System.Collections.Generic.IList{System.Xml.XPath.XPathItem})">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltLibrary.FormatNumberDynamic(System.Double,System.String,System.Xml.XmlQualifiedName,System.String)">
    <parameter name="formatPicture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="decimalFormatName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltLibrary.FunctionAvailable(System.Xml.XmlQualifiedName)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltLibrary.FunctionAvailableHelper(System.Xml.XmlQualifiedName)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltLibrary.GetTypeCode(System.Xml.XPath.XPathItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltLibrary.IsNodeSetOrRtf(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})">
    <parameter name="val">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltLibrary.IsSameNodeSort(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator)">
    <parameter name="nav1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nav2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltLibrary.RegisterDecimalFormat(System.Xml.XmlQualifiedName,System.String,System.String,System.String)">
    <parameter name="characters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltLibrary.RegisterDecimalFormatter(System.String,System.String,System.String,System.String)">
    <parameter name="formatPicture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="characters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Runtime.XsltLibrary.RelationalOperator(System.Double,System.Collections.Generic.IList{System.Xml.XPath.XPathItem},System.Collections.Generic.IList{System.Xml.XPath.XPathItem})">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.SourceLineInfo.GetFileName(System.String)">
    <parameter name="uriString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.SourceLineInfo.Validate(System.Xml.Xsl.ISourceLineInfo)">
    <parameter name="lineInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XmlILCommand.Execute(System.Object,System.Xml.XmlResolver,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Boolean)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XmlILCommand.Execute(System.String,System.Xml.XmlResolver,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
    <parameter name="results">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XmlILGenerator.CreateFunctionMetadata(System.Collections.Generic.IList{System.Xml.Xsl.Qil.QilNode})">
    <parameter name="funcList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XmlILGenerator.CreateGlobalValueMetadata(System.Collections.Generic.IList{System.Xml.Xsl.Qil.QilNode})">
    <parameter name="globalList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XmlILGenerator.CreateTypeInitializer(System.Xml.Xsl.Runtime.XmlQueryStaticData)">
    <parameter name="staticData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XmlILGenerator.EvaluateGlobalValues(System.Collections.Generic.IList{System.Xml.Xsl.Qil.QilNode})">
    <parameter name="iterList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XmlQualifiedNameTest.HasIntersection(System.Xml.Xsl.XmlQualifiedNameTest)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XmlQualifiedNameTest.IsNamespaceSubsetOf(System.Xml.Xsl.XmlQualifiedNameTest)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XmlQualifiedNameTest.IsNameSubsetOf(System.Xml.Xsl.XmlQualifiedNameTest)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XmlQualifiedNameTest.IsSubsetOf(System.Xml.Xsl.XmlQualifiedNameTest)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XmlQueryCardinality.#ctor(System.IO.BinaryReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XmlQueryCardinality.Equals(System.Object)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XmlQueryCardinality.GetObjectData(System.IO.BinaryWriter)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XmlQueryType.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XmlQueryType.GetObjectData(System.IO.BinaryWriter)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XmlQueryType.HasIntersectionItemType(System.Xml.Xsl.XmlQueryType)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XmlQueryType.IsSubtypeOf(System.Xml.Xsl.XmlQueryType)">
    <parameter name="baseType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XmlQueryType.IsSubtypeOfItemType(System.Xml.Xsl.XmlQueryType)">
    <parameter name="baseType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XmlQueryType.NeverSubtypeOf(System.Xml.Xsl.XmlQueryType)">
    <parameter name="baseType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XmlQueryType.QNameToString(System.Xml.XmlQualifiedName)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XmlQueryTypeFactory.AddItemToChoice(System.Collections.Generic.List{System.Xml.Xsl.XmlQueryType},System.Xml.Xsl.XmlQueryType)">
    <parameter name="accumulator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XmlQueryTypeFactory.AtMost(System.Xml.Xsl.XmlQueryType,System.Xml.Xsl.XmlQueryCardinality)">
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XmlQueryTypeFactory.CheckSerializability(System.Xml.Xsl.XmlQueryType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XmlQueryTypeFactory.Choice(System.Xml.Xsl.XmlQueryType,System.Xml.Xsl.XmlQueryType)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XmlQueryTypeFactory.Choice(System.Xml.Xsl.XmlQueryType[])">
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XmlQueryTypeFactory.ChoiceType.#ctor(System.Collections.Generic.List{System.Xml.Xsl.XmlQueryType})">
    <parameter name="members">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XmlQueryTypeFactory.ChoiceType.Create(System.Collections.Generic.List{System.Xml.Xsl.XmlQueryType})">
    <parameter name="members">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XmlQueryTypeFactory.ChoiceType.Create(System.IO.BinaryReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XmlQueryTypeFactory.Deserialize(System.IO.BinaryReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XmlQueryTypeFactory.ItemType.Create(System.IO.BinaryReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XmlQueryTypeFactory.ItemType.Create(System.Xml.Schema.XmlSchemaSimpleType,System.Boolean)">
    <parameter name="schemaType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XmlQueryTypeFactory.ItemType.Create(System.Xml.Schema.XmlTypeCode,System.Xml.Xsl.XmlQualifiedNameTest,System.Xml.Schema.XmlSchemaType,System.Boolean)">
    <parameter name="nameTest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XmlQueryTypeFactory.PrimeProduct(System.Xml.Xsl.XmlQueryType,System.Xml.Xsl.XmlQueryCardinality)">
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XmlQueryTypeFactory.Product(System.Xml.Xsl.XmlQueryType,System.Xml.Xsl.XmlQueryCardinality)">
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XmlQueryTypeFactory.Sequence(System.Xml.Xsl.XmlQueryType,System.Xml.Xsl.XmlQueryType)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XmlQueryTypeFactory.SequenceType.Create(System.IO.BinaryReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XmlQueryTypeFactory.SequenceType.Create(System.Xml.Xsl.XmlQueryType,System.Xml.Xsl.XmlQueryCardinality)">
    <parameter name="prime">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XmlQueryTypeFactory.Serialize(System.IO.BinaryWriter,System.Xml.Xsl.XmlQueryType)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XmlQueryTypeFactory.Type(System.Xml.Schema.XmlSchemaSimpleType,System.Boolean)">
    <parameter name="schemaType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XmlQueryTypeFactory.Type(System.Xml.XPath.XPathNodeType,System.Xml.Xsl.XmlQualifiedNameTest,System.Xml.Schema.XmlSchemaType,System.Boolean)">
    <parameter name="nameTest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathBuilder.#ctor(System.Xml.Xsl.XPath.IXPathEnvironment)">
    <parameter name="environment">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathBuilder.BuildAxisFilter(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.XPath.XPathAxis,System.Xml.XPath.XPathNodeType,System.String,System.String)">
    <parameter name="qilAxis">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathBuilder.CompareNodeSetAndNodeSet(System.Xml.Xsl.XPath.XPathOperator,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode,System.Xml.Schema.XmlTypeCode)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathBuilder.CompareNodeSetAndValue(System.Xml.Xsl.XPath.XPathOperator,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode,System.Xml.Schema.XmlTypeCode)">
    <parameter name="nodeset">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="val">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathBuilder.EqualityOperator(System.Xml.Xsl.XPath.XPathOperator,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathBuilder.FixupVisitor.#ctor(System.Xml.Xsl.Qil.QilPatternFactory,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <parameter name="f">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathBuilder.FixupVisitor.CountUnfixedLast(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="inExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathBuilder.FixupVisitor.Fixup(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilIterator,System.Xml.Xsl.Qil.QilNode)">
    <parameter name="inExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathBuilder.FixupVisitor.Fixup(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.XPath.IXPathEnvironment)">
    <parameter name="inExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathBuilder.FixupVisitor.VisitUnknown(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="unknown">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathBuilder.Function(System.String,System.String,System.Collections.Generic.IList{System.Xml.Xsl.Qil.QilNode})">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathBuilder.FunctionInfo`1.CastArguments(System.Collections.Generic.IList{System.Xml.Xsl.Qil.QilNode},System.String,System.Xml.Xsl.XPath.XPathQilFactory)">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="f">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathBuilder.IsFunctionAvailable(System.String,System.String)">
    <parameter name="nsUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathBuilder.NameOfFirstNode(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathBuilder.Operator(System.Xml.Xsl.XPath.XPathOperator,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathBuilder.Predicate(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode,System.Boolean)">
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nodeset">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathBuilder.RelationalOperator(System.Xml.Xsl.XPath.XPathOperator,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathBuilder.System#Xml#Xsl#XPath#IXPathEnvironment#ResolvePrefix(System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathBuilder.System#Xml#Xsl#XPath#IXPathEnvironment#ResolveVariable(System.String,System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathBuilder.Variable(System.String,System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathCompileException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathCompileException.#ctor(System.String,System.Int32,System.Int32,System.String,System.String[])">
    <parameter name="resId">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathCompileException.#ctor(System.String,System.String[])">
    <parameter name="resId">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathCompileException.AppendTrimmed(System.Text.StringBuilder,System.String,System.Int32,System.Int32,System.Xml.Xsl.XPath.XPathCompileException.TrimType)">
    <parameter name="sb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathParser`1.GetAxis(System.String,System.Xml.Xsl.XPath.XPathScanner)">
    <parameter name="scanner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathParser`1.InternalParseNodeTest(System.Xml.Xsl.XPath.XPathScanner,System.Xml.Xsl.XPath.XPathAxis,System.Xml.XPath.XPathNodeType@,System.String@,System.String@)">
    <parameter name="scanner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathParser`1.IsNodeType(System.Xml.Xsl.XPath.XPathScanner)">
    <parameter name="scanner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathParser`1.Parse(System.Xml.Xsl.XPath.XPathScanner,System.Xml.Xsl.XPath.IXPathBuilder{`0},System.Xml.Xsl.XPath.LexKind)">
    <parameter name="scanner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathQilFactory.CannotBeNodeSet(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathQilFactory.ConvertToBoolean(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathQilFactory.ConvertToNode(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathQilFactory.ConvertToNodeSet(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathQilFactory.ConvertToNumber(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathQilFactory.ConvertToString(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathQilFactory.ConvertToType(System.Xml.Schema.XmlTypeCode,System.Xml.Xsl.Qil.QilNode)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathQilFactory.Id(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <parameter name="id">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathQilFactory.IsAnyType(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPath.XPathQilFactory.SafeDocOrderDistinct(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPathConvert.BigInteger.Add(System.Xml.Xsl.XPathConvert.BigInteger)">
    <parameter name="bi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPathConvert.BigInteger.CompareTo(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPathConvert.BigInteger.DivRem(System.Xml.Xsl.XPathConvert.BigInteger)">
    <parameter name="bi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPathConvert.BigInteger.InitFromBigint(System.Xml.Xsl.XPathConvert.BigInteger)">
    <parameter name="biSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPathConvert.BigInteger.InitFromFloatingDecimal(System.Xml.Xsl.XPathConvert.FloatingDecimal)">
    <parameter name="dec">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPathConvert.BigInteger.InitFromRgu(System.UInt32[],System.Int32)">
    <parameter name="rgu">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPathConvert.BigInteger.Subtract(System.Xml.Xsl.XPathConvert.BigInteger)">
    <parameter name="bi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPathConvert.BigNumber.#ctor(System.Xml.Xsl.XPathConvert.FloatingDecimal)">
    <parameter name="dec">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPathConvert.BigNumber.DblToRgbFast(System.Double,System.Byte[],System.Int32@,System.Int32@)">
    <parameter name="mantissa">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPathConvert.BigNumber.DblToRgbPrecise(System.Double,System.Byte[],System.Int32@,System.Int32@)">
    <parameter name="mantissa">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XPathConvert.StringToDouble(System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslLoadException.#ctor(System.CodeDom.Compiler.CompilerError)">
    <parameter name="error">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslLoadException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslLoadException.#ctor(System.String,System.String[])">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslLoadException.AppendLineInfoMessage(System.String,System.Xml.Xsl.ISourceLineInfo)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslLoadException.CreateMessage(System.Xml.Xsl.ISourceLineInfo,System.String,System.String[])">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.AttributeSet.MergeContent(System.Xml.Xsl.Xslt.AttributeSet)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.Compiler.#ctor(System.Xml.Xsl.XsltSettings,System.Boolean,System.String)">
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.Compiler.ApplyNsAliases(System.String@,System.String@)">
    <parameter name="nsUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.Compiler.ConstructQName(System.String,System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.Compiler.IsPhantomName(System.Xml.Xsl.Qil.QilName)">
    <parameter name="qname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.Compiler.IsPhantomNamespace(System.String)">
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.Compiler.MergeAttributeSets(System.Xml.Xsl.Xslt.Stylesheet)">
    <parameter name="sheet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.Compiler.MergeGlobalVarPars(System.Xml.Xsl.Xslt.Stylesheet)">
    <parameter name="sheet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.Compiler.MergeWhitespaceRules(System.Xml.Xsl.Xslt.Stylesheet)">
    <parameter name="sheet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.Compiler.MergeWithStylesheet(System.Xml.Xsl.Xslt.Stylesheet)">
    <parameter name="sheet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.Compiler.ParseNameTest(System.String,System.String@,System.String@,System.Xml.Xsl.IErrorHelper)">
    <parameter name="errorHelper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nameTest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.Compiler.ParseQName(System.String,System.String@,System.String@,System.Xml.Xsl.IErrorHelper)">
    <parameter name="errorHelper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="qname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.Compiler.ReportError(System.Xml.Xsl.ISourceLineInfo,System.String,System.String[])">
    <parameter name="lineInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.Compiler.ReportWarning(System.Xml.Xsl.ISourceLineInfo,System.String,System.String[])">
    <parameter name="lineInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.Compiler.SetNsAlias(System.String,System.String,System.String,System.Int32)">
    <parameter name="ssheetNsUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.Compiler.ValidatePiName(System.String,System.Xml.Xsl.IErrorHelper)">
    <parameter name="errorHelper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.CompilerScopeManager`1.AddVariable(System.Xml.Xsl.Qil.QilName,`0)">
    <parameter name="varName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.CompilerScopeManager`1.NamespaceEnumerator.#ctor(System.Xml.Xsl.Xslt.CompilerScopeManager{`0})">
    <parameter name="scope">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.DecimalFormatDecl.#ctor(System.Xml.XmlQualifiedName,System.String,System.String,System.String)">
    <parameter name="characters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.FunctionFocus.StartFocus(System.Collections.Generic.IList{System.Xml.Xsl.Qil.QilNode},System.Xml.Xsl.XslFlags)">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.InvokeGenerator.#ctor(System.Xml.Xsl.Xslt.XsltQilFactory,System.Boolean)">
    <parameter name="f">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.InvokeGenerator.FindActualArg(System.Xml.Xsl.Qil.QilParameter,System.Collections.Generic.IList{System.Xml.Xsl.Xslt.XslNode})">
    <parameter name="formalArg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="actualArgs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.InvokeGenerator.GenerateInvoke(System.Xml.Xsl.Qil.QilFunction,System.Collections.Generic.IList{System.Xml.Xsl.Xslt.XslNode})">
    <parameter name="func">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="actualArgs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.InvokeGenerator.VisitFunction(System.Xml.Xsl.Qil.QilFunction)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.InvokeGenerator.VisitReference(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.KeyMatchBuilder.#ctor(System.Xml.Xsl.XPath.IXPathEnvironment)">
    <parameter name="env">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.KeyMatchBuilder.PathConvertor.#ctor(System.Xml.Xsl.XPath.XPathQilFactory)">
    <parameter name="f">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.KeywordsTable.#ctor(System.Xml.XmlNameTable)">
    <parameter name="nt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.MatcherBuilder.AddPatterns(System.Collections.Generic.List{System.Xml.Xsl.Xslt.TemplateMatch})">
    <parameter name="matches">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.MatcherBuilder.BuildMatcher(System.Xml.Xsl.Qil.QilIterator,System.Collections.Generic.IList{System.Xml.Xsl.Xslt.XslNode},System.Xml.Xsl.Qil.QilNode)">
    <parameter name="actualArgs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.MatcherBuilder.CollectPatterns(System.Xml.Xsl.Xslt.Stylesheet,System.Xml.Xsl.Qil.QilName)">
    <parameter name="sheet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="mode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.MatcherBuilder.CollectPatterns(System.Xml.Xsl.Xslt.Stylesheet,System.Xml.Xsl.Qil.QilName,System.Boolean)">
    <parameter name="sheet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="mode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.MatcherBuilder.IsNoMatch(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="matcher">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.MatcherBuilder.MatchPattern(System.Xml.Xsl.Qil.QilIterator,System.Xml.Xsl.Xslt.TemplateMatch)">
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.MatcherBuilder.MatchPatterns(System.Xml.Xsl.Qil.QilIterator,System.Collections.Generic.List{System.Xml.Xsl.Xslt.Pattern})">
    <parameter name="patternList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.MatcherBuilder.MatchPatterns(System.Xml.Xsl.Qil.QilIterator,System.Xml.Xsl.XmlQueryType,System.Collections.Generic.List{System.Xml.Xsl.Xslt.Pattern},System.Xml.Xsl.Qil.QilNode)">
    <parameter name="patternList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.MatcherBuilder.MatchPatterns(System.Xml.Xsl.Qil.QilIterator,System.Xml.Xsl.XmlQueryType,System.Xml.Xsl.Xslt.PatternBag,System.Xml.Xsl.Qil.QilNode)">
    <parameter name="patternBag">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.MatcherBuilder.MatchPatternsWhosePriorityGreater(System.Xml.Xsl.Qil.QilIterator,System.Collections.Generic.List{System.Xml.Xsl.Xslt.Pattern},System.Xml.Xsl.Qil.QilNode)">
    <parameter name="patternList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="matcher">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.AddDebugVariable(System.Xml.Xsl.Qil.QilName,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.AddImplicitArgs(System.Xml.Xsl.Xslt.XslNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.AddNsDecl(System.Xml.Xsl.Qil.QilList,System.String,System.String)">
    <parameter name="content">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.ChooseBestType(System.Xml.Xsl.Xslt.VarPar)">
    <parameter name="var">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CloneName(System.Xml.Xsl.Qil.QilName)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileAndSortMatches(System.Xml.Xsl.Xslt.Stylesheet)">
    <parameter name="sheet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileApplyTemplates(System.Xml.Xsl.Xslt.XslNodeEx)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileAvt(System.String)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileCallTemplate(System.Xml.Xsl.Xslt.XslNodeEx)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileChoose(System.Xml.Xsl.Xslt.XslNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileCopy(System.Xml.Xsl.Xslt.XslNode)">
    <parameter name="copy">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileCopyOf(System.Xml.Xsl.Xslt.XslNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileDataTypeAttribute(System.String,System.Boolean,System.Xml.Xsl.Qil.QilNode@,System.Xml.Xsl.Qil.QilNode@)">
    <parameter name="select">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileFnDocument(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <parameter name="uris">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileForEach(System.Xml.Xsl.Xslt.XslNodeEx)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileFormatNumber(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <parameter name="formatPicture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileIf(System.Xml.Xsl.Xslt.XslNode)">
    <parameter name="ifNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileInstructions(System.Collections.Generic.IList{System.Xml.Xsl.Xslt.XslNode})">
    <parameter name="instructions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileInstructions(System.Collections.Generic.IList{System.Xml.Xsl.Xslt.XslNode},System.Int32)">
    <parameter name="instructions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileInstructions(System.Collections.Generic.IList{System.Xml.Xsl.Xslt.XslNode},System.Int32,System.Xml.Xsl.Qil.QilList)">
    <parameter name="instructions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="content">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileInstructions(System.Collections.Generic.IList{System.Xml.Xsl.Xslt.XslNode},System.Xml.Xsl.Qil.QilList)">
    <parameter name="content">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="instructions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileList(System.Xml.Xsl.Xslt.XslNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileMessage(System.Xml.Xsl.Xslt.XslNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileMsNodeSet(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileProtoTemplate(System.Xml.Xsl.Xslt.ProtoTemplate)">
    <parameter name="tmpl">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileSingleKey(System.Collections.Generic.List{System.Xml.Xsl.Xslt.Key},System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.XPath.IFocus)">
    <parameter name="defList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="env">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileSingleKey(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.XPath.IFocus)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="env">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileSort(System.Xml.Xsl.Xslt.Sort,System.Xml.Xsl.Qil.QilList,System.Xml.Xsl.Xslt.LoopFocus@)">
    <parameter name="sort">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keyList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileUseAttributeSet(System.Xml.Xsl.Xslt.XslNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileVariable(System.Xml.Xsl.Xslt.XslNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileVarParValue(System.Xml.Xsl.Xslt.XslNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileWhen(System.Xml.Xsl.Xslt.XslNode,System.Xml.Xsl.Qil.QilNode)">
    <parameter name="whenNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileWithParam(System.Xml.Xsl.Xslt.VarPar)">
    <parameter name="withParam">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CompileXPathExpressionWithinAvt(System.String,System.Int32@)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.CreateGlobalVarPar(System.Xml.Xsl.Xslt.VarPar)">
    <parameter name="varPar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.FillupInvokeArgs(System.Collections.Generic.IList{System.Xml.Xsl.Qil.QilNode},System.Collections.Generic.IList{System.Xml.Xsl.Xslt.XslNode},System.Xml.Xsl.Qil.QilList)">
    <parameter name="formalArgs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="actualArgs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="invokeArgs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.GenerateCall(System.Xml.Xsl.Qil.QilFunction,System.Xml.Xsl.Xslt.XslNode)">
    <parameter name="func">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.IsElementAvailable(System.Xml.XmlQualifiedName)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.IsFunctionAvailable(System.String,System.String)">
    <parameter name="nsUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.ReportError(System.String,System.String[])">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.ReportErrorInXPath(System.Xml.Xsl.XslLoadException)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.ReportWarning(System.String,System.String[])">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.ResolvePrefix(System.Boolean,System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.SetLineInfoCheck(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.ISourceLineInfo)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.System#Xml#Xsl#XPath#IXPathEnvironment#ResolveVariable(System.String,System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.ThrowErrorHelper.ReportError(System.String,System.String[])">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilGenerator.ThrowErrorHelper.ReportWarning(System.String,System.String[])">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.QilStrConcatenator.Append(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.ReferenceReplacer.Replace(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilReference,System.Xml.Xsl.Qil.QilReference)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.ReferenceReplacer.VisitReference(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.Scripts.CompileAssembly(System.Collections.Generic.List{System.Xml.Xsl.Xslt.ScriptClass})">
    <parameter name="scriptsForLang">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.Scripts.FixErrorPosition(System.CodeDom.Compiler.CompilerError,System.Collections.Generic.List{System.Xml.Xsl.Xslt.ScriptClass})">
    <parameter name="error">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="scriptsForLang">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.Scripts.GetLanguageName(System.CodeDom.Compiler.CompilerInfo)">
    <parameter name="compilerInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.Scripts.ResolveFunction(System.String,System.String,System.Int32,System.Xml.Xsl.IErrorHelper)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="errorHelper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.Stylesheet.AddTemplate(System.Xml.Xsl.Xslt.Template)">
    <parameter name="template">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.Stylesheet.AddTemplateMatch(System.Xml.Xsl.Xslt.Template,System.Xml.Xsl.Qil.QilLoop)">
    <parameter name="template">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="filter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.Stylesheet.AddVarPar(System.Xml.Xsl.Xslt.VarPar)">
    <parameter name="var">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.TemplateMatch.#ctor(System.Xml.Xsl.Xslt.Template,System.Xml.Xsl.Qil.QilLoop)">
    <parameter name="template">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="filter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.TemplateMatch.TemplateMatchComparer.Compare(System.Xml.Xsl.Xslt.TemplateMatch,System.Xml.Xsl.Xslt.TemplateMatch)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XPathPatternBuilder.#ctor(System.Xml.Xsl.XPath.IXPathEnvironment)">
    <parameter name="environment">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XPathPatternBuilder.CleanAnnotation(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XPathPatternBuilder.FixupFilterBinding(System.Xml.Xsl.Qil.QilLoop,System.Xml.Xsl.Qil.QilNode)">
    <parameter name="filter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XPathPatternBuilder.GetLastParent(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XPathPatternBuilder.GetPriority(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XPathPatternBuilder.JoinStep(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilNode)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XPathPatternBuilder.SetLastParent(System.Xml.Xsl.Qil.QilNode,System.Xml.Xsl.Qil.QilLoop)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XPathPatternBuilder.SetPriority(System.Xml.Xsl.Qil.QilNode,System.Double)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XPathPatternBuilder.Variable(System.String,System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XPathPatternBuilder.XPathPredicateEnvironment.#ctor(System.Xml.Xsl.XPath.IXPathEnvironment)">
    <parameter name="baseEnvironment">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XPathPatternBuilder.XPathPredicateEnvironment.ResolvePrefix(System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XPathPatternBuilder.XPathPredicateEnvironment.ResolveVariable(System.String,System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XPathPatternParser.Parse(System.Xml.Xsl.XPath.XPathScanner,System.Xml.Xsl.Xslt.XPathPatternParser.IPatternBuilder)">
    <parameter name="ptrnBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslAstAnalyzer.AddApplyTemplatesEdge(System.Xml.Xsl.Qil.QilName,System.Xml.Xsl.Xslt.ProtoTemplate)">
    <parameter name="mode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslAstAnalyzer.AddImportDependencies(System.Xml.Xsl.Xslt.Stylesheet,System.Xml.Xsl.Xslt.Template)">
    <parameter name="sheet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="focusDonor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslAstAnalyzer.Analyze(System.Xml.Xsl.Xslt.Compiler)">
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslAstAnalyzer.DepthFirstSearch(System.Xml.Xsl.Xslt.ProtoTemplate)">
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslAstAnalyzer.FillModeFlags(System.Xml.Xsl.Xslt.Stylesheet)">
    <parameter name="sheet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslAstAnalyzer.Graph`1.AddEdge(`0,`0)">
    <parameter name="v1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="v2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslAstAnalyzer.Graph`1.DepthFirstSearch(`0,System.Xml.Xsl.XslFlags)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslAstAnalyzer.Graph`1.GetAdjList(`0)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslAstAnalyzer.NullErrorHelper.ReportError(System.String,System.String[])">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslAstAnalyzer.NullErrorHelper.ReportWarning(System.String,System.String[])">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslAstAnalyzer.ProcessVarPar(System.Xml.Xsl.Xslt.VarPar)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslAstAnalyzer.XPathAnalyzer.Function(System.String,System.String,System.Collections.Generic.IList{System.Xml.Xsl.XslFlags})">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslAstAnalyzer.XPathAnalyzer.ResolvePrefix(System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslAstAnalyzer.XPathAnalyzer.ResolveVariable(System.String,System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslAstAnalyzer.XPathAnalyzer.Variable(System.String,System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslNode.InsertContent(System.Collections.Generic.IEnumerable{System.Xml.Xsl.Xslt.XslNode})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslNodeEx.#ctor(System.Xml.Xsl.Xslt.XslNodeType,System.Xml.Xsl.Qil.QilName,System.Object,System.Xml.Xsl.Xslt.XsltInput.ContextInfo,System.Xml.Xsl.Xslt.XslVersion)">
    <parameter name="ctxInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltInput.#ctor(System.Xml.XmlReader,System.Xml.Xsl.Xslt.Compiler)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltInput.AddExtensionNamespace(System.String)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltInput.ContextInfo.#ctor(System.Xml.Xsl.Xslt.XsltInput)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltInput.ContextInfo.AddNamespace(System.Xml.Xsl.Xslt.XsltInput)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltInput.ContextInfo.SaveExtendedLineInfo(System.Xml.Xsl.Xslt.XsltInput)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltInput.IsNamespace(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltInput.LookupXmlNamespace(System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltInput.ReportError(System.String,System.String[])">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltInput.ReportWarning(System.String,System.String[])">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltInput.SetVersion(System.String,System.String)">
    <parameter name="version">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.AddInstruction(System.Collections.Generic.List{System.Xml.Xsl.Xslt.XslNode},System.Xml.Xsl.Xslt.XslNode)">
    <parameter name="content">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.AttributeSetsDfs(System.Xml.Xsl.Xslt.AttributeSet)">
    <parameter name="attSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.CheckWithParam(System.Collections.Generic.List{System.Xml.Xsl.Xslt.XslNode},System.Xml.Xsl.Xslt.XslNode)">
    <parameter name="content">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="withParam">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.LoadMsAssembly(System.Xml.Xsl.Xslt.ScriptClass)">
    <parameter name="scriptClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.LoadMsUsing(System.Xml.Xsl.Xslt.ScriptClass)">
    <parameter name="scriptClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.LoadStylesheet(System.Uri,System.Boolean)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.LoadStylesheet(System.Xml.XmlReader,System.Boolean)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.ReportError(System.String,System.String[])">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.ReportWarning(System.String,System.String[])">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.SetContent(System.Xml.Xsl.Xslt.XslNode,System.Collections.Generic.List{System.Xml.Xsl.Xslt.XslNode})">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltQilFactory.CheckXsltType(System.Xml.Xsl.Qil.QilNode)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslVisitor`1.Visit(System.Xml.Xsl.Xslt.XslNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslVisitor`1.VisitApplyImports(System.Xml.Xsl.Xslt.XslNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslVisitor`1.VisitApplyTemplates(System.Xml.Xsl.Xslt.XslNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslVisitor`1.VisitAttribute(System.Xml.Xsl.Xslt.NodeCtor)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslVisitor`1.VisitAttributeSet(System.Xml.Xsl.Xslt.AttributeSet)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslVisitor`1.VisitCallTemplate(System.Xml.Xsl.Xslt.XslNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslVisitor`1.VisitChildren(System.Xml.Xsl.Xslt.XslNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslVisitor`1.VisitChoose(System.Xml.Xsl.Xslt.XslNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslVisitor`1.VisitComment(System.Xml.Xsl.Xslt.XslNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslVisitor`1.VisitCopy(System.Xml.Xsl.Xslt.XslNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslVisitor`1.VisitCopyOf(System.Xml.Xsl.Xslt.XslNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslVisitor`1.VisitElement(System.Xml.Xsl.Xslt.NodeCtor)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslVisitor`1.VisitError(System.Xml.Xsl.Xslt.XslNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslVisitor`1.VisitForEach(System.Xml.Xsl.Xslt.XslNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslVisitor`1.VisitIf(System.Xml.Xsl.Xslt.XslNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslVisitor`1.VisitKey(System.Xml.Xsl.Xslt.Key)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslVisitor`1.VisitList(System.Xml.Xsl.Xslt.XslNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslVisitor`1.VisitLiteralAttribute(System.Xml.Xsl.Xslt.XslNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslVisitor`1.VisitLiteralElement(System.Xml.Xsl.Xslt.XslNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslVisitor`1.VisitMessage(System.Xml.Xsl.Xslt.XslNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslVisitor`1.VisitNop(System.Xml.Xsl.Xslt.XslNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslVisitor`1.VisitNumber(System.Xml.Xsl.Xslt.Number)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslVisitor`1.VisitOtherwise(System.Xml.Xsl.Xslt.XslNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslVisitor`1.VisitParam(System.Xml.Xsl.Xslt.VarPar)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslVisitor`1.VisitPI(System.Xml.Xsl.Xslt.XslNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslVisitor`1.VisitSort(System.Xml.Xsl.Xslt.Sort)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslVisitor`1.VisitTemplate(System.Xml.Xsl.Xslt.Template)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslVisitor`1.VisitText(System.Xml.Xsl.Xslt.Text)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslVisitor`1.VisitUnknown(System.Xml.Xsl.Xslt.XslNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslVisitor`1.VisitUseAttributeSet(System.Xml.Xsl.Xslt.XslNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslVisitor`1.VisitValueOf(System.Xml.Xsl.Xslt.XslNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslVisitor`1.VisitValueOfDoe(System.Xml.Xsl.Xslt.XslNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslVisitor`1.VisitVariable(System.Xml.Xsl.Xslt.VarPar)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XslVisitor`1.VisitWithParam(System.Xml.Xsl.Xslt.VarPar)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Action.Execute(System.Xml.Xsl.XsltOld.Processor,System.Xml.Xsl.XsltOld.ActionFrame)">
    <parameter name="processor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="frame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Action.GetDbgData(System.Xml.Xsl.XsltOld.ActionFrame)">
    <parameter name="frame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Action.ReplaceNamespaceAlias(System.Xml.Xsl.XsltOld.Compiler)">
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.ActionFrame.Execute(System.Xml.Xsl.XsltOld.Processor)">
    <parameter name="processor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.ActionFrame.GetParameter(System.Xml.XmlQualifiedName)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.ActionFrame.Inherit(System.Xml.Xsl.XsltOld.ActionFrame)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.ActionFrame.Init(System.Xml.Xsl.XsltOld.ActionFrame,System.Xml.XPath.XPathNodeIterator)">
    <parameter name="containerFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.ActionFrame.NewNextNode(System.Xml.Xsl.XsltOld.Processor)">
    <parameter name="proc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.ActionFrame.NextNode(System.Xml.Xsl.XsltOld.Processor)">
    <parameter name="proc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.ActionFrame.SetParameter(System.Xml.XmlQualifiedName,System.Object)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.ActionFrame.SortNewNodeSet(System.Xml.Xsl.XsltOld.Processor,System.Collections.ArrayList)">
    <parameter name="proc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="sortarray">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.ApplyTemplatesAction.CompileContent(System.Xml.Xsl.XsltOld.Compiler)">
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.AttributeSetAction.CompileContent(System.Xml.Xsl.XsltOld.Compiler)">
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.AttributeSetAction.Merge(System.Xml.Xsl.XsltOld.AttributeSetAction)">
    <parameter name="attributeAction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Avt.#ctor(System.Collections.ArrayList)">
    <parameter name="eventList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Avt.Evaluate(System.Xml.Xsl.XsltOld.Processor,System.Xml.Xsl.XsltOld.ActionFrame)">
    <parameter name="processor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="frame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.BeginEvent.#ctor(System.Xml.Xsl.XsltOld.Compiler)">
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.BeginEvent.Output(System.Xml.Xsl.XsltOld.Processor,System.Xml.Xsl.XsltOld.ActionFrame)">
    <parameter name="frame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.BuilderInfo.Initialize(System.Xml.Xsl.XsltOld.BuilderInfo)">
    <parameter name="src">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.CallTemplateAction.CompileContent(System.Xml.Xsl.XsltOld.Compiler)">
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.ChooseAction.CompileConditions(System.Xml.Xsl.XsltOld.Compiler)">
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.CompiledAction.CheckEmpty(System.Xml.Xsl.XsltOld.Compiler)">
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.CompiledAction.Compile(System.Xml.Xsl.XsltOld.Compiler)">
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.CompiledAction.CompileAttribute(System.Xml.Xsl.XsltOld.Compiler)">
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.CompiledAction.CompileAttributes(System.Xml.Xsl.XsltOld.Compiler)">
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.AddAttributeSet(System.Xml.Xsl.XsltOld.AttributeSetAction)">
    <parameter name="attributeSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.AddBooleanQuery(System.String)">
    <parameter name="xpathQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.AddDecimalFormat(System.Xml.XmlQualifiedName,System.Xml.Xsl.Runtime.DecimalFormat)">
    <parameter name="formatinfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.AddDocumentURI(System.String)">
    <parameter name="href">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.AddNamespaceAlias(System.String,System.Xml.Xsl.XsltOld.NamespaceInfo)">
    <parameter name="StylesheetURI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="AliasInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.AddQuery(System.String)">
    <parameter name="xpathQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.AddQuery(System.String,System.Boolean,System.Boolean,System.Boolean)">
    <parameter name="xpathQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.AddScript(System.String,System.Xml.Xsl.XsltOld.ScriptingLanguage,System.String,System.String,System.Int32)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.AddStringQuery(System.String)">
    <parameter name="xpathQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.AddTemplate(System.Xml.Xsl.XsltOld.TemplateAction)">
    <parameter name="template">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.BeginTemplate(System.Xml.Xsl.XsltOld.TemplateAction)">
    <parameter name="template">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.Compile(System.Xml.Xsl.XsltOld.NavigatorInput,System.Xml.XmlResolver,System.Security.Policy.Evidence)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.CompileAssembly(System.Xml.Xsl.XsltOld.ScriptingLanguage,System.Collections.Hashtable,System.String,System.Security.Policy.Evidence)">
    <parameter name="typeDecls">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.FindNamespaceAlias(System.String)">
    <parameter name="StylesheetURI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.FixCompilerError(System.CodeDom.Compiler.CompilerError)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.GetNextAvtLex(System.String,System.Int32@,System.Text.StringBuilder,System.Boolean@)">
    <parameter name="avt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="lex">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.GetNsAlias(System.String@)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.getTextLex(System.String,System.Int32@,System.Text.StringBuilder)">
    <parameter name="avt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="lex">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.getXPathLex(System.String,System.Int32@,System.Text.StringBuilder)">
    <parameter name="avt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="lex">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.GetYesNo(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.InsertVariable(System.Xml.Xsl.XsltOld.VariableAction)">
    <parameter name="variable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.IsCircularReference(System.String)">
    <parameter name="href">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.IsExcludedNamespace(System.String)">
    <parameter name="nspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.IsExtensionNamespace(System.String)">
    <parameter name="nspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.IsNamespaceAlias(System.String)">
    <parameter name="StylesheetURI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.PushInputDocument(System.Xml.Xsl.XsltOld.NavigatorInput)">
    <parameter name="newInput">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.RemoveDocumentURI(System.String)">
    <parameter name="href">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.ResolveXmlNamespace(System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Compiler.ValidateExtensionNamespace(System.String)">
    <parameter name="nsUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.ContainerAction.AddEvents(System.Collections.ArrayList)">
    <parameter name="copyEvents">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.ContainerAction.AddScript(System.Xml.Xsl.XsltOld.Compiler)">
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.ContainerAction.CheckAttribute(System.Boolean,System.Xml.Xsl.XsltOld.Compiler)">
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.ContainerAction.CheckDuplicateParams(System.Xml.XmlQualifiedName)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.ContainerAction.CompileDecimalFormat(System.Xml.Xsl.XsltOld.Compiler)">
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.ContainerAction.CompileDocument(System.Xml.Xsl.XsltOld.Compiler,System.Boolean)">
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.ContainerAction.CompileImport(System.Xml.Xsl.XsltOld.Compiler,System.Uri,System.Int32)">
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.ContainerAction.CompileImports(System.Xml.Xsl.XsltOld.Compiler)">
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.ContainerAction.CompileInclude(System.Xml.Xsl.XsltOld.Compiler)">
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.ContainerAction.CompileInstruction(System.Xml.Xsl.XsltOld.Compiler)">
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.ContainerAction.CompileKey(System.Xml.Xsl.XsltOld.Compiler)">
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.ContainerAction.CompileLiteral(System.Xml.Xsl.XsltOld.Compiler)">
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.ContainerAction.CompileLiteralAttributesAndNamespaces(System.Xml.Xsl.XsltOld.Compiler)">
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.ContainerAction.CompileNamespaceAlias(System.Xml.Xsl.XsltOld.Compiler)">
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.ContainerAction.CompileOnceTemplate(System.Xml.Xsl.XsltOld.Compiler)">
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.ContainerAction.CompileOutput(System.Xml.Xsl.XsltOld.Compiler)">
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.ContainerAction.CompileSingleTemplate(System.Xml.Xsl.XsltOld.Compiler)">
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.ContainerAction.CompileSpace(System.Xml.Xsl.XsltOld.Compiler,System.Boolean)">
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.ContainerAction.CompileStylesheetAttributes(System.Xml.Xsl.XsltOld.Compiler)">
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.ContainerAction.CompileTemplate(System.Xml.Xsl.XsltOld.Compiler)">
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.ContainerAction.CompileTopLevelElements(System.Xml.Xsl.XsltOld.Compiler)">
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.ContainerAction.NameTest(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.CopyAttributesAction.SendBeginEvent(System.Xml.Xsl.XsltOld.Processor,System.Xml.XPath.XPathNavigator)">
    <parameter name="processor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.CopyAttributesAction.SendEndEvent(System.Xml.Xsl.XsltOld.Processor,System.Xml.XPath.XPathNavigator)">
    <parameter name="processor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.CopyAttributesAction.SendTextEvent(System.Xml.Xsl.XsltOld.Processor,System.Xml.XPath.XPathNavigator)">
    <parameter name="processor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.CopyCodeAction.AddEvents(System.Collections.ArrayList)">
    <parameter name="copyEvents">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.CopyNodeSetAction.SendBeginEvent(System.Xml.Xsl.XsltOld.Processor,System.Xml.XPath.XPathNavigator)">
    <parameter name="processor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.CopyNodeSetAction.SendEndEvent(System.Xml.Xsl.XsltOld.Processor,System.Xml.XPath.XPathNavigator)">
    <parameter name="processor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.CopyNodeSetAction.SendTextEvent(System.Xml.Xsl.XsltOld.Processor,System.Xml.XPath.XPathNavigator)">
    <parameter name="processor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.DbgCompiler.ApplyImportsActionDbg.GetDbgData(System.Xml.Xsl.XsltOld.ActionFrame)">
    <parameter name="frame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.DbgCompiler.ApplyTemplatesActionDbg.GetDbgData(System.Xml.Xsl.XsltOld.ActionFrame)">
    <parameter name="frame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.DbgCompiler.AttributeActionDbg.GetDbgData(System.Xml.Xsl.XsltOld.ActionFrame)">
    <parameter name="frame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.DbgCompiler.AttributeSetActionDbg.GetDbgData(System.Xml.Xsl.XsltOld.ActionFrame)">
    <parameter name="frame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.DbgCompiler.BeginEventDbg.#ctor(System.Xml.Xsl.XsltOld.Compiler)">
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.DbgCompiler.CallTemplateActionDbg.GetDbgData(System.Xml.Xsl.XsltOld.ActionFrame)">
    <parameter name="frame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.DbgCompiler.CommentActionDbg.GetDbgData(System.Xml.Xsl.XsltOld.ActionFrame)">
    <parameter name="frame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.DbgCompiler.CopyActionDbg.GetDbgData(System.Xml.Xsl.XsltOld.ActionFrame)">
    <parameter name="frame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.DbgCompiler.CopyOfActionDbg.GetDbgData(System.Xml.Xsl.XsltOld.ActionFrame)">
    <parameter name="frame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.DbgCompiler.DefineVariable(System.Xml.Xsl.XsltOld.VariableAction)">
    <parameter name="variable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.DbgCompiler.ElementActionDbg.GetDbgData(System.Xml.Xsl.XsltOld.ActionFrame)">
    <parameter name="frame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.DbgCompiler.ForEachActionDbg.GetDbgData(System.Xml.Xsl.XsltOld.ActionFrame)">
    <parameter name="frame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.DbgCompiler.IfActionDbg.GetDbgData(System.Xml.Xsl.XsltOld.ActionFrame)">
    <parameter name="frame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.DbgCompiler.MessageActionDbg.GetDbgData(System.Xml.Xsl.XsltOld.ActionFrame)">
    <parameter name="frame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.DbgCompiler.NewInstructionActionDbg.GetDbgData(System.Xml.Xsl.XsltOld.ActionFrame)">
    <parameter name="frame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.DbgCompiler.NumberActionDbg.GetDbgData(System.Xml.Xsl.XsltOld.ActionFrame)">
    <parameter name="frame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.DbgCompiler.ProcessingInstructionActionDbg.GetDbgData(System.Xml.Xsl.XsltOld.ActionFrame)">
    <parameter name="frame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.DbgCompiler.RootActionDbg.GetDbgData(System.Xml.Xsl.XsltOld.ActionFrame)">
    <parameter name="frame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.DbgCompiler.SortActionDbg.GetDbgData(System.Xml.Xsl.XsltOld.ActionFrame)">
    <parameter name="frame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.DbgCompiler.TemplateActionDbg.GetDbgData(System.Xml.Xsl.XsltOld.ActionFrame)">
    <parameter name="frame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.DbgCompiler.TextActionDbg.GetDbgData(System.Xml.Xsl.XsltOld.ActionFrame)">
    <parameter name="frame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.DbgCompiler.TextEventDbg.#ctor(System.Xml.Xsl.XsltOld.Compiler)">
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.DbgCompiler.TextEventDbg.Output(System.Xml.Xsl.XsltOld.Processor,System.Xml.Xsl.XsltOld.ActionFrame)">
    <parameter name="frame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.DbgCompiler.UseAttributeSetsActionDbg.GetDbgData(System.Xml.Xsl.XsltOld.ActionFrame)">
    <parameter name="frame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.DbgCompiler.ValueOfActionDbg.GetDbgData(System.Xml.Xsl.XsltOld.ActionFrame)">
    <parameter name="frame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.DbgCompiler.VariableActionDbg.GetDbgData(System.Xml.Xsl.XsltOld.ActionFrame)">
    <parameter name="frame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.DbgCompiler.WithParamActionDbg.GetDbgData(System.Xml.Xsl.XsltOld.ActionFrame)">
    <parameter name="frame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.DbgData.#ctor(System.Xml.Xsl.XsltOld.Compiler)">
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.EndEvent.Output(System.Xml.Xsl.XsltOld.Processor,System.Xml.Xsl.XsltOld.ActionFrame)">
    <parameter name="frame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Event.OnInstructionExecute(System.Xml.Xsl.XsltOld.Processor)">
    <parameter name="processor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Event.Output(System.Xml.Xsl.XsltOld.Processor,System.Xml.Xsl.XsltOld.ActionFrame)">
    <parameter name="processor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="frame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Event.ReplaceNamespaceAlias(System.Xml.Xsl.XsltOld.Compiler)">
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.ForEachAction.CompileSortElements(System.Xml.Xsl.XsltOld.Compiler)">
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.HtmlAttributeProps.GetProps(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.HtmlElementProps.GetProps(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.InputScope.InsertExcludedNamespace(System.String)">
    <parameter name="nspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.InputScope.InsertExtensionNamespace(System.String)">
    <parameter name="nspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.InputScope.InsertVariable(System.Xml.Xsl.XsltOld.VariableAction)">
    <parameter name="variable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.InputScope.IsExcludedNamespace(System.String)">
    <parameter name="nspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.InputScope.IsExtensionNamespace(System.String)">
    <parameter name="nspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.InputScopeManager.InsertExcludedNamespaces(System.String[])">
    <parameter name="nsList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.InputScopeManager.InsertExtensionNamespaces(System.String[])">
    <parameter name="nsList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.InputScopeManager.IsExcludedNamespace(System.String)">
    <parameter name="nspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.InputScopeManager.IsExtensionNamespace(System.String)">
    <parameter name="nspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.InputScopeManager.ResolveXmlNamespace(System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.NamespaceEvent.#ctor(System.Xml.Xsl.XsltOld.NavigatorInput)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.NamespaceEvent.Output(System.Xml.Xsl.XsltOld.Processor,System.Xml.Xsl.XsltOld.ActionFrame)">
    <parameter name="frame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.NavigatorInput.#ctor(System.Xml.XPath.XPathNavigator)">
    <parameter name="navigator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.NavigatorInput.#ctor(System.Xml.XPath.XPathNavigator,System.String,System.Xml.Xsl.XsltOld.InputScope)">
    <parameter name="navigator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="baseUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.NavigatorOutput.RecordDone(System.Xml.Xsl.XsltOld.RecordBuilder)">
    <parameter name="record">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.NewInstructionAction.CompileSelectiveTemplate(System.Xml.Xsl.XsltOld.Compiler)">
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.NumberAction.checkFrom(System.Xml.Xsl.XsltOld.Processor,System.Xml.XPath.XPathNavigator)">
    <parameter name="processor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.NumberAction.mapFormatToken(System.String,System.Int32,System.Int32,System.Xml.Xsl.Runtime.NumberingSequence@,System.Int32@)">
    <parameter name="wsToken">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.NumberAction.MatchCountKey(System.Xml.Xsl.XsltOld.Processor,System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator)">
    <parameter name="processor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="contextNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.NumberAction.moveToCount(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltOld.Processor,System.Xml.XPath.XPathNavigator)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="processor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="contextNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.NumberAction.numberAny(System.Xml.Xsl.XsltOld.Processor,System.Xml.Xsl.XsltOld.ActionFrame)">
    <parameter name="processor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="frame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.NumberAction.numberCount(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltOld.Processor,System.Xml.XPath.XPathNavigator)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="processor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="contextNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.NumberAction.SimplifyValue(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.OutKeywords.#ctor(System.Xml.XmlNameTable)">
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.OutputScopeManager.#ctor(System.Xml.XmlNameTable,System.Xml.Xsl.XsltOld.OutKeywords)">
    <parameter name="atoms">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.OutputScopeManager.GeneratePrefix(System.String)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.PrefixQName.ParseQualifiedName(System.String,System.String@,System.String@)">
    <parameter name="qname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.PrefixQName.SetQName(System.String)">
    <parameter name="qname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.PrefixQName.ValidatePrefix(System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Processor.#ctor(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver,System.Xml.Xsl.XsltOld.Stylesheet,System.Collections.Generic.List{System.Xml.Xsl.XsltOld.TheQuery},System.Xml.Xsl.XsltOld.RootAction,System.Xml.Xsl.XsltOld.Debugger.IXsltDebugger)">
    <parameter name="stylesheet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="queryStore">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="rootAction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Processor.CopyBeginEvent(System.Xml.XPath.XPathNavigator,System.Boolean)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Processor.CopyEndEvent(System.Xml.XPath.XPathNavigator)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Processor.CopyTextEvent(System.Xml.XPath.XPathNavigator)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Processor.ElementValueWithoutWS(System.Xml.XPath.XPathNavigator,System.Text.StringBuilder)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Processor.EvaluateBoolean(System.Xml.Xsl.XsltOld.ActionFrame,System.Int32)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Processor.Execute(System.IO.Stream)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Processor.Execute(System.IO.TextWriter)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Processor.Execute(System.Xml.XmlWriter)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Processor.GetExtensionObject(System.String)">
    <parameter name="nsUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Processor.GetParameter(System.Xml.XmlQualifiedName)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Processor.GetScriptObject(System.String)">
    <parameter name="nsUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Processor.GetVariableValue(System.Xml.Xsl.XsltOld.VariableAction)">
    <parameter name="variable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Processor.IsRoot(System.Xml.XPath.XPathNavigator)">
    <parameter name="navigator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Processor.PushActionFrame(System.Xml.Xsl.XsltOld.ActionFrame)">
    <parameter name="container">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Processor.PushActionFrame(System.Xml.Xsl.XsltOld.ActionFrame,System.Xml.XPath.XPathNodeIterator)">
    <parameter name="container">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Processor.SetParameter(System.Xml.XmlQualifiedName,System.Object)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Processor.ValueOf(System.Xml.XPath.XPathNavigator)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Processor.ValueOf(System.Xml.Xsl.XsltOld.ActionFrame,System.Int32)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.ReaderOutput.#ctor(System.Xml.Xsl.XsltOld.Processor)">
    <parameter name="processor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.ReaderOutput.GetAttribute(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.ReaderOutput.GetAttribute(System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.Xsl.XsltOld.ReaderOutput.Item(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.Xsl.XsltOld.ReaderOutput.Item(System.String,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.ReaderOutput.MoveToAttribute(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.ReaderOutput.MoveToAttribute(System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.ReaderOutput.RecordDone(System.Xml.Xsl.XsltOld.RecordBuilder)">
    <parameter name="record">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.RootAction.AddDecimalFormat(System.Xml.XmlQualifiedName,System.Xml.Xsl.Runtime.DecimalFormat)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="formatinfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.RootAction.CheckAttributeSets_RecurceInContainer(System.Collections.Hashtable,System.Xml.Xsl.XsltOld.ContainerAction)">
    <parameter name="container">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="markTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.RootAction.CheckAttributeSets_RecurceInList(System.Collections.Hashtable,System.Collections.ICollection)">
    <parameter name="markTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="setQNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.RootAction.MirgeAttributeSets(System.Xml.Xsl.XsltOld.Stylesheet)">
    <parameter name="stylesheet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.RootAction.PorcessAttributeSets(System.Xml.Xsl.XsltOld.Stylesheet)">
    <parameter name="rootStylesheet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.SequentialOutput.#ctor(System.Xml.Xsl.XsltOld.Processor)">
    <parameter name="processor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.SequentialOutput.CacheOuptutProps(System.Xml.Xsl.XsltOld.XsltOutput)">
    <parameter name="output">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.SequentialOutput.CacheRecord(System.Xml.Xsl.XsltOld.RecordBuilder)">
    <parameter name="record">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.SequentialOutput.DecideDefaultOutput(System.Xml.Xsl.XsltOld.BuilderInfo)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.SequentialOutput.Indent(System.Xml.Xsl.XsltOld.RecordBuilder)">
    <parameter name="record">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.SequentialOutput.OutputRecord(System.Xml.Xsl.XsltOld.BuilderInfo)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.SequentialOutput.OutputRecord(System.Xml.Xsl.XsltOld.RecordBuilder)">
    <parameter name="record">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.SequentialOutput.RecordDone(System.Xml.Xsl.XsltOld.RecordBuilder)">
    <parameter name="record">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.SequentialOutput.Write(System.String)">
    <parameter name="outputText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.SequentialOutput.WriteAttributes(System.Collections.ArrayList,System.Int32,System.Xml.Xsl.XsltOld.HtmlElementProps)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.SequentialOutput.WriteCData(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.SequentialOutput.WriteCDataSection(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.SequentialOutput.WriteDoctype(System.Xml.Xsl.XsltOld.BuilderInfo)">
    <parameter name="mainNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.SequentialOutput.WriteEndElement(System.Xml.Xsl.XsltOld.RecordBuilder)">
    <parameter name="record">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.SequentialOutput.WriteHtmlAttributeValue(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.SequentialOutput.WriteHtmlUri(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.SequentialOutput.WriteName(System.String,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.SequentialOutput.WriteProcessingInstruction(System.Xml.Xsl.XsltOld.BuilderInfo)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.SequentialOutput.WriteProcessingInstruction(System.Xml.Xsl.XsltOld.RecordBuilder)">
    <parameter name="record">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.SequentialOutput.WriteStartElement(System.Xml.Xsl.XsltOld.RecordBuilder)">
    <parameter name="record">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.SequentialOutput.WriteTextNode(System.Xml.Xsl.XsltOld.BuilderInfo)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.SequentialOutput.WriteTextNode(System.Xml.Xsl.XsltOld.RecordBuilder)">
    <parameter name="record">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.SequentialOutput.WriteWithReplace(System.String,System.Char[],System.String[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="find">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="replace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.SequentialOutput.WriteXmlAttributeValue(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.SortAction.ParseDataType(System.String,System.Xml.Xsl.XsltOld.InputScopeManager)">
    <parameter name="manager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.StringOutput.#ctor(System.Xml.Xsl.XsltOld.Processor)">
    <parameter name="processor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.StringOutput.Write(System.String)">
    <parameter name="outputText">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Stylesheet.AddAttributeSet(System.Xml.Xsl.XsltOld.AttributeSetAction)">
    <parameter name="attributeSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Stylesheet.AddSpace(System.Xml.Xsl.XsltOld.Compiler,System.String,System.Double,System.Boolean)">
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Stylesheet.AddTemplate(System.Xml.Xsl.XsltOld.TemplateAction)">
    <parameter name="template">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.Stylesheet.PreserveWhiteSpace(System.Xml.Xsl.XsltOld.Processor,System.Xml.XPath.XPathNavigator)">
    <parameter name="proc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.TemplateAction.AnalyzePriority(System.Xml.Xsl.XsltOld.Compiler)">
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.TemplateAction.CompileParameters(System.Xml.Xsl.XsltOld.Compiler)">
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.TemplateAction.CompileSingle(System.Xml.Xsl.XsltOld.Compiler)">
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.TemplateLookupAction.BuiltInTemplate(System.Xml.XPath.XPathNavigator)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.TemplateManager.TemplateComparer.Compare(System.Object,System.Object)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.TextAction.CompileContent(System.Xml.Xsl.XsltOld.Compiler)">
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.TextEvent.#ctor(System.Xml.Xsl.XsltOld.Compiler)">
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.TextEvent.Evaluate(System.Xml.Xsl.XsltOld.Processor,System.Xml.Xsl.XsltOld.ActionFrame)">
    <parameter name="processor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="frame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.TextOnlyOutput.#ctor(System.Xml.Xsl.XsltOld.Processor,System.IO.Stream)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.TextOnlyOutput.#ctor(System.Xml.Xsl.XsltOld.Processor,System.IO.TextWriter)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.TextOnlyOutput.RecordDone(System.Xml.Xsl.XsltOld.RecordBuilder)">
    <parameter name="record">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.TextOutput.#ctor(System.Xml.Xsl.XsltOld.Processor,System.IO.Stream)">
    <parameter name="processor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.TextOutput.#ctor(System.Xml.Xsl.XsltOld.Processor,System.IO.TextWriter)">
    <parameter name="processor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.TheQuery.#ctor(MS.Internal.Xml.XPath.CompiledXpathExpr,System.Xml.Xsl.XsltOld.InputScopeManager)">
    <parameter name="manager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.WriterOutput.#ctor(System.Xml.Xsl.XsltOld.Processor,System.Xml.XmlWriter)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.WriterOutput.RecordDone(System.Xml.Xsl.XsltOld.RecordBuilder)">
    <parameter name="record">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.WriterOutput.WriteAttributes(System.Collections.ArrayList,System.Int32)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.XsltCompileContext.AddKeyValue(System.Collections.Hashtable,System.String,System.Xml.XPath.XPathNavigator,System.Boolean)">
    <parameter name="keyTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.XsltCompileContext.ElementAvailable(System.String)">
    <parameter name="qname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.XsltCompileContext.EvaluateKey(System.Xml.XPath.XPathNavigator,MS.Internal.Xml.XPath.Query,System.String,MS.Internal.Xml.XPath.Query,System.Collections.Hashtable)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="matchExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="useExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="keyTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.XsltCompileContext.FindBestMethod(System.Reflection.MethodInfo[],System.Boolean,System.Boolean,System.String,System.Xml.XPath.XPathResultType[])">
    <parameter name="methods">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.XsltCompileContext.FuncCurrent.Invoke(System.Xml.Xsl.XsltContext,System.Object[],System.Xml.XPath.XPathNavigator)">
    <parameter name="docContext">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.XsltCompileContext.FuncDocument.Invoke(System.Xml.Xsl.XsltContext,System.Object[],System.Xml.XPath.XPathNavigator)">
    <parameter name="docContext">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.XsltCompileContext.FuncExtension.#ctor(System.Object,System.Reflection.MethodInfo,System.Security.PermissionSet)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.XsltCompileContext.FuncExtension.Invoke(System.Xml.Xsl.XsltContext,System.Object[],System.Xml.XPath.XPathNavigator)">
    <parameter name="docContext">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="xsltContext">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.XsltCompileContext.FuncFormatNumber.Invoke(System.Xml.Xsl.XsltContext,System.Object[],System.Xml.XPath.XPathNavigator)">
    <parameter name="docContext">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.XsltCompileContext.FunctionAvailable(System.String)">
    <parameter name="qname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.XsltCompileContext.FuncUnEntityUri.Invoke(System.Xml.Xsl.XsltContext,System.Object[],System.Xml.XPath.XPathNavigator)">
    <parameter name="docContext">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="xsltContext">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.XsltCompileContext.XsltFunctionImpl.ConvertToXPathType(System.Object,System.Xml.XPath.XPathResultType,System.TypeCode)">
    <parameter name="val">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.XsltCompileContext.XsltFunctionImpl.IteratorToString(System.Xml.XPath.XPathNodeIterator)">
    <parameter name="it">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.XsltOutput.Execute(System.Xml.Xsl.XsltOld.Processor,System.Xml.Xsl.XsltOld.ActionFrame)">
    <parameter name="processor">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="frame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltOld.XsltOutput.ParseOutputMethod(System.String,System.Xml.Xsl.XsltOld.Compiler)">
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslTransformException.#ctor(System.Exception,System.String,System.String[])">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslTransformException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslTransformException.#ctor(System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslTransformException.#ctor(System.String,System.String[])">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.XslAnalyzeString">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.XslDocument">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.XslForEachGroup">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.XslNamespace">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.XslNextMatch">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.XslPerformSort">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.XslResultDocument">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.XslSequence">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XmlILCommand.Execute(System.Object,System.Xml.XmlResolver,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltInput.#ctor(System.Xml.XmlReader,System.Xml.Xsl.Xslt.Compiler,System.Xml.Xsl.Xslt.KeywordsTable)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="atoms">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.Load(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.Xslt.XsltLoader.Load(System.Xml.Xsl.Xslt.Compiler,System.Object,System.Xml.XmlResolver)">
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlNode.CreateNavigator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlWriter.Create(System.IO.Stream)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="output">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.Create(System.IO.TextWriter)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="output">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.Create(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="outputFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="output">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.Create(System.IO.Stream,System.Xml.XmlWriterSettings)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="output">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.Create(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="output">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.Create(System.String,System.Xml.XmlWriterSettings)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="outputFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.Create(System.Text.StringBuilder,System.Xml.XmlWriterSettings)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="output">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.XPath.XPathNavigator.BaseURI">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XPath.XPathNavigator.NamespaceURI">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlNamespaceManager.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlNamespaceManager.LookupPrefix(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.ParseUnexpectedToken">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.ParseUnexpectedToken(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlWriter.XmlLang">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XPath.XPathNodeIterator.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.IXmlSerializable.GetSchema">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlNamedNodeMap.GetNamedItem(System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNamedNodeMap.GetNamedItem(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
    <parameter name="localName">
    </parameter>
    <parameter name="namespaceURI">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNamedNodeMap.Item(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.PureAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Schema.XmlSchema.AttributeGroups">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Schema.XmlSchema.Attributes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Schema.XmlSchema.Elements">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Schema.XmlSchema.SchemaTypes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Names">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Values">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaObjectTable.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Schema.XmlSchemaSet.GlobalAttributes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Schema.XmlSchemaSet.GlobalElements">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Schema.XmlSchemaSet.GlobalTypes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaSet.Schemas">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaSet.Schemas(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="targetNamespace">
    </parameter>
  </member>
  <member name="P:System.Xml.XmlDocument.Schemas">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlDocument.CreateAttribute(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.CreateAttribute(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="qualifiedName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceURI">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.CreateAttribute(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
    </parameter>
    <parameter name="namespaceURI">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.CreateCDataSection(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlDocument.CreateComment(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlDocument.CreateDocumentFragment">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlDocument.CreateDocumentType(System.String,System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
    </parameter>
    <parameter name="publicId">
    </parameter>
    <parameter name="systemId">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.CreateElement(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.CreateElement(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="qualifiedName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceURI">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.CreateElement(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
    </parameter>
    <parameter name="namespaceURI">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.CreateEntityReference(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.CreateNode(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="nodeTypeString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceURI">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceURI">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
    </parameter>
    <parameter name="namespaceURI">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.CreateProcessingInstruction(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="target">
    </parameter>
    <parameter name="data">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.CreateSignificantWhitespace(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="text">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.CreateTextNode(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlDocument.CreateWhitespace(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="text">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.CreateXmlDeclaration(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="version">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="encoding">
    </parameter>
    <parameter name="standalone">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.GetElementsByTagName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.GetElementsByTagName(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.XmlDocumentType.InternalSubset">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlDocumentType.Notations">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlDocumentType.PublicId">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlDocumentType.SystemId">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlElement.GetAttribute(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlElement.GetAttribute(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="localName">
    </parameter>
    <parameter name="namespaceURI">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlElement.GetElementsByTagName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlElement.GetElementsByTagName(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.XmlNamespaceManager.DefaultNamespace">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlNameTable.Add(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNameTable.Add(System.Char[],System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.XmlNode.BaseURI">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlNode.ChildNodes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlNode.InnerText">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlNode.LocalName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlNode.Name">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlNode.NamespaceURI">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlNode.SchemaInfo">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlNode.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlNode.CloneNode(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNode.GetPrefixOfNamespace(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="newChild">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="newChild">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="newChild">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="oldChild">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="oldChild">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="newChild">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.XmlParserContext.BaseURI">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlParserContext.DocTypeName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlParserContext.InternalSubset">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlParserContext.PublicId">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlParserContext.SystemId">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlParserContext.XmlLang">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlReader.LocalName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlReader.NamespaceURI">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlReader.ValueType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlReader.Create(System.IO.Stream)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.Create(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="inputUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="inputUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="inputUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.GetAttribute(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.ReadSubtree">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlReaderSettings.Schemas">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlReaderSettings.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlText.SplitText(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="output">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.Create(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="output">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.XmlWriterSettings.IndentChars">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlWriterSettings.NewLineChars">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlWriterSettings.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XPath.XPathExpression.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XPath.XPathExpression.Compile(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="xpath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathExpression.Compile(System.String,System.Xml.IXmlNamespaceResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="xpath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.XPath.XPathNavigator.LocalName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XPath.XPathNavigator.Name">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XPath.XPathNavigator.NavigatorComparer">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XPath.XPathNavigator.XmlLang">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.CreateNavigator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.GetAttribute(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.GetNamespace(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.String,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.String,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathNodeInfoTable.Atomize(MS.Internal.Xml.Cache.XPathNodeInfoAtom)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathNodeInfoTable.Create(System.String,System.String,System.String,System.String,MS.Internal.Xml.Cache.XPathNode[],MS.Internal.Xml.Cache.XPathNode[],MS.Internal.Xml.Cache.XPathNode[],System.Xml.XPath.XPathDocument,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.BooleanFunctions.Evaluate(System.Xml.XPath.XPathNodeIterator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:MS.Internal.Xml.XPath.CacheAxisQuery.Evaluate(System.Xml.XPath.XPathNodeIterator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:MS.Internal.Xml.XPath.CacheChildrenQuery.GetNextInput">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:MS.Internal.Xml.XPath.ClonableStack`1.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:MS.Internal.Xml.XPath.CompiledXpathExpr.UndefinedXsltContext.LookupNamespace(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.ContextQuery.Evaluate(System.Xml.XPath.XPathNodeIterator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:MS.Internal.Xml.XPath.DocumentOrderQuery.Evaluate(System.Xml.XPath.XPathNodeIterator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:MS.Internal.Xml.XPath.EmptyQuery.Evaluate(System.Xml.XPath.XPathNodeIterator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.ExtensionQuery.ProcessResult(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:MS.Internal.Xml.XPath.FollSiblingQuery.FetchInput">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:MS.Internal.Xml.XPath.ForwardPositionQuery.Evaluate(System.Xml.XPath.XPathNodeIterator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:MS.Internal.Xml.XPath.IDQuery.Evaluate(System.Xml.XPath.XPathNodeIterator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:MS.Internal.Xml.XPath.LogicalExpr.Evaluate(System.Xml.XPath.XPathNodeIterator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:MS.Internal.Xml.XPath.MergeFilterQuery.Evaluate(System.Xml.XPath.XPathNodeIterator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:MS.Internal.Xml.XPath.NodeFunctions.EvaluateArg(System.Xml.XPath.XPathNodeIterator)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.NumericExpr.Evaluate(System.Xml.XPath.XPathNodeIterator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:MS.Internal.Xml.XPath.Query.Advance">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:MS.Internal.Xml.XPath.Query.Clone(MS.Internal.Xml.XPath.Query)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:MS.Internal.Xml.XPath.Query.Clone(System.Xml.XPath.XPathNavigator)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:MS.Internal.Xml.XPath.Query.Clone(System.Xml.XPath.XPathNodeIterator)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:MS.Internal.Xml.XPath.Query.Evaluate(System.Xml.XPath.XPathNodeIterator)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="nodeIterator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.Query.MatchNode(System.Xml.XPath.XPathNavigator)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:MS.Internal.Xml.XPath.QueryBuilder.Build(MS.Internal.Xml.XPath.AstNode,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="root">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.QueryBuilder.Build(System.String,System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.QueryBuilder.Build(System.String,System.Boolean@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.QueryBuilder.BuildPatternQuery(System.String,System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.QueryBuilder.BuildPatternQuery(System.String,System.Boolean@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.QueryBuilder.ProcessArguments(System.Collections.ArrayList,MS.Internal.Xml.XPath.QueryBuilder.Props@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:MS.Internal.Xml.XPath.QueryBuilder.ProcessAxis(MS.Internal.Xml.XPath.Axis,MS.Internal.Xml.XPath.QueryBuilder.Flags,MS.Internal.Xml.XPath.QueryBuilder.Props@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="root">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.QueryBuilder.ProcessFilter(MS.Internal.Xml.XPath.Filter,MS.Internal.Xml.XPath.QueryBuilder.Flags,MS.Internal.Xml.XPath.QueryBuilder.Props@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="root">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.QueryBuilder.ProcessFunction(MS.Internal.Xml.XPath.Function,MS.Internal.Xml.XPath.QueryBuilder.Props@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="root">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.QueryBuilder.ProcessNode(MS.Internal.Xml.XPath.AstNode,MS.Internal.Xml.XPath.QueryBuilder.Flags,MS.Internal.Xml.XPath.QueryBuilder.Props@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="root">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.QueryBuilder.ProcessOperator(MS.Internal.Xml.XPath.Operator,MS.Internal.Xml.XPath.QueryBuilder.Props@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="root">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.QueryBuilder.ProcessVariable(MS.Internal.Xml.XPath.Variable)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="root">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.SortQuery.Evaluate(System.Xml.XPath.XPathNodeIterator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:MS.Internal.Xml.XPath.StringFunctions.Concat(System.Xml.XPath.XPathNodeIterator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="nodeIterator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.StringFunctions.Normalize(System.Xml.XPath.XPathNodeIterator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="nodeIterator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.StringFunctions.Substring(System.Xml.XPath.XPathNodeIterator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="nodeIterator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.StringFunctions.SubstringAfter(System.Xml.XPath.XPathNodeIterator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="nodeIterator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.StringFunctions.SubstringBefore(System.Xml.XPath.XPathNodeIterator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="nodeIterator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.StringFunctions.toString(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:MS.Internal.Xml.XPath.StringFunctions.Translate(System.Xml.XPath.XPathNodeIterator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="nodeIterator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.UnionExpr.Evaluate(System.Xml.XPath.XPathNodeIterator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:MS.Internal.Xml.XPath.XPathArrayIterator.debuggerDisplayProxy">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:MS.Internal.Xml.XPath.XPathParser.CreateAxesTable">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:MS.Internal.Xml.XPath.XPathParser.CreateFunctionTable">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:MS.Internal.Xml.XPath.XPathParser.ParseFilterExpr(MS.Internal.Xml.XPath.AstNode)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:MS.Internal.Xml.XPath.XPathParser.ParseIdKeyPattern(MS.Internal.Xml.XPath.AstNode)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:MS.Internal.Xml.XPath.XPathParser.ParseMethod(MS.Internal.Xml.XPath.AstNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:MS.Internal.Xml.XPath.XPathParser.ParseNodeTest(MS.Internal.Xml.XPath.AstNode,MS.Internal.Xml.XPath.Axis.AxisType,System.Xml.XPath.XPathNodeType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:MS.Internal.Xml.XPath.XPathParser.ParsePrimaryExpr(MS.Internal.Xml.XPath.AstNode)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:MS.Internal.Xml.XPath.XPathParser.ParseStep(MS.Internal.Xml.XPath.AstNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:MS.Internal.Xml.XPath.XPathParser.ParseStepPattern(MS.Internal.Xml.XPath.AstNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:MS.Internal.Xml.XPath.XPathScanner.ScanName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:MS.Internal.Xml.XPath.XPathScanner.ScanString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:MS.Internal.Xml.XPath.XPathSortComparer.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Base64Decoder.ConstructMapBase64">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.BinHexDecoder.Decode(System.Char[],System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="chars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.BinHexEncoder.Encode(System.Byte[],System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="inArray">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.BinXmlDateTime.SqlDateTimeToString(System.Int32,System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.BinXmlDateTime.SqlSmallDateTimeToString(System.Int16,System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.BinXmlDateTime.XsdDateTimeToString(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.BinXmlDateTime.XsdDateToString(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.BinXmlDateTime.XsdKatmaiDateOffsetToString(System.Byte[],System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.BinXmlDateTime.XsdKatmaiDateTimeOffsetToString(System.Byte[],System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.BinXmlDateTime.XsdKatmaiDateTimeToString(System.Byte[],System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.BinXmlDateTime.XsdKatmaiDateToString(System.Byte[],System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.BinXmlDateTime.XsdKatmaiTimeOffsetToString(System.Byte[],System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.BinXmlDateTime.XsdKatmaiTimeToString(System.Byte[],System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.BinXmlDateTime.XsdTimeToString(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.BinXmlSqlDecimal.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.DocumentSchemaValidator.CreateTypeFinderValidator(System.Xml.Schema.XmlSchemaObject)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.DocumentSchemaValidator.FindSchemaInfo(System.Xml.XmlAttribute)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="attributeToValidate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentSchemaValidator.GetComplexType(System.Xml.Schema.XmlSchemaObject)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.DocumentSchemaValidator.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.DocumentSchemaValidator.GetTypeFromParent(System.Xml.XmlElement,System.Xml.Schema.XmlSchemaComplexType)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="elementToValidate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="parentSchemaType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentSchemaValidator.LookupNamespace(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentSchemaValidator.LookupPrefix(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXmlWriter.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.DocumentXmlWriter.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXmlWriter.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNavigator.AppendChild">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.DocumentXPathNavigator.CreateAttributes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.DocumentXPathNavigator.FirstChildTail(System.Xml.XmlNode)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.DocumentXPathNavigator.GetAttribute(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNavigator.GetNamespaceManager(System.Xml.XmlNode,System.Xml.XmlDocument)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="document">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNavigator.InsertAfter">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.DocumentXPathNavigator.InsertBefore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.DocumentXPathNavigator.LocalName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.DocumentXPathNavigator.NamespaceURI">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.DocumentXPathNavigator.NextSibling(System.Xml.XmlNode)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNavigator.NextSiblingTail(System.Xml.XmlNode,System.Xml.XmlNode)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNavigator.OwnerNode(System.Xml.XmlNode)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNavigator.ParentNode(System.Xml.XmlNode)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNavigator.ParentNodeTail(System.Xml.XmlNode)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.DocumentXPathNavigator.PrependChild">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.DocumentXPathNavigator.PreviousSibling(System.Xml.XmlNode)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNavigator.PreviousSiblingTail(System.Xml.XmlNode,System.Xml.XmlNode)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNavigator.PreviousText(System.Xml.XmlNode)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNavigator.PreviousTextTail(System.Xml.XmlNode,System.Xml.XmlNode)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNavigator.ReplaceRange(System.Xml.XPath.XPathNavigator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.DocumentXPathNavigator.TextEnd(System.Xml.XmlNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNavigator.TextStart(System.Xml.XmlNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DomNameTable.AddName(System.String,System.String,System.String,System.Xml.Schema.IXmlSchemaInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DomNameTable.GetName(System.String,System.String,System.String,System.Xml.Schema.IXmlSchemaInfo)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.DtdParser.GetNameQualified(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.DtdParser.GetNameString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.DtdParser.GetNmtokenString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.DtdParser.GetValue">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.DtdParser.GetValueWithStrippedSpaces">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.DtdParser.ParseUnexpectedToken(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.DtdParser.ScanEntityName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.DtdParser.VerifyEntityReference(System.Xml.XmlQualifiedName,System.Boolean,System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="entityName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.EmptyEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.HWStack.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.PositionInfo.GetPositionInfo(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.QueryOutputWriter.Settings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.ReadContentAsBinaryHelper.CreateOrReset(System.Xml.ReadContentAsBinaryHelper,System.Xml.XmlReader)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.AllElementsContentValidator.ExpectedParticles(System.Xml.Schema.ValidationState,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Schema.BaseProcessor.SchemaNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.BaseValidator.CreateInstance(System.Xml.ValidationType,System.Xml.XmlValidatingReaderImpl,System.Xml.Schema.XmlSchemaCollection,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.BaseValidator.FindId(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.Schema.BaseValidator.SchemaNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.BitSet.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.Compiler.CannonicalizeElement(System.Xml.Schema.XmlSchemaElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.GetComplexType(System.Xml.XmlQualifiedName)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.ContentValidator.ExpectedElements(System.Xml.Schema.ValidationState,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.ContentValidator.ExpectedParticles(System.Xml.Schema.ValidationState,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.ContentValidator.ValidateElement(System.Xml.XmlQualifiedName,System.Xml.Schema.ValidationState,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Datatype_anyURI.CreateValueConverter(System.Xml.Schema.XmlSchemaType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.Datatype_base64Binary.CreateValueConverter(System.Xml.Schema.XmlSchemaType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.Datatype_boolean.CreateValueConverter(System.Xml.Schema.XmlSchemaType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.Datatype_char.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="nsmgr">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Datatype_dateTimeBase.CreateValueConverter(System.Xml.Schema.XmlSchemaType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.Datatype_decimal.CreateValueConverter(System.Xml.Schema.XmlSchemaType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.Datatype_double.CreateValueConverter(System.Xml.Schema.XmlSchemaType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.Datatype_doubleXdr.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="nsmgr">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Datatype_duration.CreateValueConverter(System.Xml.Schema.XmlSchemaType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.Datatype_fixed.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="nsmgr">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Datatype_float.CreateValueConverter(System.Xml.Schema.XmlSchemaType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.Datatype_floatXdr.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="nsmgr">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Datatype_hexBinary.CreateValueConverter(System.Xml.Schema.XmlSchemaType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.Datatype_NOTATION.CreateValueConverter(System.Xml.Schema.XmlSchemaType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.Datatype_QName.CreateValueConverter(System.Xml.Schema.XmlSchemaType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.Datatype_QNameXdr.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Datatype_string.CreateValueConverter(System.Xml.Schema.XmlSchemaType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.Datatype_union.CreateValueConverter(System.Xml.Schema.XmlSchemaType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.Datatype_uuid.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="nsmgr">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.DatatypeImplementation.CreateValueConverter(System.Xml.Schema.XmlSchemaType)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="schemaType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.DatatypeImplementation.DeriveByList(System.Int32,System.Xml.Schema.XmlSchemaType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.DatatypeImplementation.DeriveByUnion(System.Xml.Schema.XmlSchemaSimpleType[],System.Xml.Schema.XmlSchemaType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.DatatypeImplementation.StartBuiltinType(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaDatatype)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.DfaContentValidator.ExpectedParticles(System.Xml.Schema.ValidationState,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.DoubleLinkAxis.ConvertTree(MS.Internal.Xml.XPath.Axis)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.FacetsChecker.CheckLexicalFacets(System.String@,System.Xml.Schema.XmlSchemaDatatype)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="datatype">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.FacetsChecker.CheckPatternFacets(System.Xml.Schema.RestrictionFacets,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.FacetsChecker.CheckValueFacets(System.Byte,System.Xml.Schema.XmlSchemaDatatype)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="datatype">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.FacetsChecker.CheckValueFacets(System.Byte[],System.Xml.Schema.XmlSchemaDatatype)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="datatype">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.FacetsChecker.CheckValueFacets(System.DateTime,System.Xml.Schema.XmlSchemaDatatype)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="datatype">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.FacetsChecker.CheckValueFacets(System.Decimal,System.Xml.Schema.XmlSchemaDatatype)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="datatype">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.FacetsChecker.CheckValueFacets(System.Double,System.Xml.Schema.XmlSchemaDatatype)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="datatype">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.FacetsChecker.CheckValueFacets(System.Int16,System.Xml.Schema.XmlSchemaDatatype)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="datatype">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.FacetsChecker.CheckValueFacets(System.Int32,System.Xml.Schema.XmlSchemaDatatype)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="datatype">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.FacetsChecker.CheckValueFacets(System.Int64,System.Xml.Schema.XmlSchemaDatatype)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="datatype">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.FacetsChecker.CheckValueFacets(System.Object,System.Xml.Schema.XmlSchemaDatatype)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="datatype">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.FacetsChecker.CheckValueFacets(System.Single,System.Xml.Schema.XmlSchemaDatatype)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="datatype">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.FacetsChecker.CheckValueFacets(System.String,System.Xml.Schema.XmlSchemaDatatype)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="datatype">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.FacetsChecker.CheckValueFacets(System.TimeSpan,System.Xml.Schema.XmlSchemaDatatype)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="datatype">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.FacetsChecker.CheckValueFacets(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaDatatype)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="datatype">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.FacetsChecker.ConstructRestriction(System.Xml.Schema.DatatypeImplementation,System.Xml.Schema.XmlSchemaObjectCollection,System.Xml.XmlNameTable)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="datatype">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="facets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.FacetsChecker.FacetsCompiler.Preprocess(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.InteriorNode.Clone(System.Xml.Schema.Positions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.LeafNode.Clone(System.Xml.Schema.Positions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Schema.NamespaceList.Enumerate">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.NamespaceListNode.GetResolvedSymbols(System.Xml.Schema.SymbolsDictionary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="symbols">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.NfaContentValidator.ExpectedParticles(System.Xml.Schema.ValidationState,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.Numeric10FacetsChecker.CheckTotalAndFractionDigits(System.Decimal,System.Int32,System.Int32,System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.Parser.CreateXmlNsAttribute(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Parser.LoadAttributeNode">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.Parser.LoadElementNode(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.Parser.LoadEntityReferenceInAttribute">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.ParticleContentValidator.CalculateTotalFollowposForRangeNodes(System.Xml.Schema.BitSet,System.Xml.Schema.BitSet[],System.Xml.Schema.BitSet@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="followpos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.ParticleContentValidator.GetApplicableMinMaxFollowPos(System.Xml.Schema.BitSet,System.Xml.Schema.BitSet,System.Xml.Schema.BitSet[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="curpos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="posWithRangeTerminals">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="minmaxFollowPos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Preprocessor.GetChameleonSchema(System.String,System.Xml.Schema.XmlSchema)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Preprocessor.GetParentSchema(System.Xml.Schema.XmlSchemaObject)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.Preprocessor.GetSchemaEntity(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="ruri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Preprocessor.ResolveSchemaLocationUri(System.Xml.Schema.XmlSchema,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="enclosingSchema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="location">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.RangeContentValidator.ExpectedParticles(System.Xml.Schema.ValidationState,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.CannonicalizeElement(System.Xml.Schema.XmlSchemaElement,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.GetComplexType(System.Xml.XmlQualifiedName)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionPreprocessor.GetSchemaEntity(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="ruri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionPreprocessor.ResolveSchemaLocationUri(System.Xml.Schema.XmlSchema,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="enclosingSchema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="location">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaElementDecl.CreateAnyTypeElementDecl">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Schema.SchemaInfo.GeneralEntities">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.SchemaInfo.GetAttributeXdr(System.Xml.Schema.SchemaElementDecl,System.Xml.XmlQualifiedName)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="qname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.Schema.SchemaInfo.Notations">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Schema.SchemaInfo.ParameterEntities">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.StringFacetsChecker.CheckBuiltInFacets(System.String,System.Xml.Schema.XmlTypeCode,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.StringFacetsChecker.CheckValueFacets(System.String,System.Xml.Schema.XmlSchemaDatatype,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="datatype">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SymbolsDictionary.GetNamespaceListSymbols(System.Xml.Schema.NamespaceList)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.Schema.ValidationEventArgs.Message">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.CheckDatatype(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.GroupContent.Copy(System.Xml.Schema.XdrBuilder.GroupContent)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrValidator.QualifiedName(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrValidator.ThoroughGetElementDecl">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlAtomicValue.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlAtomicValue.GetPrefixFromQName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlAtomicValue.NamespacePrefixForQName.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlAtomicValue.NamespacePrefixForQName.LookupNamespace(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlAtomicValue.NamespacePrefixForQName.LookupPrefix(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlAtomicValue.System#ICloneable#Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.Base64BinaryToString(System.Byte[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.CreateInvalidClrMappingException(System.Type,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="sourceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.DateOffsetToString(System.DateTimeOffset)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.DateTimeOffsetToString(System.DateTimeOffset)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.DateTimeToString(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.DateToString(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.DayTimeDurationToString(System.TimeSpan)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.DurationToString(System.TimeSpan)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.GDayOffsetToString(System.DateTimeOffset)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.GDayToString(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.GMonthDayOffsetToString(System.DateTimeOffset)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.GMonthDayToString(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.GMonthOffsetToString(System.DateTimeOffset)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.GMonthToString(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.GYearMonthOffsetToString(System.DateTimeOffset)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.GYearMonthToString(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.GYearOffsetToString(System.DateTimeOffset)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.GYearToString(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.StringToHexBinary(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.StringToQName(System.String,System.Xml.IXmlNamespaceResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nsResolver">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.TimeOffsetToString(System.DateTimeOffset)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.TimeToString(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.YearMonthDurationToString(System.TimeSpan)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlBooleanConverter.Create(System.Xml.Schema.XmlSchemaType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="schemaType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlBooleanConverter.ToString(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlBooleanConverter.ToString(System.String,System.Xml.IXmlNamespaceResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlDateTimeConverter.Create(System.Xml.Schema.XmlSchemaType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="schemaType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlDateTimeConverter.ToString(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlDateTimeConverter.ToString(System.DateTimeOffset)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlDateTimeConverter.ToString(System.String,System.Xml.IXmlNamespaceResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlListConverter.ChangeListType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlListConverter.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlListConverter.CreateInvalidClrMappingException(System.Type,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="sourceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlListConverter.ListAsString(System.Collections.IEnumerable,System.Xml.IXmlNamespaceResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nsResolver">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlListConverter.StringAsList(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlListConverter.ToArray``1(System.Object,System.Xml.IXmlNamespaceResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="nsResolver">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlListConverter.ToList(System.Object,System.Xml.IXmlNamespaceResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="nsResolver">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlMiscConverter.Create(System.Xml.Schema.XmlSchemaType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="schemaType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlMiscConverter.ToString(System.String,System.Xml.IXmlNamespaceResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlNumeric10Converter.Create(System.Xml.Schema.XmlSchemaType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="schemaType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlNumeric10Converter.ToString(System.String,System.Xml.IXmlNamespaceResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlNumeric2Converter.Create(System.Xml.Schema.XmlSchemaType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="schemaType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlNumeric2Converter.ToString(System.String,System.Xml.IXmlNamespaceResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlSchema.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlSchema.DeepClone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Schema.XmlSchema.Document">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Schema.XmlSchema.ImportedNamespaces">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Schema.XmlSchema.ImportedSchemas">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Schema.XmlSchema.NameTable">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Schema.XmlSchemaAny.ResolvedNamespace">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaAnyAttribute.Intersection(System.Xml.Schema.XmlSchemaAnyAttribute,System.Xml.Schema.XmlSchemaAnyAttribute,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="o1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="o2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaAnyAttribute.Union(System.Xml.Schema.XmlSchemaAnyAttribute,System.Xml.Schema.XmlSchemaAnyAttribute,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="o1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="o2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaAttribute.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaAttribute.Validate(System.Xml.XmlReader,System.Xml.XmlResolver,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.Schema.XmlSchemaAttributeGroup.AttributeUses">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.Schema.SchemaInfo,System.Xml.Schema.XmlSchema,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="schemaInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.Schema.SchemaInfo,System.Xml.Schema.XmlSchema,System.Boolean,System.Xml.XmlResolver)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="schemaInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.XmlReader,System.Xml.XmlResolver)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchema,System.Xml.XmlResolver)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaCollection.GetSchemaNames(System.Xml.XmlNameTable)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="nt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Schema.XmlSchemaCollectionEnumerator.CurrentNode">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Schema.XmlSchemaCollectionEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Schema.XmlSchemaComplexType.Attributes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Schema.XmlSchemaComplexType.AttributeUses">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaComplexType.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaComplexType.CloneAttributes(System.Xml.Schema.XmlSchemaObjectCollection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaComplexType.CloneGroupBaseParticles(System.Xml.Schema.XmlSchemaObjectCollection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="groupBaseParticles">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaComplexType.CreateAnyType(System.Xml.Schema.XmlSchemaContentProcessing)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Schema.XmlSchemaComplexType.LocalElements">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaDatatype.ConcatenatedToString(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaDatatype.DeriveByList(System.Xml.Schema.XmlSchemaType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaDatatype.DeriveByRestriction(System.Xml.Schema.XmlSchemaObjectCollection,System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="facets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaDatatype.DeriveByUnion(System.Xml.Schema.XmlSchemaSimpleType[],System.Xml.Schema.XmlSchemaType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaDatatype.TryParseValue(System.Object,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver,System.Object@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceResolver">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaDatatype.TryParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver,System.Object@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nsmgr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.Schema.XmlSchemaDatatype.ValueConverter">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Schema.XmlSchemaDatatype.ValueType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaElement.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Schema.XmlSchemaElement.Constraints">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaElement.Validate(System.Xml.XmlReader,System.Xml.XmlResolver,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.Schema.XmlSchemaException.Message">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaGroup.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaInference.AddAttribute(System.String,System.String,System.String,System.String,System.Boolean,System.Xml.Schema.XmlSchema,System.Xml.Schema.XmlSchemaObjectCollection,System.Xml.Schema.XmlSchemaObjectTable)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="childURI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="parentSchema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="addLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="compiledAttributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attrValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaInference.AddElement(System.String,System.String,System.String,System.Xml.Schema.XmlSchema,System.Xml.Schema.XmlSchemaObjectCollection,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaInference.CheckSimpleContentExtension(System.Xml.Schema.XmlSchemaComplexType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="ct">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaInference.CreateNewElementforChoice(System.Xml.Schema.XmlSchemaElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="copyElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaInference.CreateXmlSchema(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaInference.FindAttribute(System.Collections.ICollection,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaInference.FindAttributeRef(System.Collections.ICollection,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaInference.FindElement(System.Xml.Schema.XmlSchemaObjectCollection,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="elements">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaInference.FindElementRef(System.Xml.Schema.XmlSchemaObjectCollection,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="elements">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaInference.FindGlobalElement(System.String,System.String,System.Xml.Schema.XmlSchema@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaInference.FindMatchingElement(System.Boolean,System.Xml.XmlReader,System.Xml.Schema.XmlSchemaComplexType,System.Int32@,System.Boolean@,System.Xml.Schema.XmlSchema,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="xtr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ct">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="parentSchema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="instanceDocument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="instanceDocument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaInference.InferSchema1(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="instanceDocument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="schemas">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.Schema.XmlSchemaInfo.MemberType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Schema.XmlSchemaInfo.SchemaAttribute">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Schema.XmlSchemaInfo.SchemaElement">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Schema.XmlSchemaInfo.SchemaType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Schema.XmlSchemaObjectEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Schema.XmlSchemaObjectEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaObjectTable.NamesCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Schema.XmlSchemaObjectTable.NamesCollection.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaObjectTable.ValuesCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Schema.XmlSchemaObjectTable.ValuesCollection.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Schema.XmlSchemaObjectTable.XSODictionaryEnumerator.Key">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Schema.XmlSchemaObjectTable.XSODictionaryEnumerator.Value">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Schema.XmlSchemaObjectTable.XSOEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Schema.XmlSchemaParticle.NameString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.Schema.XmlSchema)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaSet.GetSchemaNames(System.Xml.XmlNameTable)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="nt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaSet.GetTargetNamespace(System.Xml.Schema.XmlSchema)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaSimpleTypeList.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaSimpleTypeRestriction.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaSimpleTypeUnion.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaType.Validate(System.Xml.XmlReader,System.Xml.XmlResolver,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.BuildElementName(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.BuildElementName(System.Xml.XmlQualifiedName)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="qname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.CheckXsiTypeAndNil(System.Xml.Schema.SchemaElementDecl,System.String,System.String,System.Boolean@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.GetConcatenatedValue">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.GetSubstitutionGroupHead(System.Xml.XmlQualifiedName)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.PrintExpectedElements(System.Collections.ArrayList,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="expected">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.PrintNames(System.Collections.ArrayList)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="expected">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateElementContext(System.Xml.XmlQualifiedName,System.Boolean@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="elementName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlStringConverter.Create(System.Xml.Schema.XmlSchemaType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="schemaType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlStringConverter.ToString(System.String,System.Xml.IXmlNamespaceResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlUnionConverter.Create(System.Xml.Schema.XmlSchemaType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="schemaType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlUntypedConverter.ChangeType(System.Boolean,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlUntypedConverter.ChangeType(System.DateTime,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlUntypedConverter.ChangeType(System.DateTimeOffset,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlUntypedConverter.ChangeTypeWildcardSource(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nsResolver">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlUntypedConverter.ToString(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlUntypedConverter.ToString(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlUntypedConverter.ToString(System.DateTimeOffset)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlUntypedConverter.ToString(System.String,System.Xml.IXmlNamespaceResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XsdDateTime.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XsdDuration.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XsdDuration.ToString(System.Xml.Schema.XsdDuration.DurationType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XsdDuration.TryParse(System.String,System.Xml.Schema.XsdDuration.DurationType,System.Xml.Schema.XsdDuration@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdDuration.TryParse(System.String,System.Xml.Schema.XsdDuration@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdDuration.TryParseDigits(System.String,System.Int32@,System.Boolean,System.Int32@,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdDuration.TryToTimeSpan(System.TimeSpan@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XsdDuration.TryToTimeSpan(System.Xml.Schema.XsdDuration.DurationType,System.TimeSpan@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XsdValidator.ThoroughGetElementDecl(System.Xml.Schema.SchemaElementDecl,System.Xml.XmlQualifiedName,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="xsiType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdValidator.ValidateChildElement">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.Accessor.EscapeName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.Accessor.UnescapeName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Serialization.AccessorMapping.ElementsSortedByDerivation">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Serialization.ArrayMapping.ElementsSortedByDerivation">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Serialization.ArrayModel.Element">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.CodeIdentifier.EscapeKeywords(System.String,System.CodeDom.Compiler.CodeDomProvider)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="codeProvider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeIdentifier.GetCSharpName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeIdentifier.GetCSharpName(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeIdentifier.MakeValid(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="identifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeIdentifier.MakeValidInternal(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="identifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeIdentifiers.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.Compiler.AssemblyNameFromOptions(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.Compiler.Compile(System.Reflection.Assembly,System.String,System.Xml.Serialization.XmlSerializerCompilerParameters,System.Security.Policy.Evidence)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="xmlParameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.Compiler.GetCurrentUser">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Serialization.Compiler.Imports">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.ElementAccessor.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.EnumModel.GetConstantModel(System.Reflection.FieldInfo)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="fieldInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.Serialization.ImportContext.Cache">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Serialization.ImportContext.Elements">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Serialization.ImportContext.Mappings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Serialization.ImportContext.TypeIdentifiers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Serialization.ImportContext.Warnings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.ModelScope.GetArrayModel(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.ModelScope.GetTypeModel(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.ModelScope.GetTypeModel(System.Type,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.Serialization.NameTable.Values">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Serialization.RecursionLimiter.DeferredWorkItems">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.SchemaGraph.GetItems">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Serialization.SchemaImporter.CodeProvider">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Serialization.SchemaImporter.Context">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.SchemaImporter.CreateRootMapping">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Serialization.SchemaImporter.Extensions">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.SchemaImporter.GetRootMapping">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Serialization.SchemaImporter.GroupsInUse">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Serialization.SchemaImporter.ImportedElements">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Serialization.SchemaImporter.ImportedMappings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.SchemaImporter.ImportRootMapping">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Serialization.SchemaImporter.Schemas">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Serialization.SchemaImporter.Scope">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Serialization.SchemaImporter.TypeIdentifiers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Serialization.SchemaImporter.TypesInUse">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.SchemaObjectCache.GetDependencies(System.Xml.Schema.XmlSchemaObject,System.Collections.ArrayList,System.Collections.Hashtable)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="deps">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="refs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.Serialization.SchemaObjectCache.Graph">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Serialization.SchemaObjectCache.Hash">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Serialization.SchemaObjectCache.ObjectCache">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.SchemaObjectCache.ToString(System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.SchemaObjectWriter)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.Serialization.SchemaObjectCache.Warnings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.SchemaObjectWriter.GetString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.SchemaObjectWriter.ToString(System.Xml.Schema.NamespaceList)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.SchemaObjectWriter.Write30_XmlSchemaUse(System.Xml.Schema.XmlSchemaUse)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.SchemaObjectWriter.Write34_XmlSchemaContentProcessing(System.Xml.Schema.XmlSchemaContentProcessing)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.SchemaObjectWriter.WriteXmlSchemaObject(System.Xml.Schema.XmlSchemaObject)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Serialization.SerializableMapping.NamespaceList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.SoapReflectionImporter.CreateElementAccessor(System.Xml.Serialization.TypeMapping,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="mapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SoapReflectionImporter.CreateNullableMapping(System.Xml.Serialization.TypeMapping,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="baseMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SoapReflectionImporter.CreateRootMapping">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.SoapReflectionImporter.GetAttributes(System.Reflection.MemberInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="memberInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SoapReflectionImporter.GetAttributes(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SoapReflectionImporter.GetRootMapping">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.SoapReflectionImporter.GetTypeMapping(System.String,System.String,System.Xml.Serialization.TypeDesc)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="typeDesc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportArrayLikeMapping(System.Xml.Serialization.ArrayModel,System.Xml.Serialization.RecursionLimiter)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="model">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="limiter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportConstantMapping(System.Xml.Serialization.ConstantModel)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="model">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportEnumMapping(System.Xml.Serialization.EnumModel)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="model">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportFieldMapping(System.Xml.Serialization.FieldModel,System.Xml.Serialization.SoapAttributes,System.String,System.Xml.Serialization.RecursionLimiter)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="model">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="limiter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMemberMapping(System.Xml.Serialization.XmlReflectionMember,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Xml.Schema.XmlSchemaForm,System.Xml.Serialization.RecursionLimiter)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="xmlReflectionMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="xmlReflectionMembers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="limiter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="members">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="elementName">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="members">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="elementName">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="members">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="elementName">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="members">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="elementName">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportMembersMapping(System.Xml.Serialization.XmlReflectionMember[],System.String,System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.RecursionLimiter)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="xmlReflectionMembers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="limiter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportPrimitiveMapping(System.Xml.Serialization.PrimitiveModel,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="model">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="dataType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportStructLikeMapping(System.Xml.Serialization.StructModel,System.Xml.Serialization.RecursionLimiter)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="model">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="limiter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Type,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="defaultNamespace">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Xml.Serialization.TypeModel,System.String,System.Xml.Serialization.RecursionLimiter)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="model">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="dataType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="limiter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportTypeMapping(System.Xml.Serialization.TypeModel,System.Xml.Serialization.RecursionLimiter)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="model">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="limiter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SoapReflectionImporter.ReflectionException(System.String,System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Serialization.StructMapping.LocalAttributes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Serialization.StructMapping.LocalElements">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.StructModel.GetFieldModel(System.Reflection.FieldInfo)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="fieldInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.StructModel.GetFieldModel(System.Reflection.MemberInfo)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.StructModel.GetMemberInfos">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.StructModel.GetPropertyModel(System.Reflection.PropertyInfo)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="propertyInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TempAssembly.GenerateAssembly(System.Xml.Serialization.XmlMapping[],System.Type[],System.String,System.Security.Policy.Evidence,System.Xml.Serialization.XmlSerializerCompilerParameters,System.Reflection.Assembly,System.Collections.Hashtable)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="xmlMappings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="assemblies">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TempAssembly.GenerateAssemblyId(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TempAssembly.GetMethodFromType(System.Type,System.String,System.Reflection.Assembly)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="methodName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TempAssembly.GetName(System.Reflection.Assembly,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TempAssembly.GetTypeFromAssembly(System.Reflection.Assembly,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TempAssembly.LoadGeneratedAssembly(System.Type,System.String,System.Xml.Serialization.XmlSerializerImplementation@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TempAssembly.ValidateEncodingStyle(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="methodKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.Serialization.TypeDesc.ArrayLengthName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.TypeDesc.CreateArrayTypeDesc">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.TypeDesc.CreateMappedTypeDesc(System.Xml.Serialization.Advanced.MappedTypeDesc)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="extension">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.Serialization.TypeDesc.CSharpName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.TypeDesc.FindCommonBaseTypeDesc(System.Xml.Serialization.TypeDesc[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="typeDescs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TypeDesc.GetNullableTypeDesc(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.TypeScope.GetArrayTypeDesc(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TypeScope.GetDefaultIndexer(System.Type,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TypeScope.GetTypeDesc(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.TypeScope.GetTypeDesc(System.String,System.String,System.Xml.Serialization.TypeFlags)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.TypeScope.GetTypeDesc(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TypeScope.GetTypeDesc(System.Type,System.Reflection.MemberInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TypeScope.GetTypeDesc(System.Type,System.Reflection.MemberInfo,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TypeScope.GetTypeDesc(System.Type,System.Reflection.MemberInfo,System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TypeScope.GetTypeFromTypeDesc(System.Xml.Serialization.TypeDesc)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="typeDesc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TypeScope.GetTypeMappingFromTypeDesc(System.Xml.Serialization.TypeDesc)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.TypeScope.ImportTypeDesc(System.Type,System.Reflection.MemberInfo,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TypeScope.ParseWsdlArrayType(System.String,System.String@,System.Xml.Schema.XmlSchemaObject)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.Serialization.TypeScope.Types">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Serialization.XmlAttributeEventArgs.ExpectedAttributes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlCustomFormatter.CollapseWhitespace(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlCustomFormatter.FromByteArrayHex(System.Byte[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlCustomFormatter.FromDate(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlCustomFormatter.FromDateTime(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlCustomFormatter.FromDefaultValue(System.Object,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlCustomFormatter.FromEnum(System.Int64,System.String[],System.Int64[],System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="vals">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ids">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlCustomFormatter.FromTime(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlCustomFormatter.FromXmlName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlCustomFormatter.FromXmlNCName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlCustomFormatter.FromXmlNmToken(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlCustomFormatter.FromXmlNmTokens(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlCustomFormatter.ToByteArrayHex(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlCustomFormatter.ToDefaultValue(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="formatter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlCustomFormatter.ToXmlName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlCustomFormatter.ToXmlNCName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlCustomFormatter.ToXmlNmToken(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlCustomFormatter.ToXmlNmTokens(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Serialization.XmlElementEventArgs.ExpectedElements">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Serialization.XmlMapping.ElementName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Serialization.XmlMemberMapping.ElementName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Serialization.XmlNodeEventArgs.NamespaceURI">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.CheckChoiceIdentifierType(System.Type,System.Boolean,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.CreateArrayAttribute(System.Xml.Serialization.TypeDesc)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.CreateArrayItemAttribute(System.Xml.Serialization.TypeDesc,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.CreateElementAccessor(System.Xml.Serialization.TypeMapping,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="mapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.CreateElementAttribute(System.Xml.Serialization.TypeDesc)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="typeDesc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.CreateMemberReflectionException(System.Xml.Serialization.FieldModel,System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="model">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.CreateNullableMapping(System.Xml.Serialization.TypeMapping,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="baseMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.CreateReflectionException(System.String,System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.CreateRootMapping">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.CreateTypeReflectionException(System.String,System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.GetAttributes(System.Reflection.MemberInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="memberInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.GetChoiceIdentifierType(System.Xml.Serialization.XmlChoiceIdentifierAttribute,System.Xml.Serialization.StructModel,System.Boolean,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="choice">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="structModel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.GetChoiceIdentifierType(System.Xml.Serialization.XmlChoiceIdentifierAttribute,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="choice">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="xmlReflectionMembers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.GetContextName(System.Xml.Serialization.XmlReflectionImporter.ImportContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.GetMethodFromSchemaProvider(System.Xml.Serialization.XmlSchemaProviderAttribute,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="provider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.GetRootMapping">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.GetTopLevelMapping(System.Type,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.GetTypeMapping(System.String,System.String,System.Xml.Serialization.TypeDesc,System.Xml.Serialization.NameTable,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="typeDesc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="typeLib">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportArrayLikeMapping(System.Xml.Serialization.ArrayModel,System.String,System.Xml.Serialization.RecursionLimiter)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="model">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="limiter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportConstantMapping(System.Xml.Serialization.ConstantModel)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="model">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportElement(System.Xml.Serialization.TypeModel,System.Xml.Serialization.XmlRootAttribute,System.String,System.Xml.Serialization.RecursionLimiter)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="model">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="limiter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportEnumMapping(System.Xml.Serialization.EnumModel,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="model">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportFieldMapping(System.Xml.Serialization.StructModel,System.Xml.Serialization.FieldModel,System.Xml.Serialization.XmlAttributes,System.String,System.Xml.Serialization.RecursionLimiter)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="model">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="limiter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMemberMapping(System.Xml.Serialization.XmlReflectionMember,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Xml.Serialization.RecursionLimiter)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="xmlReflectionMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="xmlReflectionMembers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="limiter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="members">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="elementName">
    </parameter>
    <parameter name="ns">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="members">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="elementName">
    </parameter>
    <parameter name="ns">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="members">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="elementName">
    </parameter>
    <parameter name="ns">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.XmlMappingAccess)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="members">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="elementName">
    </parameter>
    <parameter name="ns">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportMembersMapping(System.Xml.Serialization.XmlReflectionMember[],System.String,System.Boolean,System.Boolean,System.Boolean,System.Xml.Serialization.RecursionLimiter)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="xmlReflectionMembers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="limiter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportPrimitiveMapping(System.Xml.Serialization.PrimitiveModel,System.Xml.Serialization.XmlReflectionImporter.ImportContext,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="model">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="dataType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportSpecialMapping(System.Type,System.Xml.Serialization.TypeDesc,System.String,System.Xml.Serialization.XmlReflectionImporter.ImportContext,System.Xml.Serialization.RecursionLimiter)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="typeDesc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportStructLikeMapping(System.Xml.Serialization.StructModel,System.String,System.Boolean,System.Xml.Serialization.XmlAttributes,System.Xml.Serialization.RecursionLimiter)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="model">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="limiter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,System.Xml.Serialization.XmlRootAttribute,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Xml.Serialization.TypeModel,System.String,System.Xml.Serialization.XmlReflectionImporter.ImportContext,System.String,System.Xml.Serialization.XmlAttributes,System.Boolean,System.Boolean,System.Xml.Serialization.RecursionLimiter)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="model">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="dataType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="limiter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Xml.Serialization.TypeModel,System.String,System.Xml.Serialization.XmlReflectionImporter.ImportContext,System.String,System.Xml.Serialization.XmlAttributes,System.Xml.Serialization.RecursionLimiter)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="model">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="dataType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="limiter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.InvalidAttributeUseException(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.ReconcileAccessor(System.Xml.Serialization.Accessor,System.Xml.Serialization.NameTable)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="accessor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="accessors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.ReconcileLocalAccessor(System.Xml.Serialization.ElementAccessor,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="accessor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.UnsupportedException(System.Xml.Serialization.TypeDesc,System.Xml.Serialization.XmlReflectionImporter.ImportContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="typeDesc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.Serialization.XmlSchemaEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Serialization.XmlSchemaEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaExporter.AddSchema(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnonymousPrimitiveMapping(System.Xml.Serialization.PrimitiveMapping)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="mapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.Xml.Serialization.XmlMembersMapping)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="members">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportElement(System.Xml.Serialization.ElementAccessor)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="accessor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportEnumMapping(System.Xml.Serialization.EnumMapping,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="mapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.MembersMapping,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="mapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportNonXsdPrimitiveMapping(System.Xml.Serialization.PrimitiveMapping,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="mapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportPrimitiveMapping(System.Xml.Serialization.PrimitiveMapping,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="mapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlMembersMapping)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="xmlMembersMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaExporter.FindImport(System.Xml.Schema.XmlSchema,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaExporter.FindSchemaType(System.String,System.Xml.Schema.XmlSchemaObjectCollection)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="items">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.FindAttribute(System.Xml.XmlQualifiedName)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.FindAttributeGroup(System.Xml.XmlQualifiedName)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.FindElement(System.Xml.XmlQualifiedName)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.FindExtendedAnyElement(System.Xml.Schema.XmlSchemaAny,System.Boolean,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.Advanced.SchemaImporterExtension@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.FindExtendedType(System.String,System.String,System.Xml.Schema.XmlSchemaObject,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.Advanced.SchemaImporterExtension@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="compileUnit">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="mainNamespace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.FindExtendedType(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaObject,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.Advanced.SchemaImporterExtension@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="compileUnit">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="mainNamespace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.FindGroup(System.Xml.XmlQualifiedName)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.GetDefaultMapping(System.Xml.Serialization.TypeFlags)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.GetTopLevelElement(System.Xml.Schema.XmlSchemaElement)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.GetTypeItems(System.Xml.Schema.XmlSchemaType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportAny(System.Xml.Schema.XmlSchemaAny,System.Boolean,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="any">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="targetNamespace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportAnyMapping(System.Xml.Schema.XmlSchemaType,System.String,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportAnyMember(System.Xml.Schema.XmlSchemaAny,System.String,System.Xml.Serialization.CodeIdentifiers,System.Xml.Serialization.CodeIdentifiers,System.Xml.Serialization.INameScope,System.String,System.Boolean@,System.Boolean@,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="any">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="members">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="membersScope">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportAnyType(System.Xml.XmlQualifiedName,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="elementName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportArray(System.Xml.Schema.XmlSchemaElement,System.String,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="identifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportArrayMapping(System.Xml.Schema.XmlSchemaType,System.String,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="identifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportChoiceGroup(System.Xml.Schema.XmlSchemaGroupBase,System.String,System.Xml.Serialization.CodeIdentifiers,System.Xml.Serialization.CodeIdentifiers,System.Xml.Serialization.INameScope,System.String,System.Boolean,System.Boolean@,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="identifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportDerivedTypeMapping(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportElementType(System.Xml.Schema.XmlSchemaElement,System.String,System.Type,System.Type,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="desiredMappingType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="identifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportEnumeratedChoice(System.Xml.Serialization.ElementAccessor[],System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="choice">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportEnumeratedDataType(System.Xml.Schema.XmlSchemaSimpleType,System.String,System.String,System.Xml.Serialization.TypeFlags,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="dataType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.String,System.String,System.Xml.Serialization.SoapSchemaMember[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="members">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="names">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersMapping(System.Xml.XmlQualifiedName[],System.Type,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="names">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportMembersType(System.Xml.Schema.XmlSchemaType,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="typeNs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="identifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportNonXsdPrimitiveDataType(System.Xml.Schema.XmlSchemaSimpleType,System.String,System.Xml.Serialization.TypeFlags)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="dataType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportPrimitiveDataType(System.Xml.Schema.XmlSchemaSimpleType,System.Xml.Serialization.TypeFlags)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="dataType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSchemaType(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSpecialAttribute(System.Xml.XmlQualifiedName,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportStructDataType(System.Xml.Schema.XmlSchemaSimpleType,System.String,System.String,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="dataType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="baseType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportStructType(System.Xml.Schema.XmlSchemaType,System.String,System.String,System.Type,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="typeNs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="identifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="baseType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportType(System.Xml.Schema.XmlSchemaComplexType,System.String,System.String,System.Type,System.Type,System.Xml.Serialization.TypeFlags)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="desiredMappingType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="typeNs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="identifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportTypeMapping(System.Xml.XmlQualifiedName)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.Serialization.XmlSchemas.Cache">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemas.CreateFakeXsdSchema(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemas.Dump(System.Xml.Schema.XmlSchemaObject)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemas.Find(System.Xml.Schema.XmlSchemaObject,System.Collections.IList)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="originals">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemas.Find(System.Xml.XmlQualifiedName,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemas.Find(System.Xml.XmlQualifiedName,System.Type,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemas.GetSchemaItem(System.Xml.Schema.XmlSchemaObject,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemas.GetSchemas(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="ns">
    </parameter>
  </member>
  <member name="P:System.Xml.Serialization.XmlSchemas.MergedSchemas">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Serialization.XmlSchemas.References">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Serialization.XmlSchemas.SchemaSet">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemas.System#Collections#Generic#IEnumerable{System#Xml#Schema#XmlSchema}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationPrimitiveReader.Read_base64Binary">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationPrimitiveReader.Read_boolean">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationPrimitiveReader.Read_byte">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationPrimitiveReader.Read_char">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationPrimitiveReader.Read_dateTime">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationPrimitiveReader.Read_decimal">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationPrimitiveReader.Read_double">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationPrimitiveReader.Read_float">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationPrimitiveReader.Read_guid">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationPrimitiveReader.Read_int">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationPrimitiveReader.Read_long">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationPrimitiveReader.Read_QName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationPrimitiveReader.Read_short">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationPrimitiveReader.Read_unsignedByte">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationPrimitiveReader.Read_unsignedInt">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationPrimitiveReader.Read_unsignedLong">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationPrimitiveReader.Read_unsignedShort">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.CollapseWhitespace(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="value">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateAbstractTypeException(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
    </parameter>
    <parameter name="ns">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateBadDerivationException(System.String,System.String,System.String,System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="xsdDerived">
    </parameter>
    <parameter name="nsDerived">
    </parameter>
    <parameter name="xsdBase">
    </parameter>
    <parameter name="nsBase">
    </parameter>
    <parameter name="clrDerived">
    </parameter>
    <parameter name="clrBase">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateCtorHasSecurityException(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="typeName">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInaccessibleConstructorException(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateInvalidCastException(System.Type,System.Object,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
    </parameter>
    <parameter name="ns">
    </parameter>
    <parameter name="clrType">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateMissingIXmlSerializableType(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateReadOnlyCollectionException(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownConstantException(System.String,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="enumType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownNodeException">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException(System.Xml.XmlQualifiedName)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.Serialization.XmlSerializationReader.Document">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.GetPrimitiveType(System.Xml.XmlQualifiedName,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.GetTarget(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="id">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.GetXsiType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadByteArray(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadElementQualifiedName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadNullableQualifiedName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="serializable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadSerializable(System.Xml.Serialization.IXmlSerializable,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="serializable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedNull(System.Xml.XmlQualifiedName)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlDocument(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlNode(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlQualifiedName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayHex(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="value">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="value">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNCName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="value">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmToken(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="value">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlNmTokens(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="value">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.ToXmlQualifiedName(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException(System.String,System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
    </parameter>
    <parameter name="identifier">
    </parameter>
    <parameter name="name">
    </parameter>
    <parameter name="ns">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
    </parameter>
    <parameter name="identifier">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException(System.Object,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="typeName">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
    </parameter>
    <parameter name="elementName">
    </parameter>
    <parameter name="enumValue">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
    </parameter>
    <parameter name="ns">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex(System.Byte[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDate(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromDateTime(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ids">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[],System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ids">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="typeName">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromTime(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="ncName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="nmToken">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="nmTokens">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.GetPrimitiveTypeName(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.GetPrimitiveTypeName(System.Type,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.GetPrimitiveTypeNameInternal(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.ListUsedPrefixes(System.Collections.Hashtable,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.Serialization.XmlSerializationReader)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Security.Policy.Evidence)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializer.FromMappings(System.Xml.Serialization.XmlMapping[],System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializer.FromTypes(System.Type[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializer.GenerateSerializer(System.Type[],System.Xml.Serialization.XmlMapping[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializer.GenerateSerializer(System.Type[],System.Xml.Serialization.XmlMapping[],System.CodeDom.Compiler.CompilerParameters)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializer.GenerateTempAssembly(System.Xml.Serialization.XmlMapping)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="xmlMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializer.GenerateTempAssembly(System.Xml.Serialization.XmlMapping,System.Type,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="xmlMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializer.GenerateTempAssembly(System.Xml.Serialization.XmlMapping,System.Type,System.String,System.String,System.Security.Policy.Evidence)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializer.GetKnownMapping(System.Type,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializer.GetSerializersFromCache(System.Xml.Serialization.XmlMapping[],System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="mappings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="defaultNamespace">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializerImplementation.GetSerializer(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.LookupPrefix(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Serialization.XmlSerializerNamespaces.NamespaceList">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Ucs4Encoding.UCS4_2143">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Ucs4Encoding.UCS4_3412">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Ucs4Encoding.UCS4_Bigendian">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Ucs4Encoding.UCS4_Littleendian">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Ucs4Encoding1234.EncodingName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Ucs4Encoding1234.GetPreamble">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Ucs4Encoding2143.EncodingName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Ucs4Encoding2143.GetPreamble">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Ucs4Encoding3412.EncodingName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Ucs4Encoding3412.GetPreamble">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Ucs4Encoding4321.EncodingName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Ucs4Encoding4321.GetPreamble">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.ValidateNames.GetInvalidNameException(System.String,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.ValidateNames.ParseNCNameThrow(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlAttribute.CloneNode(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlAttribute.InnerXml">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlAttribute.OwnerElement">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlAttributeCollection.Append(System.Xml.XmlAttribute)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlAttributeCollection.InsertAfter(System.Xml.XmlAttribute,System.Xml.XmlAttribute)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="newNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlAttributeCollection.InsertBefore(System.Xml.XmlAttribute,System.Xml.XmlAttribute)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="newNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlAttributeCollection.InternalAppendAttribute(System.Xml.XmlAttribute)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.XmlAttributeCollection.Item(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlAttributeCollection.Item(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlAttributeCollection.Prepend(System.Xml.XmlAttribute)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlAttributeCollection.RemoveAt(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlAttributeCollection.SetNamedItem(System.Xml.XmlNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlCDataSection.CloneNode(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlCharacterData.Substring(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlCharCheckingReader.Settings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlCharCheckingReaderWithNS.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlCharCheckingReaderWithNS.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlCharCheckingReaderWithNS.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlCharCheckingWriter.ReplaceNewLines(System.Char[],System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlCharCheckingWriter.ReplaceNewLines(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlCharCheckingWriter.Settings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlChildEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlChildEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlComment.CloneNode(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlComplianceUtil.CDataNormalize(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlComplianceUtil.NonCDataNormalize(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlComplianceUtil.StripSpaces(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.CreateException(System.String,System.String,System.Xml.ExceptionType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.CreateException(System.String,System.String[],System.Xml.ExceptionType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.CreateException(System.String,System.Xml.ExceptionType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.CreateInvalidCharException(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlConvert.CreateInvalidCharException(System.Char,System.Xml.ExceptionType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlConvert.CreateInvalidHighSurrogateCharException(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlConvert.CreateInvalidHighSurrogateCharException(System.Char,System.Xml.ExceptionType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlConvert.CreateInvalidNameArgumentException(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlConvert.CreateInvalidSurrogatePairException(System.Char,System.Char)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlConvert.CreateInvalidSurrogatePairException(System.Char,System.Char,System.Xml.ExceptionType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlConvert.DecodeName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.EncodeLocalName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.EncodeName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.EncodeName(System.String,System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlConvert.EncodeNmToken(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.EscapeValueForDebuggerDisplay(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.FromBinHexString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.FromBinHexString(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.SplitString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.ToBinHexString(System.Byte[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="inArray">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.ToString(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlConvert.ToString(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlConvert.ToString(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlConvert.ToString(System.DateTime,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="format">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.ToString(System.DateTime,System.Xml.XmlDateTimeSerializationMode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlConvert.ToString(System.DateTimeOffset)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlConvert.ToString(System.DateTimeOffset,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="format">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.ToString(System.Guid)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlConvert.ToString(System.TimeSpan)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlConvert.TrimString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.TryToBoolean(System.String,System.Boolean@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.TryToByte(System.String,System.Byte@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlConvert.TryToChar(System.String,System.Char@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlConvert.TryToDecimal(System.String,System.Decimal@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlConvert.TryToDouble(System.String,System.Double@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.TryToGuid(System.String,System.Guid@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.TryToInt16(System.String,System.Int16@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlConvert.TryToInt32(System.String,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlConvert.TryToInt64(System.String,System.Int64@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlConvert.TryToInteger(System.String,System.Decimal@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlConvert.TryToSByte(System.String,System.SByte@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlConvert.TryToSingle(System.String,System.Single@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.TryToTimeSpan(System.String,System.TimeSpan@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.TryToUInt16(System.String,System.UInt16@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlConvert.TryToUInt32(System.String,System.UInt32@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlConvert.TryToUInt64(System.String,System.UInt64@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlConvert.TryToUri(System.String,System.Uri@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlConvert.TryVerifyName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlConvert.TryVerifyNCName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.TryVerifyNMTOKEN(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlConvert.TryVerifyNormalizedString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.TryVerifyTOKEN(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlConvert.VerifyName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.VerifyNCName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.VerifyNMTOKEN(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.VerifyNMTOKEN(System.String,System.Xml.ExceptionType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.VerifyNormalizedString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.VerifyQName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.VerifyQName(System.String,System.Xml.ExceptionType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.VerifyTOKEN(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
      <argument>null=&gt;null</argument>
    </attribute>
    <parameter name="token">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDeclaration.CloneNode(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlDeclaration.LocalName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlDeclaration.Name">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlDeclaration.Version">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlDocument.AddAttrXmlName(System.String,System.String,System.String,System.Xml.Schema.IXmlSchemaInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.AddXmlName(System.String,System.String,System.String,System.Xml.Schema.IXmlSchemaInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.CloneNode(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlDocument.CreateDefaultAttribute(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
    </parameter>
    <parameter name="namespaceURI">
    </parameter>
    <parameter name="internalSubset">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.CreateNavigator(System.Xml.XmlNode)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.XmlDocument.Declaration">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlDocument.DocumentElement">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlDocument.DocumentType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlDocument.GetDefaultAttribute(System.Xml.XmlElement,System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="elem">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attrPrefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attrLocalname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.GetElement(System.Collections.ArrayList,System.Xml.XmlElement)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="elementList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.GetElementById(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="elementId">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.GetInsertEventArgsForLoad(System.Xml.XmlNode,System.Xml.XmlNode)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.GetXmlName(System.String,System.String,System.String,System.Xml.Schema.IXmlSchemaInfo)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.ImportNodeInternal(System.Xml.XmlNode,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.XmlDocument.NamespaceXml">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlDocument.NormalizeText(System.Xml.XmlNode)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.PrepareDefaultAttribute(System.Xml.Schema.SchemaAttDef,System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="attdef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attrPrefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attrLocalname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.ReadNode(System.Xml.XmlReader)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.SetupReader(System.Xml.XmlTextReader)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="tr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.XmlDocument.Version">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlDocumentFragment.CloneNode(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlDocumentType.CloneNode(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlDocumentType.Entities">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlDownloadManager.GetNonFileStream(System.Uri,System.Net.ICredentials)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDownloadManager.GetStream(System.Uri,System.Net.ICredentials)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.XmlElement.Attributes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlElement.CloneNode(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlElement.GetAttributeNode(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlElement.GetAttributeNode(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="localName">
    </parameter>
    <parameter name="namespaceURI">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlElement.RemoveAttributeAt(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlElement.RemoveAttributeNode(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="localName">
    </parameter>
    <parameter name="namespaceURI">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlElement.SetAttributeNode(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceURI">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlElement.SetAttributeNode(System.Xml.XmlAttribute)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="newAttr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlElementList.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlElementList.GetMatchingNode(System.Xml.XmlNode,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlElementList.GetNextNode(System.Xml.XmlNode)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlElementList.GetNthMatchingNode(System.Xml.XmlNode,System.Boolean,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlElementList.NextElemInPreOrder(System.Xml.XmlNode)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="curNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlElementList.PrevElemInPreOrder(System.Xml.XmlNode)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="curNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.XmlElementListEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlEmptyElementListEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlEncodedRawTextWriter.CharEntity(System.Char*,System.Char)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="pDst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEncodedRawTextWriter.InvalidXmlChar(System.Int32,System.Char*,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="pDst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.XmlEncodedRawTextWriter.Settings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlEntityReference.CloneNode(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlEventCache.ToBytes(System.Byte[],System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlException.BuildCharExceptionStr(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlException.Message">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlImplementation.CreateDocument">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlLoader.CreateInnerXmlReader(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext,System.Xml.XmlDocument)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="doc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="xmlFragment">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlLoader.GetContext(System.Xml.XmlNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlLoader.LoadAttributeNode">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlLoader.LoadAttributeNodeDirect">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlLoader.LoadDeclarationNode">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlLoader.LoadDefaultAttribute">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlLoader.LoadDocumentTypeNode">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlLoader.LoadEntityReferenceNode(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlLoader.LoadNode(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlLoader.LoadNodeDirect">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlLoader.ReadCurrentNode(System.Xml.XmlDocument,System.Xml.XmlReader)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="doc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlLoader.UnexpectedNodeType(System.Xml.XmlNodeType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlName.Create(System.String,System.String,System.String,System.Int32,System.Xml.XmlDocument,System.Xml.XmlName,System.Xml.Schema.IXmlSchemaInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlName.MemberType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlName.SchemaAttribute">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlName.SchemaElement">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlName.SchemaType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlNamedNodeMap.AddNode(System.Xml.XmlNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNamedNodeMap.AddNodeForLoad(System.Xml.XmlNode,System.Xml.XmlDocument)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="doc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNamedNodeMap.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlNamedNodeMap.InsertNodeAt(System.Int32,System.Xml.XmlNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.XmlNamedNodeMap.Nodes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="localName">
    </parameter>
    <parameter name="namespaceURI">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNamedNodeMap.RemoveNodeAt(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlNamedNodeMap.ReplaceNodeAt(System.Int32,System.Xml.XmlNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNamedNodeMap.SetNamedItem(System.Xml.XmlNode)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlNamespaceManager.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlNamespaceManager.LookupNamespace(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNode.AppendChildForLoad(System.Xml.XmlNode,System.Xml.XmlDocument)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="newChild">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="doc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.XmlNode.Attributes">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlNode.debuggerDisplayProxy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlNode.Document">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlNode.FindChild(System.Xml.XmlNodeType)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlNode.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlNode.GetEventArgs(System.Xml.XmlNode,System.Xml.XmlNode,System.Xml.XmlNode,System.String,System.String,System.Xml.XmlNodeChangedAction)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlNode.GetXPAttribute(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlNode.Item(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
    </parameter>
  </member>
  <member name="P:System.Xml.XmlNode.Item(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="localname">
    </parameter>
    <parameter name="ns">
    </parameter>
  </member>
  <member name="P:System.Xml.XmlNode.NextSibling">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlNode.NormalizeWinner(System.Xml.XmlNode,System.Xml.XmlNode)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="secondNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.XmlNode.OuterXml">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlNode.OwnerDocument">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlNode.ParentNode">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlNode.PreviousSibling">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlNode.PreviousText">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlNode.SelectNodes(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="xpath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="xpath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNode.SelectSingleNode(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="xpath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="xpath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlNode.System#ICloneable#Clone">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlNode.XPLocalName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlNodeList.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlNodeList.Item(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlNodeList.Item(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlNodeListEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlNodeReader.NamespaceURI">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNodeReaderNavigator.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlNodeReaderNavigator.NamespaceURI">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlProcessingInstruction.CloneNode(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlProcessingInstruction.LocalName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlProcessingInstruction.Name">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlQualifiedName.Parse(System.String,System.Xml.IXmlNamespaceResolver,System.String@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nsmgr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.AddValidation(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.XmlReader.BaseURI">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlReader.CreateDtdValidatingReader(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="baseReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.CreateReadContentAsException(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlReader.CreateReadContentAsException(System.String,System.Xml.XmlNodeType,System.Xml.IXmlLineInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlReader.CreateReadElementContentAsException(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlReader.CreateReadElementContentAsException(System.String,System.Xml.XmlNodeType,System.Xml.IXmlLineInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlReader.CreateReaderImpl(System.IO.Stream,System.Xml.XmlReaderSettings,System.Uri,System.String,System.Xml.XmlParserContext,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.CreateReaderImpl(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String,System.Xml.XmlParserContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.CreateSqlReader(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.XmlReader.debuggerDisplayProxy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlReader.GetAttribute(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlReader.Item(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlReader.Item(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.XmlReader.Item(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.LookupNamespace(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.XmlReader.NamespaceManager">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlReader.NameTable">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlReader.ReadInnerXml">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlReader.ReadOuterXml">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlReader.SchemaInfo">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlReader.Settings">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlReader.XmlLang">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="absoluteUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="role">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="relativeUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="baseUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="securityUrl">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlSignificantWhitespace.CloneNode(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlSqlBinaryReader.CDATAValue">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlSqlBinaryReader.GetString(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlSqlBinaryReader.GetStringAligned(System.Byte[],System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlSqlBinaryReader.GetValueType(System.Xml.BinXmlToken)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlSqlBinaryReader.LookupNamespace(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlSqlBinaryReader.ParseText">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlSqlBinaryReader.Settings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlSqlBinaryReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlSqlBinaryReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlSqlBinaryReader.ThrowNotSupported(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlSqlBinaryReader.ThrowUnexpectedToken(System.Xml.BinXmlToken)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlSqlBinaryReader.ThrowXmlException(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlSqlBinaryReader.ThrowXmlException(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlSqlBinaryReader.ValueAsDateTimeString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlSqlBinaryReader.ValueAsObject(System.Xml.BinXmlToken,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlSqlBinaryReader.XmlDeclValue">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlSubtreeReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlSubtreeReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlSubtreeReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlText.CloneNode(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlTextEncoder.AttributeValue">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlTextReader.GetAttribute(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlTextReader.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlTextReader.GetRemainder">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.XmlTextReader.Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.AddAttribute(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.AddAttribute(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.AddAttributeNoChecks(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.AddNode(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.AllocNode(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.GetAttribute(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.GetRemainder">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.LookupNamespace(System.Xml.XmlTextReaderImpl.NodeData)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.XmlTextReaderImpl.NodeData.StringValue">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.NoNamespaceManager.LookupNamespace(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.OpenStream(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.XmlTextReaderImpl.Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlUtf8RawTextWriter.CharEntity(System.Byte*,System.Char)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="pDst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.XmlUtf8RawTextWriter.Settings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlValidatingReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlValidatingReaderImpl.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlValidatingReaderImpl.LookupPrefix(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.XmlValidatingReaderImpl.Settings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlValidatingReaderImpl.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlValidatingReaderImpl.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlValidatingReaderImpl.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWellFormedWriter.DupAttrException(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWellFormedWriter.InvalidCharsException(System.String,System.Char)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlWellFormedWriter.NamespaceResolverProxy.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlWellFormedWriter.NamespaceResolverProxy.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWellFormedWriter.NamespaceResolverProxy.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.XmlWellFormedWriter.Settings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlWhitespace.CloneNode(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlWrappingReader.DtdSchemaInfo">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlWriter.CreateWriterImpl(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Xml.XmlWriterSettings)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="output">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.CreateWriterImpl(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="output">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.LookupPrefix(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.XmlWriter.Settings">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XPath.XmlEmptyNavigator.BaseURI">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XPath.XmlEmptyNavigator.LocalName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XPath.XmlEmptyNavigator.Name">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XPath.XmlEmptyNavigator.NamespaceURI">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XPath.XmlEmptyNavigator.NameTable">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XPath.XmlEmptyNavigator.Prefix">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XPath.XmlEmptyNavigator.Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XPath.XmlEmptyNavigator.XmlLang">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XPath.XPathDocument.CreateNavigator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XPath.XPathDocument.LoadFromWriter(System.Xml.XPath.XPathDocument.LoadFlags,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XPath.XPathDocument.SetupReader(System.Xml.XmlTextReaderImpl)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathException.Create(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XPath.XPathException.Create(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathException.Create(System.String,System.String,System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathException.Create(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.XPath.XPathException.Message">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XPath.XPathItem.ValueType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XPath.XPathItem.XmlType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.Compile(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="xpath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.CompileMatchPattern(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="xpath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.CreateContextReader(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="xml">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.CreateReader">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XPath.XPathNavigator.debuggerDisplayProxy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="xpath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.String,System.Xml.IXmlNamespaceResolver)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="xpath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.Xml.XPath.XPathExpression)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.Xml.XPath.XPathExpression,System.Xml.XPath.XPathNodeIterator)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.GetNamespaces(System.Xml.IXmlNamespaceResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="resolver">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.LookupNamespace(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.LookupPrefix(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.XPath.XPathNavigator.NameTable">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.ReadSubtree">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.Select(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="xpath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.Select(System.String,System.Xml.IXmlNamespaceResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="xpath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.Select(System.Xml.XPath.XPathExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.Xml.XPath.XPathNodeType,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.Xml.XPath.XPathNodeType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.Xml.XPath.XPathNodeType,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="xpath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.String,System.Xml.IXmlNamespaceResolver)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="xpath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.Xml.XPath.XPathExpression)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.System#ICloneable#Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XPath.XPathNavigator.UnderlyingObject">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XPath.XPathNavigator.UniqueId">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigatorReader.Create(System.Xml.XPath.XPathNavigator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="navToRead">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.XPath.XPathNavigatorReader.NamespaceManager">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XPath.XPathNavigatorReader.Settings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigatorReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigatorReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigatorReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.XPath.XPathNavigatorReader.UnderlyingObject">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XPath.XPathNavigatorReaderWithSI.MemberType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XPath.XPathNavigatorReaderWithSI.SchemaAttribute">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XPath.XPathNavigatorReaderWithSI.SchemaElement">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XPath.XPathNavigatorReaderWithSI.SchemaType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XPath.XPathNodeIterator.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XPath.XPathNodeIterator.debuggerDisplayProxy">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XPath.XPathNodeIterator.Enumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XPath.XPathNodeIterator.System#ICloneable#Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XPathNodeList.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XsdCachingReader.AddAttribute(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XsdCachingReader.AddContent(System.Xml.XmlNodeType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XsdCachingReader.CreateDummyTextNode(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XsdCachingReader.RecordTextNode(System.String,System.String,System.Int32,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XsdValidatingReader.AddAttributePSVI(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XsdValidatingReader.CreateDummyTextNode(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XsdValidatingReader.GetAttributePSVI(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XsdValidatingReader.GetAttributePSVI(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XsdValidatingReader.GetCachingReader">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XsdValidatingReader.GetDefaultAttribute(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XsdValidatingReader.GetDefaultAttribute(System.String,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XsdValidatingReader.SchemaInfo">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XsdValidatingReader.Settings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XsdValidatingReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XsdValidatingReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XsdValidatingReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.XsdValidatingReader.System#Xml#Schema#IXmlSchemaInfo#MemberType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XsdValidatingReader.System#Xml#Schema#IXmlSchemaInfo#SchemaAttribute">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XsdValidatingReader.System#Xml#Schema#IXmlSchemaInfo#SchemaElement">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XsdValidatingReader.System#Xml#Schema#IXmlSchemaInfo#SchemaType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="stylesheet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="typeBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslCompiledTransform.CreateReader(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="inputUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslCompiledTransform.GetFirstError">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XsltContext.ResolveFunction(System.String,System.String,System.Xml.XPath.XPathResultType[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="ArgTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltContext.ResolveVariable(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltException.Create(System.String,System.String[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltException.Create(System.String,System.String[],System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltException.FormatMessage(System.String,System.String[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.Xsl.XsltException.Message">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Xsl.XsltSettings.Default">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Xsl.XsltSettings.TrustedXslt">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.DtdParser.Create">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.DtdParser.StripSpaces(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.Schema.SchemaAttDef.System#Xml#IDtdDefaultAttributeInfo#DefaultValueTyped">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.SchemaElementDecl.System#Xml#IDtdAttributeListInfo#LookupIdAttribute">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlUntypedStringConverter.Base64BinaryToString(System.Byte[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlUntypedStringConverter.CreateInvalidClrMappingException(System.Type,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="sourceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlUntypedStringConverter.DateTimeOffsetToString(System.DateTimeOffset)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlUntypedStringConverter.DateTimeToString(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlUntypedStringConverter.DurationToString(System.TimeSpan)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlUntypedStringConverter.ListTypeToString(System.Object,System.Xml.IXmlNamespaceResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlUntypedStringConverter.StringToBase64Binary(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlUntypedStringConverter.StringToListType(System.String,System.Type,System.Xml.IXmlNamespaceResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nsResolver">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlUntypedStringConverter.StringToQName(System.String,System.Xml.IXmlNamespaceResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nsResolver">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlUntypedStringConverter.ToArray``1(System.String[],System.Xml.IXmlNamespaceResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="stringArray">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nsResolver">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.CreateException(System.String,System.String,System.Xml.ExceptionType,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.CreateException(System.String,System.String[],System.Xml.ExceptionType,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.CreateException(System.String,System.Xml.ExceptionType,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.CreateInvalidCharException(System.Char,System.Char)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlConvert.CreateInvalidCharException(System.Char,System.Char,System.Xml.ExceptionType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlConvert.CreateInvalidCharException(System.Char[],System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.CreateInvalidCharException(System.Char[],System.Int32,System.Int32,System.Xml.ExceptionType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.CreateInvalidCharException(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.CreateInvalidCharException(System.String,System.Int32,System.Xml.ExceptionType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.CreateInvalidHighSurrogateCharException(System.Char,System.Xml.ExceptionType,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlConvert.CreateInvalidNameCharException(System.String,System.Int32,System.Xml.ExceptionType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.CreateInvalidSurrogatePairException(System.Char,System.Char,System.Xml.ExceptionType,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlConvert.SplitString(System.String,System.StringSplitOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.TrimStringEnd(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.TrimStringStart(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.VerifyNCName(System.String,System.Xml.ExceptionType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.VerifyPublicId(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="publicId">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.VerifyWhitespace(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="content">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.VerifyXmlChars(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="content">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlException.BuildCharExceptionArgs(System.Char,System.Char)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlException.BuildCharExceptionArgs(System.Char[],System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlException.BuildCharExceptionArgs(System.Char[],System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlException.BuildCharExceptionArgs(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.CreateWriterForInnerOuterXml(System.IO.StringWriter)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="sw">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReaderSettings.AddConformanceWrapper(System.Xml.XmlReader)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="baseReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReaderSettings.CreateDefaultResolver">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlReaderSettings.CreateReader(System.IO.Stream,,System.String,System.Xml.XmlParserContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReaderSettings.CreateReader(System.IO.TextReader,System.String,System.Xml.XmlParserContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReaderSettings.CreateReader(System.String,System.Xml.XmlParserContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="inputUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReaderSettings.CreateReader(System.Xml.XmlReader)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlResolver.GetEntity(,System.String,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="absoluteUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.AddDefaultAttributeInternal(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.DetectEncoding">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlTextReaderImpl.Settings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.StripSpaces(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.XmlWellFormedWriter.AttributeValueCache.StringValue">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlWellFormedWriter.InvalidCharsException(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriterSettings.AddConformanceWrapper(System.Xml.XmlWriter)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="baseWriter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriterSettings.CreateWriter(System.IO.Stream)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="output">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriterSettings.CreateWriter(System.IO.TextWriter)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="output">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriterSettings.CreateWriter(System.Xml.XmlWriter)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="output">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Schema.IXmlSchemaInfo.MemberType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Schema.IXmlSchemaInfo.SchemaAttribute">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Schema.IXmlSchemaInfo.SchemaElement">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Schema.IXmlSchemaInfo.SchemaType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportAnyType(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="ns">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.ToByteArrayBase64(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="value">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.ReadContentAsStringAsync">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.IXPathNavigable.CreateNavigator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XPath.XPathNavigator.SchemaInfo">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Xsl.IXsltContextFunction.Invoke(System.Xml.Xsl.XsltContext,System.Object[],System.Xml.XPath.XPathNavigator)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="docContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="T:System.Xml.Serialization.XmlRootAttribute">
    <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor(JetBrains.Annotations.ImplicitUseTargetFlags)">
      <argument>3</argument>
    </attribute>
  </member>
  <member name="T:System.Xml.Serialization.XmlAnyElementAttribute">
    <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor"/>
  </member>
  <member name="T:System.Xml.Serialization.XmlArrayAttribute">
    <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor"/>
  </member>
  <member name="T:System.Xml.Serialization.XmlArrayItemAttribute">
    <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor"/>
  </member>
  <member name="T:System.Xml.Serialization.XmlAttributeAttribute">
    <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor"/>
  </member>
  <member name="T:System.Xml.Serialization.XmlChoiceIdentifierAttribute">
    <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor"/>
  </member>
  <member name="T:System.Xml.Serialization.XmlElementAttribute">
    <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor"/>
  </member>
  <member name="T:System.Xml.Serialization.XmlEnumAttribute">
    <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor"/>
  </member>
  <member name="T:System.Xml.Serialization.XmlTextAttribute">
    <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Schema.XmlSchema.Items">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Schema.XmlSchemaGroupBase.Items">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlConvert.ToString(System.Byte)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlConvert.ToString(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlConvert.ToString(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlConvert.ToString(System.Int16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlConvert.ToString(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlConvert.ToString(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlConvert.ToString(System.SByte)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlConvert.ToString(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlConvert.ToString(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlConvert.ToString(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XmlConvert.ToString(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlNode.InnerXml">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlReader.Name">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlReader.Prefix">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.XmlReader.Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Schema.XmlSchema.Write(System.Xml.XmlWriter)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaSet.#ctor(System.Xml.XmlNameTable)">
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
    <parameter name="schemas">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
    <parameter name="schemaDocument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="targetNamespace">
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
    <parameter name="schemas">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
    <parameter name="schemaToRemove">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.Load(System.String)">
    <parameter name="filename">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNamespaceManager.#ctor(System.Xml.XmlNameTable)">
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNamespaceManager.AddNamespace(System.String,System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNamespaceManager.RemoveNamespace(System.String,System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNameTable.Get(System.String)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNameTable.Get(System.Char[],System.Int32,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="newChild">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.IsName(System.String)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.IsNameToken(System.String)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
    <parameter name="returnType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceResolver">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)">
    <parameter name="returnType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceResolver">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)">
    <parameter name="returnType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceResolver">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
    <parameter name="navigator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteValue(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.AppendChild(System.String)">
    <parameter name="newChild">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XmlReader)">
    <parameter name="newChild">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XPath.XPathNavigator)">
    <parameter name="newChild">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.DeleteRange(System.Xml.XPath.XPathNavigator)">
    <parameter name="lastSiblingToDelete">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.String)">
    <parameter name="newSibling">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XmlReader)">
    <parameter name="newSibling">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XPath.XPathNavigator)">
    <parameter name="newSibling">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.String)">
    <parameter name="newSibling">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XmlReader)">
    <parameter name="newSibling">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XPath.XPathNavigator)">
    <parameter name="newSibling">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.PrependChild(System.String)">
    <parameter name="newChild">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XmlReader)">
    <parameter name="newChild">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XPath.XPathNavigator)">
    <parameter name="newChild">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.ReplaceRange(System.Xml.XPath.XPathNavigator)">
    <parameter name="lastSiblingToReplace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.String)">
    <parameter name="newNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XmlReader)">
    <parameter name="newNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XPath.XPathNavigator)">
    <parameter name="newNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.SetTypedValue(System.Object)">
    <parameter name="typedValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.SetValue(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathDocumentBaseIterator.#ctor(MS.Internal.Xml.Cache.XPathDocumentBaseIterator)">
    <parameter name="iter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathDocumentBaseIterator.#ctor(MS.Internal.Xml.Cache.XPathDocumentNavigator)">
    <parameter name="ctxt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathDocumentBuilder.#ctor(System.Xml.XPath.XPathDocument,System.Xml.IXmlLineInfo,System.String,System.Xml.XPath.XPathDocument.LoadFlags)">
    <parameter name="doc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathDocumentBuilder.AddSibling(System.Xml.XPath.XPathNodeType,System.String,System.String,System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathDocumentBuilder.CreateIdTables(System.Xml.Schema.SchemaInfo)">
    <parameter name="schInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathDocumentBuilder.Initialize(System.Xml.XPath.XPathDocument,System.Xml.IXmlLineInfo,System.String,System.Xml.XPath.XPathDocument.LoadFlags)">
    <parameter name="doc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathDocumentBuilder.NewNamespaceNode(MS.Internal.Xml.Cache.XPathNode[]@,System.String,System.String,MS.Internal.Xml.Cache.XPathNode[],System.Int32)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathDocumentBuilder.NewNode(MS.Internal.Xml.Cache.XPathNode[]@,System.Xml.XPath.XPathNodeType,System.String,System.String,System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathDocumentBuilder.TextBlockBuilder.WriteTextBlock(System.String,MS.Internal.Xml.Cache.TextBlockType)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathDocumentBuilder.WriteChars(System.Char[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathDocumentBuilder.WriteComment(System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathDocumentBuilder.WriteEndElement(System.String,System.String,System.String)">
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathDocumentBuilder.WriteEntityRef(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathDocumentBuilder.WriteFullEndElement(System.String,System.String,System.String)">
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathDocumentBuilder.WriteProcessingInstruction(System.String,System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathDocumentBuilder.WriteProcessingInstruction(System.String,System.String,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathDocumentBuilder.WriteRaw(System.Char[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathDocumentBuilder.WriteStartElement(System.String,System.String,System.String,System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathDocumentBuilder.WriteString(System.String,MS.Internal.Xml.Cache.TextBlockType)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathDocumentBuilder.WriteXmlDeclaration(System.String)">
    <parameter name="xmldecl">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathDocumentElementChildIterator.#ctor(MS.Internal.Xml.Cache.XPathDocumentElementChildIterator)">
    <parameter name="iter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathDocumentElementChildIterator.#ctor(MS.Internal.Xml.Cache.XPathDocumentNavigator,System.String,System.String)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathDocumentElementDescendantIterator.#ctor(MS.Internal.Xml.Cache.XPathDocumentElementDescendantIterator)">
    <parameter name="iter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathDocumentElementDescendantIterator.#ctor(MS.Internal.Xml.Cache.XPathDocumentNavigator,System.String,System.String,System.Boolean)">
    <parameter name="root">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathDocumentKindChildIterator.#ctor(MS.Internal.Xml.Cache.XPathDocumentKindChildIterator)">
    <parameter name="iter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathDocumentKindChildIterator.#ctor(MS.Internal.Xml.Cache.XPathDocumentNavigator,System.Xml.XPath.XPathNodeType)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathDocumentKindDescendantIterator.#ctor(MS.Internal.Xml.Cache.XPathDocumentKindDescendantIterator)">
    <parameter name="iter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathDocumentKindDescendantIterator.#ctor(MS.Internal.Xml.Cache.XPathDocumentNavigator,System.Xml.XPath.XPathNodeType,System.Boolean)">
    <parameter name="root">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathDocumentNavigator.#ctor(MS.Internal.Xml.Cache.XPathDocumentNavigator)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathDocumentNavigator.MoveToAttribute(System.String,System.String)">
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathDocumentNavigator.SelectChildren(System.String,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathDocumentNavigator.SelectDescendants(System.String,System.String,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathNode.SetSibling(MS.Internal.Xml.Cache.XPathNodeInfoTable,MS.Internal.Xml.Cache.XPathNode[],System.Int32)">
    <parameter name="infoTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathNode.SetSimilarElement(MS.Internal.Xml.Cache.XPathNodeInfoTable,MS.Internal.Xml.Cache.XPathNode[],System.Int32)">
    <parameter name="infoTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathNodeHelper.GetAttribute(MS.Internal.Xml.Cache.XPathNode[]@,System.Int32@,System.String,System.String)">
    <parameter name="pageNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathNodeHelper.GetChild(MS.Internal.Xml.Cache.XPathNode[]@,System.Int32@)">
    <parameter name="pageNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathNodeHelper.GetContentChild(MS.Internal.Xml.Cache.XPathNode[]@,System.Int32@)">
    <parameter name="pageNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathNodeHelper.GetContentChild(MS.Internal.Xml.Cache.XPathNode[]@,System.Int32@,System.Xml.XPath.XPathNodeType)">
    <parameter name="pageNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathNodeHelper.GetContentFollowing(MS.Internal.Xml.Cache.XPathNode[]@,System.Int32@,MS.Internal.Xml.Cache.XPathNode[],System.Int32,System.Xml.XPath.XPathNodeType)">
    <parameter name="pageCurrent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pageEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathNodeHelper.GetContentSibling(MS.Internal.Xml.Cache.XPathNode[]@,System.Int32@)">
    <parameter name="pageNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathNodeHelper.GetContentSibling(MS.Internal.Xml.Cache.XPathNode[]@,System.Int32@,System.Xml.XPath.XPathNodeType)">
    <parameter name="pageNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathNodeHelper.GetElementChild(MS.Internal.Xml.Cache.XPathNode[]@,System.Int32@,System.String,System.String)">
    <parameter name="pageNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathNodeHelper.GetElementFollowing(MS.Internal.Xml.Cache.XPathNode[]@,System.Int32@,MS.Internal.Xml.Cache.XPathNode[],System.Int32,System.String,System.String)">
    <parameter name="pageCurrent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathNodeHelper.GetElementSibling(MS.Internal.Xml.Cache.XPathNode[]@,System.Int32@,System.String,System.String)">
    <parameter name="pageNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathNodeHelper.GetFirstAttribute(MS.Internal.Xml.Cache.XPathNode[]@,System.Int32@)">
    <parameter name="pageNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathNodeHelper.GetFollowing(MS.Internal.Xml.Cache.XPathNode[]@,System.Int32@)">
    <parameter name="pageNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathNodeHelper.GetInScopeNamespaces(MS.Internal.Xml.Cache.XPathNode[],System.Int32,MS.Internal.Xml.Cache.XPathNode[]@)">
    <parameter name="pageElem">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathNodeHelper.GetLocalNamespaces(MS.Internal.Xml.Cache.XPathNode[],System.Int32,MS.Internal.Xml.Cache.XPathNode[]@)">
    <parameter name="pageElem">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathNodeHelper.GetLocation(MS.Internal.Xml.Cache.XPathNode[],System.Int32)">
    <parameter name="pageNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathNodeHelper.GetNextAttribute(MS.Internal.Xml.Cache.XPathNode[]@,System.Int32@)">
    <parameter name="pageNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathNodeHelper.GetNonDescendant(MS.Internal.Xml.Cache.XPathNode[]@,System.Int32@)">
    <parameter name="pageNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathNodeHelper.GetParent(MS.Internal.Xml.Cache.XPathNode[]@,System.Int32@)">
    <parameter name="pageNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathNodeHelper.GetPreviousContentSibling(MS.Internal.Xml.Cache.XPathNode[]@,System.Int32@)">
    <parameter name="pageNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathNodeHelper.GetPreviousElementSibling(MS.Internal.Xml.Cache.XPathNode[]@,System.Int32@,System.String,System.String)">
    <parameter name="pageNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathNodeHelper.GetTextFollowing(MS.Internal.Xml.Cache.XPathNode[]@,System.Int32@,MS.Internal.Xml.Cache.XPathNode[],System.Int32)">
    <parameter name="pageCurrent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pageEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathNodeInfoAtom.#ctor(System.String,System.String,System.String,System.String,MS.Internal.Xml.Cache.XPathNode[],MS.Internal.Xml.Cache.XPathNode[],MS.Internal.Xml.Cache.XPathNode[],System.Xml.XPath.XPathDocument,System.Int32,System.Int32)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathNodeInfoAtom.Equals(System.Object)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathNodeInfoAtom.Init(System.String,System.String,System.String,System.String,MS.Internal.Xml.Cache.XPathNode[],MS.Internal.Xml.Cache.XPathNode[],MS.Internal.Xml.Cache.XPathNode[],System.Xml.XPath.XPathDocument,System.Int32,System.Int32)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.Cache.XPathNodeInfoTable.AddInfo(MS.Internal.Xml.Cache.XPathNodeInfoAtom)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.AbsoluteQuery.#ctor(MS.Internal.Xml.XPath.AbsoluteQuery)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.AttributeQuery.#ctor(MS.Internal.Xml.XPath.Query,System.String,System.String,System.Xml.XPath.XPathNodeType)">
    <parameter name="Name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="Prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.BaseAxisQuery.#ctor(MS.Internal.Xml.XPath.BaseAxisQuery)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.BaseAxisQuery.#ctor(MS.Internal.Xml.XPath.Query,System.String,System.String,System.Xml.XPath.XPathNodeType)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.BaseAxisQuery.matches(System.Xml.XPath.XPathNavigator)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.BooleanExpr.#ctor(MS.Internal.Xml.XPath.BooleanExpr)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.BooleanExpr.#ctor(MS.Internal.Xml.XPath.Operator.Op,MS.Internal.Xml.XPath.Query,MS.Internal.Xml.XPath.Query)">
    <parameter name="opnd1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="opnd2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.BooleanFunctions.#ctor(MS.Internal.Xml.XPath.BooleanFunctions)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.BooleanFunctions.Lang(System.Xml.XPath.XPathNodeIterator)">
    <parameter name="nodeIterator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.BooleanFunctions.Not(System.Xml.XPath.XPathNodeIterator)">
    <parameter name="nodeIterator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.BooleanFunctions.toBoolean(System.String)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.BooleanFunctions.toBoolean(System.Xml.XPath.XPathNodeIterator)">
    <parameter name="nodeIterator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.CacheAxisQuery.#ctor(MS.Internal.Xml.XPath.CacheAxisQuery)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.CacheAxisQuery.#ctor(MS.Internal.Xml.XPath.Query,System.String,System.String,System.Xml.XPath.XPathNodeType)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.CacheChildrenQuery.#ctor(MS.Internal.Xml.XPath.CacheChildrenQuery)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.CacheChildrenQuery.#ctor(MS.Internal.Xml.XPath.Query,System.String,System.String,System.Xml.XPath.XPathNodeType)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.CacheOutputQuery.#ctor(MS.Internal.Xml.XPath.CacheOutputQuery)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.ChildrenQuery.#ctor(MS.Internal.Xml.XPath.Query,System.String,System.String,System.Xml.XPath.XPathNodeType)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.ClonableStack`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.CompiledXpathExpr.AddSort(System.Object,System.Xml.XPath.XmlSortOrder,System.Xml.XPath.XmlCaseOrder,System.String,System.Xml.XPath.XmlDataType)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.CompiledXpathExpr.UndefinedXsltContext.PreserveWhitespace(System.Xml.XPath.XPathNavigator)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.CompiledXpathExpr.UndefinedXsltContext.ResolveFunction(System.String,System.String,System.Xml.XPath.XPathResultType[])">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ArgTypes">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.CompiledXpathExpr.UndefinedXsltContext.ResolveVariable(System.String,System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.ContextQuery.#ctor(MS.Internal.Xml.XPath.ContextQuery)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.DescendantBaseQuery.#ctor(MS.Internal.Xml.XPath.Query,System.String,System.String,System.Xml.XPath.XPathNodeType,System.Boolean,System.Boolean)">
    <parameter name="Name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="Prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.DescendantOverDescendantQuery.#ctor(MS.Internal.Xml.XPath.DescendantOverDescendantQuery)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.DescendantOverDescendantQuery.#ctor(MS.Internal.Xml.XPath.Query,System.Boolean,System.String,System.String,System.Xml.XPath.XPathNodeType,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.DescendantQuery.#ctor(MS.Internal.Xml.XPath.DescendantQuery)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.DescendantQuery.#ctor(MS.Internal.Xml.XPath.Query,System.String,System.String,System.Xml.XPath.XPathNodeType,System.Boolean,System.Boolean)">
    <parameter name="Name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="Prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.ExtensionQuery.#ctor(MS.Internal.Xml.XPath.ExtensionQuery)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.FollowingQuery.#ctor(MS.Internal.Xml.XPath.Query,System.String,System.String,System.Xml.XPath.XPathNodeType)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.FollSiblingQuery.#ctor(MS.Internal.Xml.XPath.Query,System.String,System.String,System.Xml.XPath.XPathNodeType)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.FollSiblingQuery.Visited(System.Xml.XPath.XPathNavigator)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.Function.#ctor(MS.Internal.Xml.XPath.Function.FunctionType,System.Collections.ArrayList)">
    <parameter name="argumentList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.Function.#ctor(System.String,System.String,System.Collections.ArrayList)">
    <parameter name="argumentList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.FunctionQuery.#ctor(MS.Internal.Xml.XPath.FunctionQuery)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.IDQuery.ProcessIds(System.Xml.XPath.XPathNavigator,System.String)">
    <parameter name="contextNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="val">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.IteratorFilter.#ctor(MS.Internal.Xml.XPath.IteratorFilter)">
    <parameter name="it">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.LogicalExpr.#ctor(MS.Internal.Xml.XPath.LogicalExpr)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.LogicalExpr.cmpBoolBoolE(MS.Internal.Xml.XPath.Operator.Op,System.Object,System.Object)">
    <parameter name="val1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="val2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.LogicalExpr.cmpBoolBoolO(MS.Internal.Xml.XPath.Operator.Op,System.Object,System.Object)">
    <parameter name="val1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="val2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.LogicalExpr.cmpBoolNumberE(MS.Internal.Xml.XPath.Operator.Op,System.Object,System.Object)">
    <parameter name="val1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="val2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.LogicalExpr.cmpBoolNumberO(MS.Internal.Xml.XPath.Operator.Op,System.Object,System.Object)">
    <parameter name="val1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="val2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.LogicalExpr.cmpBoolStringE(MS.Internal.Xml.XPath.Operator.Op,System.Object,System.Object)">
    <parameter name="val1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="val2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.LogicalExpr.cmpBoolStringO(MS.Internal.Xml.XPath.Operator.Op,System.Object,System.Object)">
    <parameter name="val1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.LogicalExpr.cmpNumberNumber(MS.Internal.Xml.XPath.Operator.Op,System.Object,System.Object)">
    <parameter name="val1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="val2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.LogicalExpr.cmpQueryBoolE(MS.Internal.Xml.XPath.Operator.Op,System.Object,System.Object)">
    <parameter name="val2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.LogicalExpr.cmpQueryBoolO(MS.Internal.Xml.XPath.Operator.Op,System.Object,System.Object)">
    <parameter name="val2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.LogicalExpr.cmpQueryNumber(MS.Internal.Xml.XPath.Operator.Op,System.Object,System.Object)">
    <parameter name="val2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.LogicalExpr.cmpRtfBoolE(MS.Internal.Xml.XPath.Operator.Op,System.Object,System.Object)">
    <parameter name="val2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="val1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.LogicalExpr.cmpRtfBoolO(MS.Internal.Xml.XPath.Operator.Op,System.Object,System.Object)">
    <parameter name="val2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="val1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.LogicalExpr.cmpRtfNumber(MS.Internal.Xml.XPath.Operator.Op,System.Object,System.Object)">
    <parameter name="val2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="val1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.LogicalExpr.cmpRtfQueryE(MS.Internal.Xml.XPath.Operator.Op,System.Object,System.Object)">
    <parameter name="val1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.LogicalExpr.cmpRtfQueryO(MS.Internal.Xml.XPath.Operator.Op,System.Object,System.Object)">
    <parameter name="val1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.LogicalExpr.cmpRtfRtfE(MS.Internal.Xml.XPath.Operator.Op,System.Object,System.Object)">
    <parameter name="val1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="val2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.LogicalExpr.cmpRtfRtfO(MS.Internal.Xml.XPath.Operator.Op,System.Object,System.Object)">
    <parameter name="val1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="val2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.LogicalExpr.cmpRtfStringE(MS.Internal.Xml.XPath.Operator.Op,System.Object,System.Object)">
    <parameter name="val1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.LogicalExpr.cmpRtfStringO(MS.Internal.Xml.XPath.Operator.Op,System.Object,System.Object)">
    <parameter name="val1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.LogicalExpr.cmpStringNumber(MS.Internal.Xml.XPath.Operator.Op,System.Object,System.Object)">
    <parameter name="val2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.LogicalExpr.Rtf(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.NamespaceQuery.#ctor(MS.Internal.Xml.XPath.Query,System.String,System.String,System.Xml.XPath.XPathNodeType)">
    <parameter name="Name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="Prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.NumberFunctions.#ctor(MS.Internal.Xml.XPath.NumberFunctions)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.NumberFunctions.Ceiling(System.Xml.XPath.XPathNodeIterator)">
    <parameter name="nodeIterator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.NumberFunctions.Floor(System.Xml.XPath.XPathNodeIterator)">
    <parameter name="nodeIterator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.NumberFunctions.Number(System.Xml.XPath.XPathNodeIterator)">
    <parameter name="nodeIterator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.NumberFunctions.Round(System.Xml.XPath.XPathNodeIterator)">
    <parameter name="nodeIterator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.NumberFunctions.Sum(System.Xml.XPath.XPathNodeIterator)">
    <parameter name="nodeIterator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.NumericExpr.#ctor(MS.Internal.Xml.XPath.NumericExpr)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.NumericExpr.#ctor(MS.Internal.Xml.XPath.Operator.Op,MS.Internal.Xml.XPath.Query,MS.Internal.Xml.XPath.Query)">
    <parameter name="opnd1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="opnd2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.OperandQuery.Evaluate(System.Xml.XPath.XPathNodeIterator)">
    <parameter name="nodeIterator">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.ParentQuery.#ctor(MS.Internal.Xml.XPath.ParentQuery)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.ParentQuery.#ctor(MS.Internal.Xml.XPath.Query,System.String,System.String,System.Xml.XPath.XPathNodeType)">
    <parameter name="Name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="Prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.PrecedingQuery.#ctor(MS.Internal.Xml.XPath.Query,System.String,System.String,System.Xml.XPath.XPathNodeType)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.PreSiblingQuery.#ctor(MS.Internal.Xml.XPath.PreSiblingQuery)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.PreSiblingQuery.#ctor(MS.Internal.Xml.XPath.Query,System.String,System.String,System.Xml.XPath.XPathNodeType)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.PreSiblingQuery.NotVisited(System.Xml.XPath.XPathNavigator,System.Collections.Generic.List{System.Xml.XPath.XPathNavigator})">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="parentStk">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.Query.#ctor(MS.Internal.Xml.XPath.Query)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.Query.AssertDOD(System.Collections.Generic.List{System.Xml.XPath.XPathNavigator},System.Xml.XPath.XPathNavigator,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.Query.CompareNodes(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator)">
    <parameter name="l">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="r">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.Query.Insert(System.Collections.Generic.List{System.Xml.XPath.XPathNavigator},System.Xml.XPath.XPathNavigator)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.Query.PrintQuery(System.Xml.XmlWriter)">
    <parameter name="w">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.Query.SetXsltContext(System.Xml.Xsl.XsltContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.QueryBuilder.CanBeNumber(MS.Internal.Xml.XPath.Query)">
    <parameter name="q">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.ResetableIterator.#ctor(MS.Internal.Xml.XPath.ResetableIterator)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.SortQuery.#ctor(MS.Internal.Xml.XPath.SortQuery)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.SortQuery.AddSort(MS.Internal.Xml.XPath.Query,System.Collections.IComparer)">
    <parameter name="evalQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.StringFunctions.#ctor(MS.Internal.Xml.XPath.StringFunctions)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.StringFunctions.Contains(System.Xml.XPath.XPathNodeIterator)">
    <parameter name="nodeIterator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.StringFunctions.StartsWith(System.Xml.XPath.XPathNodeIterator)">
    <parameter name="nodeIterator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.StringFunctions.StringLength(System.Xml.XPath.XPathNodeIterator)">
    <parameter name="nodeIterator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.StringFunctions.toString(System.Xml.XPath.XPathNodeIterator)">
    <parameter name="nodeIterator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.UnionExpr.#ctor(MS.Internal.Xml.XPath.UnionExpr)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.ValueQuery.#ctor(MS.Internal.Xml.XPath.ValueQuery)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.VariableQuery.#ctor(MS.Internal.Xml.XPath.VariableQuery)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.VariableQuery.Evaluate(System.Xml.XPath.XPathNodeIterator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="nodeIterator">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.XPathAncestorIterator.#ctor(MS.Internal.Xml.XPath.XPathAncestorIterator)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.XPathAncestorIterator.#ctor(System.Xml.XPath.XPathNavigator,System.String,System.String,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.XPathAncestorQuery.#ctor(MS.Internal.Xml.XPath.Query,System.String,System.String,System.Xml.XPath.XPathNodeType,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.XPathAncestorQuery.#ctor(MS.Internal.Xml.XPath.XPathAncestorQuery)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.XPathArrayIterator.#ctor(MS.Internal.Xml.XPath.XPathArrayIterator)">
    <parameter name="it">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.XPathArrayIterator.#ctor(System.Xml.XPath.XPathNodeIterator)">
    <parameter name="nodeIterator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.XPathAxisIterator.#ctor(MS.Internal.Xml.XPath.XPathAxisIterator)">
    <parameter name="it">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.XPathAxisIterator.#ctor(System.Xml.XPath.XPathNavigator,System.String,System.String,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.XPathChildIterator.#ctor(MS.Internal.Xml.XPath.XPathChildIterator)">
    <parameter name="it">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.XPathChildIterator.#ctor(System.Xml.XPath.XPathNavigator,System.String,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.XPathComparerHelper.Compare(System.Object,System.Object)">
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.XPathDescendantIterator.#ctor(MS.Internal.Xml.XPath.XPathDescendantIterator)">
    <parameter name="it">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.XPathDescendantIterator.#ctor(System.Xml.XPath.XPathNavigator,System.String,System.String,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.XPathMultyIterator.#ctor(MS.Internal.Xml.XPath.XPathMultyIterator)">
    <parameter name="it">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.XPathMultyIterator.#ctor(System.Collections.ArrayList)">
    <parameter name="inputArray">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.XPathParser.GetAxis(MS.Internal.Xml.XPath.XPathScanner)">
    <parameter name="scaner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.XPathParser.IsNodeType(MS.Internal.Xml.XPath.XPathScanner)">
    <parameter name="scaner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.XPathParser.IsPrimaryExpr(MS.Internal.Xml.XPath.XPathScanner)">
    <parameter name="scanner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.XPathParser.ParsePredicate(MS.Internal.Xml.XPath.AstNode)">
    <parameter name="qyInput">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.XPathParser.ParseXPathExpresion(System.String)">
    <parameter name="xpathExpresion">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.XPathParser.ParseXPathPattern(System.String)">
    <parameter name="xpathPattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.XPathScanner.#ctor(System.String)">
    <parameter name="xpathExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.XPathSelectionIterator.#ctor(MS.Internal.Xml.XPath.XPathSelectionIterator)">
    <parameter name="it">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.XPathSelectionIterator.#ctor(System.Xml.XPath.XPathNavigator,MS.Internal.Xml.XPath.Query)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.XPathSelfQuery.#ctor(MS.Internal.Xml.XPath.Query,System.String,System.String,System.Xml.XPath.XPathNodeType)">
    <parameter name="Name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="Prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.XPathSingletonIterator.#ctor(MS.Internal.Xml.XPath.XPathSingletonIterator)">
    <parameter name="it">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.XPathSortComparer.AddSort(MS.Internal.Xml.XPath.Query,System.Collections.IComparer)">
    <parameter name="evalQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.XPathSortComparer.System#Collections#Generic#IComparer{MS#Internal#Xml#XPath#SortKey}#Compare(MS.Internal.Xml.XPath.SortKey,MS.Internal.Xml.XPath.SortKey)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Base64Decoder.Decode(System.Char*,System.Char*,System.Byte*,System.Byte*,System.Int32@,System.Int32@)">
    <parameter name="pChars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pBytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Base64Decoder.Decode(System.String,System.Int32,System.Int32)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Base64Encoder.Encode(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Base64Encoder.WriteChars(System.Char[],System.Int32,System.Int32)">
    <parameter name="chars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.BinHexDecoder.Decode(System.Char*,System.Char*,System.Byte*,System.Byte*,System.Boolean@,System.Byte@,System.Int32@,System.Int32@)">
    <parameter name="pChars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pBytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.BinHexDecoder.Decode(System.String,System.Int32,System.Int32)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.BinHexEncoder.Encode(System.Byte[],System.Int32,System.Int32,System.Char[])">
    <parameter name="inArray">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="outArray">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.BinHexEncoder.Encode(System.Byte[],System.Int32,System.Int32,System.Xml.XmlWriter)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.BinXmlDateTime.GetKatmaiDateTicks(System.Byte[],System.Int32@)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.BinXmlDateTime.GetKatmaiTimeTicks(System.Byte[],System.Int32@)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.BinXmlDateTime.GetKatmaiTimeZoneTicks(System.Byte[],System.Int32)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.BinXmlDateTime.Write2Dig(System.Text.StringBuilder,System.Int32)">
    <parameter name="sb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.BinXmlDateTime.Write3Dec(System.Text.StringBuilder,System.Int32)">
    <parameter name="sb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.BinXmlDateTime.Write4DigNeg(System.Text.StringBuilder,System.Int32)">
    <parameter name="sb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.BinXmlDateTime.WriteDate(System.Text.StringBuilder,System.Int32,System.Int32,System.Int32)">
    <parameter name="sb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.BinXmlDateTime.WriteTime(System.Text.StringBuilder,System.Int32,System.Int32,System.Int32,System.Int32)">
    <parameter name="sb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.BinXmlDateTime.WriteTimeFullPrecision(System.Text.StringBuilder,System.Int32,System.Int32,System.Int32,System.Int32)">
    <parameter name="sb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.BinXmlDateTime.WriteTimeZone(System.Text.StringBuilder,System.Boolean,System.Int32,System.Int32)">
    <parameter name="sb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.BinXmlDateTime.WriteTimeZone(System.Text.StringBuilder,System.TimeSpan)">
    <parameter name="sb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.BinXmlDateTime.XsdKatmaiDateOffsetToDateTime(System.Byte[],System.Int32)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.BinXmlDateTime.XsdKatmaiDateOffsetToDateTimeOffset(System.Byte[],System.Int32)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.BinXmlDateTime.XsdKatmaiDateTimeOffsetToDateTime(System.Byte[],System.Int32)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.BinXmlDateTime.XsdKatmaiDateTimeOffsetToDateTimeOffset(System.Byte[],System.Int32)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.BinXmlDateTime.XsdKatmaiDateTimeToDateTime(System.Byte[],System.Int32)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.BinXmlDateTime.XsdKatmaiDateTimeToDateTimeOffset(System.Byte[],System.Int32)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.BinXmlDateTime.XsdKatmaiDateToDateTime(System.Byte[],System.Int32)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.BinXmlDateTime.XsdKatmaiDateToDateTimeOffset(System.Byte[],System.Int32)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.BinXmlDateTime.XsdKatmaiTimeOffsetToDateTime(System.Byte[],System.Int32)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.BinXmlDateTime.XsdKatmaiTimeOffsetToDateTimeOffset(System.Byte[],System.Int32)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.BinXmlDateTime.XsdKatmaiTimeToDateTime(System.Byte[],System.Int32)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.BinXmlDateTime.XsdKatmaiTimeToDateTimeOffset(System.Byte[],System.Int32)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.BinXmlSqlDecimal.#ctor(System.Byte[],System.Int32,System.Boolean)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.BinXmlSqlDecimal.FGt10_38(System.UInt32[])">
    <parameter name="rglData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.BinXmlSqlDecimal.MpDiv1(System.UInt32[],System.Int32@,System.UInt32,System.UInt32@)">
    <parameter name="rgulU">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.BinXmlSqlDecimal.MpNormalize(System.UInt32[],System.Int32@)">
    <parameter name="rgulU">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.BinXmlSqlDecimal.StoreFromWorkingArray(System.UInt32[])">
    <parameter name="rguiData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.BinXmlSqlDecimal.UIntFromByteArray(System.Byte[],System.Int32)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.BinXmlSqlDecimal.Write(System.IO.Stream)">
    <parameter name="strm">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.BinXmlSqlDecimal.WriteUI4(System.UInt32,System.IO.Stream)">
    <parameter name="strm">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentSchemaValidator.#ctor(System.Xml.XmlDocument,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
    <parameter name="ownerDocument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentSchemaValidator.FindSchemaInfo(System.Xml.XmlElement)">
    <parameter name="elementToValidate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentSchemaValidator.GetTypeFromAncestors(System.Xml.XmlElement,System.Xml.Schema.XmlSchemaObject,System.Int32)">
    <parameter name="elementToValidate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentSchemaValidator.InternalValidationCallBack(System.Object,System.Xml.Schema.ValidationEventArgs)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentSchemaValidator.SetDefaultAttributeSchemaInfo(System.Xml.Schema.XmlSchemaAttribute)">
    <parameter name="schemaAttribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentSchemaValidator.TypeFinderCallBack(System.Object,System.Xml.Schema.ValidationEventArgs)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentSchemaValidator.Validate(System.Xml.XmlNode)">
    <parameter name="nodeToValidate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentSchemaValidator.ValidateAttributes(System.Xml.XmlElement)">
    <parameter name="elementNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentSchemaValidator.ValidateChildrenTillNextAncestor(System.Xml.XmlNode,System.Xml.XmlNode)">
    <parameter name="parentNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentSchemaValidator.ValidateNode(System.Xml.XmlNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentSchemaValidator.ValidateSingleElement(System.Xml.XmlElement,System.Boolean,System.Xml.Schema.XmlSchemaInfo)">
    <parameter name="elementNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXmlWriter.AddAttribute(System.Xml.XmlAttribute,System.Xml.XmlNode)">
    <parameter name="attr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXmlWriter.AddChild(System.Xml.XmlNode,System.Xml.XmlNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXmlWriter.WriteCData(System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
    <parameter name="sysid">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXmlWriter.WriteEndElement(System.String,System.String,System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXmlWriter.WriteFullEndElement(System.String,System.String,System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXmlWriter.WriteNamespaceDeclaration(System.String,System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXmlWriter.WriteProcessingInstruction(System.String,System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXmlWriter.WriteRaw(System.String)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXmlWriter.WriteStartElement(System.String,System.String,System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXmlWriter.WriteString(System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXmlWriter.WriteWhitespace(System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXmlWriter.WriteXmlDeclaration(System.String)">
    <parameter name="xmldecl">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNavigator.#ctor(System.Xml.DocumentXPathNavigator)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNavigator.CheckAttributePosition(System.Xml.XmlAttribute,System.Xml.XmlAttributeCollection@,System.Int32)">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNavigator.CheckValidity(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
    <parameter name="schemas">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNavigator.Compare(System.Xml.XmlNode,System.Xml.XmlNode)">
    <parameter name="node1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="node2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNavigator.DeleteAttribute(System.Xml.XmlAttribute,System.Int32)">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNavigator.DeleteToFollowingSibling(System.Xml.XmlNode,System.Xml.XmlNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="end">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNavigator.FirstChild(System.Xml.XmlNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNavigator.GetDepth(System.Xml.XmlNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNavigator.GetNamespace(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNavigator.IsDescendant(System.Xml.XmlNode,System.Xml.XmlNode)">
    <parameter name="bottom">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNavigator.IsFollowingSibling(System.Xml.XmlNode,System.Xml.XmlNode)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNavigator.IsValidChild(System.Xml.XmlNode,System.Xml.XmlNode)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNavigator.MoveToAttribute(System.String,System.String)">
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNavigator.MoveToFirstNamespaceGlobal(System.Xml.XmlAttributeCollection@,System.Int32@)">
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNavigator.MoveToFirstNamespaceLocal(System.Xml.XmlAttributeCollection,System.Int32@)">
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNavigator.MoveToNamespace(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNavigator.MoveToNextNamespaceGlobal(System.Xml.XmlAttributeCollection@,System.Int32@)">
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNavigator.MoveToNextNamespaceLocal(System.Xml.XmlAttributeCollection,System.Int32@)">
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNodeIterator_AllElemChildren.#ctor(System.Xml.DocumentXPathNavigator)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNodeIterator_AllElemChildren.#ctor(System.Xml.DocumentXPathNodeIterator_AllElemChildren)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNodeIterator_AllElemChildren_AndSelf.#ctor(System.Xml.DocumentXPathNavigator)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNodeIterator_AllElemChildren_AndSelf.#ctor(System.Xml.DocumentXPathNodeIterator_AllElemChildren_AndSelf)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNodeIterator_ElemChildren.#ctor(System.Xml.DocumentXPathNavigator,System.String,System.String)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNodeIterator_ElemChildren.#ctor(System.Xml.DocumentXPathNodeIterator_ElemChildren)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNodeIterator_ElemChildren_AndSelf.#ctor(System.Xml.DocumentXPathNavigator,System.String,System.String)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNodeIterator_ElemChildren_AndSelf.#ctor(System.Xml.DocumentXPathNodeIterator_ElemChildren_AndSelf)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNodeIterator_ElemChildren_AndSelf_NoLocalName.#ctor(System.Xml.DocumentXPathNavigator,System.String)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNodeIterator_ElemChildren_AndSelf_NoLocalName.#ctor(System.Xml.DocumentXPathNodeIterator_ElemChildren_AndSelf_NoLocalName)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNodeIterator_ElemChildren_NoLocalName.#ctor(System.Xml.DocumentXPathNavigator,System.String)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNodeIterator_ElemChildren_NoLocalName.#ctor(System.Xml.DocumentXPathNodeIterator_ElemChildren_NoLocalName)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNodeIterator_ElemDescendants.#ctor(System.Xml.DocumentXPathNavigator)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNodeIterator_ElemDescendants.#ctor(System.Xml.DocumentXPathNodeIterator_ElemDescendants)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNodeIterator_ElemDescendants.Match(System.Xml.XmlNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNodeIterator_Empty.#ctor(System.Xml.DocumentXPathNavigator)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DocumentXPathNodeIterator_Empty.#ctor(System.Xml.DocumentXPathNodeIterator_Empty)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DomNameTable.#ctor(System.Xml.XmlDocument)">
    <parameter name="document">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DtdParser.#ctor(System.String,System.String,System.String,System.String,System.String,System.Xml.IDtdParserAdapter)">
    <parameter name="docTypeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="underlyingReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DtdParser.#ctor(System.Xml.IDtdParserAdapter)">
    <parameter name="readerAdapter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DtdParser.HandleEntityReference(System.Xml.XmlQualifiedName,System.Boolean,System.Boolean,System.Boolean)">
    <parameter name="entityName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DtdParser.Parse(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Xml.XmlResolver)">
    <parameter name="docTypeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DtdParser.Parse(System.Xml.XmlTextReaderImpl,System.String,System.String,System.String,System.String,System.String)">
    <parameter name="docTypeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DtdParser.ParseAttlistDefault(System.Xml.Schema.SchemaAttDef)">
    <parameter name="attrDef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DtdParser.ParseAttlistType(System.Xml.Schema.SchemaAttDef,System.Xml.Schema.SchemaElementDecl)">
    <parameter name="attrDef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="elementDecl">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DtdParser.ParseElementMixedContent(System.Xml.Schema.ParticleContentValidator,System.Int32)">
    <parameter name="pcv">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DtdParser.ParseElementOnlyContent(System.Xml.Schema.ParticleContentValidator,System.Int32)">
    <parameter name="pcv">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DtdParser.ParseHowMany(System.Xml.Schema.ParticleContentValidator)">
    <parameter name="pcv">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DtdParser.SendValidationEvent(System.Int32,System.Xml.Schema.XmlSeverityType,System.String,System.String)">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DtdParser.SendValidationEvent(System.Xml.Schema.XmlSeverityType,System.String,System.String)">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DtdParser.Throw(System.Int32,System.String)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DtdParser.Throw(System.Int32,System.String,System.String)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DtdParser.Throw(System.Int32,System.String,System.String[])">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DtdParser.Throw(System.String,System.String,System.Int32,System.Int32)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.HtmlEncodedRawTextWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Xml.XmlWriterSettings,System.Boolean)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.HtmlEncodedRawTextWriter.#ctor(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.HtmlEncodedRawTextWriter.Init(System.Xml.XmlWriterSettings)">
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.HtmlEncodedRawTextWriter.WriteEntityRef(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.HtmlEncodedRawTextWriter.WriteHtmlAttributeText(System.Char*,System.Char*)">
    <parameter name="pSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.HtmlEncodedRawTextWriter.WriteHtmlAttributeTextBlock(System.Char*,System.Char*)">
    <parameter name="pSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.HtmlEncodedRawTextWriter.WriteHtmlElementTextBlock(System.Char*,System.Char*)">
    <parameter name="pSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.HtmlEncodedRawTextWriter.WriteUriAttributeText(System.Char*,System.Char*)">
    <parameter name="pSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.HtmlEncodedRawTextWriter.WriteXmlDeclaration(System.String)">
    <parameter name="xmldecl">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.HtmlEncodedRawTextWriterIndent.#ctor(System.IO.Stream,System.Text.Encoding,System.Xml.XmlWriterSettings,System.Boolean)">
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.HtmlEncodedRawTextWriterIndent.#ctor(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.HtmlEncodedRawTextWriterIndent.Init(System.Xml.XmlWriterSettings)">
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.HtmlUtf8RawTextWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Xml.XmlWriterSettings,System.Boolean)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.HtmlUtf8RawTextWriter.Init(System.Xml.XmlWriterSettings)">
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.HtmlUtf8RawTextWriter.WriteEntityRef(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.HtmlUtf8RawTextWriter.WriteHtmlAttributeText(System.Char*,System.Char*)">
    <parameter name="pSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.HtmlUtf8RawTextWriter.WriteHtmlAttributeTextBlock(System.Char*,System.Char*)">
    <parameter name="pSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.HtmlUtf8RawTextWriter.WriteHtmlElementTextBlock(System.Char*,System.Char*)">
    <parameter name="pSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.HtmlUtf8RawTextWriter.WriteUriAttributeText(System.Char*,System.Char*)">
    <parameter name="pSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.HtmlUtf8RawTextWriter.WriteXmlDeclaration(System.String)">
    <parameter name="xmldecl">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.HtmlUtf8RawTextWriterIndent.#ctor(System.IO.Stream,System.Text.Encoding,System.Xml.XmlWriterSettings,System.Boolean)">
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.HtmlUtf8RawTextWriterIndent.Init(System.Xml.XmlWriterSettings)">
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.IncrementalReadCharsDecoder.Decode(System.Char[],System.Int32,System.Int32)">
    <parameter name="chars">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.IncrementalReadDecoder.Decode(System.Char[],System.Int32,System.Int32)">
    <parameter name="chars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.IncrementalReadDecoder.Decode(System.String,System.Int32,System.Int32)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.IncrementalReadDummyDecoder.Decode(System.Char[],System.Int32,System.Int32)">
    <parameter name="chars">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.IncrementalReadDummyDecoder.Decode(System.String,System.Int32,System.Int32)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.NameTable.TextEquals(System.String,System.Char[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.QueryOutputWriter.#ctor(System.Xml.XmlRawWriter,System.Xml.XmlWriterSettings)">
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.QueryOutputWriter.WriteCData(System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.QueryOutputWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.QueryOutputWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.QueryOutputWriter.WriteRaw(System.String)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.QueryOutputWriter.WriteWhitespace(System.String)">
    <parameter name="ws">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.ReadContentAsBinaryHelper.#ctor(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.ReadContentAsBinaryHelper.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.ReadContentAsBinaryHelper.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.ReadContentAsBinaryHelper.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.ReadContentAsBinaryHelper.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.SafeAsciiDecoder.GetCharCount(System.Byte[],System.Int32,System.Int32)">
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.ActiveAxis.#ctor(System.Xml.Schema.Asttree)">
    <parameter name="axisTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.AllElementsContentValidator.AddElement(System.Xml.XmlQualifiedName,System.Object,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Asttree.#ctor(System.String,System.Boolean,System.Xml.XmlNamespaceManager)">
    <parameter name="xPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nsmgr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Asttree.CompileXPath(System.String,System.Boolean,System.Xml.XmlNamespaceManager)">
    <parameter name="xPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nsmgr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Asttree.IsAttribute(MS.Internal.Xml.XPath.Axis)">
    <parameter name="ast">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Asttree.IsDescendantOrSelf(MS.Internal.Xml.XPath.Axis)">
    <parameter name="ast">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Asttree.IsNameTest(MS.Internal.Xml.XPath.Axis)">
    <parameter name="ast">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Asttree.IsSelf(MS.Internal.Xml.XPath.Axis)">
    <parameter name="ast">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Asttree.SetURN(MS.Internal.Xml.XPath.Axis,System.Xml.XmlNamespaceManager)">
    <parameter name="axis">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nsmgr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.AutoValidator.#ctor(System.Xml.XmlValidatingReaderImpl,System.Xml.Schema.XmlSchemaCollection,System.Xml.Schema.ValidationEventHandler)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.AutoValidator.FindId(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.AxisElement.MoveToChild(System.String,System.String,System.Int32,System.Xml.Schema.ForwardAxis)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.AxisElement.MoveToParent(System.Int32,System.Xml.Schema.ForwardAxis)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.AxisStack.#ctor(System.Xml.Schema.ForwardAxis,System.Xml.Schema.ActiveAxis)">
    <parameter name="faxis">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.AxisStack.Equal(System.String,System.String,System.String,System.String)">
    <parameter name="thisname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.BaseProcessor.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.SchemaNames,System.Xml.Schema.ValidationEventHandler)">
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.BaseProcessor.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.SchemaNames,System.Xml.Schema.ValidationEventHandler,System.Xml.Schema.XmlSchemaCompilationSettings)">
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.BaseProcessor.AddToTable(System.Xml.Schema.XmlSchemaObjectTable,System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaObject)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="qname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.BaseProcessor.IsValidAttributeGroupRedefine(System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaObjectTable)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.BaseProcessor.IsValidGroupRedefine(System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaObjectTable)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.BaseProcessor.IsValidTypeRedefine(System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaObjectTable)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.BaseProcessor.SendValidationEvent(System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.BaseProcessor.SendValidationEvent(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaObject)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.BaseProcessor.SendValidationEvent(System.String,System.String,System.Xml.Schema.XmlSchemaObject)">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.BaseProcessor.SendValidationEvent(System.String,System.String,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSeverityType)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.BaseProcessor.SendValidationEvent(System.String,System.String[],System.Exception,System.Xml.Schema.XmlSchemaObject)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.BaseProcessor.SendValidationEvent(System.String,System.Xml.Schema.XmlSchemaObject)">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.BaseProcessor.SendValidationEvent(System.String,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSeverityType)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.BaseProcessor.SendValidationEvent(System.Xml.Schema.XmlSchemaException)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.BaseProcessor.SendValidationEvent(System.Xml.Schema.XmlSchemaException,System.Xml.Schema.XmlSeverityType)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.BaseValidator.#ctor(System.Xml.Schema.BaseValidator)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.BaseValidator.#ctor(System.Xml.XmlValidatingReaderImpl,System.Xml.Schema.XmlSchemaCollection,System.Xml.Schema.ValidationEventHandler)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.BaseValidator.ProcessEntity(System.Xml.Schema.SchemaInfo,System.String,System.Object,System.Xml.Schema.ValidationEventHandler,System.String,System.Int32,System.Int32)">
    <parameter name="sinfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.BaseValidator.SendValidationEvent(System.String)">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.BaseValidator.SendValidationEvent(System.String,System.String)">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.BaseValidator.SendValidationEvent(System.String,System.String,System.String)">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.BaseValidator.SendValidationEvent(System.String,System.String,System.Xml.Schema.XmlSeverityType)">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.BaseValidator.SendValidationEvent(System.String,System.String[])">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.BaseValidator.SendValidationEvent(System.String,System.String[],System.Xml.Schema.XmlSeverityType)">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.BaseValidator.SendValidationEvent(System.Xml.Schema.XmlSchemaException)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.BaseValidator.SendValidationEvent(System.Xml.Schema.XmlSchemaException,System.Xml.Schema.XmlSeverityType)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.BinaryFacetsChecker.CheckValueFacets(System.Object,System.Xml.Schema.XmlSchemaDatatype)">
    <parameter name="datatype">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.BinaryFacetsChecker.MatchEnumeration(System.Byte[],System.Collections.ArrayList,System.Xml.Schema.XmlSchemaDatatype)">
    <parameter name="enumeration">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="datatype">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.BitSet.And(System.Xml.Schema.BitSet)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.BitSet.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.BitSet.Intersects(System.Xml.Schema.BitSet)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.BitSet.Or(System.Xml.Schema.BitSet)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.ChameleonKey.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.CompiledIdentityConstraint.#ctor(System.Xml.Schema.XmlSchemaIdentityConstraint,System.Xml.XmlNamespaceManager)">
    <parameter name="constraint">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nsmgr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.ValidationEventHandler,System.Xml.Schema.XmlSchema,System.Xml.Schema.XmlSchemaCompilationSettings)">
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.BuildParticleContentModel(System.Xml.Schema.ParticleContentValidator,System.Xml.Schema.XmlSchemaParticle)">
    <parameter name="contentValidator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="particle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.CalculateEffectiveTotalRange(System.Xml.Schema.XmlSchemaParticle,System.Decimal@,System.Decimal@)">
    <parameter name="particle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.CannonicalizeAll(System.Xml.Schema.XmlSchemaAll,System.Boolean)">
    <parameter name="all">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.CannonicalizeChoice(System.Xml.Schema.XmlSchemaChoice,System.Boolean)">
    <parameter name="choice">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.CannonicalizeGroupRef(System.Xml.Schema.XmlSchemaGroupRef,System.Boolean)">
    <parameter name="groupRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.CannonicalizeSequence(System.Xml.Schema.XmlSchemaSequence,System.Boolean)">
    <parameter name="sequence">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.CheckAtrributeGroupRestriction(System.Xml.Schema.XmlSchemaAttributeGroup,System.Xml.Schema.XmlSchemaAttributeGroup)">
    <parameter name="baseAttributeGroup">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="derivedAttributeGroup">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.CheckParticleDerivation(System.Xml.Schema.XmlSchemaComplexType)">
    <parameter name="complexType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.CheckUnionType(System.Xml.Schema.XmlSchemaSimpleType,System.Collections.ArrayList,System.Xml.Schema.XmlSchemaSimpleType)">
    <parameter name="unionMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="memberTypeDefinitions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="parentType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.CleanupAttribute(System.Xml.Schema.XmlSchemaAttribute)">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.CleanupAttributeGroup(System.Xml.Schema.XmlSchemaAttributeGroup)">
    <parameter name="attributeGroup">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.CleanupAttributes(System.Xml.Schema.XmlSchemaObjectCollection)">
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.CleanupComplexType(System.Xml.Schema.XmlSchemaComplexType)">
    <parameter name="complexType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.CleanupElement(System.Xml.Schema.XmlSchemaElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.CleanupGroup(System.Xml.Schema.XmlSchemaGroup)">
    <parameter name="group">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.CleanupSimpleType(System.Xml.Schema.XmlSchemaSimpleType)">
    <parameter name="simpleType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.CompileAttribute(System.Xml.Schema.XmlSchemaAttribute)">
    <parameter name="xa">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.CompileAttributeGroup(System.Xml.Schema.XmlSchemaAttributeGroup)">
    <parameter name="attributeGroup">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.CompileBaseMemberTypes(System.Xml.Schema.XmlSchemaSimpleType)">
    <parameter name="simpleType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.CompileComplexContent(System.Xml.Schema.XmlSchemaComplexType)">
    <parameter name="complexType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.CompileComplexContentExtension(System.Xml.Schema.XmlSchemaComplexType,System.Xml.Schema.XmlSchemaComplexContent,System.Xml.Schema.XmlSchemaComplexContentExtension)">
    <parameter name="complexType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="complexExtension">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.CompileComplexContentRestriction(System.Xml.Schema.XmlSchemaComplexType,System.Xml.Schema.XmlSchemaComplexContent,System.Xml.Schema.XmlSchemaComplexContentRestriction)">
    <parameter name="complexType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="complexRestriction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.CompileComplexType(System.Xml.Schema.XmlSchemaComplexType)">
    <parameter name="complexType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.CompileComplexTypeElements(System.Xml.Schema.XmlSchemaComplexType)">
    <parameter name="complexType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.CompileElement(System.Xml.Schema.XmlSchemaElement)">
    <parameter name="xe">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.CompileGroup(System.Xml.Schema.XmlSchemaGroup)">
    <parameter name="group">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.CompileIdentityConstraint(System.Xml.Schema.XmlSchemaIdentityConstraint)">
    <parameter name="xi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.CompileLocalAttributes(System.Xml.Schema.XmlSchemaComplexType,System.Xml.Schema.XmlSchemaComplexType,System.Xml.Schema.XmlSchemaObjectCollection,System.Xml.Schema.XmlSchemaAnyAttribute,System.Xml.Schema.XmlSchemaDerivationMethod)">
    <parameter name="derivedType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.CompileParticleElements(System.Xml.Schema.XmlSchemaComplexType,System.Xml.Schema.XmlSchemaParticle)">
    <parameter name="complexType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.CompileSimpleContentExtension(System.Xml.Schema.XmlSchemaComplexType,System.Xml.Schema.XmlSchemaSimpleContentExtension)">
    <parameter name="complexType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="simpleExtension">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.CompileSimpleContentRestriction(System.Xml.Schema.XmlSchemaComplexType,System.Xml.Schema.XmlSchemaSimpleContentRestriction)">
    <parameter name="complexType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="simpleRestriction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.CompileSimpleType(System.Xml.Schema.XmlSchemaSimpleType)">
    <parameter name="simpleType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.CompileSubstitutionGroup(System.Xml.Schema.XmlSchemaSubstitutionGroup)">
    <parameter name="substitutionGroup">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.CopyPosition(System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaObject,System.Boolean)">
    <parameter name="to">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="from">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.Execute(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.SchemaInfo)">
    <parameter name="schemaSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="schemaCompiledInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.GetAnySchemaType(System.Xml.XmlQualifiedName)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.GetMappingParticle(System.Xml.Schema.XmlSchemaParticle,System.Xml.Schema.XmlSchemaObjectCollection)">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.GetSchemaContentType(System.Xml.Schema.XmlSchemaComplexType,System.Xml.Schema.XmlSchemaComplexContent,System.Xml.Schema.XmlSchemaParticle)">
    <parameter name="complexType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.GetSimpleType(System.Xml.XmlQualifiedName)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.ImportAllCompiledSchemas(System.Xml.Schema.XmlSchemaSet)">
    <parameter name="schemaSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.IsAnyFromAny(System.Xml.Schema.XmlSchemaAny,System.Xml.Schema.XmlSchemaAny)">
    <parameter name="derivedAny">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="baseAny">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.IsChoiceFromChoiceSubstGroup(System.Xml.Schema.XmlSchemaChoice,System.Xml.Schema.XmlSchemaChoice)">
    <parameter name="derivedChoice">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="baseChoice">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.IsElementFromAny(System.Xml.Schema.XmlSchemaElement,System.Xml.Schema.XmlSchemaAny)">
    <parameter name="derivedElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="baseAny">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.IsElementFromElement(System.Xml.Schema.XmlSchemaElement,System.Xml.Schema.XmlSchemaElement)">
    <parameter name="derivedElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="baseElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.IsElementFromGroupBase(System.Xml.Schema.XmlSchemaElement,System.Xml.Schema.XmlSchemaGroupBase)">
    <parameter name="derivedElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.IsFixedEqual(System.Xml.Schema.SchemaDeclBase,System.Xml.Schema.SchemaDeclBase)">
    <parameter name="baseDecl">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="derivedDecl">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.IsGroupBaseFromAny(System.Xml.Schema.XmlSchemaGroupBase,System.Xml.Schema.XmlSchemaAny)">
    <parameter name="derivedGroupBase">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="baseAny">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.IsGroupBaseFromGroupBase(System.Xml.Schema.XmlSchemaGroupBase,System.Xml.Schema.XmlSchemaGroupBase,System.Boolean)">
    <parameter name="derivedGroupBase">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="baseGroupBase">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.IsParticleEmptiable(System.Xml.Schema.XmlSchemaParticle)">
    <parameter name="particle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.IsProcessContentsRestricted(System.Xml.Schema.XmlSchemaComplexType,System.Xml.Schema.XmlSchemaAnyAttribute,System.Xml.Schema.XmlSchemaAnyAttribute)">
    <parameter name="derivedAttributeWildcard">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="baseAttributeWildcard">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.IsSequenceFromAll(System.Xml.Schema.XmlSchemaSequence,System.Xml.Schema.XmlSchemaAll)">
    <parameter name="derivedSequence">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="baseAll">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.IsSequenceFromChoice(System.Xml.Schema.XmlSchemaSequence,System.Xml.Schema.XmlSchemaChoice)">
    <parameter name="derivedSequence">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="baseChoice">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.IsValidOccurrenceRangeRestriction(System.Xml.Schema.XmlSchemaParticle,System.Xml.Schema.XmlSchemaParticle)">
    <parameter name="derivedParticle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="baseParticle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.IsValidRestriction(System.Xml.Schema.XmlSchemaParticle,System.Xml.Schema.XmlSchemaParticle)">
    <parameter name="baseParticle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.Output(System.Xml.Schema.SchemaInfo)">
    <parameter name="schemaInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.Prepare(System.Xml.Schema.XmlSchema,System.Boolean)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.RecursivelyCheckRedefinedAttributeGroups(System.Xml.Schema.XmlSchemaAttributeGroup,System.Xml.Schema.XmlSchemaAttributeGroup)">
    <parameter name="attributeGroup">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="baseAttributeGroup">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.RecursivelyCheckRedefinedGroups(System.Xml.Schema.XmlSchemaGroup,System.Xml.Schema.XmlSchemaGroup)">
    <parameter name="redefinedGroup">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="baseGroup">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Compiler.SetDefaultFixed(System.Xml.Schema.XmlSchemaAttribute,System.Xml.Schema.SchemaAttDef)">
    <parameter name="xa">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="decl">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.ConstraintStruct.#ctor(System.Xml.Schema.CompiledIdentityConstraint)">
    <parameter name="constraint">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.ContentValidator.CompleteValidation(System.Xml.Schema.ValidationState)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.ContentValidator.InitValidation(System.Xml.Schema.ValidationState)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Datatype_anyAtomicType.CreateValueConverter(System.Xml.Schema.XmlSchemaType)">
    <parameter name="schemaType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Datatype_anyURI.Compare(System.Object,System.Object)">
    <parameter name="value2">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Datatype_anyURI.TryParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver,System.Object@)">
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nsmgr">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Datatype_base64Binary.TryParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver,System.Object@)">
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nsmgr">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Datatype_boolean.Compare(System.Object,System.Object)">
    <parameter name="value2">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Datatype_boolean.TryParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver,System.Object@)">
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nsmgr">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Datatype_char.Compare(System.Object,System.Object)">
    <parameter name="value2">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Datatype_char.TryParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver,System.Object@)">
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nsmgr">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Datatype_dateTimeBase.TryParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver,System.Object@)">
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nsmgr">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Datatype_decimal.Compare(System.Object,System.Object)">
    <parameter name="value2">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Datatype_decimal.TryParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver,System.Object@)">
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nsmgr">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Datatype_double.Compare(System.Object,System.Object)">
    <parameter name="value2">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Datatype_double.TryParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver,System.Object@)">
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nsmgr">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Datatype_duration.Compare(System.Object,System.Object)">
    <parameter name="value2">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Datatype_duration.TryParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver,System.Object@)">
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nsmgr">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Datatype_float.Compare(System.Object,System.Object)">
    <parameter name="value2">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Datatype_float.TryParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver,System.Object@)">
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nsmgr">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Datatype_hexBinary.TryParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver,System.Object@)">
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nsmgr">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Datatype_List.TryParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver,System.Object@)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Datatype_NOTATION.TryParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver,System.Object@)">
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Datatype_QName.TryParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver,System.Object@)">
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Datatype_string.TryParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver,System.Object@)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nsmgr">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Datatype_union.Compare(System.Object,System.Object)">
    <parameter name="value1">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value2">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Datatype_union.IsUnionBaseOf(System.Xml.Schema.DatatypeImplementation)">
    <parameter name="derivedType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Datatype_union.TryParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver,System.Object@)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Datatype_uuid.Compare(System.Object,System.Object)">
    <parameter name="value2">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Datatype_uuid.TryParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver,System.Object@)">
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nsmgr">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.DatatypeImplementation.Compare(System.Byte[],System.Byte[])">
    <parameter name="value1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.DatatypeImplementation.FinishBuiltinType(System.Xml.Schema.XmlSchemaSimpleType,System.Xml.Schema.XmlSchemaSimpleType)">
    <parameter name="derivedType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="baseType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.DatatypeImplementation.FromTypeName(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.DatatypeImplementation.FromXdrName(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.DatatypeImplementation.GetSimpleTypeFromXsdType(System.Xml.XmlQualifiedName)">
    <parameter name="qname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.DatatypeImplementation.ParseValue(System.String,System.Type,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.DatatypeImplementation.SchemaDatatypeMap.CompareTo(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.DateTimeFacetsChecker.MatchEnumeration(System.DateTime,System.Collections.ArrayList,System.Xml.Schema.XmlSchemaDatatype)">
    <parameter name="enumeration">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="datatype">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.DoubleLinkAxis.#ctor(MS.Internal.Xml.XPath.Axis,System.Xml.Schema.DoubleLinkAxis)">
    <parameter name="axis">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.DtdValidator.#ctor(System.Xml.XmlValidatingReaderImpl,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.DtdValidator.AddID(System.String,System.Object)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.DtdValidator.CheckDefaultValue(System.Xml.Schema.SchemaAttDef,System.Xml.Schema.SchemaInfo,System.Xml.IDtdParserAdapter)">
    <parameter name="attdef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="sinfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="readerAdapter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.DtdValidator.CheckValue(System.String,System.Xml.Schema.SchemaAttDef)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.DtdValidator.GenEntity(System.Xml.XmlQualifiedName)">
    <parameter name="qname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.DtdValidator.GetEntity(System.Xml.XmlQualifiedName,System.Boolean)">
    <parameter name="qname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.DtdValidator.NamespaceManager.LookupNamespace(System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.DtdValidator.ProcessTokenizedType(System.Xml.XmlTokenizedType,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.DtdValidator.Push(System.Xml.XmlQualifiedName)">
    <parameter name="elementName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.DtdValidator.SetDefaultTypedValue(System.Xml.Schema.SchemaAttDef,System.Xml.IDtdParserAdapter)">
    <parameter name="attdef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="readerAdapter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.DurationFacetsChecker.MatchEnumeration(System.Object,System.Collections.ArrayList,System.Xml.Schema.XmlSchemaDatatype)">
    <parameter name="datatype">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.DurationFacetsChecker.MatchEnumeration(System.TimeSpan,System.Collections.ArrayList)">
    <parameter name="enumeration">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.FacetsChecker.CheckWhitespaceFacets(System.String@,System.Xml.Schema.XmlSchemaDatatype)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="datatype">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.FacetsChecker.FacetsCompiler.#ctor(System.Xml.Schema.DatatypeImplementation,System.Xml.Schema.RestrictionFacets)">
    <parameter name="baseDatatype">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.FacetsChecker.FacetsCompiler.CheckDupFlag(System.Xml.Schema.XmlSchemaFacet,System.Xml.Schema.RestrictionFlags,System.String)">
    <parameter name="facet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="errorCode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.FacetsChecker.FacetsCompiler.CheckProhibitedFlag(System.Xml.Schema.XmlSchemaFacet,System.Xml.Schema.RestrictionFlags,System.String)">
    <parameter name="facet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="errorCode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.FacetsChecker.FacetsCompiler.CheckValue(System.Object,System.Xml.Schema.XmlSchemaFacet)">
    <parameter name="facet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.FacetsChecker.FacetsCompiler.CompileEnumerationFacet(System.Xml.Schema.XmlSchemaFacet,System.Xml.IXmlNamespaceResolver,System.Xml.XmlNameTable)">
    <parameter name="facet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nsmgr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.FacetsChecker.FacetsCompiler.CompileFractionDigitsFacet(System.Xml.Schema.XmlSchemaFacet)">
    <parameter name="facet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.FacetsChecker.FacetsCompiler.CompileLengthFacet(System.Xml.Schema.XmlSchemaFacet)">
    <parameter name="facet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.FacetsChecker.FacetsCompiler.CompileMaxExclusiveFacet(System.Xml.Schema.XmlSchemaFacet)">
    <parameter name="facet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.FacetsChecker.FacetsCompiler.CompileMaxInclusiveFacet(System.Xml.Schema.XmlSchemaFacet)">
    <parameter name="facet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.FacetsChecker.FacetsCompiler.CompileMaxLengthFacet(System.Xml.Schema.XmlSchemaFacet)">
    <parameter name="facet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.FacetsChecker.FacetsCompiler.CompileMinExclusiveFacet(System.Xml.Schema.XmlSchemaFacet)">
    <parameter name="facet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.FacetsChecker.FacetsCompiler.CompileMinInclusiveFacet(System.Xml.Schema.XmlSchemaFacet)">
    <parameter name="facet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.FacetsChecker.FacetsCompiler.CompileMinLengthFacet(System.Xml.Schema.XmlSchemaFacet)">
    <parameter name="facet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.FacetsChecker.FacetsCompiler.CompilePatternFacet(System.Xml.Schema.XmlSchemaPatternFacet)">
    <parameter name="facet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.FacetsChecker.FacetsCompiler.CompileTotalDigitsFacet(System.Xml.Schema.XmlSchemaFacet)">
    <parameter name="facet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.FacetsChecker.FacetsCompiler.CompileWhitespaceFacet(System.Xml.Schema.XmlSchemaFacet)">
    <parameter name="facet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.FacetsChecker.FacetsCompiler.ParseFacetValue(System.Xml.Schema.XmlSchemaDatatype,System.Xml.Schema.XmlSchemaFacet,System.String,System.Xml.IXmlNamespaceResolver,System.Xml.XmlNameTable)">
    <parameter name="datatype">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="facet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nsmgr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.FacetsChecker.FacetsCompiler.SetFlag(System.Xml.Schema.XmlSchemaFacet,System.Xml.Schema.RestrictionFlags)">
    <parameter name="facet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.FacetsChecker.MatchEnumeration(System.Object,System.Collections.ArrayList,System.Xml.Schema.XmlSchemaDatatype)">
    <parameter name="datatype">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="enumeration">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.ForwardAxis.#ctor(System.Xml.Schema.DoubleLinkAxis,System.Boolean)">
    <parameter name="axis">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.InteriorNode.ExpandTree(System.Xml.Schema.InteriorNode,System.Xml.Schema.SymbolsDictionary,System.Xml.Schema.Positions)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.KeySequence.#ctor(System.Xml.Schema.TypedObject[])">
    <parameter name="ks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.LeafNode.ConstructPos(System.Xml.Schema.BitSet,System.Xml.Schema.BitSet,System.Xml.Schema.BitSet[])">
    <parameter name="followpos">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.LeafNode.ExpandTree(System.Xml.Schema.InteriorNode,System.Xml.Schema.SymbolsDictionary,System.Xml.Schema.Positions)">
    <parameter name="positions">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="symbols">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.LeafRangeNode.Clone(System.Xml.Schema.Positions)">
    <parameter name="positions">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.LocatedActiveAxis.#ctor(System.Xml.Schema.Asttree,System.Xml.Schema.KeySequence,System.Int32)">
    <parameter name="astfield">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.NamespaceList.#ctor(System.String,System.String)">
    <parameter name="namespaces">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="targetNamespace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.NamespaceList.Allows(System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.NamespaceList.Allows(System.Xml.XmlQualifiedName)">
    <parameter name="qname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.NamespaceList.CompareSetToOther(System.Xml.Schema.NamespaceList)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.NamespaceList.Intersection(System.Xml.Schema.NamespaceList,System.Xml.Schema.NamespaceList,System.Boolean)">
    <parameter name="o1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="o2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.NamespaceList.IsSubset(System.Xml.Schema.NamespaceList,System.Xml.Schema.NamespaceList)">
    <parameter name="sub">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="super">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.NamespaceList.RemoveNamespace(System.String)">
    <parameter name="tns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.NamespaceList.Union(System.Xml.Schema.NamespaceList,System.Xml.Schema.NamespaceList,System.Boolean)">
    <parameter name="o1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="o2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.NamespaceListNode.Clone(System.Xml.Schema.Positions)">
    <parameter name="positions">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.NamespaceListNode.ConstructPos(System.Xml.Schema.BitSet,System.Xml.Schema.BitSet,System.Xml.Schema.BitSet[])">
    <parameter name="followpos">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="lastpos">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="firstpos">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.NamespaceListV1Compat.#ctor(System.String,System.String)">
    <parameter name="namespaces">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="targetNamespace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Numeric10FacetsChecker.CheckValueFacets(System.Byte,System.Xml.Schema.XmlSchemaDatatype)">
    <parameter name="datatype">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Numeric10FacetsChecker.CheckValueFacets(System.Int16,System.Xml.Schema.XmlSchemaDatatype)">
    <parameter name="datatype">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Numeric10FacetsChecker.CheckValueFacets(System.Int32,System.Xml.Schema.XmlSchemaDatatype)">
    <parameter name="datatype">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Numeric10FacetsChecker.CheckValueFacets(System.Int64,System.Xml.Schema.XmlSchemaDatatype)">
    <parameter name="datatype">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Numeric10FacetsChecker.MatchEnumeration(System.Decimal,System.Collections.ArrayList,System.Xml.Schema.XmlValueConverter)">
    <parameter name="enumeration">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="valueConverter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Numeric2FacetsChecker.CheckValueFacets(System.Single,System.Xml.Schema.XmlSchemaDatatype)">
    <parameter name="datatype">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Numeric2FacetsChecker.MatchEnumeration(System.Double,System.Collections.ArrayList,System.Xml.Schema.XmlValueConverter)">
    <parameter name="enumeration">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="valueConverter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Parser.Parse(System.Xml.XmlReader,System.String)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Parser.StartParsing(System.Xml.XmlReader,System.String)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.ParticleContentValidator.AddName(System.Xml.XmlQualifiedName,System.Object)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.ParticleContentValidator.AddNamespaceList(System.Xml.Schema.NamespaceList,System.Object)">
    <parameter name="namespaceList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.ParticleContentValidator.BuildTransitionTable(System.Xml.Schema.BitSet,System.Xml.Schema.BitSet[],System.Int32)">
    <parameter name="followpos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="firstpos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.ParticleContentValidator.CheckCMUPAWithLeafRangeNodes(System.Xml.Schema.BitSet)">
    <parameter name="curpos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.ParticleContentValidator.CheckUniqueParticleAttribution(System.Xml.Schema.BitSet)">
    <parameter name="curpos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.ParticleContentValidator.CheckUniqueParticleAttribution(System.Xml.Schema.BitSet,System.Xml.Schema.BitSet[])">
    <parameter name="firstpos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="followpos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.ParticleContentValidator.Closure(System.Xml.Schema.InteriorNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.ParticleContentValidator.CompleteValidation(System.Xml.Schema.ValidationState)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.ParticleContentValidator.Exists(System.Xml.XmlQualifiedName)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.ParticleContentValidator.InitValidation(System.Xml.Schema.ValidationState)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.ParticleContentValidator.ValidateElement(System.Xml.XmlQualifiedName,System.Xml.Schema.ValidationState,System.Int32@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Preprocessor.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.SchemaNames,System.Xml.Schema.ValidationEventHandler)">
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Preprocessor.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.SchemaNames,System.Xml.Schema.ValidationEventHandler,System.Xml.Schema.XmlSchemaCompilationSettings)">
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Preprocessor.BuildRefNamespaces(System.Xml.Schema.XmlSchema)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Preprocessor.BuildSchemaList(System.Xml.Schema.XmlSchema)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Preprocessor.CheckRefinedAttributeGroup(System.Xml.Schema.XmlSchemaAttributeGroup)">
    <parameter name="attributeGroup">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Preprocessor.CheckRefinedComplexType(System.Xml.Schema.XmlSchemaComplexType)">
    <parameter name="ctype">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Preprocessor.CheckRefinedGroup(System.Xml.Schema.XmlSchemaGroup)">
    <parameter name="group">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Preprocessor.CheckRefinedSimpleType(System.Xml.Schema.XmlSchemaSimpleType)">
    <parameter name="stype">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Preprocessor.Cleanup(System.Xml.Schema.XmlSchema)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Preprocessor.CopyIncludedComponents(System.Xml.Schema.XmlSchema,System.Xml.Schema.XmlSchema)">
    <parameter name="includedSchema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Preprocessor.CountGroupSelfReference(System.Xml.Schema.XmlSchemaObjectCollection,System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaGroup)">
    <parameter name="items">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Preprocessor.Execute(System.Xml.Schema.XmlSchema,System.String,System.Boolean)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Preprocessor.GetIncludedSet(System.Xml.Schema.XmlSchema,System.Collections.ArrayList)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="includesList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Preprocessor.LoadExternals(System.Xml.Schema.XmlSchema)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Preprocessor.ParseUri(System.String,System.String,System.Xml.Schema.XmlSchemaObject)">
    <parameter name="sourceSchemaObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Preprocessor.Preprocess(System.Xml.Schema.XmlSchema,System.String,System.Collections.ArrayList)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="imports">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Preprocessor.PreprocessAnnotation(System.Xml.Schema.XmlSchemaAnnotation)">
    <parameter name="annotation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Preprocessor.PreprocessAttribute(System.Xml.Schema.XmlSchemaAttribute)">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Preprocessor.PreprocessAttributeContent(System.Xml.Schema.XmlSchemaAttribute)">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Preprocessor.PreprocessAttributeGroup(System.Xml.Schema.XmlSchemaAttributeGroup)">
    <parameter name="attributeGroup">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Preprocessor.PreprocessAttributes(System.Xml.Schema.XmlSchemaObjectCollection,System.Xml.Schema.XmlSchemaAnyAttribute,System.Xml.Schema.XmlSchemaObject)">
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Preprocessor.PreprocessComplexType(System.Xml.Schema.XmlSchemaComplexType,System.Boolean)">
    <parameter name="complexType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Preprocessor.PreprocessElement(System.Xml.Schema.XmlSchemaElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Preprocessor.PreprocessElementContent(System.Xml.Schema.XmlSchemaElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Preprocessor.PreprocessGroup(System.Xml.Schema.XmlSchemaGroup)">
    <parameter name="group">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Preprocessor.PreprocessIdentityConstraint(System.Xml.Schema.XmlSchemaIdentityConstraint)">
    <parameter name="constraint">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Preprocessor.PreprocessLocalAttribute(System.Xml.Schema.XmlSchemaAttribute)">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Preprocessor.PreprocessLocalElement(System.Xml.Schema.XmlSchemaElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Preprocessor.PreprocessNotation(System.Xml.Schema.XmlSchemaNotation)">
    <parameter name="notation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Preprocessor.PreprocessParticle(System.Xml.Schema.XmlSchemaParticle)">
    <parameter name="particle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Preprocessor.PreprocessRedefine(System.Xml.Schema.RedefineEntry)">
    <parameter name="redefineEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Preprocessor.PreprocessSimpleType(System.Xml.Schema.XmlSchemaSimpleType,System.Boolean)">
    <parameter name="simpleType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Preprocessor.SetParent(System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaObject)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Preprocessor.SetSchemaDefaults(System.Xml.Schema.XmlSchema)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Preprocessor.ValidateIdAttribute(System.Xml.Schema.XmlSchemaObject)">
    <parameter name="xso">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Preprocessor.ValidateNameAttribute(System.Xml.Schema.XmlSchemaObject)">
    <parameter name="xso">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.Preprocessor.ValidateQNameAttribute(System.Xml.Schema.XmlSchemaObject,System.String,System.Xml.XmlQualifiedName)">
    <parameter name="xso">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.QNameFacetsChecker.MatchEnumeration(System.Xml.XmlQualifiedName,System.Collections.ArrayList)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="enumeration">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaAttDef.CheckDefaultValue(System.Xml.Schema.SchemaInfo,System.Xml.IDtdParserAdapter)">
    <parameter name="schemaInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="readerAdapter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaAttDef.CheckXmlSpace(System.Xml.Schema.ValidationEventHandler)">
    <parameter name="eventhandler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaBuilder.ProcessAttribute(System.String,System.String,System.String,System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaBuilder.ProcessElement(System.String,System.String,System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.ValidationEventHandler)">
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.BuildParticleContentModel(System.Xml.Schema.ParticleContentValidator,System.Xml.Schema.XmlSchemaParticle)">
    <parameter name="contentValidator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="particle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.CalculateEffectiveTotalRange(System.Xml.Schema.XmlSchemaParticle,System.Decimal@,System.Decimal@)">
    <parameter name="particle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.CalculateSequenceRange(System.Xml.Schema.XmlSchemaSequence,System.Decimal@,System.Decimal@)">
    <parameter name="sequence">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.CannonicalizeAll(System.Xml.Schema.XmlSchemaAll,System.Boolean,System.Boolean)">
    <parameter name="all">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.CannonicalizeChoice(System.Xml.Schema.XmlSchemaChoice,System.Boolean,System.Boolean)">
    <parameter name="choice">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.CannonicalizeGroupRef(System.Xml.Schema.XmlSchemaGroupRef,System.Boolean,System.Boolean)">
    <parameter name="groupRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.CannonicalizeSequence(System.Xml.Schema.XmlSchemaSequence,System.Boolean,System.Boolean)">
    <parameter name="sequence">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.CheckParticleDerivation(System.Xml.Schema.XmlSchemaComplexType)">
    <parameter name="complexType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.CheckSubstitutionGroup(System.Xml.Schema.XmlSchemaSubstitutionGroup)">
    <parameter name="substitutionGroup">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.CheckUnionType(System.Xml.Schema.XmlSchemaSimpleType,System.Collections.ArrayList,System.Xml.Schema.XmlSchemaSimpleType)">
    <parameter name="unionMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="memberTypeDefinitions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="parentType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.Cleanup(System.Xml.Schema.XmlSchema)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.CleanupAttribute(System.Xml.Schema.XmlSchemaAttribute)">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.CleanupAttributeGroup(System.Xml.Schema.XmlSchemaAttributeGroup)">
    <parameter name="attributeGroup">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.CleanupAttributes(System.Xml.Schema.XmlSchemaObjectCollection)">
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.CleanupComplexType(System.Xml.Schema.XmlSchemaComplexType)">
    <parameter name="complexType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.CleanupElement(System.Xml.Schema.XmlSchemaElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.CleanupGroup(System.Xml.Schema.XmlSchemaGroup)">
    <parameter name="group">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.CleanupSimpleType(System.Xml.Schema.XmlSchemaSimpleType)">
    <parameter name="simpleType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.CompileAttribute(System.Xml.Schema.XmlSchemaAttribute)">
    <parameter name="xa">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.CompileAttributeGroup(System.Xml.Schema.XmlSchemaAttributeGroup)">
    <parameter name="attributeGroup">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.CompileBaseMemberTypes(System.Xml.Schema.XmlSchemaSimpleType)">
    <parameter name="simpleType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.CompileCompexTypeElements(System.Xml.Schema.XmlSchemaComplexType)">
    <parameter name="complexType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.CompileComplexContent(System.Xml.Schema.XmlSchemaComplexType)">
    <parameter name="complexType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.CompileComplexContentExtension(System.Xml.Schema.XmlSchemaComplexType,System.Xml.Schema.XmlSchemaComplexContent,System.Xml.Schema.XmlSchemaComplexContentExtension)">
    <parameter name="complexType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="complexExtension">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.CompileComplexContentRestriction(System.Xml.Schema.XmlSchemaComplexType,System.Xml.Schema.XmlSchemaComplexContent,System.Xml.Schema.XmlSchemaComplexContentRestriction)">
    <parameter name="complexType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="complexRestriction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.CompileComplexType(System.Xml.Schema.XmlSchemaComplexType)">
    <parameter name="complexType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.CompileElement(System.Xml.Schema.XmlSchemaElement)">
    <parameter name="xe">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.CompileGroup(System.Xml.Schema.XmlSchemaGroup)">
    <parameter name="group">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.CompileIdentityConstraint(System.Xml.Schema.XmlSchemaIdentityConstraint)">
    <parameter name="xi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.CompileLocalAttributes(System.Xml.Schema.XmlSchemaComplexType,System.Xml.Schema.XmlSchemaComplexType,System.Xml.Schema.XmlSchemaObjectCollection,System.Xml.Schema.XmlSchemaAnyAttribute,System.Xml.Schema.XmlSchemaDerivationMethod)">
    <parameter name="derivedType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.CompileParticleElements(System.Xml.Schema.XmlSchemaComplexType,System.Xml.Schema.XmlSchemaParticle)">
    <parameter name="complexType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.CompileSimpleContentExtension(System.Xml.Schema.XmlSchemaComplexType,System.Xml.Schema.XmlSchemaSimpleContentExtension)">
    <parameter name="complexType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="simpleExtension">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.CompileSimpleContentRestriction(System.Xml.Schema.XmlSchemaComplexType,System.Xml.Schema.XmlSchemaSimpleContentRestriction)">
    <parameter name="complexType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="simpleRestriction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.CompileSimpleType(System.Xml.Schema.XmlSchemaSimpleType)">
    <parameter name="simpleType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.CompileSubstitutionGroup(System.Xml.Schema.XmlSchemaSubstitutionGroupV1Compat)">
    <parameter name="substitutionGroup">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.Execute(System.Xml.Schema.XmlSchema,System.Xml.Schema.SchemaInfo,System.Boolean)">
    <parameter name="schemaInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.GetAnySchemaType(System.Xml.XmlQualifiedName)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.GetMappingParticle(System.Xml.Schema.XmlSchemaParticle,System.Xml.Schema.XmlSchemaObjectCollection)">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.GetSchemaContentType(System.Xml.Schema.XmlSchemaComplexType,System.Xml.Schema.XmlSchemaComplexContent,System.Xml.Schema.XmlSchemaParticle)">
    <parameter name="complexType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.GetSimpleType(System.Xml.XmlQualifiedName)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.IsAnyFromAny(System.Xml.Schema.XmlSchemaAny,System.Xml.Schema.XmlSchemaAny)">
    <parameter name="derivedAny">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="baseAny">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.IsElementFromAny(System.Xml.Schema.XmlSchemaElement,System.Xml.Schema.XmlSchemaAny)">
    <parameter name="derivedElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="baseAny">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.IsElementFromElement(System.Xml.Schema.XmlSchemaElement,System.Xml.Schema.XmlSchemaElement)">
    <parameter name="derivedElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="baseElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.IsElementFromGroupBase(System.Xml.Schema.XmlSchemaElement,System.Xml.Schema.XmlSchemaGroupBase,System.Boolean)">
    <parameter name="baseGroupBase">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.IsGroupBaseFromAny(System.Xml.Schema.XmlSchemaGroupBase,System.Xml.Schema.XmlSchemaAny)">
    <parameter name="derivedGroupBase">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="baseAny">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.IsGroupBaseFromGroupBase(System.Xml.Schema.XmlSchemaGroupBase,System.Xml.Schema.XmlSchemaGroupBase,System.Boolean)">
    <parameter name="derivedGroupBase">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="baseGroupBase">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.IsParticleEmptiable(System.Xml.Schema.XmlSchemaParticle)">
    <parameter name="particle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.IsSequenceFromAll(System.Xml.Schema.XmlSchemaSequence,System.Xml.Schema.XmlSchemaAll)">
    <parameter name="derivedSequence">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="baseAll">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.IsSequenceFromChoice(System.Xml.Schema.XmlSchemaSequence,System.Xml.Schema.XmlSchemaChoice)">
    <parameter name="derivedSequence">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="baseChoice">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.IsValidOccurrenceRangeRestriction(System.Xml.Schema.XmlSchemaParticle,System.Xml.Schema.XmlSchemaParticle)">
    <parameter name="derivedParticle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="baseParticle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.IsValidRestriction(System.Xml.Schema.XmlSchemaParticle,System.Xml.Schema.XmlSchemaParticle)">
    <parameter name="baseParticle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionCompiler.Output(System.Xml.Schema.SchemaInfo)">
    <parameter name="schemaInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionPreprocessor.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.SchemaNames,System.Xml.Schema.ValidationEventHandler)">
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionPreprocessor.BuildRefNamespaces(System.Xml.Schema.XmlSchema)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionPreprocessor.CheckRefinedAttributeGroup(System.Xml.Schema.XmlSchemaAttributeGroup)">
    <parameter name="attributeGroup">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionPreprocessor.CheckRefinedComplexType(System.Xml.Schema.XmlSchemaComplexType)">
    <parameter name="ctype">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionPreprocessor.CheckRefinedGroup(System.Xml.Schema.XmlSchemaGroup)">
    <parameter name="group">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionPreprocessor.CheckRefinedSimpleType(System.Xml.Schema.XmlSchemaSimpleType)">
    <parameter name="stype">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionPreprocessor.Cleanup(System.Xml.Schema.XmlSchema)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionPreprocessor.CountGroupSelfReference(System.Xml.Schema.XmlSchemaObjectCollection,System.Xml.XmlQualifiedName)">
    <parameter name="items">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionPreprocessor.Execute(System.Xml.Schema.XmlSchema,System.String,System.Boolean,System.Xml.Schema.XmlSchemaCollection)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionPreprocessor.LoadExternals(System.Xml.Schema.XmlSchema,System.Xml.Schema.XmlSchemaCollection)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionPreprocessor.Preprocess(System.Xml.Schema.XmlSchema,System.String,System.Xml.Schema.SchemaCollectionPreprocessor.Compositor)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionPreprocessor.PreprocessAttribute(System.Xml.Schema.XmlSchemaAttribute)">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionPreprocessor.PreprocessAttributeContent(System.Xml.Schema.XmlSchemaAttribute)">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionPreprocessor.PreprocessAttributeGroup(System.Xml.Schema.XmlSchemaAttributeGroup)">
    <parameter name="attributeGroup">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionPreprocessor.PreprocessAttributes(System.Xml.Schema.XmlSchemaObjectCollection,System.Xml.Schema.XmlSchemaAnyAttribute,System.Xml.Schema.XmlSchemaObject)">
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionPreprocessor.PreprocessComplexType(System.Xml.Schema.XmlSchemaComplexType,System.Boolean)">
    <parameter name="complexType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionPreprocessor.PreprocessElement(System.Xml.Schema.XmlSchemaElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionPreprocessor.PreprocessElementContent(System.Xml.Schema.XmlSchemaElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionPreprocessor.PreprocessGroup(System.Xml.Schema.XmlSchemaGroup)">
    <parameter name="group">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionPreprocessor.PreprocessIdentityConstraint(System.Xml.Schema.XmlSchemaIdentityConstraint)">
    <parameter name="constraint">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionPreprocessor.PreprocessLocalAttribute(System.Xml.Schema.XmlSchemaAttribute)">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionPreprocessor.PreprocessLocalElement(System.Xml.Schema.XmlSchemaElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionPreprocessor.PreprocessNotation(System.Xml.Schema.XmlSchemaNotation)">
    <parameter name="notation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionPreprocessor.PreprocessParticle(System.Xml.Schema.XmlSchemaParticle)">
    <parameter name="particle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionPreprocessor.PreprocessRedefine(System.Xml.Schema.XmlSchemaRedefine)">
    <parameter name="redefine">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionPreprocessor.PreprocessSimpleType(System.Xml.Schema.XmlSchemaSimpleType,System.Boolean)">
    <parameter name="simpleType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionPreprocessor.SetParent(System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaObject)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionPreprocessor.ValidateIdAttribute(System.Xml.Schema.XmlSchemaObject)">
    <parameter name="xso">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionPreprocessor.ValidateNameAttribute(System.Xml.Schema.XmlSchemaObject)">
    <parameter name="xso">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaCollectionPreprocessor.ValidateQNameAttribute(System.Xml.Schema.XmlSchemaObject,System.String,System.Xml.XmlQualifiedName)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="xso">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaDeclBase.CheckEnumeration(System.Object)">
    <parameter name="pVal">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaDeclBase.CheckValue(System.Object)">
    <parameter name="pVal">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaElementDecl.AddAttDef(System.Xml.Schema.SchemaAttDef)">
    <parameter name="attdef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaElementDecl.CheckAttributes(System.Collections.Hashtable,System.Boolean)">
    <parameter name="presence">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaElementDecl.GetAttDef(System.Xml.XmlQualifiedName)">
    <parameter name="qname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaInfo.Add(System.Xml.Schema.SchemaInfo,System.Xml.Schema.ValidationEventHandler)">
    <parameter name="sinfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaInfo.Contains(System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaInfo.GetAttribute(System.Xml.XmlQualifiedName)">
    <parameter name="qname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaInfo.GetAttributeXsd(System.Xml.Schema.SchemaElementDecl,System.Xml.XmlQualifiedName,System.Boolean@)">
    <parameter name="qname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaInfo.GetAttributeXsd(System.Xml.Schema.SchemaElementDecl,System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.AttributeMatchState@)">
    <parameter name="qname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaInfo.GetElement(System.Xml.XmlQualifiedName)">
    <parameter name="qname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaInfo.GetElementDecl(System.Xml.XmlQualifiedName)">
    <parameter name="qname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaInfo.GetType(System.Xml.XmlQualifiedName)">
    <parameter name="qname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaInfo.GetTypeDecl(System.Xml.XmlQualifiedName)">
    <parameter name="qname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaInfo.HasSchema(System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaNames.#ctor(System.Xml.XmlNameTable)">
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SchemaNames.SchemaTypeFromRoot(System.String,System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SelectorActiveAxis.#ctor(System.Xml.Schema.Asttree,System.Xml.Schema.ConstraintStruct)">
    <parameter name="axisTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.StringFacetsChecker.MatchEnumeration(System.String,System.Collections.ArrayList,System.Xml.Schema.XmlSchemaDatatype)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="enumeration">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="datatype">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SymbolsDictionary.AddName(System.Xml.XmlQualifiedName,System.Object)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SymbolsDictionary.AddNamespaceList(System.Xml.Schema.NamespaceList,System.Object,System.Boolean)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SymbolsDictionary.AddWildcard(System.String,System.Object)">
    <parameter name="wildcard">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SymbolsDictionary.Exists(System.Xml.XmlQualifiedName)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.Schema.SymbolsDictionary.Item(System.Xml.XmlQualifiedName)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SyntaxTreeNode.Clone(System.Xml.Schema.Positions)">
    <parameter name="positions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SyntaxTreeNode.ConstructPos(System.Xml.Schema.BitSet,System.Xml.Schema.BitSet,System.Xml.Schema.BitSet[])">
    <parameter name="followpos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="lastpos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="firstpos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.SyntaxTreeNode.ExpandTree(System.Xml.Schema.InteriorNode,System.Xml.Schema.SymbolsDictionary,System.Xml.Schema.Positions)">
    <parameter name="positions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="symbols">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.TypedObject.#ctor(System.Object,System.String,System.Xml.Schema.XmlSchemaDatatype)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="xsdtype">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.TypedObject.Equals(System.Xml.Schema.TypedObject)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.TypedObject.ListDValueEquals(System.Xml.Schema.TypedObject)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.CheckDefaultAttValue(System.Xml.Schema.SchemaAttDef)">
    <parameter name="attDef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.CompareMinMaxLength(System.UInt32,System.UInt32,System.Xml.Schema.XdrBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.GetContent(System.Xml.XmlQualifiedName)">
    <parameter name="qname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.GetModel(System.Xml.XmlQualifiedName)">
    <parameter name="qname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.GetOrder(System.Xml.XmlQualifiedName)">
    <parameter name="qname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.GroupContent.Copy(System.Xml.Schema.XdrBuilder.GroupContent,System.Xml.Schema.XdrBuilder.GroupContent)">
    <parameter name="from">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="to">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.IsSkipableAttribute(System.Xml.XmlQualifiedName)">
    <parameter name="qname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.IsSkipableElement(System.Xml.XmlQualifiedName)">
    <parameter name="qname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.IsXdrSchema(System.String)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.IsYes(System.Object,System.Xml.Schema.XdrBuilder)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.LoadSchema(System.String)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.ParseDtMaxLength(System.UInt32@,System.Object,System.Xml.Schema.XdrBuilder)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.ParseDtMinLength(System.UInt32@,System.Object,System.Xml.Schema.XdrBuilder)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.ParseMaxOccurs(System.Object,System.Xml.Schema.XdrBuilder)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.ParseMinOccurs(System.Object,System.Xml.Schema.XdrBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.ProcessAttribute(System.String,System.String,System.String,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.SendValidationEvent(System.String)">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.SendValidationEvent(System.String,System.String)">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.SendValidationEvent(System.String,System.String[],System.Xml.Schema.XmlSeverityType)">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.SendValidationEvent(System.Xml.Schema.XmlSchemaException,System.Xml.Schema.XmlSeverityType)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.SetAttributePresence(System.Xml.Schema.SchemaAttDef,System.Boolean)">
    <parameter name="pAttdef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_BeginAttribute(System.Xml.Schema.XdrBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_BeginAttributeType(System.Xml.Schema.XdrBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_BeginElementType(System.Xml.Schema.XdrBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_BeginRoot(System.Xml.Schema.XdrBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_BuildAttribute_Default(System.Xml.Schema.XdrBuilder,System.Object,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_BuildAttribute_Required(System.Xml.Schema.XdrBuilder,System.Object,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_BuildAttribute_Type(System.Xml.Schema.XdrBuilder,System.Object,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_BuildAttributeType_Default(System.Xml.Schema.XdrBuilder,System.Object,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_BuildAttributeType_DtMaxLength(System.Xml.Schema.XdrBuilder,System.Object,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_BuildAttributeType_DtMinLength(System.Xml.Schema.XdrBuilder,System.Object,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_BuildAttributeType_DtType(System.Xml.Schema.XdrBuilder,System.Object,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_BuildAttributeType_DtValues(System.Xml.Schema.XdrBuilder,System.Object,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_BuildAttributeType_Name(System.Xml.Schema.XdrBuilder,System.Object,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_BuildAttributeType_Required(System.Xml.Schema.XdrBuilder,System.Object,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_BuildElement_MaxOccurs(System.Xml.Schema.XdrBuilder,System.Object,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_BuildElement_MinOccurs(System.Xml.Schema.XdrBuilder,System.Object,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_BuildElement_Type(System.Xml.Schema.XdrBuilder,System.Object,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_BuildElementType_Content(System.Xml.Schema.XdrBuilder,System.Object,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_BuildElementType_DtMaxLength(System.Xml.Schema.XdrBuilder,System.Object,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_BuildElementType_DtMinLength(System.Xml.Schema.XdrBuilder,System.Object,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_BuildElementType_DtType(System.Xml.Schema.XdrBuilder,System.Object,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_BuildElementType_DtValues(System.Xml.Schema.XdrBuilder,System.Object,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_BuildElementType_Model(System.Xml.Schema.XdrBuilder,System.Object,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_BuildElementType_Name(System.Xml.Schema.XdrBuilder,System.Object,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_BuildElementType_Order(System.Xml.Schema.XdrBuilder,System.Object,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_BuildGroup_MaxOccurs(System.Xml.Schema.XdrBuilder,System.Object,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_BuildGroup_MinOccurs(System.Xml.Schema.XdrBuilder,System.Object,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_BuildGroup_Order(System.Xml.Schema.XdrBuilder,System.Object,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_BuildRoot_Name(System.Xml.Schema.XdrBuilder,System.Object,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_CheckAttributeDefault(System.Xml.Schema.XdrBuilder.DeclBaseInfo,System.Xml.Schema.SchemaAttDef)">
    <parameter name="decl">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pAttdef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_EndAttribute(System.Xml.Schema.XdrBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_EndAttributeDtType(System.Xml.Schema.XdrBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_EndAttributeType(System.Xml.Schema.XdrBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_EndElement(System.Xml.Schema.XdrBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_EndElementDtType(System.Xml.Schema.XdrBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_EndElementType(System.Xml.Schema.XdrBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_EndGroup(System.Xml.Schema.XdrBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_EndRoot(System.Xml.Schema.XdrBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_InitAttribute(System.Xml.Schema.XdrBuilder,System.Object)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_InitAttributeDtType(System.Xml.Schema.XdrBuilder,System.Object)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_InitAttributeType(System.Xml.Schema.XdrBuilder,System.Object)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_InitElement(System.Xml.Schema.XdrBuilder,System.Object)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_InitElementDtType(System.Xml.Schema.XdrBuilder,System.Object)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_InitElementType(System.Xml.Schema.XdrBuilder,System.Object)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_InitGroup(System.Xml.Schema.XdrBuilder,System.Object)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrBuilder.XDR_InitRoot(System.Xml.Schema.XdrBuilder,System.Object)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrValidator.#ctor(System.Xml.Schema.BaseValidator)">
    <parameter name="validator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrValidator.#ctor(System.Xml.XmlValidatingReaderImpl,System.Xml.Schema.XmlSchemaCollection,System.Xml.Schema.ValidationEventHandler)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrValidator.AddID(System.String,System.Object)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrValidator.CheckDefaultValue(System.String,System.Xml.Schema.SchemaAttDef,System.Xml.Schema.SchemaInfo,System.Xml.XmlNamespaceManager,System.Xml.XmlNameTable,System.Object,System.Xml.Schema.ValidationEventHandler,System.String,System.Int32,System.Int32)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attdef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="sinfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nsManager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="NameTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrValidator.CheckValue(System.String,System.Xml.Schema.SchemaAttDef)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrValidator.LoadSchema(System.String)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrValidator.LoadSchemaFromLocation(System.String)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrValidator.ProcessTokenizedType(System.Xml.XmlTokenizedType,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XdrValidator.Push(System.Xml.XmlQualifiedName)">
    <parameter name="elementName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlAnyConverter.ChangeTypeWildcardDestination(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nsResolver">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlAnyConverter.ChangeTypeWildcardSource(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nsResolver">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlAnyListConverter.#ctor(System.Xml.Schema.XmlBaseConverter)">
    <parameter name="atomicConverter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlAnyListConverter.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)">
    <parameter name="nsResolver">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlAtomicValue.#ctor(System.Xml.Schema.XmlSchemaType,System.Boolean)">
    <parameter name="xmlType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlAtomicValue.#ctor(System.Xml.Schema.XmlSchemaType,System.DateTime)">
    <parameter name="xmlType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlAtomicValue.#ctor(System.Xml.Schema.XmlSchemaType,System.Double)">
    <parameter name="xmlType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlAtomicValue.#ctor(System.Xml.Schema.XmlSchemaType,System.Int32)">
    <parameter name="xmlType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlAtomicValue.#ctor(System.Xml.Schema.XmlSchemaType,System.Int64)">
    <parameter name="xmlType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlAtomicValue.#ctor(System.Xml.Schema.XmlSchemaType,System.Object)">
    <parameter name="xmlType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlAtomicValue.#ctor(System.Xml.Schema.XmlSchemaType,System.Object,System.Xml.IXmlNamespaceResolver)">
    <parameter name="xmlType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlAtomicValue.#ctor(System.Xml.Schema.XmlSchemaType,System.String)">
    <parameter name="xmlType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlAtomicValue.#ctor(System.Xml.Schema.XmlSchemaType,System.String,System.Xml.IXmlNamespaceResolver)">
    <parameter name="xmlType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.#ctor(System.Xml.Schema.XmlBaseConverter)">
    <parameter name="converterAtomic">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.#ctor(System.Xml.Schema.XmlBaseConverter,System.Type)">
    <parameter name="converterAtomic">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.#ctor(System.Xml.Schema.XmlSchemaType)">
    <parameter name="schemaType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.AnyUriToString(System.Uri)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.ChangeListType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nsResolver">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.QNameToString(System.Xml.XmlQualifiedName)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.QNameToString(System.Xml.XmlQualifiedName,System.Xml.IXmlNamespaceResolver)">
    <parameter name="qname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.StringToBase64Binary(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.StringToDate(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.StringToDateOffset(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.StringToDateTime(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.StringToDateTimeOffset(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.StringToDayTimeDuration(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.StringToDuration(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.StringToGDay(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.StringToGDayOffset(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.StringToGMonth(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.StringToGMonthDay(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.StringToGMonthDayOffset(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.StringToGMonthOffset(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.StringToGYear(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.StringToGYearMonth(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.StringToGYearMonthOffset(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.StringToGYearOffset(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.StringToTime(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.StringToTimeOffset(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.StringToYearMonthDuration(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.ToString(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.UntypedAtomicToDateTime(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlBaseConverter.UntypedAtomicToDateTimeOffset(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlBooleanConverter.#ctor(System.Xml.Schema.XmlSchemaType)">
    <parameter name="schemaType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlDateTimeConverter.#ctor(System.Xml.Schema.XmlSchemaType)">
    <parameter name="schemaType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlListConverter.#ctor(System.Xml.Schema.XmlBaseConverter)">
    <parameter name="atomicConverter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlListConverter.#ctor(System.Xml.Schema.XmlBaseConverter,System.Type)">
    <parameter name="atomicConverter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlListConverter.#ctor(System.Xml.Schema.XmlSchemaType)">
    <parameter name="schemaType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlListConverter.Create(System.Xml.Schema.XmlValueConverter)">
    <parameter name="atomicConverter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlListConverter.IsListType(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlMiscConverter.#ctor(System.Xml.Schema.XmlSchemaType)">
    <parameter name="schemaType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlMiscConverter.ChangeTypeWildcardDestination(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nsResolver">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlMiscConverter.ChangeTypeWildcardSource(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nsResolver">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlNumeric10Converter.#ctor(System.Xml.Schema.XmlSchemaType)">
    <parameter name="schemaType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlNumeric10Converter.ChangeTypeWildcardDestination(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nsResolver">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlNumeric10Converter.ChangeTypeWildcardSource(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nsResolver">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlNumeric2Converter.#ctor(System.Xml.Schema.XmlSchemaType)">
    <parameter name="schemaType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchema.AddCompiledInfo(System.Xml.Schema.SchemaInfo)">
    <parameter name="schemaInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchema.CompileSchema(System.Xml.Schema.XmlSchemaCollection,System.Xml.XmlResolver,System.Xml.Schema.SchemaInfo,System.String,System.Xml.Schema.ValidationEventHandler,System.Xml.XmlNameTable,System.Boolean)">
    <parameter name="schemaInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchema.CompileSchemaInSet(System.Xml.XmlNameTable,System.Xml.Schema.ValidationEventHandler,System.Xml.Schema.XmlSchemaCompilationSettings)">
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchema.GetExternalSchemasList(System.Collections.IList,System.Xml.Schema.XmlSchema)">
    <parameter name="extList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchema.Read(System.IO.Stream,System.Xml.Schema.ValidationEventHandler)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchema.Read(System.Xml.XmlReader,System.Xml.Schema.ValidationEventHandler)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.Stream)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.Stream,System.Xml.XmlNamespaceManager)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.TextWriter)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchema.Write(System.IO.TextWriter,System.Xml.XmlNamespaceManager)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchema.Write(System.Xml.XmlWriter,System.Xml.XmlNamespaceManager)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaAnnotated.AddAnnotation(System.Xml.Schema.XmlSchemaAnnotation)">
    <parameter name="annotation">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaAny.Allows(System.Xml.XmlQualifiedName)">
    <parameter name="qname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaAny.BuildNamespaceList(System.String)">
    <parameter name="targetNamespace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaAny.BuildNamespaceListV1Compat(System.String)">
    <parameter name="targetNamespace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaAnyAttribute.Allows(System.Xml.XmlQualifiedName)">
    <parameter name="qname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaAnyAttribute.BuildNamespaceList(System.String)">
    <parameter name="targetNamespace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaAnyAttribute.BuildNamespaceListV1Compat(System.String)">
    <parameter name="targetNamespace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaAnyAttribute.IsSubset(System.Xml.Schema.XmlSchemaAnyAttribute,System.Xml.Schema.XmlSchemaAnyAttribute)">
    <parameter name="sub">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="super">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaCollection.#ctor(System.Xml.XmlNameTable)">
    <parameter name="nametable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.String,System.Xml.Schema.XmlSchemaCollectionNode)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaCollection.Add(System.Xml.Schema.XmlSchemaCollection)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaCollection.Contains(System.Xml.Schema.XmlSchema)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaCollection.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaCollection.SendValidationEvent(System.Xml.Schema.XmlSchemaException)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaCollectionEnumerator.#ctor(System.Collections.Hashtable)">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaComplexType.HasAttributeQNameRef(System.Xml.Schema.XmlSchemaObjectCollection)">
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="targetType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="targetType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceResolver">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaDatatype.Compare(System.Object,System.Object)">
    <parameter name="value1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaDatatype.FromXdrName(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaDatatype.IsComparable(System.Xml.Schema.XmlSchemaDatatype)">
    <parameter name="dtype">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaDatatype.IsEqual(System.Object,System.Object)">
    <parameter name="o2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="o1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Type,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nsmgr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="typDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
    <parameter name="nsmgr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver,System.Boolean)">
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nsmgr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaDatatype.VerifySchemaValid(System.Xml.Schema.XmlSchemaObjectTable,System.Xml.Schema.XmlSchemaObject)">
    <parameter name="notations">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="caller">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaDatatype.XdrCanonizeUri(System.String,System.Xml.XmlNameTable,System.Xml.Schema.SchemaNames)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="schemaNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.String,System.String)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.String,System.String,System.Int32,System.Int32)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.String,System.String,System.String,System.Int32,System.Int32)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.String,System.String,System.Xml.Schema.XmlSchemaObject)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.String,System.String[])">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.String,System.String[],System.Exception,System.String,System.Int32,System.Int32,System.Xml.Schema.XmlSchemaObject)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.String,System.String[],System.String,System.Int32,System.Int32)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.String,System.String[],System.Xml.Schema.XmlSchemaObject)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaException.#ctor(System.String,System.Xml.Schema.XmlSchemaObject)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaException.CreateMessage(System.String,System.String[])">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaException.SetSource(System.Xml.Schema.XmlSchemaObject)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaImport.AddAnnotation(System.Xml.Schema.XmlSchemaAnnotation)">
    <parameter name="annotation">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaInclude.AddAnnotation(System.Xml.Schema.XmlSchemaAnnotation)">
    <parameter name="annotation">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaInference.DateTime(System.String,System.Boolean,System.Boolean)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaInference.GetEffectiveSchemaType(System.Xml.Schema.XmlSchemaElement,System.Boolean)">
    <parameter name="elem">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaInference.InferElement(System.Xml.Schema.XmlSchemaElement,System.Boolean,System.Xml.Schema.XmlSchema)">
    <parameter name="xse">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="parentSchema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaInference.InferSimpleType(System.String,System.Boolean@)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaInference.MakeExistingAttributesOptional(System.Xml.Schema.XmlSchemaComplexType,System.Xml.Schema.XmlSchemaObjectCollection)">
    <parameter name="ct">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaInference.MoveAttributes(System.Xml.Schema.XmlSchemaComplexType,System.Xml.Schema.XmlSchemaSimpleContentExtension,System.Boolean)">
    <parameter name="ct">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="simpleContentExtension">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaInference.MoveAttributes(System.Xml.Schema.XmlSchemaSimpleContentExtension,System.Xml.Schema.XmlSchemaComplexType)">
    <parameter name="scExtension">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ct">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaInference.ProcessAttributes(System.Xml.Schema.XmlSchemaElement@,System.Xml.Schema.XmlSchemaType,System.Boolean,System.Xml.Schema.XmlSchema)">
    <parameter name="xse">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="parentSchema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaInference.RefineSimpleType(System.String,System.Int32@)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaInference.SetMinMaxOccurs(System.Xml.Schema.XmlSchemaElement,System.Boolean)">
    <parameter name="el">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaInference.SwitchUseToOptional(System.Xml.Schema.XmlSchemaObjectCollection,System.Xml.Schema.XmlSchemaObjectCollection)">
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.String,System.Int32,System.Int32)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.String,System.String)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.String,System.String,System.Int32,System.Int32)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.String,System.String,System.String,System.Int32,System.Int32)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.String,System.String[])">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaInferenceException.#ctor(System.String,System.String[],System.String,System.Int32,System.Int32)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaObject.AddAnnotation(System.Xml.Schema.XmlSchemaAnnotation)">
    <parameter name="annotation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Add(System.Xml.Schema.XmlSchemaObject)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Add(System.Xml.Schema.XmlSchemaObjectCollection)">
    <parameter name="collToAdd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Contains(System.Xml.Schema.XmlSchemaObject)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.CopyTo(System.Xml.Schema.XmlSchemaObject[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.IndexOf(System.Xml.Schema.XmlSchemaObject)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Insert(System.Int32,System.Xml.Schema.XmlSchemaObject)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnInsert(System.Int32,System.Object)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnRemove(System.Int32,System.Object)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.OnSet(System.Int32,System.Object,System.Object)">
    <parameter name="newValue">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="oldValue">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaObjectCollection.Remove(System.Xml.Schema.XmlSchemaObject)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaObjectTable.Add(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaObject)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaObjectTable.Contains(System.Xml.XmlQualifiedName)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaObjectTable.Insert(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaObject)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.Schema.XmlSchemaObjectTable.Item(System.Xml.XmlQualifiedName)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaObjectTable.NamesCollection.CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaObjectTable.Remove(System.Xml.XmlQualifiedName)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaObjectTable.Replace(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaObject)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaObjectTable.ValuesCollection.CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader,System.Collections.Hashtable)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="validatedNamespaces">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaSet.AddSchemaToSet(System.Xml.Schema.XmlSchema)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaSet.AddToTable(System.Xml.Schema.XmlSchemaObjectTable,System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaObject)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="qname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaSet.CopyFromCompiledSet(System.Xml.Schema.XmlSchemaSet)">
    <parameter name="otherSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaSet.InternalValidationCallback(System.Object,System.Xml.Schema.ValidationEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaSet.ParseSchema(System.String,System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaSet.PreprocessSchema(System.Xml.Schema.XmlSchema@,System.String)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaSet.ProcessNewSubstitutionGroups(System.Xml.Schema.XmlSchemaObjectTable,System.Boolean)">
    <parameter name="substitutionGroupsTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaSet.RemoveSchemaFromCaches(System.Xml.Schema.XmlSchema)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaSet.RemoveSchemaFromGlobalTables(System.Xml.Schema.XmlSchema)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaSet.ResolveSubstitutionGroup(System.Xml.Schema.XmlSchemaSubstitutionGroup,System.Xml.Schema.XmlSchemaObjectTable)">
    <parameter name="substitutionGroup">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="substTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaSet.SendValidationEvent(System.Xml.Schema.XmlSchemaException,System.Xml.Schema.XmlSeverityType)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaSet.SetProhibitDtd(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(System.Xml.XmlQualifiedName)">
    <parameter name="qualifiedName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.XmlQualifiedName)">
    <parameter name="qualifiedName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaType.IsDerivedFromDatatype(System.Xml.Schema.XmlSchemaDatatype,System.Xml.Schema.XmlSchemaDatatype,System.Xml.Schema.XmlSchemaDerivationMethod)">
    <parameter name="derivedDataType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.String,System.String)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.String,System.String,System.Int32,System.Int32)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.String,System.String,System.String,System.Int32,System.Int32)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.String,System.String[])">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.String,System.String[],System.Exception,System.String,System.Int32,System.Int32)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.String,System.String[],System.Object)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.String,System.String[],System.String,System.Int32,System.Int32)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.String,System.String[],System.String,System.Int32,System.Int32,System.Xml.Schema.XmlSchemaObject,System.Object)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidationException.#ctor(System.String,System.String[],System.String,System.Object)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.#ctor(System.Xml.XmlNameTable,System.Xml.Schema.XmlSchemaSet,System.Xml.IXmlNamespaceResolver,System.Xml.Schema.XmlSchemaValidationFlags)">
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="schemas">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceResolver">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.AddSchema(System.Xml.Schema.XmlSchema)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.AddXsiAttributes(System.Collections.ArrayList)">
    <parameter name="attList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.AttributeIdentityConstraints(System.String,System.String,System.Object,System.String,System.Xml.Schema.XmlSchemaDatatype)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="datatype">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.CheckAttributeValue(System.Object,System.Xml.Schema.SchemaAttDef)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attdef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.CheckElementValue(System.String)">
    <parameter name="stringValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.CheckIsXmlAttribute(System.Xml.XmlQualifiedName)">
    <parameter name="attQName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.CheckMixedValueConstraint(System.String)">
    <parameter name="elementValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.CheckRequiredAttributes(System.Xml.Schema.SchemaElementDecl)">
    <parameter name="currentElementDecl">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.CheckTokenizedTypes(System.Xml.Schema.XmlSchemaDatatype,System.Object,System.Boolean)">
    <parameter name="dtype">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.CompleteValidationError(System.Xml.Schema.ValidationState,System.Xml.Schema.ValidationEventHandler,System.Object,System.String,System.Int32,System.Int32,System.Boolean)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.ElementValidationError(System.Xml.XmlQualifiedName,System.Xml.Schema.ValidationState,System.Xml.Schema.ValidationEventHandler,System.Object,System.String,System.Int32,System.Int32,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.EndElementIdentityConstraints(System.Object,System.String,System.Xml.Schema.XmlSchemaDatatype)">
    <parameter name="stringValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="datatype">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.EnumerateAny(System.Text.StringBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaces">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.FastGetElementDecl(System.Xml.XmlQualifiedName,System.Object)">
    <parameter name="elementName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.FindId(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.GetTypeName(System.Xml.Schema.SchemaDeclBase)">
    <parameter name="decl">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList)">
    <parameter name="defaultAttributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.GetUnspecifiedDefaultAttributes(System.Collections.ArrayList,System.Boolean)">
    <parameter name="defaultAttributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.Initialize(System.Xml.Schema.XmlSchemaObject)">
    <parameter name="partialValidationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.LoadSchema(System.String,System.String)">
    <parameter name="url">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.PrintNamesWithNS(System.Collections.ArrayList,System.Text.StringBuilder)">
    <parameter name="expected">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.ProcessTokenizedType(System.Xml.XmlTokenizedType,System.String,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.Push(System.Xml.XmlQualifiedName)">
    <parameter name="elementName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.QNameString(System.String,System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.SaveTextValue(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.SendValidationEvent(System.String)">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.SendValidationEvent(System.String,System.String)">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.SendValidationEvent(System.String,System.String,System.String)">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.SendValidationEvent(System.String,System.String,System.Xml.Schema.XmlSeverityType)">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.SendValidationEvent(System.String,System.String[])">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.SendValidationEvent(System.String,System.String[],System.Exception)">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.SendValidationEvent(System.String,System.String[],System.Exception,System.Xml.Schema.XmlSeverityType)">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.SendValidationEvent(System.Xml.Schema.ValidationEventHandler,System.Object,System.Xml.Schema.XmlSchemaValidationException,System.Xml.Schema.XmlSeverityType)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.SendValidationEvent(System.Xml.Schema.XmlSchemaException)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.SendValidationEvent(System.Xml.Schema.XmlSchemaValidationException)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.SendValidationEvent(System.Xml.Schema.XmlSchemaValidationException,System.Xml.Schema.XmlSeverityType)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateAtomicValue(System.Object,System.Xml.Schema.XmlSchemaSimpleType@)">
    <parameter name="parsedValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateAtomicValue(System.String,System.Xml.Schema.XmlSchemaSimpleType@)">
    <parameter name="stringValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
    <parameter name="attributeValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.String,System.Xml.Schema.XmlSchemaInfo)">
    <parameter name="lName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributeStringValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateAttribute(System.String,System.String,System.Xml.Schema.XmlValueGetter,System.Xml.Schema.XmlSchemaInfo)">
    <parameter name="attributeValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateElement(System.String,System.String,System.Xml.Schema.XmlSchemaInfo,System.String,System.String,System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="xsiType">
    </parameter>
    <parameter name="xsiSchemaLocation">
    </parameter>
    <parameter name="xsiNoNamespaceSchemaLocation">
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateEndElement(System.Xml.Schema.XmlSchemaInfo,System.Object)">
    <parameter name="typedValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String)">
    <parameter name="elementValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.String,System.Xml.Schema.XmlValueGetter)">
    <parameter name="elementStringValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateText(System.Xml.Schema.XmlValueGetter)">
    <parameter name="elementValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String)">
    <parameter name="elementValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.String,System.Xml.Schema.XmlValueGetter)">
    <parameter name="elementStringValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaValidator.ValidateWhitespace(System.Xml.Schema.XmlValueGetter)">
    <parameter name="elementValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlStringConverter.#ctor(System.Xml.Schema.XmlSchemaType)">
    <parameter name="schemaType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlUnionConverter.#ctor(System.Xml.Schema.XmlSchemaType)">
    <parameter name="schemaType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlUntypedConverter.#ctor(System.Xml.Schema.XmlUntypedConverter,System.Boolean)">
    <parameter name="atomicConverter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlUntypedConverter.ChangeTypeWildcardDestination(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nsResolver">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlValueConverter.ChangeType(System.Boolean,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlValueConverter.ChangeType(System.DateTime,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlValueConverter.ChangeType(System.DateTimeOffset,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlValueConverter.ChangeType(System.Decimal,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlValueConverter.ChangeType(System.Double,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlValueConverter.ChangeType(System.Int32,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlValueConverter.ChangeType(System.Int64,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlValueConverter.ChangeType(System.Object,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlValueConverter.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)">
    <parameter name="nsResolver">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlValueConverter.ChangeType(System.Single,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlValueConverter.ChangeType(System.String,System.Type,System.Xml.IXmlNamespaceResolver)">
    <parameter name="nsResolver">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlValueConverter.ToBoolean(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlValueConverter.ToBoolean(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlValueConverter.ToDateTime(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlValueConverter.ToDateTime(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlValueConverter.ToDateTimeOffset(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlValueConverter.ToDateTimeOffset(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlValueConverter.ToDecimal(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlValueConverter.ToDecimal(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlValueConverter.ToDouble(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlValueConverter.ToDouble(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlValueConverter.ToInt32(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlValueConverter.ToInt32(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlValueConverter.ToInt64(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlValueConverter.ToInt64(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlValueConverter.ToSingle(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlValueConverter.ToSingle(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlValueConverter.ToString(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlValueConverter.ToString(System.Object,System.Xml.IXmlNamespaceResolver)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nsResolver">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlValueConverter.ToString(System.String,System.Xml.IXmlNamespaceResolver)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.AddAttribute(System.Xml.Schema.XmlSchemaObject)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.AddParticle(System.Xml.Schema.XmlSchemaParticle)">
    <parameter name="particle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildAnnotated_Id(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildAny_Namespace(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildAny_ProcessContents(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildAnyAttribute_Namespace(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildAnyAttribute_ProcessContents(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildAppinfo_Source(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildAttribute_Default(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildAttribute_Fixed(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildAttribute_Form(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildAttribute_Name(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildAttribute_Ref(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildAttribute_Type(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildAttribute_Use(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildAttributeGroup_Name(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildAttributeGroupRef_Ref(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildComplexContent_Mixed(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildComplexContentExtension_Base(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildComplexContentRestriction_Base(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildComplexType_Abstract(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildComplexType_Block(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildComplexType_Final(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildComplexType_Mixed(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildComplexType_Name(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildDocumentation_Source(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildDocumentation_XmlLang(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildElement_Abstract(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildElement_Block(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildElement_Default(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildElement_Final(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildElement_Fixed(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildElement_Form(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildElement_MaxOccurs(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildElement_MinOccurs(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildElement_Name(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildElement_Nillable(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildElement_Ref(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildElement_SubstitutionGroup(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildElement_Type(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildFacet_Fixed(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildFacet_Value(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildField_XPath(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildGroup_Name(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildGroupRef_Ref(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildIdentityConstraint_Name(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildIdentityConstraint_Refer(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildImport_Namespace(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildImport_SchemaLocation(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildInclude_SchemaLocation(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildNotation_Name(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildNotation_Public(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildNotation_System(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildParticle_MaxOccurs(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildParticle_MinOccurs(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildRedefine_SchemaLocation(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildSchema_AttributeFormDefault(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildSchema_BlockDefault(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildSchema_ElementFormDefault(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildSchema_FinalDefault(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildSchema_TargetNamespace(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildSchema_Version(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildSelector_XPath(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildSimpleContentExtension_Base(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildSimpleContentRestriction_Base(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildSimpleType_Final(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildSimpleType_Name(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildSimpleTypeList_ItemType(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildSimpleTypeRestriction_Base(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.BuildSimpleTypeUnion_MemberTypes(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.EndAppinfo(System.Xml.Schema.XsdBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.EndDocumentation(System.Xml.Schema.XsdBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.EndRedefine(System.Xml.Schema.XsdBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.InitAll(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.InitAnnotation(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.InitAny(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.InitAnyAttribute(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.InitAppinfo(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.InitAttribute(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.InitAttributeGroup(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.InitAttributeGroupRef(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.InitChoice(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.InitComplexContent(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.InitComplexContentExtension(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.InitComplexContentRestriction(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.InitComplexType(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.InitDocumentation(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.InitElement(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.InitFacet(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.InitField(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.InitGroup(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.InitGroupRef(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.InitIdentityConstraint(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.InitImport(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.InitInclude(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.InitNotation(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.InitRedefine(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.InitSchema(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.InitSelector(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.InitSequence(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.InitSimpleContent(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.InitSimpleContentExtension(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.InitSimpleContentRestriction(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.InitSimpleType(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.InitSimpleTypeList(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.InitSimpleTypeRestriction(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.InitSimpleTypeUnion(System.Xml.Schema.XsdBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.ParseBlockFinalEnum(System.String,System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.ParseBoolean(System.String,System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.ParseEnum(System.String,System.String,System.String[])">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.ParseQName(System.String,System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.ProcessAttribute(System.String,System.String,System.String,System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.ProcessElement(System.String,System.String,System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.SendValidationEvent(System.String,System.String)">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.SendValidationEvent(System.String,System.String,System.String,System.String)">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.SendValidationEvent(System.String,System.String[],System.Xml.Schema.XmlSeverityType)">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.SendValidationEvent(System.Xml.Schema.XmlSchemaException)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.SendValidationEvent(System.Xml.Schema.XmlSchemaException,System.Xml.Schema.XmlSeverityType)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.SetMaxOccurs(System.Xml.Schema.XmlSchemaParticle,System.String)">
    <parameter name="particle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdBuilder.SetMinOccurs(System.Xml.Schema.XmlSchemaParticle,System.String)">
    <parameter name="particle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdDateTime.#ctor(System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdDateTime.#ctor(System.String,System.Xml.Schema.XsdDateTimeFlags)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdDateTime.IntToCharArray(System.Char[],System.Int32,System.Int32,System.Int32)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdDateTime.Parser.Parse(System.String,System.Xml.Schema.XsdDateTimeFlags)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdDateTime.PrintDate(System.Text.StringBuilder)">
    <parameter name="sb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdDateTime.PrintTime(System.Text.StringBuilder)">
    <parameter name="sb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdDateTime.PrintZone(System.Text.StringBuilder)">
    <parameter name="sb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdDateTime.ShortToCharArray(System.Char[],System.Int32,System.Int32)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdDateTime.TryParse(System.String,System.Xml.Schema.XsdDateTimeFlags,System.Xml.Schema.XsdDateTime@)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdDuration.#ctor(System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdDuration.#ctor(System.String,System.Xml.Schema.XsdDuration.DurationType)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdValidator.#ctor(System.Xml.Schema.BaseValidator)">
    <parameter name="validator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdValidator.#ctor(System.Xml.XmlValidatingReaderImpl,System.Xml.Schema.XmlSchemaCollection,System.Xml.Schema.ValidationEventHandler)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdValidator.AddID(System.String,System.Object)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdValidator.AttributeIdentityConstraints(System.String,System.String,System.Object,System.String,System.Xml.Schema.SchemaAttDef)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdValidator.CheckValue(System.String,System.Xml.Schema.SchemaAttDef)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdValidator.LoadSchema(System.String,System.String)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdValidator.LoadSchemaFromLocation(System.String,System.String)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="url">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdValidator.ProcessTokenizedType(System.Xml.XmlTokenizedType,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XsdValidator.Push(System.Xml.XmlQualifiedName)">
    <parameter name="elementName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.SecureStringHasher.Equals(System.String,System.String)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.SecureStringHasher.GetHashCode(System.String)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.AccessorMapping.AccessorComparer.Compare(System.Object,System.Object)">
    <parameter name="o2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="o1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.AccessorMapping.IsNeedNullableMember(System.Xml.Serialization.ElementAccessor)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.AccessorMapping.Match(System.Xml.Serialization.AccessorMapping)">
    <parameter name="mapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.AccessorMapping.SortMostToLeastDerived(System.Xml.Serialization.ElementAccessor[])">
    <parameter name="elements">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CaseInsensitiveKeyComparer.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CaseInsensitiveKeyComparer.System#Collections#IEqualityComparer#GetHashCode(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeIdentifier.CheckValidIdentifier(System.String)">
    <parameter name="ident">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeIdentifier.EscapeKeywords(System.String,System.CodeDom.Compiler.CodeDomProvider,System.Text.StringBuilder)">
    <parameter name="codeProvider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="sb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeIdentifier.GetCSharpName(System.Type,System.Type[],System.Int32,System.Text.StringBuilder)">
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="sb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeIdentifier.MakeCamel(System.String)">
    <parameter name="identifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeIdentifier.MakePascal(System.String)">
    <parameter name="identifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeIdentifiers.Add(System.String,System.Object)">
    <parameter name="identifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeIdentifiers.AddReserved(System.String)">
    <parameter name="identifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeIdentifiers.AddUnique(System.String,System.Object)">
    <parameter name="identifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeIdentifiers.IsInUse(System.String)">
    <parameter name="identifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeIdentifiers.MakeRightCase(System.String)">
    <parameter name="identifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeIdentifiers.MakeUnique(System.String)">
    <parameter name="identifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeIdentifiers.Remove(System.String)">
    <parameter name="identifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeIdentifiers.RemoveReserved(System.String)">
    <parameter name="identifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeIdentifiers.ToArray(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.Compiler.AddImport(System.Reflection.Assembly)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.Compiler.AddImport(System.Type,System.Collections.Hashtable)">
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.Compiler.GetTempAssemblyName(System.Reflection.AssemblyName,System.String)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.Compiler.GetTempAssemblyPath(System.String,System.Reflection.Assembly,System.String)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.DynamicAssemblies.Add(System.Reflection.Assembly)">
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.DynamicAssemblies.Get(System.String)">
    <parameter name="fullName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.DynamicAssemblies.GetName(System.Reflection.Assembly)">
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.DynamicAssemblies.IsTypeDynamic(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.DynamicAssemblies.IsTypeDynamic(System.Type[])">
    <parameter name="arguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.FieldModel.#ctor(System.Reflection.MemberInfo,System.Type,System.Xml.Serialization.TypeDesc)">
    <parameter name="memberInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.MemberMapping.GetNullableType(System.Xml.Serialization.TypeDesc)">
    <parameter name="td">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.MemberMapping.GetTypeName(System.CodeDom.Compiler.CodeDomProvider)">
    <parameter name="codeProvider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.MemberMappingComparer.Compare(System.Object,System.Object)">
    <parameter name="o2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="o1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.NameKey.Equals(System.Object)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.NameTable.Add(System.Xml.XmlQualifiedName,System.Object)">
    <parameter name="qname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.Serialization.NameTable.Item(System.Xml.XmlQualifiedName)">
    <parameter name="qname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.NameTable.ToArray(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.QNameComparer.Compare(System.Object,System.Object)">
    <parameter name="o2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="o1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SchemaGraph.#ctor(System.Collections.Hashtable,System.Xml.Serialization.XmlSchemas)">
    <parameter name="schemas">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SchemaGraph.AddRef(System.Collections.ArrayList,System.Xml.Schema.XmlSchemaObject)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SchemaGraph.Depends(System.Xml.Schema.XmlSchemaObject)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SchemaGraph.Depends(System.Xml.Schema.XmlSchemaObject,System.Collections.ArrayList)">
    <parameter name="refs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider,System.Xml.Serialization.ImportContext)">
    <parameter name="schemas">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SchemaImporter.AddReference(System.Xml.XmlQualifiedName,System.Xml.Serialization.NameTable,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="references">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="error">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SchemaImporter.AddReservedIdentifiersForDataBinding(System.Xml.Serialization.CodeIdentifiers)">
    <parameter name="scope">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SchemaImporter.GenerateUniqueTypeName(System.String)">
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SchemaImporter.MakeDerived(System.Xml.Serialization.StructMapping,System.Type,System.Boolean)">
    <parameter name="structMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SchemaImporter.RemoveReference(System.Xml.XmlQualifiedName,System.Xml.Serialization.NameTable)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="references">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SchemaObjectCache.CompositeHash(System.Xml.Schema.XmlSchemaObject,System.Int32)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SchemaObjectCache.GenerateSchemaGraph(System.Xml.Serialization.XmlSchemas)">
    <parameter name="schemas">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SchemaObjectCache.GetHash(System.Xml.Schema.XmlSchemaObject)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SchemaObjectCache.Match(System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaObject,System.Boolean)">
    <parameter name="o1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="o2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SchemaObjectWriter.WriteAttribute(System.String,System.String,System.Xml.XmlQualifiedName)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SchemaObjectWriter.WriteAttribute(System.Xml.XmlAttribute)">
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SerializableMapping.#ctor(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaSet)">
    <parameter name="xsiType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SerializableMapping.Match(System.Xml.Schema.XmlSchemaElement,System.Xml.Schema.XmlSchemaElement)">
    <parameter name="e1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="e2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SerializableMapping.ValidationCallbackWithErrorCode(System.Object,System.Xml.Schema.ValidationEventArgs)">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.SoapAttributes)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SoapAttributeOverrides.Add(System.Type,System.Xml.Serialization.SoapAttributes)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.Serialization.SoapAttributeOverrides.Item(System.Type,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SoapAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
    <parameter name="provider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SoapReflectionImporter.GetDefaultValue(System.Xml.Serialization.TypeDesc,System.Xml.Serialization.SoapAttributes)">
    <parameter name="fieldTypeDesc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SoapReflectionImporter.ImportAccessorMapping(System.Xml.Serialization.MemberMapping,System.Xml.Serialization.FieldModel,System.Xml.Serialization.SoapAttributes,System.String,System.Xml.Schema.XmlSchemaForm,System.Xml.Serialization.RecursionLimiter)">
    <parameter name="accessor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="model">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="limiter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeType(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeType(System.Type,System.Xml.Serialization.RecursionLimiter)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="limiter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
    <parameter name="provider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SoapReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider,System.Xml.Serialization.RecursionLimiter)">
    <parameter name="provider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="limiter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SoapReflectionImporter.InitializeStructMembers(System.Xml.Serialization.StructMapping,System.Xml.Serialization.StructModel,System.Xml.Serialization.RecursionLimiter)">
    <parameter name="mapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="model">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="limiter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SoapReflectionImporter.SetArrayMappingType(System.Xml.Serialization.ArrayMapping)">
    <parameter name="mapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SoapReflectionImporter.XsdTypeName(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SoapReflectionImporter.XsdTypeName(System.Type,System.Xml.Serialization.SoapAttributes,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.StructMapping.Declares(System.Xml.Serialization.MemberMapping,System.String)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.StructMapping.FindDeclaringMapping(System.Xml.Serialization.MemberMapping,System.Xml.Serialization.StructMapping@,System.String)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.StructModel.CheckPropertyRead(System.Reflection.PropertyInfo)">
    <parameter name="propertyInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.StructModel.CheckSupportedMember(System.Xml.Serialization.TypeDesc,System.Reflection.MemberInfo,System.Type)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TempAssembly.#ctor(System.Xml.Serialization.XmlMapping[],System.Reflection.Assembly,System.Xml.Serialization.XmlSerializerImplementation)">
    <parameter name="xmlMappings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TempAssembly.#ctor(System.Xml.Serialization.XmlMapping[],System.Type[],System.String,System.String,System.Security.Policy.Evidence)">
    <parameter name="xmlMappings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TempAssembly.CanRead(System.Xml.Serialization.XmlMapping,System.Xml.XmlReader)">
    <parameter name="xmlReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TempAssembly.InitAssemblyMethods(System.Xml.Serialization.XmlMapping[])">
    <parameter name="xmlMappings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TempAssembly.InvokeReader(System.Xml.Serialization.XmlMapping,System.Xml.XmlReader,System.Xml.Serialization.XmlDeserializationEvents,System.String)">
    <parameter name="mapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="xmlReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TempAssembly.InvokeWriter(System.Xml.Serialization.XmlMapping,System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)">
    <parameter name="mapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TempAssembly.IsSerializerVersionMatch(System.Reflection.Assembly,System.Type,System.String,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TempAssembly.TempMethodDictionary.Add(System.String,System.Xml.Serialization.TempAssembly.TempMethod)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.Serialization.TempAssembly.TempMethodDictionary.Item(System.String)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TempAssemblyCacheKey.Equals(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TypeDesc.#ctor(System.String,System.String,System.Xml.Schema.XmlSchemaType,System.Xml.Serialization.TypeKind,System.Xml.Serialization.TypeDesc,System.Xml.Serialization.TypeFlags)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="fullName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TypeDesc.#ctor(System.String,System.String,System.Xml.Schema.XmlSchemaType,System.Xml.Serialization.TypeKind,System.Xml.Serialization.TypeDesc,System.Xml.Serialization.TypeFlags,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="fullName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TypeDesc.#ctor(System.String,System.String,System.Xml.Serialization.TypeKind,System.Xml.Serialization.TypeDesc,System.Xml.Serialization.TypeFlags)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="fullName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TypeDesc.#ctor(System.Type,System.Boolean,System.Xml.Schema.XmlSchemaType,System.String,System.Xml.Serialization.TypeFlags)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TypeDesc.#ctor(System.Type,System.String,System.String,System.Xml.Serialization.TypeKind,System.Xml.Serialization.TypeDesc,System.Xml.Serialization.TypeFlags,System.Xml.Serialization.TypeDesc)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="fullName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TypeDesc.IsDerivedFrom(System.Xml.Serialization.TypeDesc)">
    <parameter name="baseTypeDesc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TypeScope.AddNonXsdPrimitive(System.Type,System.String,System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaFacet[],System.Xml.Serialization.TypeFlags)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="facets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TypeScope.AddPrimitive(System.Type,System.String,System.String,System.Xml.Serialization.TypeFlags)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TypeScope.AddSoapEncodedPrimitive(System.Type,System.String,System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.Serialization.TypeFlags)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TypeScope.GetAllMembers(System.Xml.Serialization.StructMapping)">
    <parameter name="mapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TypeScope.GetAllMembers(System.Xml.Serialization.StructMapping,System.Collections.ArrayList)">
    <parameter name="mapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TypeScope.GetArrayElementType(System.Type,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TypeScope.GetCollectionElementType(System.Type,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TypeScope.GetConstructorFlags(System.Type,System.Exception@)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TypeScope.GetEnumeratorElementType(System.Type,System.Xml.Serialization.TypeFlags@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TypeScope.GetTypeDesc(System.Xml.Schema.XmlSchemaSimpleType)">
    <parameter name="dataType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TypeScope.IsKnownType(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TypeScope.IsOptionalValue(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TypeScope.TypeName(System.Type)">
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Add(System.Xml.Serialization.XmlAnyElementAttribute)">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Contains(System.Xml.Serialization.XmlAnyElementAttribute)">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.CopyTo(System.Xml.Serialization.XmlAnyElementAttribute[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.IndexOf(System.Xml.Serialization.XmlAnyElementAttribute)">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlAnyElementAttribute)">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Remove(System.Xml.Serialization.XmlAnyElementAttribute)">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Add(System.Xml.Serialization.XmlArrayItemAttribute)">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Contains(System.Xml.Serialization.XmlArrayItemAttribute)">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.CopyTo(System.Xml.Serialization.XmlArrayItemAttribute[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.IndexOf(System.Xml.Serialization.XmlArrayItemAttribute)">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Insert(System.Int32,System.Xml.Serialization.XmlArrayItemAttribute)">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Remove(System.Xml.Serialization.XmlArrayItemAttribute)">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlAttributeComparer.Compare(System.Object,System.Object)">
    <parameter name="o2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="o1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.String,System.Xml.Serialization.XmlAttributes)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlAttributeOverrides.Add(System.Type,System.Xml.Serialization.XmlAttributes)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.Serialization.XmlAttributeOverrides.Item(System.Type,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlAttributes.#ctor(System.Reflection.ICustomAttributeProvider)">
    <parameter name="provider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlAttributes.GetAttr(System.Reflection.ICustomAttributeProvider,System.Type)">
    <parameter name="provider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlCountingReader.#ctor(System.Xml.XmlReader)">
    <parameter name="xmlReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlCountingReader.ReadToFollowing(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlCustomFormatter.ToChar(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlCustomFormatter.ToDateTime(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlCustomFormatter.ToEnum(System.String,System.Collections.Hashtable,System.String,System.Boolean)">
    <parameter name="val">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="vals">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlCustomFormatter.WriteArrayBase64(System.Xml.XmlWriter,System.Byte[],System.Int32,System.Int32)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlElementAttributes.Add(System.Xml.Serialization.XmlElementAttribute)">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlElementAttributes.Contains(System.Xml.Serialization.XmlElementAttribute)">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlElementAttributes.CopyTo(System.Xml.Serialization.XmlElementAttribute[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlElementAttributes.IndexOf(System.Xml.Serialization.XmlElementAttribute)">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlElementAttributes.Insert(System.Int32,System.Xml.Serialization.XmlElementAttribute)">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlElementAttributes.Remove(System.Xml.Serialization.XmlElementAttribute)">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlFacetComparer.Compare(System.Object,System.Object)">
    <parameter name="o2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="o1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlMapping.GenerateKey(System.Type,System.Xml.Serialization.XmlRootAttribute,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlMapping.IsShallow(System.Xml.Serialization.XmlMapping[])">
    <parameter name="mappings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlMemberMapping.GenerateTypeName(System.CodeDom.Compiler.CodeDomProvider)">
    <parameter name="codeProvider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlMembersMapping.#ctor(System.Xml.Serialization.TypeScope,System.Xml.Serialization.ElementAccessor,System.Xml.Serialization.XmlMappingAccess)">
    <parameter name="accessor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.AddUniqueAccessor(System.Xml.Serialization.INameScope,System.Xml.Serialization.Accessor)">
    <parameter name="scope">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="accessor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.AddUniqueAccessor(System.Xml.Serialization.MemberMapping,System.Xml.Serialization.INameScope,System.Xml.Serialization.INameScope,System.Boolean)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="elements">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.CheckAmbiguousChoice(System.Xml.Serialization.XmlAttributes,System.Type,System.String)">
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="accessorType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.CheckChoiceIdentifierMapping(System.Xml.Serialization.EnumMapping)">
    <parameter name="choiceMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.CheckContext(System.Xml.Serialization.TypeDesc,System.Xml.Serialization.XmlReflectionImporter.ImportContext)">
    <parameter name="typeDesc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.CheckNullable(System.Boolean,System.Xml.Serialization.TypeDesc,System.Xml.Serialization.TypeMapping)">
    <parameter name="typeDesc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.CheckTopLevelAttributes(System.Xml.Serialization.XmlAttributes,System.String)">
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.CountAtLevel(System.Xml.Serialization.XmlArrayItemAttributes,System.Int32)">
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.CreateArrayElementsFromAttributes(System.Xml.Serialization.ArrayMapping,System.Xml.Serialization.XmlArrayItemAttributes,System.Type,System.String,System.Xml.Serialization.RecursionLimiter)">
    <parameter name="arrayMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="arrayElementType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="limiter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.FindSpecifiedMember(System.String,System.Xml.Serialization.XmlReflectionMember[])">
    <parameter name="reflectionMembers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.GetAttributes(System.Type,System.Boolean)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.GetDefaultValue(System.Xml.Serialization.TypeDesc,System.Type,System.Xml.Serialization.XmlAttributes)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="fieldTypeDesc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.GetMappingName(System.Xml.Serialization.Mapping)">
    <parameter name="mapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportAccessorMapping(System.Xml.Serialization.MemberMapping,System.Xml.Serialization.FieldModel,System.Xml.Serialization.XmlAttributes,System.String,System.Type,System.Boolean,System.Boolean,System.Xml.Serialization.RecursionLimiter)">
    <parameter name="accessor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="model">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="limiter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="choiceIdentifierType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeType(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeType(System.Type,System.Xml.Serialization.RecursionLimiter)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="limiter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider)">
    <parameter name="provider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.IncludeTypes(System.Reflection.ICustomAttributeProvider,System.Xml.Serialization.RecursionLimiter)">
    <parameter name="provider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="limiter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.InitializeStructMembers(System.Xml.Serialization.StructMapping,System.Xml.Serialization.StructModel,System.Boolean,System.String,System.Xml.Serialization.RecursionLimiter)">
    <parameter name="mapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="model">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="limiter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.IsAnonymousType(System.Xml.Serialization.XmlAttributes,System.String)">
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.SetArrayMappingType(System.Xml.Serialization.ArrayMapping,System.String,System.Type)">
    <parameter name="mapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.SetBase(System.Xml.Serialization.SerializableMapping,System.Xml.XmlQualifiedName)">
    <parameter name="mapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="baseQname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.ValidationCallbackWithErrorCode(System.Object,System.Xml.Schema.ValidationEventArgs)">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.XsdTypeName(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.XsdTypeName(System.Type,System.Xml.Serialization.XmlAttributes,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaEnumerator.#ctor(System.Xml.Serialization.XmlSchemas)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaExporter.AddSchemaItem(System.Xml.Schema.XmlSchemaObject,System.String,System.String)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaExporter.AddXmlnsAnnotation(System.Xml.Schema.XmlSchemaComplexType,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaExporter.CheckForDuplicateType(System.Xml.Serialization.TypeMapping,System.String)">
    <parameter name="mapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportArrayMapping(System.Xml.Serialization.ArrayMapping,System.String,System.Xml.Schema.XmlSchemaElement)">
    <parameter name="mapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportAttributeAccessor(System.Xml.Schema.XmlSchemaComplexType,System.Xml.Serialization.AttributeAccessor,System.Boolean,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportDerivedMappings(System.Xml.Serialization.StructMapping)">
    <parameter name="mapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportElementAccessor(System.Xml.Schema.XmlSchemaGroupBase,System.Xml.Serialization.ElementAccessor,System.Boolean,System.Boolean,System.String)">
    <parameter name="group">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="accessor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportElementAccessors(System.Xml.Schema.XmlSchemaGroupBase,System.Xml.Serialization.ElementAccessor[],System.Boolean,System.Boolean,System.String)">
    <parameter name="group">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="accessors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportElementMapping(System.Xml.Schema.XmlSchemaElement,System.Xml.Serialization.Mapping,System.String,System.Boolean)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="mapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportMapping(System.Xml.Serialization.Mapping,System.String,System.Boolean)">
    <parameter name="mapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping)">
    <parameter name="xmlMembersMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportMembersMapping(System.Xml.Serialization.XmlMembersMapping,System.Boolean)">
    <parameter name="xmlMembersMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportRootIfNecessary(System.Xml.Serialization.TypeScope)">
    <parameter name="typeScope">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportSpecialMapping(System.Xml.Serialization.SpecialMapping,System.String,System.Boolean,System.Xml.Schema.XmlSchemaElement)">
    <parameter name="mapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportStructMapping(System.Xml.Serialization.StructMapping,System.String,System.Xml.Schema.XmlSchemaElement)">
    <parameter name="mapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMapping(System.Xml.Serialization.XmlTypeMapping)">
    <parameter name="xmlTypeMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaExporter.ExportTypeMembers(System.Xml.Schema.XmlSchemaComplexType,System.Xml.Serialization.MemberMapping[],System.String,System.String,System.Boolean,System.Boolean)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="members">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaExporter.SchemaContainsItem(System.Xml.Schema.XmlSchemaObject,System.String)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas)">
    <parameter name="schemas">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider,System.Xml.Serialization.ImportContext)">
    <parameter name="schemas">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeGenerationOptions,System.Xml.Serialization.ImportContext)">
    <parameter name="schemas">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeIdentifiers)">
    <parameter name="schemas">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.#ctor(System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.CodeIdentifiers,System.Xml.Serialization.CodeGenerationOptions)">
    <parameter name="schemas">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.AddScopeElement(System.Xml.Serialization.INameScope,System.Xml.Serialization.ElementAccessor,System.Boolean@,System.Boolean)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.AddScopeElements(System.Xml.Serialization.INameScope,System.Xml.Serialization.ElementAccessor[],System.Boolean@,System.Boolean)">
    <parameter name="elements">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.AttributeForm(System.String,System.Xml.Schema.XmlSchemaAttribute)">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.BaseTypeName(System.Xml.Schema.XmlSchemaSimpleType)">
    <parameter name="dataType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.ElementComparer.Compare(System.Object,System.Object)">
    <parameter name="o2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="o1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.ElementForm(System.String,System.Xml.Schema.XmlSchemaElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.GatherGroupChoices(System.Xml.Schema.XmlSchemaGroup,System.Xml.Serialization.NameTable,System.String,System.String,System.Boolean@,System.Boolean)">
    <parameter name="group">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="identifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.GatherGroupChoices(System.Xml.Schema.XmlSchemaParticle,System.Xml.Serialization.NameTable,System.String,System.String,System.Boolean@,System.Boolean)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="identifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.GenerateUniqueTypeName(System.String,System.String)">
    <parameter name="desiredName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.GetDataTypeSource(System.Xml.Schema.XmlSchemaSimpleType,System.Xml.Serialization.TypeFlags)">
    <parameter name="dataType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.GetEquivalentElements(System.Xml.Schema.XmlSchemaElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportAnyAttributeMember(System.Xml.Schema.XmlSchemaAnyAttribute,System.Xml.Serialization.CodeIdentifiers,System.Xml.Serialization.CodeIdentifiers)">
    <parameter name="members">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="membersScope">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportAttribute(System.Xml.Schema.XmlSchemaAttribute,System.String,System.String,System.Xml.Schema.XmlSchemaAttribute)">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="identifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="defaultValueProvider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportAttributeGroupMembers(System.Xml.Schema.XmlSchemaAttributeGroup,System.String,System.Xml.Serialization.CodeIdentifiers,System.Xml.Serialization.CodeIdentifiers,System.String)">
    <parameter name="group">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="members">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="membersScope">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="identifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportAttributeMember(System.Xml.Schema.XmlSchemaAttribute,System.String,System.Xml.Serialization.CodeIdentifiers,System.Xml.Serialization.CodeIdentifiers,System.String)">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="members">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="membersScope">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="identifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportDataType(System.Xml.Schema.XmlSchemaSimpleType,System.String,System.String,System.Type,System.Xml.Serialization.TypeFlags,System.Boolean)">
    <parameter name="dataType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportElement(System.Xml.Schema.XmlSchemaElement,System.String,System.Type,System.Type,System.String,System.Boolean)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="identifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="desiredMappingType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportElement(System.Xml.XmlQualifiedName,System.Type,System.Type)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="desiredMappingType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportElementMember(System.Xml.Schema.XmlSchemaElement,System.String,System.Xml.Serialization.CodeIdentifiers,System.Xml.Serialization.CodeIdentifiers,System.Xml.Serialization.INameScope,System.String,System.Boolean,System.Boolean@,System.Boolean,System.Boolean)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="members">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="membersScope">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="identifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportGroup(System.Xml.Schema.XmlSchemaGroupBase,System.String,System.Xml.Serialization.CodeIdentifiers,System.Xml.Serialization.CodeIdentifiers,System.Xml.Serialization.INameScope,System.String,System.Boolean,System.Boolean@,System.Boolean,System.Boolean,System.Boolean)">
    <parameter name="members">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="membersScope">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="identifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportGroupMembers(System.Xml.Schema.XmlSchemaParticle,System.String,System.Xml.Serialization.CodeIdentifiers,System.Xml.Serialization.CodeIdentifiers,System.Xml.Serialization.INameScope,System.String,System.Boolean,System.Boolean@,System.Boolean@,System.Boolean,System.Boolean)">
    <parameter name="members">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="membersScope">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="identifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportSubstitutionGroupMember(System.Xml.Schema.XmlSchemaElement,System.String,System.Xml.Serialization.CodeIdentifiers,System.Xml.Serialization.CodeIdentifiers,System.String,System.Boolean,System.Boolean@,System.Boolean)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="identifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportTextMember(System.Xml.Serialization.CodeIdentifiers,System.Xml.Serialization.CodeIdentifiers,System.Xml.XmlQualifiedName)">
    <parameter name="members">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="membersScope">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportType(System.Xml.XmlQualifiedName,System.Type,System.Type,System.Xml.Serialization.TypeFlags,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="desiredMappingType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportTypeMembers(System.Xml.Schema.XmlSchemaType,System.String,System.String,System.Xml.Serialization.CodeIdentifiers,System.Xml.Serialization.CodeIdentifiers,System.Xml.Serialization.INameScope,System.Boolean@,System.Boolean,System.Boolean)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="members">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="membersScope">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="typeNs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="identifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.ImportXmlnsDeclarationsMember(System.Xml.Schema.XmlSchemaType,System.Xml.Serialization.CodeIdentifiers,System.Xml.Serialization.CodeIdentifiers)">
    <parameter name="members">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="membersScope">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.IsNeedXmlSerializationAttributes(System.Xml.Serialization.ArrayMapping)">
    <parameter name="arrayMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.KeepXmlnsDeclarations(System.Xml.Schema.XmlSchemaType,System.String@)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaImporter.RunSchemaExtensions(System.Xml.Serialization.TypeMapping,System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.TypeFlags)">
    <parameter name="mapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="qname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaObjectComparer.Compare(System.Object,System.Object)">
    <parameter name="o2">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="o1">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaObjectComparer.NameOf(System.Xml.Schema.XmlSchemaObjectCollection)">
    <parameter name="items">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema,System.Boolean)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Schema.XmlSchema,System.Uri)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemas.Add(System.Xml.Serialization.XmlSchemas)">
    <parameter name="schemas">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemas.AddImport(System.Collections.IList,System.String)">
    <parameter name="schemas">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemas.AddName(System.Xml.Schema.XmlSchema)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemas.AddReference(System.Xml.Schema.XmlSchema)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemas.Contains(System.Xml.Schema.XmlSchema)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemas.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemas.CreateValidationException(System.Xml.Schema.XmlSchemaException,System.String)">
    <parameter name="exception">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemas.GetParentName(System.Xml.Schema.XmlSchemaObject)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemas.IndexOf(System.Xml.Schema.XmlSchema)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemas.Insert(System.Int32,System.Xml.Schema.XmlSchema)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemas.IsDataSet(System.Xml.Schema.XmlSchema)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemas.IsReference(System.Xml.Schema.XmlSchemaObject)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemas.Merge(System.Collections.IList,System.Xml.Schema.XmlSchema)">
    <parameter name="originals">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemas.Merge(System.Xml.Schema.XmlSchema)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemas.MergeFailedMessage(System.Xml.Schema.XmlSchemaObject,System.Xml.Schema.XmlSchemaObject,System.String)">
    <parameter name="dest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="src">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemas.Prepare(System.Xml.Schema.XmlSchema)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemas.Preprocess(System.Xml.Schema.XmlSchema)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemas.Remove(System.Xml.Schema.XmlSchema)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemas.RemoveName(System.Xml.Schema.XmlSchema)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemas.SetCache(System.Xml.Serialization.SchemaObjectCache,System.Boolean)">
    <parameter name="cache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationGeneratedCode.OnAssemblyResolve(System.Object,System.ResolveEventArgs)">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.AddReadCallback(System.String,System.String,System.Type,System.Xml.Serialization.XmlSerializationReadCallback)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.EnsureArrayIndex(System.Array,System.Int32,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="elementType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.FixupArrayRefs(System.Object)">
    <parameter name="fixup">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.Init(System.Xml.XmlReader,System.Xml.Serialization.XmlDeserializationEvents,System.String,System.Xml.Serialization.TempAssembly)">
    <parameter name="r">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.IsXmlnsAttribute(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.ParseArrayType(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.ParseWsdlArrayType(System.Xml.XmlAttribute)">
    <parameter name="attr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencedElement(System.String,System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.Boolean,System.String@)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="fixupReference">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String,System.String,System.String@)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="fixupReference">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(System.Xml.XmlQualifiedName)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedPrimitive(System.Xml.XmlQualifiedName,System.Boolean)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.ResolveDynamicAssembly(System.String)">
    <parameter name="assemblyFullName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.ShrinkArray(System.Array,System.Int32,System.Type,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="elementType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.ToChar(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDateTime(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.ToEnum(System.String,System.Collections.Hashtable,System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="h">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="typeName">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback(System.Type,System.String,System.String,System.Xml.Serialization.XmlSerializationWriteCallback)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="typeName">
    </parameter>
    <parameter name="typeNs">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.GetId(System.Object,System.Boolean)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.GetTypeEntry(System.Type)">
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.IsIdDefined(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.ResolveDynamicAssembly(System.String)">
    <parameter name="assemblyFullName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteArray(System.String,System.String,System.Object,System.Type)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.Byte[])">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.Byte[])">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String,System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElement(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.Xml.XmlQualifiedName)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[])">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[],System.Xml.XmlQualifiedName)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[])">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Xml.XmlQualifiedName)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteId(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteId(System.Object,System.Boolean)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral(System.String,System.String,System.Xml.XmlQualifiedName)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral(System.String,System.String,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.Byte[])">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="n">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type)">
    <parameter name="ambientType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="n">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean)">
    <parameter name="ambientType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="n">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean,System.Boolean)">
    <parameter name="ambientType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="n">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElement(System.Object,System.Type)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElement(System.String,System.String,System.Object,System.Type)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object,System.Boolean)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean,System.Xml.Serialization.XmlSerializerNamespaces)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive(System.String,System.String,System.Object,System.Boolean)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode,System.Object)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="defaultNamespace">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="extraTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="extraTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="defaultNamespace">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="extraTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="defaultNamespace">
    </parameter>
    <parameter name="location">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlRootAttribute)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Xml.Serialization.XmlTypeMapping)">
    <parameter name="xmlTypeMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializer.CanDeserialize(System.Xml.XmlReader)">
    <parameter name="xmlReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.IO.Stream)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader)">
    <parameter name="xmlReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String)">
    <parameter name="xmlReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="encodingStyle">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.String,System.Xml.Serialization.XmlDeserializationEvents)">
    <parameter name="xmlReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="encodingStyle">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializer.Deserialize(System.Xml.XmlReader,System.Xml.Serialization.XmlDeserializationEvents)">
    <parameter name="xmlReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializer.DeserializePrimitive(System.Xml.XmlReader,System.Xml.Serialization.XmlDeserializationEvents)">
    <parameter name="xmlReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializer.GetXmlSerializerAssemblyName(System.Type,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="defaultNamespace">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="textWriter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.IO.TextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
    <parameter name="textWriter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Object,System.Xml.Serialization.XmlSerializationWriter)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="xmlWriter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
    <parameter name="xmlWriter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String)">
    <parameter name="xmlWriter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="encodingStyle">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializer.Serialize(System.Xml.XmlWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)">
    <parameter name="xmlWriter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="encodingStyle">
    </parameter>
    <parameter name="id">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializer.XmlSerializerMappingKey.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Type[])">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="extraTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="extraTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="defaultNamespace">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="extraTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="defaultNamespace">
    </parameter>
    <parameter name="location">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlRootAttribute)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Xml.Serialization.XmlTypeMapping)">
    <parameter name="xmlTypeMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.Serialization.XmlSerializerNamespaces)">
    <parameter name="namespaces">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor(System.Xml.XmlQualifiedName[])">
    <parameter name="namespaces">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.AddInternal(System.String,System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.TernaryTreeReadOnly.FindCaseInsensitiveString(System.String)">
    <parameter name="stringToFind">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.TextEncodedRawTextWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Xml.XmlWriterSettings,System.Boolean)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.TextEncodedRawTextWriter.#ctor(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.TextEncodedRawTextWriter.WriteCData(System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.TextEncodedRawTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.TextEncodedRawTextWriter.WriteComment(System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.TextEncodedRawTextWriter.WriteEndElement(System.String,System.String,System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.TextEncodedRawTextWriter.WriteEntityRef(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.TextEncodedRawTextWriter.WriteFullEndElement(System.String,System.String,System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.TextEncodedRawTextWriter.WriteNamespaceDeclaration(System.String,System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.TextEncodedRawTextWriter.WriteProcessingInstruction(System.String,System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.TextEncodedRawTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.TextEncodedRawTextWriter.WriteRaw(System.String)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.TextEncodedRawTextWriter.WriteStartAttribute(System.String,System.String,System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.TextEncodedRawTextWriter.WriteStartElement(System.String,System.String,System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.TextEncodedRawTextWriter.WriteString(System.String)">
    <parameter name="textBlock">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.TextEncodedRawTextWriter.WriteWhitespace(System.String)">
    <parameter name="ws">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.TextEncodedRawTextWriter.WriteXmlDeclaration(System.String)">
    <parameter name="xmldecl">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.TextUtf8RawTextWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Xml.XmlWriterSettings,System.Boolean)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.TextUtf8RawTextWriter.WriteCData(System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.TextUtf8RawTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.TextUtf8RawTextWriter.WriteComment(System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.TextUtf8RawTextWriter.WriteEndElement(System.String,System.String,System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.TextUtf8RawTextWriter.WriteEntityRef(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.TextUtf8RawTextWriter.WriteFullEndElement(System.String,System.String,System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.TextUtf8RawTextWriter.WriteNamespaceDeclaration(System.String,System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.TextUtf8RawTextWriter.WriteProcessingInstruction(System.String,System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.TextUtf8RawTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.TextUtf8RawTextWriter.WriteRaw(System.String)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.TextUtf8RawTextWriter.WriteStartAttribute(System.String,System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.TextUtf8RawTextWriter.WriteStartElement(System.String,System.String,System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.TextUtf8RawTextWriter.WriteString(System.String)">
    <parameter name="textBlock">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.TextUtf8RawTextWriter.WriteWhitespace(System.String)">
    <parameter name="ws">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.TextUtf8RawTextWriter.WriteXmlDeclaration(System.String)">
    <parameter name="xmldecl">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Ucs4Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32)">
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Ucs4Decoder.GetFullChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
    <parameter name="chars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Ucs4Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
    <parameter name="chars">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Ucs4Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="chars">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Ucs4Encoding.GetBytes(System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Ucs4Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.UTF16Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32)">
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.UTF16Decoder.GetCharCount(System.Byte[],System.Int32,System.Int32,System.Boolean)">
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.ValidateNames.CreateName(System.String,System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.ValidateNames.IsReservedNamespace(System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.ValidateNames.ParseNameTestThrow(System.String,System.String@,System.String@)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.ValidateNames.ParseNCName(System.String,System.Int32)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.ValidateNames.ParseNCNameInternal(System.String,System.Boolean)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.ValidateNames.ParseQName(System.String,System.Int32,System.Int32@)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.ValidateNames.ParseQNameThrow(System.String,System.String@,System.String@)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.ValidateNames.SplitQName(System.String,System.String@,System.String@)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.ValidateNames.StartsWithXml(System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.ValidateNames.ThrowInvalidName(System.String,System.Int32,System.Int32)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.ValidateNames.ValidateName(System.String,System.String,System.String,System.Xml.XPath.XPathNodeType,System.Xml.ValidateNames.Flags)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.ValidateNames.ValidateNameInternal(System.String,System.String,System.String,System.Xml.XPath.XPathNodeType,System.Xml.ValidateNames.Flags,System.Boolean)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.ValidateNames.ValidateNameThrow(System.String,System.String,System.String,System.Xml.XPath.XPathNodeType,System.Xml.ValidateNames.Flags)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.ValidatingReaderNodeData.GetAtomizedNameWPrefix(System.Xml.XmlNameTable)">
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlAttribute.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
    <parameter name="doc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
    </parameter>
    <parameter name="namespaceURI">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlAttribute.#ctor(System.Xml.XmlName,System.Xml.XmlDocument)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="doc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlAttribute.ResetOwnerElementInElementIdAttrMap(System.String)">
    <parameter name="oldInnerText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlAttributeCollection.Detach(System.Xml.XmlAttribute)">
    <parameter name="attr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlAttributeCollection.FindNodeOffset(System.Xml.XmlAttribute)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlAttributeCollection.FindNodeOffsetNS(System.Xml.XmlAttribute)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlAttributeCollection.InsertParentIntoElementIdAttrMap(System.Xml.XmlAttribute)">
    <parameter name="attr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlAttributeCollection.RemoveDuplicateAttribute(System.Xml.XmlAttribute)">
    <parameter name="attr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlAttributeCollection.RemoveParentFromElementIdAttrMap(System.Xml.XmlAttribute)">
    <parameter name="attr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlAttributeCollection.ResetParentInElementIdAttrMap(System.String,System.String)">
    <parameter name="oldVal">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="newVal">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlAttributeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlAutoDetectWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Xml.XmlWriterSettings)">
    <parameter name="writerSettings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlAutoDetectWriter.#ctor(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
    <parameter name="textWriter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="writerSettings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlAutoDetectWriter.#ctor(System.Xml.XmlWriterSettings,System.Text.Encoding)">
    <parameter name="writerSettings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlAutoDetectWriter.IsHtmlTag(System.String)">
    <parameter name="tagName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlAutoDetectWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlAutoDetectWriter.WriteCData(System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlAutoDetectWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlAutoDetectWriter.WriteDocType(System.String,System.String,System.String,System.String)">
    <parameter name="sysid">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlAutoDetectWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlAutoDetectWriter.WriteRaw(System.String)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlAutoDetectWriter.WriteValue(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlAutoDetectWriter.WriteValue(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlAutoDetectWriter.WriteWhitespace(System.String)">
    <parameter name="ws">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlCDataSection.#ctor(System.String,System.Xml.XmlDocument)">
    <parameter name="doc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlCDataSection.WriteContentTo(System.Xml.XmlWriter)">
    <parameter name="w">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlCharacterData.#ctor(System.String,System.Xml.XmlDocument)">
    <parameter name="doc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlCharCheckingReader.ValidateQName(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlCharCheckingReader.ValidateQName(System.String,System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlCharCheckingWriter.InterleaveInvalidChars(System.String,System.Char,System.Char)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlCharCheckingWriter.ValidateNCName(System.String)">
    <parameter name="ncname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlCharCheckingWriter.ValidateQName(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlCharCheckingWriter.WriteCData(System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlCharCheckingWriter.WriteComment(System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlCharCheckingWriter.WriteDocType(System.String,System.String,System.String,System.String)">
    <parameter name="sysid">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlCharCheckingWriter.WriteProcessingInstruction(System.String,System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlCharCheckingWriter.WriteStartAttribute(System.String,System.String,System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlCharCheckingWriter.WriteStartElement(System.String,System.String,System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlCharCheckingWriter.WriteString(System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlCharType.IsName(System.String)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlCharType.IsNmToken(System.String)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlChildEnumerator.#ctor(System.Xml.XmlNode)">
    <parameter name="container">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlComment.#ctor(System.String,System.Xml.XmlDocument)">
    <parameter name="doc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlComment.WriteContentTo(System.Xml.XmlWriter)">
    <parameter name="w">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlComplianceUtil.IsValidLanguageID(System.Char[],System.Int32,System.Int32)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlComplianceUtil.StripSpaces(System.Char[],System.Int32,System.Int32@)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.StrEqual(System.Char[],System.Int32,System.Int32,System.String)">
    <parameter name="chars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="str2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.ToBoolean(System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.ToByte(System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.ToChar(System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.ToDateTime(System.String,System.Xml.XmlDateTimeSerializationMode)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="format">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String[])">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="formats">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.ToDecimal(System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.ToDouble(System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.ToGuid(System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.ToInt16(System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.ToInt32(System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.ToInt64(System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.ToInteger(System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.ToSByte(System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.ToSingle(System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.ToTimeSpan(System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.ToUInt16(System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.ToUInt32(System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.ToUInt64(System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDeclaration.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
    <parameter name="version">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="doc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="encoding">
    </parameter>
    <parameter name="standalone">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDeclaration.WriteContentTo(System.Xml.XmlWriter)">
    <parameter name="w">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.AddDefaultAttributes(System.Xml.XmlElement)">
    <parameter name="elem">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.AddElementWithId(System.String,System.Xml.XmlElement)">
    <parameter name="id">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.AddIdInfo(System.Xml.XmlName,System.Xml.XmlName)">
    <parameter name="eleName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.AppendChildForLoad(System.Xml.XmlNode,System.Xml.XmlDocument)">
    <parameter name="doc">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.CheckName(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.ConvertToNodeType(System.String)">
    <parameter name="nodeTypeString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.GetIDInfoByElement(System.Xml.XmlName)">
    <parameter name="eleName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.GetIDInfoByElement_(System.Xml.XmlName)">
    <parameter name="eleName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.GetSchemaElementDecl(System.Xml.XmlElement)">
    <parameter name="elem">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.ImportAttributes(System.Xml.XmlNode,System.Xml.XmlNode)">
    <parameter name="fromElem">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="toElem">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.ImportChildren(System.Xml.XmlNode,System.Xml.XmlNode,System.Boolean)">
    <parameter name="fromNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="toNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.Load(System.IO.Stream)">
    <parameter name="inStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.Load(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.LoadXml(System.String)">
    <parameter name="xml">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.RemoveElementWithId(System.String,System.Xml.XmlElement)">
    <parameter name="id">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.Save(System.IO.Stream)">
    <parameter name="outStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.Save(System.IO.TextWriter)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.Save(System.String)">
    <parameter name="filename">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.Save(System.Xml.XmlWriter)">
    <parameter name="w">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.SetDefaultNamespace(System.String,System.String,System.String@)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.Validate(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlNode)">
    <parameter name="nodeToValidate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocument.WriteTo(System.Xml.XmlWriter)">
    <parameter name="w">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocumentFragment.#ctor(System.Xml.XmlDocument)">
    <parameter name="ownerDocument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocumentFragment.WriteTo(System.Xml.XmlWriter)">
    <parameter name="w">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocumentType.#ctor(System.String,System.String,System.String,System.String,System.Xml.XmlDocument)">
    <parameter name="doc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
    </parameter>
    <parameter name="publicId">
    </parameter>
    <parameter name="systemId">
    </parameter>
    <parameter name="internalSubset">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDocumentType.WriteContentTo(System.Xml.XmlWriter)">
    <parameter name="w">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDOMTextWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
    <parameter name="w">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDOMTextWriter.#ctor(System.IO.TextWriter)">
    <parameter name="w">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDOMTextWriter.#ctor(System.String,System.Text.Encoding)">
    <parameter name="filename">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDOMTextWriter.WriteStartAttribute(System.String,System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDOMTextWriter.WriteStartElement(System.String,System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlDownloadManager.Remove(System.String)">
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlElement.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
    <parameter name="doc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
    </parameter>
    <parameter name="namespaceURI">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlElement.#ctor(System.Xml.XmlName,System.Boolean,System.Xml.XmlDocument)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="doc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlElement.SetAttribute(System.String,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlElement.SetAttribute(System.String,System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceURI">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlElementList.#ctor(System.Xml.XmlNode)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlElementList.#ctor(System.Xml.XmlNode,System.String)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlElementList.#ctor(System.Xml.XmlNode,System.String,System.String)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlElementList.ConcurrencyCheck(System.Xml.XmlNodeChangedEventArgs)">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlElementList.IsMatch(System.Xml.XmlNode)">
    <parameter name="curNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlElementListEnumerator.#ctor(System.Xml.XmlElementList)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlElementListListener.#ctor(System.Xml.XmlDocument,System.Xml.XmlElementList)">
    <parameter name="doc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlElementListListener.OnListChanged(System.Object,System.Xml.XmlNodeChangedEventArgs)">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEncodedRawTextWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Xml.XmlWriterSettings,System.Boolean)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEncodedRawTextWriter.#ctor(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEncodedRawTextWriter.#ctor(System.Xml.XmlWriterSettings,System.Boolean)">
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEncodedRawTextWriter.AmpEntity(System.Char*)">
    <parameter name="pDst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEncodedRawTextWriter.CarriageReturnEntity(System.Char*)">
    <parameter name="pDst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEncodedRawTextWriter.EncodeChar(System.Char*@,System.Char*,System.Char*@)">
    <parameter name="pSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pDst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEncodedRawTextWriter.EncodeSurrogate(System.Char*,System.Char*,System.Char*)">
    <parameter name="pSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pDst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEncodedRawTextWriter.GtEntity(System.Char*)">
    <parameter name="pDst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEncodedRawTextWriter.LineFeedEntity(System.Char*)">
    <parameter name="pDst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEncodedRawTextWriter.LtEntity(System.Char*)">
    <parameter name="pDst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEncodedRawTextWriter.QuoteEntity(System.Char*)">
    <parameter name="pDst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEncodedRawTextWriter.RawEndCData(System.Char*)">
    <parameter name="pDst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEncodedRawTextWriter.RawStartCData(System.Char*)">
    <parameter name="pDst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEncodedRawTextWriter.RawText(System.Char*,System.Char*)">
    <parameter name="pSrcBegin">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEncodedRawTextWriter.RawText(System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEncodedRawTextWriter.TabEntity(System.Char*)">
    <parameter name="pDst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEncodedRawTextWriter.ValidateContentChars(System.String,System.String,System.Boolean)">
    <parameter name="chars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEncodedRawTextWriter.WriteAttributeTextBlock(System.Char*,System.Char*)">
    <parameter name="pSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEncodedRawTextWriter.WriteCDataSection(System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEncodedRawTextWriter.WriteCommentOrPi(System.String,System.Int32)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEncodedRawTextWriter.WriteDocType(System.String,System.String,System.String,System.String)">
    <parameter name="sysid">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEncodedRawTextWriter.WriteElementTextBlock(System.Char*,System.Char*)">
    <parameter name="pSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEncodedRawTextWriter.WriteNamespaceDeclaration(System.String,System.String)">
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEncodedRawTextWriter.WriteRawWithCharChecking(System.Char*,System.Char*)">
    <parameter name="pSrcBegin">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEncodedRawTextWriter.WriteStartAttribute(System.String,System.String,System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEncodedRawTextWriterIndent.#ctor(System.IO.Stream,System.Text.Encoding,System.Xml.XmlWriterSettings,System.Boolean)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEncodedRawTextWriterIndent.#ctor(System.IO.TextWriter,System.Xml.XmlWriterSettings)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEncodedRawTextWriterIndent.Init(System.Xml.XmlWriterSettings)">
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEncodedRawTextWriterIndent.WriteBase64(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEncodedRawTextWriterIndent.WriteEndElement(System.String,System.String,System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEncodedRawTextWriterIndent.WriteFullEndElement(System.String,System.String,System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEncodedRawTextWriterIndent.WriteStartAttribute(System.String,System.String,System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEncodedRawTextWriterIndent.WriteStartElement(System.String,System.String,System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEntity.#ctor(System.String,System.String,System.String,System.String,System.String,System.Xml.XmlDocument)">
    <parameter name="doc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEntity.WriteContentTo(System.Xml.XmlWriter)">
    <parameter name="w">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEntity.WriteTo(System.Xml.XmlWriter)">
    <parameter name="w">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEntityReference.#ctor(System.String,System.Xml.XmlDocument)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="doc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEntityReference.ConstructBaseURI(System.String,System.String)">
    <parameter name="systemId">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEventCache.EventsToWriter(System.Xml.XmlWriter)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEventCache.WriteCData(System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEventCache.WriteChars(System.Char[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEventCache.WriteDocType(System.String,System.String,System.String,System.String)">
    <parameter name="sysid">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEventCache.WriteEndElement(System.String,System.String,System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEventCache.WriteEntityRef(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEventCache.WriteFullEndElement(System.String,System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEventCache.WriteNamespaceDeclaration(System.String,System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEventCache.WriteProcessingInstruction(System.String,System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEventCache.WriteRaw(System.Char[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEventCache.WriteRaw(System.String)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEventCache.WriteStartAttribute(System.String,System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEventCache.WriteStartElement(System.String,System.String,System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEventCache.WriteString(System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEventCache.WriteValue(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEventCache.WriteWhitespace(System.String)">
    <parameter name="ws">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEventCache.WriteXmlDeclaration(System.String)">
    <parameter name="xmldecl">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlException.#ctor(System.String,System.Int32,System.Int32)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlException.#ctor(System.String,System.String)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlException.#ctor(System.String,System.String,System.Exception,System.Xml.IXmlLineInfo)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlException.#ctor(System.String,System.String,System.Int32,System.Int32)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlException.#ctor(System.String,System.String,System.Int32,System.Int32,System.String)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlException.#ctor(System.String,System.String,System.String)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlException.#ctor(System.String,System.String,System.Xml.IXmlLineInfo)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlException.#ctor(System.String,System.String,System.Xml.IXmlLineInfo,System.String)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlException.#ctor(System.String,System.String[])">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlException.#ctor(System.String,System.String[],System.Exception,System.Int32,System.Int32)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlException.#ctor(System.String,System.String[],System.Exception,System.Int32,System.Int32,System.String)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlException.#ctor(System.String,System.String[],System.Int32,System.Int32)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlException.#ctor(System.String,System.String[],System.Int32,System.Int32,System.String)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlException.#ctor(System.String,System.String[],System.String)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlException.#ctor(System.String,System.String[],System.Xml.IXmlLineInfo)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlException.#ctor(System.String,System.String[],System.Xml.IXmlLineInfo,System.String)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlException.CreateMessage(System.String,System.String[],System.Int32,System.Int32)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlLinkedNode.#ctor(System.Xml.XmlDocument)">
    <parameter name="doc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlLoader.ExpandEntity(System.Xml.XmlEntity)">
    <parameter name="ent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlLoader.ExpandEntityReference(System.Xml.XmlEntityReference)">
    <parameter name="eref">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlLoader.Load(System.Xml.XmlDocument,System.Xml.XmlReader,System.Boolean)">
    <parameter name="doc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlLoader.LoadAttributeValue(System.Xml.XmlNode,System.Boolean)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlLoader.LoadDocSequence(System.Xml.XmlDocument)">
    <parameter name="parentDoc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlLoader.LoadDocumentType(System.Xml.Schema.SchemaInfo,System.Xml.XmlDocumentType)">
    <parameter name="dtNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlLoader.LoadInnerXmlAttribute(System.Xml.XmlAttribute,System.String)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="innerxmltext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlLoader.LoadInnerXmlElement(System.Xml.XmlElement,System.String)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="innerxmltext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlLoader.ParseDocumentType(System.Xml.XmlDocumentType)">
    <parameter name="dtNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlLoader.ParseDocumentType(System.Xml.XmlDocumentType,System.Boolean,System.Xml.XmlResolver)">
    <parameter name="dtNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlLoader.ParsePartialContent(System.Xml.XmlNode,System.String,System.Xml.XmlNodeType)">
    <parameter name="parentNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="innerxmltext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlLoader.RemoveDuplicateNamespace(System.Xml.XmlElement,System.Xml.XmlNamespaceManager,System.Boolean)">
    <parameter name="elem">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="mgr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNameEx.#ctor(System.String,System.String,System.String,System.Int32,System.Xml.XmlDocument,System.Xml.XmlName,System.Xml.Schema.IXmlSchemaInfo)">
    <parameter name="schemaInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNamespaceManager.HasNamespace(System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNamespaceManager.LookupNamespaceDecl(System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNode.#ctor(System.Xml.XmlDocument)">
    <parameter name="doc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNode.AppendChildText(System.Text.StringBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNode.CanInsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)">
    <parameter name="newChild">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNode.CanInsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)">
    <parameter name="newChild">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNode.CopyChildren(System.Xml.XmlDocument,System.Xml.XmlNode,System.Boolean)">
    <parameter name="container">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="doc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNode.GetNamespaceOfPrefixStrict(System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNode.GetPrefixOfNamespaceStrict(System.String)">
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNode.NestTextNodes(System.Xml.XmlNode,System.Xml.XmlNode)">
    <parameter name="nextNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNode.SplitName(System.String,System.String@,System.String@)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNode.UnnestTextNodes(System.Xml.XmlNode,System.Xml.XmlNode)">
    <parameter name="prevNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nextNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNode.WriteContentTo(System.Xml.XmlWriter)">
    <parameter name="w">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNode.WriteTo(System.Xml.XmlWriter)">
    <parameter name="w">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNodeReader.#ctor(System.Xml.XmlNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNodeReader.GetAttribute(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNodeReader.GetAttribute(System.String,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNodeReader.Init(System.Xml.XmlNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNodeReader.LookupNamespace(System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNodeReaderNavigator.#ctor(System.Xml.XmlNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNodeReaderNavigator.GetAttribute(System.String,System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNodeReaderNavigator.GetAttributeFromElement(System.Xml.XmlElement,System.String)">
    <parameter name="elem">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNodeReaderNavigator.GetAttributeFromElement(System.Xml.XmlElement,System.String,System.String)">
    <parameter name="elem">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNodeReaderNavigator.GetDeclarationAttr(System.Xml.XmlDeclaration,System.String)">
    <parameter name="decl">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNodeReaderNavigator.GetDocumentTypeAttr(System.Xml.XmlDocumentType,System.String)">
    <parameter name="docType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNodeReaderNavigator.MoveToAttribute(System.String,System.String)">
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNodeReaderNavigator.MoveToAttributeFromElement(System.Xml.XmlElement,System.String,System.String)">
    <parameter name="elem">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNodeReaderNavigator.MoveToNextSibling(System.Xml.XmlNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNotation.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
    <parameter name="doc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNotation.WriteContentTo(System.Xml.XmlWriter)">
    <parameter name="w">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNotation.WriteTo(System.Xml.XmlWriter)">
    <parameter name="w">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNullResolver.GetEntity(System.Uri,System.String,System.Type)">
    <parameter name="absoluteUri">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlProcessingInstruction.#ctor(System.String,System.String,System.Xml.XmlDocument)">
    <parameter name="doc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="target">
    </parameter>
    <parameter name="data">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlProcessingInstruction.WriteContentTo(System.Xml.XmlWriter)">
    <parameter name="w">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlQualifiedName.Atomize(System.Xml.XmlNameTable)">
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlQualifiedName.Equals(System.Object)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlRawWriter.LookupPrefix(System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlRawWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlRawWriter.WriteEndElement(System.String,System.String,System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlRawWriter.WriteFullEndElement(System.String,System.String,System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlRawWriter.WriteName(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlRawWriter.WriteNamespaceDeclaration(System.String,System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlRawWriter.WriteNmToken(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlRawWriter.WriteNode(System.Xml.XmlReader,System.Boolean)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlRawWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)">
    <parameter name="navigator">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlRawWriter.WriteQualifiedName(System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlRawWriter.WriteQualifiedName(System.String,System.String,System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlRawWriter.WriteXmlDeclaration(System.String)">
    <parameter name="xmldecl">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlRawWriterBase64Encoder.WriteChars(System.Char[],System.Int32,System.Int32)">
    <parameter name="chars">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.AddWrapper(System.Xml.XmlReader,System.Xml.XmlReaderSettings,System.Xml.XmlReaderSettings)">
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.CalcBufferSize(System.IO.Stream)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.CheckElement(System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.CreateReaderImpl(System.Xml.XmlReader,System.Xml.XmlReaderSettings)">
    <parameter name="baseReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.MoveToAttribute(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.MoveToAttribute(System.String,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.ReadToDescendant(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.ReadToFollowing(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.ReadToNextSibling(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.SetNamespacesFlag(System.Xml.XmlTextWriter)">
    <parameter name="xtw">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.WriteAttributeValue(System.Xml.XmlTextWriter)">
    <parameter name="xtw">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.WriteNode(System.Xml.XmlTextWriter,System.Boolean)">
    <parameter name="xtw">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlSignificantWhitespace.#ctor(System.String,System.Xml.XmlDocument)">
    <parameter name="doc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="strData">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlSignificantWhitespace.WriteContentTo(System.Xml.XmlWriter)">
    <parameter name="w">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlSqlBinaryReader.#ctor(System.IO.Stream,System.Byte[],System.Int32,System.String,System.Boolean,System.Xml.XmlReaderSettings)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlSqlBinaryReader.AddInitNamespace(System.String,System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlSqlBinaryReader.AttrInfo.GetLocalnameAndNamespaceUriAndHash(System.Xml.SecureStringHasher,System.String@,System.String@)">
    <parameter name="hasher">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlSqlBinaryReader.LocateAttribute(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlSqlBinaryReader.PushNamespace(System.String,System.String,System.Boolean)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlSqlBinaryReader.QName.Equals(System.Object)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlSqlBinaryReader.QName.GetNSHashCode(System.Xml.SecureStringHasher)">
    <parameter name="hasher">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlSqlBinaryReader.ValueAs(System.Xml.BinXmlToken,System.Type,System.Xml.IXmlNamespaceResolver)">
    <parameter name="returnType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceResolver">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlSubtreeReader.#ctor(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlSubtreeReader.AddNamespace(System.String,System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlText.#ctor(System.String,System.Xml.XmlDocument)">
    <parameter name="doc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlText.WriteContentTo(System.Xml.XmlWriter)">
    <parameter name="w">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextEncoder.Write(System.Char[],System.Int32,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextEncoder.WriteCharEntityImpl(System.String)">
    <parameter name="strVal">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextEncoder.WriteEntityRef(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextEncoder.WriteEntityRefImpl(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextEncoder.WriteRaw(System.Char[],System.Int32,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextEncoder.WriteRaw(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextEncoder.WriteStringFragment(System.String,System.Int32,System.Int32,System.Char[])">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="helperBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNameTable)">
    <parameter name="nt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
    <parameter name="xmlFragment">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReader.#ctor(System.IO.TextReader,System.Xml.XmlNameTable)">
    <parameter name="nt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReader.#ctor(System.String)">
    <parameter name="url">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="url">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.Stream,System.Xml.XmlNameTable)">
    <parameter name="nt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="url">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader,System.Xml.XmlNameTable)">
    <parameter name="nt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="url">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNameTable)">
    <parameter name="url">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
    <parameter name="xmlFragment">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReader.#ctor(System.Xml.XmlNameTable)">
    <parameter name="nt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReader.GetAttribute(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReader.GetAttribute(System.String,System.String)">
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReader.LookupNamespace(System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReader.MoveToAttribute(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReader.MoveToAttribute(System.String,System.String)">
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReader.ReadBase64(System.Byte[],System.Int32,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReader.ReadBinHex(System.Byte[],System.Int32,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReader.ReadChars(System.Char[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.#ctor(System.IO.Stream)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.#ctor(System.IO.Stream,System.Byte[],System.Int32,System.Xml.XmlReaderSettings,System.Uri,System.String,System.Xml.XmlParserContext,System.Boolean)">
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="baseUriStr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.#ctor(System.IO.Stream,System.Xml.XmlNameTable)">
    <parameter name="nt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
    <parameter name="xmlFragment">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.#ctor(System.IO.TextReader,System.Xml.XmlNameTable)">
    <parameter name="nt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.#ctor(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String,System.Xml.XmlParserContext)">
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.#ctor(System.String)">
    <parameter name="url">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.#ctor(System.String,System.IO.Stream)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.#ctor(System.String,System.IO.Stream,System.Xml.XmlNameTable)">
    <parameter name="nt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.#ctor(System.String,System.IO.TextReader,System.Xml.XmlNameTable)">
    <parameter name="nt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.#ctor(System.String,System.Xml.XmlNameTable)">
    <parameter name="url">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
    <parameter name="xmlFragment">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.#ctor(System.String,System.Xml.XmlParserContext,System.Xml.XmlReaderSettings)">
    <parameter name="xmlFragment">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.#ctor(System.Xml.XmlNameTable)">
    <parameter name="nt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.#ctor(System.Xml.XmlResolver,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)">
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.AddAttributeChunkToList(System.Xml.XmlTextReaderImpl.NodeData,System.Xml.XmlTextReaderImpl.NodeData,System.Xml.XmlTextReaderImpl.NodeData@)">
    <parameter name="attr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.AddDefaultAttribute(System.Xml.Schema.SchemaAttDef,System.Boolean)">
    <parameter name="attrDef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.AddDefaultAttribute(System.Xml.Schema.SchemaAttDef,System.Boolean,System.Xml.XmlTextReaderImpl.NodeData[])">
    <parameter name="attrDef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.AddNamespace(System.String,System.String,System.Xml.XmlTextReaderImpl.NodeData)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="attr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.AdjustLineInfo(System.Char[],System.Int32,System.Int32,System.Boolean,System.Xml.LineInfo@)">
    <parameter name="chars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.CheckEncoding(System.String)">
    <parameter name="newEncodingName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.DtdParserProxy.#ctor(System.String,System.String,System.String,System.String,System.String,System.Xml.XmlTextReaderImpl)">
    <parameter name="docTypeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.DtdParserProxy.System#Xml#IDtdParserAdapter#PushEntity(System.Xml.Schema.SchemaEntity,System.Int32)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.DtdParserProxy.System#Xml#IDtdParserAdapter#PushExternalSubset(System.String,System.String)">
    <parameter name="systemId">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.DtdParserProxy.System#Xml#IDtdParserAdapter#PushInternalDtd(System.String,System.String)">
    <parameter name="internalDtd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.DtdParserProxy.System#Xml#IDtdParserAdapter#Throw(System.Exception)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.DtdParserProxy_PushEntity(System.Xml.Schema.SchemaEntity,System.Int32)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.DtdParserProxy_PushExternalSubset(System.String,System.String)">
    <parameter name="systemId">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.DtdParserProxy_PushInternalDtd(System.String,System.String)">
    <parameter name="internalDtd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.DtdParserProxy_Throw(System.Exception)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.GetAttribute(System.String,System.String)">
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.GetIndexOfAttributeWithoutPrefix(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.GetIndexOfAttributeWithPrefix(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.IncrementalRead(System.Array,System.Int32,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.InitIncrementalRead(System.Xml.IncrementalReadDecoder)">
    <parameter name="decoder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.InitStreamInput(System.IO.Stream,System.Text.Encoding)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.InitStreamInput(System.String,System.IO.Stream,System.Text.Encoding)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.InitStreamInput(System.Uri,System.IO.Stream,System.Text.Encoding)">
    <parameter name="baseUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.InitStreamInput(System.Uri,System.String,System.IO.Stream,System.Byte[],System.Int32,System.Text.Encoding)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.InitStreamInput(System.Uri,System.String,System.IO.Stream,System.Text.Encoding)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.InitStringInput(System.String,System.Text.Encoding,System.String)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.MoveToAttribute(System.String,System.String)">
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.NodeData.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.NodeData.CopyTo(System.Int32,System.Xml.BufferBuilder)">
    <parameter name="sb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.NodeData.CopyTo(System.Xml.BufferBuilder)">
    <parameter name="sb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.NodeData.CopyToBinary(System.Xml.IncrementalReadDecoder,System.Int32)">
    <parameter name="decoder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.NodeData.CreateNameWPrefix(System.Xml.XmlNameTable)">
    <parameter name="nt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.NodeData.GetNameWPrefix(System.Xml.XmlNameTable)">
    <parameter name="nt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.NodeData.System#IComparable#CompareTo(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.NoNamespaceManager.AddNamespace(System.String,System.String)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.NoNamespaceManager.HasNamespace(System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.NoNamespaceManager.LookupPrefix(System.String)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.NoNamespaceManager.RemoveNamespace(System.String,System.String)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.OnDefaultNamespaceDecl(System.Xml.XmlTextReaderImpl.NodeData)">
    <parameter name="attr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.OnNamespaceDecl(System.Xml.XmlTextReaderImpl.NodeData)">
    <parameter name="attr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.OnXmlReservedAttribute(System.Xml.XmlTextReaderImpl.NodeData)">
    <parameter name="attr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.OpenUrlDelegate(System.Object)">
    <parameter name="xmlResolver">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.ParseAttributeValueSlow(System.Int32,System.Char,System.Xml.XmlTextReaderImpl.NodeData)">
    <parameter name="attr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.PushExternalEntity(System.Xml.Schema.SchemaEntity,System.Int32)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.PushInternalEntity(System.Xml.Schema.SchemaEntity,System.Int32)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.ReadBase64(System.Byte[],System.Int32,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.ReadBinHex(System.Byte[],System.Int32,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.ReadChars(System.Char[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.ReThrow(System.Exception,System.Int32,System.Int32)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.SendValidationEvent(System.Xml.Schema.XmlSeverityType,System.String,System.String,System.Int32,System.Int32)">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.SetupFromParserContext(System.Xml.XmlParserContext,System.Xml.XmlReaderSettings)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.SwitchEncoding(System.Text.Encoding)">
    <parameter name="newEncoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.Throw(System.Exception)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.Throw(System.Int32,System.String)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.Throw(System.Int32,System.String,System.String)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.Throw(System.Int32,System.String,System.String[])">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.Throw(System.String)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.Throw(System.String,System.Int32,System.Int32)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.Throw(System.String,System.String)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.Throw(System.String,System.String,System.Int32,System.Int32)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.Throw(System.String,System.String[])">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.ThrowTagMismatch(System.Xml.XmlTextReaderImpl.NodeData)">
    <parameter name="startTag">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.ThrowWithoutLineInfo(System.String)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.ThrowWithoutLineInfo(System.String,System.String)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.ThrowWithoutLineInfo(System.String,System.String[])">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.UriEqual(System.Uri,System.String,System.String,System.Xml.XmlResolver)">
    <parameter name="uri2Str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.XmlContext.#ctor(System.Xml.XmlTextReaderImpl.XmlContext)">
    <parameter name="previousContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextWriter.#ctor(System.IO.Stream,System.Text.Encoding)">
    <parameter name="w">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextWriter.#ctor(System.IO.TextWriter)">
    <parameter name="w">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextWriter.#ctor(System.String,System.Text.Encoding)">
    <parameter name="filename">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextWriter.InternalWriteName(System.String,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextWriter.InternalWriteProcessingInstruction(System.String,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextWriter.LookupNamespace(System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextWriter.LookupNamespaceInCurrentScope(System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextWriter.PushNamespace(System.String,System.String,System.Boolean)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextWriter.ValidateName(System.String,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextWriter.WriteCData(System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextWriter.WriteComment(System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextWriter.WriteProcessingInstruction(System.String,System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextWriter.WriteRaw(System.String)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlUnspecifiedAttribute.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
    <parameter name="doc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlUtf8RawTextWriter.#ctor(System.IO.Stream,System.Text.Encoding,System.Xml.XmlWriterSettings,System.Boolean)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlUtf8RawTextWriter.#ctor(System.Xml.XmlWriterSettings,System.Boolean)">
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlUtf8RawTextWriter.AmpEntity(System.Byte*)">
    <parameter name="pDst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlUtf8RawTextWriter.CarriageReturnEntity(System.Byte*)">
    <parameter name="pDst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlUtf8RawTextWriter.CharToUTF8(System.Char*@,System.Char*,System.Byte*@)">
    <parameter name="pSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pDst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlUtf8RawTextWriter.EncodeChar(System.Char*@,System.Char*,System.Byte*@)">
    <parameter name="pSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pDst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlUtf8RawTextWriter.EncodeMultibyteUTF8(System.Int32,System.Byte*)">
    <parameter name="pDst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlUtf8RawTextWriter.EncodeSurrogate(System.Char*,System.Char*,System.Byte*)">
    <parameter name="pSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pDst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlUtf8RawTextWriter.GtEntity(System.Byte*)">
    <parameter name="pDst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlUtf8RawTextWriter.InvalidXmlChar(System.Int32,System.Byte*,System.Boolean)">
    <parameter name="pDst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlUtf8RawTextWriter.LineFeedEntity(System.Byte*)">
    <parameter name="pDst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlUtf8RawTextWriter.LtEntity(System.Byte*)">
    <parameter name="pDst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlUtf8RawTextWriter.QuoteEntity(System.Byte*)">
    <parameter name="pDst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlUtf8RawTextWriter.RawEndCData(System.Byte*)">
    <parameter name="pDst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlUtf8RawTextWriter.RawStartCData(System.Byte*)">
    <parameter name="pDst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlUtf8RawTextWriter.RawText(System.Char*,System.Char*)">
    <parameter name="pSrcBegin">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlUtf8RawTextWriter.RawText(System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlUtf8RawTextWriter.TabEntity(System.Byte*)">
    <parameter name="pDst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlUtf8RawTextWriter.ValidateContentChars(System.String,System.String,System.Boolean)">
    <parameter name="chars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlUtf8RawTextWriter.WriteAttributeTextBlock(System.Char*,System.Char*)">
    <parameter name="pSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlUtf8RawTextWriter.WriteCDataSection(System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlUtf8RawTextWriter.WriteCommentOrPi(System.String,System.Int32)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlUtf8RawTextWriter.WriteDocType(System.String,System.String,System.String,System.String)">
    <parameter name="sysid">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlUtf8RawTextWriter.WriteElementTextBlock(System.Char*,System.Char*)">
    <parameter name="pSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlUtf8RawTextWriter.WriteNamespaceDeclaration(System.String,System.String)">
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlUtf8RawTextWriter.WriteRawWithCharChecking(System.Char*,System.Char*)">
    <parameter name="pSrcBegin">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlUtf8RawTextWriter.WriteStartAttribute(System.String,System.String,System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlUtf8RawTextWriterIndent.#ctor(System.IO.Stream,System.Text.Encoding,System.Xml.XmlWriterSettings,System.Boolean)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlUtf8RawTextWriterIndent.Init(System.Xml.XmlWriterSettings)">
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlUtf8RawTextWriterIndent.WriteEndElement(System.String,System.String,System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlUtf8RawTextWriterIndent.WriteFullEndElement(System.String,System.String,System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlUtf8RawTextWriterIndent.WriteStartAttribute(System.String,System.String,System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlUtf8RawTextWriterIndent.WriteStartElement(System.String,System.String,System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlValidatingReader.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
    <parameter name="xmlFragment">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlValidatingReader.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
    <parameter name="xmlFragment">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlValidatingReader.#ctor(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlValidatingReader.GetAttribute(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlValidatingReader.GetAttribute(System.String,System.String)">
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlValidatingReader.LookupNamespace(System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlValidatingReader.MoveToAttribute(System.String,System.String)">
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlValidatingReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlValidatingReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlValidatingReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlValidatingReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlValidatingReaderImpl.#ctor(System.IO.Stream,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
    <parameter name="xmlFragment">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlValidatingReaderImpl.#ctor(System.String,System.Xml.XmlNodeType,System.Xml.XmlParserContext)">
    <parameter name="xmlFragment">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlValidatingReaderImpl.#ctor(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlValidatingReaderImpl.#ctor(System.Xml.XmlReader,System.Xml.Schema.ValidationEventHandler,System.Boolean)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlValidatingReaderImpl.AddDefaultAttribute(System.Xml.Schema.SchemaAttDef)">
    <parameter name="attdef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlValidatingReaderImpl.InternalValidationCallback(System.Object,System.Xml.Schema.ValidationEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWellFormedWriter.#ctor(System.Xml.XmlWriter,System.Xml.XmlWriterSettings)">
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWellFormedWriter.AddAttribute(System.String,System.String,System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWellFormedWriter.CheckNCName(System.String)">
    <parameter name="ncname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWellFormedWriter.ElementScope.WriteEndElement(System.Xml.XmlRawWriter)">
    <parameter name="rawWriter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWellFormedWriter.ElementScope.WriteFullEndElement(System.Xml.XmlRawWriter)">
    <parameter name="rawWriter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWellFormedWriter.LookupNamespace(System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWellFormedWriter.LookupNamespaceIndex(System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWellFormedWriter.Namespace.WriteDecl(System.Xml.XmlWriter,System.Xml.XmlRawWriter)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWellFormedWriter.PushNamespace(System.String,System.String,System.Boolean)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWellFormedWriter.WriteCData(System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWellFormedWriter.WriteDocType(System.String,System.String,System.String,System.String)">
    <parameter name="sysid">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWellFormedWriter.WriteProcessingInstruction(System.String,System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWellFormedWriter.WriteRaw(System.String)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWellFormedWriter.WriteStartAttribute(System.String,System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWellFormedWriter.WriteStartElement(System.String,System.String,System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWellFormedWriter.WriteString(System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWellFormedWriter.WriteWhitespace(System.String)">
    <parameter name="ws">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWhitespace.#ctor(System.String,System.Xml.XmlDocument)">
    <parameter name="doc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="strData">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWhitespace.WriteContentTo(System.Xml.XmlWriter)">
    <parameter name="w">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.AddConformanceWrapper(System.Xml.XmlWriter,System.Xml.XmlWriterSettings,System.Xml.XmlWriterSettings)">
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriterSettings.#ctor(System.Xml.Xsl.Runtime.XmlQueryDataReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriterSettings.GetObjectData(System.Xml.Xsl.Runtime.XmlQueryDataWriter)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XmlEmptyNavigator.GetAttribute(System.String,System.String)">
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XmlEmptyNavigator.GetNamespace(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XmlEmptyNavigator.MoveToAttribute(System.String,System.String)">
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XmlEmptyNavigator.MoveToId(System.String)">
    <parameter name="id">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XmlEmptyNavigator.MoveToNamespace(System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathDocument.#ctor(System.IO.Stream)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathDocument.#ctor(System.String)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathDocument.#ctor(System.String,System.Xml.XmlSpace)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathDocument.#ctor(System.Xml.XmlNameTable)">
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathDocument.#ctor(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathDocument.#ctor(System.Xml.XmlReader,System.Xml.XmlSpace)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathDocument.AddIdElement(System.String,MS.Internal.Xml.Cache.XPathNode[],System.Int32)">
    <parameter name="id">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathDocument.LoadFromReader(System.Xml.XmlReader,System.Xml.XmlSpace)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathDocument.LookupIdElement(System.String,MS.Internal.Xml.Cache.XPathNode[]@)">
    <parameter name="id">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathException.#ctor(System.String,System.String[])">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathException.#ctor(System.String,System.String[],System.Exception)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathException.CreateMessage(System.String,System.String[])">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Collections.IComparer)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathExpression.AddSort(System.Object,System.Xml.XPath.XmlSortOrder,System.Xml.XPath.XmlCaseOrder,System.String,System.Xml.XPath.XmlDataType)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathExpression.PrintQuery(System.Xml.XmlWriter)">
    <parameter name="w">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathItem.ValueAs(System.Type)">
    <parameter name="returnType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathItem.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)">
    <parameter name="nsResolver">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="returnType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.AppendChildElement(System.String,System.String,System.String,System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.BuildSubtree(System.Xml.XmlReader,System.Xml.XmlWriter)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.CheckValidity(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)">
    <parameter name="schemas">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.CheckValidityHelper.ValidationCallback(System.Object,System.Xml.Schema.ValidationEventArgs)">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.CompareSiblings(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator)">
    <parameter name="n1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="n2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.CreateAttribute(System.String,System.String,System.String,System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.GetDepth(System.Xml.XPath.XPathNavigator)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.GetValidatingReader(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler,System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaElement,System.Xml.Schema.XmlSchemaAttribute)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.InsertElementAfter(System.String,System.String,System.String,System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.InsertElementBefore(System.String,System.String,System.String,System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.Matches(System.String)">
    <parameter name="xpath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.Matches(System.Xml.XPath.XPathExpression)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.MoveToAttribute(System.String,System.String)">
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.MoveToId(System.String)">
    <parameter name="id">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.MoveToNamespace(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.PrependChildElement(System.String,System.String,System.String,System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)">
    <parameter name="nsResolver">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.WriteSubtree(System.Xml.XmlWriter)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigatorKeyComparer.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)">
    <parameter name="obj2">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="obj1">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigatorKeyComparer.System#Collections#IEqualityComparer#GetHashCode(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigatorReader.GetAttribute(System.String,System.String)">
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigatorReader.GetNamespaceByIndex(System.Xml.XPath.XPathNavigator,System.Int32,System.Int32@)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigatorReader.LookupNamespace(System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigatorReader.MoveToAttribute(System.String,System.String)">
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNodeIterator.Enumerator.#ctor(System.Xml.XPath.XPathNodeIterator)">
    <parameter name="original">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPathNodeList.GetNode(System.Xml.XPath.XPathNavigator)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XsdCachingReader.GetAttribute(System.String,System.String)">
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XsdCachingReader.GetAttributeIndexWithoutPrefix(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XsdCachingReader.GetAttributeIndexWithPrefix(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.XsdCachingReader.Item(System.String,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceURI">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XsdCachingReader.MoveToAttribute(System.String,System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XsdValidatingReader.#ctor(System.Xml.XmlReader,System.Xml.XmlResolver,System.Xml.XmlReaderSettings)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="readerSettings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XsdValidatingReader.#ctor(System.Xml.XmlReader,System.Xml.XmlResolver,System.Xml.XmlReaderSettings,System.Xml.Schema.XmlSchemaObject)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="readerSettings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XsdValidatingReader.CachingCallBack(System.Xml.XsdCachingReader)">
    <parameter name="cachingReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XsdValidatingReader.MoveToAttribute(System.String,System.String)">
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XsdValidatingReader.ReturnBoxedValue(System.Object,System.Xml.Schema.XmlSchemaType,System.Boolean)">
    <parameter name="xmlType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XsdValidatingReader.SetupValidator(System.Xml.XmlReaderSettings,System.Xml.XmlReader,System.Xml.Schema.XmlSchemaObject)">
    <parameter name="readerSettings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslCompiledTransform.CheckInput(System.Object)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslCompiledTransform.CompileXsltToQil(System.Object,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)">
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Reflection.MethodInfo,System.Byte[],System.Type[])">
    <parameter name="executeMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="queryData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="earlyBoundTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.String)">
    <parameter name="stylesheetUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.String,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)">
    <parameter name="stylesheetUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Type)">
    <parameter name="compiledStylesheet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader)">
    <parameter name="stylesheet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)">
    <parameter name="stylesheet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable)">
    <parameter name="stylesheet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslCompiledTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)">
    <parameter name="stylesheet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslCompiledTransform.LoadInternal(System.Object,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)">
    <parameter name="stylesheet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslCompiledTransform.PrintQil(System.Object,System.Xml.XmlWriter,System.Boolean,System.Boolean,System.Boolean)">
    <parameter name="xw">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="qil">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslCompiledTransform.TestCompile(System.Object,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver)">
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.String)">
    <parameter name="inputUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="resultsFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.XmlWriter)">
    <parameter name="inputUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="results">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
    <parameter name="inputUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="results">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
    <parameter name="inputUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="results">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
    <parameter name="inputUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="results">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.String,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)">
    <parameter name="results">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.XmlWriter)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="results">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="results">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="results">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="results">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XmlReader,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="results">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.XmlWriter)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="results">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="results">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="results">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="results">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltArgumentList.AddExtensionObject(System.String,System.Object)">
    <parameter name="namespaceUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="extension">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltArgumentList.AddParam(System.String,System.String,System.Object)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltArgumentList.CheckArgumentNull(System.Object,System.String)">
    <parameter name="param">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltArgumentList.GetExtensionObject(System.String)">
    <parameter name="namespaceUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltArgumentList.RemoveExtensionObject(System.String)">
    <parameter name="namespaceUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltCompileException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltCompileException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltContext.#ctor(System.Xml.NameTable)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltContext.PreserveWhitespace(System.Xml.XPath.XPathNavigator)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltException.#ctor(System.String,System.String[],System.String,System.Int32,System.Int32,System.Exception)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltException.CreateMessage(System.String,System.String[],System.String,System.Int32,System.Int32)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslTransform.Compile(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)">
    <parameter name="stylesheet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslTransform.Load(System.String)">
    <parameter name="url">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)">
    <parameter name="url">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)">
    <parameter name="stylesheet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)">
    <parameter name="stylesheet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)">
    <parameter name="stylesheet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)">
    <parameter name="stylesheet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)">
    <parameter name="stylesheet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)">
    <parameter name="stylesheet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)">
    <parameter name="stylesheet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)">
    <parameter name="stylesheet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)">
    <parameter name="stylesheet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String)">
    <parameter name="inputfile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="outputfile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)">
    <parameter name="inputfile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="outputfile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="output">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="output">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="output">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="output">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="output">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="output">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)">
    <parameter name="output">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)">
    <parameter name="output">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)">
    <parameter name="output">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)">
    <parameter name="output">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)">
    <parameter name="output">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)">
    <parameter name="output">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DtdParser.Initialize(System.Xml.IDtdParserAdapter)">
    <parameter name="readerAdapter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DtdParser.InitializeFreeFloatingDtd(System.String,System.String,System.String,System.String,System.String,System.Xml.IDtdParserAdapter)">
    <parameter name="docTypeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="adapter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DtdParser.ParseAttlistDefault(System.Xml.Schema.SchemaAttDef,System.Boolean)">
    <parameter name="attrDef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DtdParser.ParseAttlistType(System.Xml.Schema.SchemaAttDef,System.Xml.Schema.SchemaElementDecl,System.Boolean)">
    <parameter name="attrDef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="elementDecl">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DtdParser.System#Xml#IDtdParser#ParseFreeFloatingDtd(System.String,System.String,System.String,System.String,System.String,System.Xml.IDtdParserAdapter)">
    <parameter name="docTypeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="adapter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DtdParser.System#Xml#IDtdParser#ParseInternalDtd(System.Xml.IDtdParserAdapter,System.Boolean)">
    <parameter name="adapter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DtdParser.ThrowInvalidChar(System.Char[],System.Int32,System.Int32)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.DtdParser.ThrowInvalidChar(System.Int32,System.String,System.Int32)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.NameTable.TextEquals(System.String,System.Char[],System.Int32,System.Int32)">
    <parameter name="str1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="str2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlUntypedStringConverter.FromString(System.String,System.Type,System.Xml.IXmlNamespaceResolver)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="nsResolver">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlUntypedStringConverter.QNameToString(System.Xml.XmlQualifiedName,System.Xml.IXmlNamespaceResolver)">
    <parameter name="qname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlUntypedStringConverter.StringToDateTime(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlUntypedStringConverter.StringToDateTimeOffset(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlUntypedStringConverter.StringToDuration(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlUntypedStringConverter.ToString(System.Object,System.Xml.IXmlNamespaceResolver)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.ValidateNames.IsNameNoNamespaces(System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.ValidateNames.IsNmtokenNoNamespaces(System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.ValidateNames.ParseNameNoNamespaces(System.String,System.Int32)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.ValidateNames.ParseNCName(System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.ValidateNames.ParseNmtokenNoNamespaces(System.String,System.Int32)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlCharCheckingReader.CheckWhitespace(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlCharCheckingWriter.WriteWhitespace(System.String)">
    <parameter name="ws">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlCharType.IsOnlyDigits(System.Char[],System.Int32,System.Int32)">
    <parameter name="chars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlCharType.IsOnlyDigits(System.String,System.Int32,System.Int32)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlCharType.SetProperties(System.String,System.Byte)">
    <parameter name="ranges">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEncodedRawTextWriter.#ctor(System.IO.Stream,System.Xml.XmlWriterSettings)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEncodedRawTextWriter.#ctor(System.Xml.XmlWriterSettings)">
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlEncodedRawTextWriterIndent.#ctor(System.IO.Stream,System.Xml.XmlWriterSettings)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlRawWriter.WriteStartNamespaceDeclaration(System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.ReadStartElement(System.String,System.String)">
    <parameter name="localname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.WriteAttributeValue(System.Xml.XmlWriter)">
    <parameter name="xtw">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.WriteNode(System.Xml.XmlWriter,System.Boolean)">
    <parameter name="xtw">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlResolver.SupportsType(,System.Type)">
    <parameter name="absoluteUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlSubtreeReader.CheckBuffer(System.Array,System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.#ctor(System.IO.Stream,System.Byte[],System.Int32,System.Xml.XmlReaderSettings,,System.String,System.Xml.XmlParserContext,System.Boolean)">
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="baseUriStr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.AddDefaultAttributeDtd(System.Xml.IDtdDefaultAttributeInfo,System.Boolean,System.Xml.XmlTextReaderImpl.NodeData[])">
    <parameter name="defAttrInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.AdjustLineInfo(System.Char*,System.Int32,System.Boolean,System.Xml.LineInfo@)">
    <parameter name="pChars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.BlockCopy(System.Byte[],System.Int32,System.Byte[],System.Int32,System.Int32)">
    <parameter name="src">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="dst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.BlockCopyChars(System.Char[],System.Int32,System.Char[],System.Int32,System.Int32)">
    <parameter name="src">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="dst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.DtdDefaultAttributeInfoToNodeDataComparer.Compare(System.Object,System.Object)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.DtdParserProxy.System#Xml#IDtdParserAdapter#ParseNumericCharRef(System.Xml.BufferBuilder)">
    <parameter name="internalSubsetBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.DtdParserProxy.System#Xml#IDtdParserAdapter#PushEntity(System.Xml.IDtdEntityInfo,System.Int32@)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.DtdParserProxy_ParseNumericCharRef(System.Xml.BufferBuilder)">
    <parameter name="internalSubsetBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.DtdParserProxy_PushEntity(System.Xml.IDtdEntityInfo,System.Int32@)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.InitStreamInput(,System.IO.Stream,System.Text.Encoding)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.InitStreamInput(,System.String,System.IO.Stream,System.Byte[],System.Int32,System.Text.Encoding)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.OpenAndPush">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.ParseNumericCharRef(System.Boolean,System.Xml.BufferBuilder,System.Xml.XmlTextReaderImpl.EntityType@)">
    <parameter name="internalSubsetBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.ParseNumericCharRefInline(System.Int32,System.Boolean,System.Xml.BufferBuilder,System.Int32@,System.Xml.XmlTextReaderImpl.EntityType@)">
    <parameter name="internalSubsetBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.PushExternalEntity(System.Xml.IDtdEntityInfo)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.PushInternalEntity(System.Xml.IDtdEntityInfo)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.RegisterEntity(System.Xml.IDtdEntityInfo)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.StripSpaces(System.Char[],System.Int32,System.Int32@)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.Throw(System.String,System.String,System.Exception)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.Throw(System.String,System.String[],System.Exception)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.ThrowInvalidChar(System.Char[],System.Int32,System.Int32)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.ThrowWithoutLineInfo(System.String,System.String[],System.Exception)">
    <parameter name="res">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlUtf8RawTextWriter.#ctor(System.IO.Stream,System.Xml.XmlWriterSettings)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlUtf8RawTextWriter.#ctor(System.Xml.XmlWriterSettings)">
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlUtf8RawTextWriterIndent.#ctor(System.IO.Stream,System.Xml.XmlWriterSettings)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWellFormedWriter.AttributeValueCache.Replay(System.Xml.XmlWriter)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWellFormedWriter.PushNamespaceExplicit(System.String,System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWellFormedWriter.PushNamespaceImplicit(System.String,System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWellFormedWriter.WriteComment(System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWellFormedWriter.WriteValue(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWellFormedWriter.WriteValue(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteCData(System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteComment(System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="sysid">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="pubid">
    </parameter>
    <parameter name="subset">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteEntityRef(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteName(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteNmToken(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteRaw(System.String)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteStartElement(System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteString(System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteValue(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteWhitespace(System.String)">
    <parameter name="ws">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[])">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.IO.Stream)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.String)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Remove(System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)">
    <parameter name="relativeUri">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
    <parameter name="schemaUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="targetNamespace">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="extraTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.Add(System.String,System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="ns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
    <parameter name="returnType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceResolver">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)">
    <parameter name="returnType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="namespaceResolver">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)">
    <parameter name="absoluteUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)">
    <parameter name="absoluteUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.Policy.Evidence)">
    <parameter name="evidence">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReaderImpl.PushExternalEntityOrSubset(System.String,System.String,System.String,System.Uri@,System.String)">
    <parameter name="systemId">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextWriter.WriteWhitespace(System.String)">
    <parameter name="ws">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteNameAsync(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)">
    <parameter name="navigator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteRawAsync(System.String)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteStartAttributeAsync(System.String,System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteStringAsync(System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)">
    <parameter name="ws">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XslCompiledTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="results">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.ToDateTime(System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String[])">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="formats">
    </parameter>
  </member>
  <member name="M:System.Xml.NameTable.Add(System.Char[],System.Int32,System.Int32)">
    <parameter name="key">
    </parameter>
  </member>
  <member name="M:System.Xml.NameTable.Add(System.String)">
    <parameter name="key">
    </parameter>
  </member>
  <member name="M:System.Xml.NameTable.Get(System.Char[],System.Int32,System.Int32)">
    <parameter name="key">
    </parameter>
  </member>
  <member name="M:System.Xml.NameTable.Get(System.String)">
    <parameter name="value">
    </parameter>
  </member>
  <member name="P:System.Xml.XmlAttributeCollection.ItemOf(System.String,System.String)">
    <parameter name="localName">
    </parameter>
    <parameter name="namespaceURI">
    </parameter>
  </member>
  <member name="P:System.Xml.XmlAttributeCollection.ItemOf(System.String)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlElement.HasAttribute(System.String,System.String)">
    <parameter name="localName">
    </parameter>
    <parameter name="namespaceURI">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlElement.HasAttribute(System.String)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlElement.RemoveAttribute(System.String,System.String)">
    <parameter name="localName">
    </parameter>
    <parameter name="namespaceURI">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlElement.RemoveAttribute(System.String)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlImplementation.HasFeature(System.String,System.String)">
    <parameter name="strFeature">
    </parameter>
    <parameter name="strVersion">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlNode.Supports(System.String,System.String)">
    <parameter name="feature">
    </parameter>
    <parameter name="version">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace,System.Text.Encoding)">
    <parameter name="docTypeName">
    </parameter>
    <parameter name="pubId">
    </parameter>
    <parameter name="internalSubset">
    </parameter>
    <parameter name="baseURI">
    </parameter>
    <parameter name="xmlLang">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.String,System.String,System.String,System.String,System.String,System.Xml.XmlSpace)">
    <parameter name="docTypeName">
    </parameter>
    <parameter name="pubId">
    </parameter>
    <parameter name="internalSubset">
    </parameter>
    <parameter name="baseURI">
    </parameter>
    <parameter name="xmlLang">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace,System.Text.Encoding)">
    <parameter name="xmlLang">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlParserContext.#ctor(System.Xml.XmlNameTable,System.Xml.XmlNamespaceManager,System.String,System.Xml.XmlSpace)">
    <parameter name="xmlLang">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlQualifiedName.ToString(System.String,System.String)">
    <parameter name="name">
    </parameter>
    <parameter name="ns">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlQualifiedName.#ctor(System.String,System.String)">
    <parameter name="name">
    </parameter>
    <parameter name="ns">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlQualifiedName.#ctor(System.String)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.IsStartElement(System.String,System.String)">
    <parameter name="localname">
    </parameter>
    <parameter name="ns">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.IsStartElement(System.String)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.ReadElementString(System.String,System.String)">
    <parameter name="localName">
    </parameter>
    <parameter name="namespaceURI">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.ReadElementString(System.String)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlReader.ReadStartElement(System.String)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)">
    <parameter name="role">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)">
    <parameter name="relativeUri">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.String)">
    <parameter name="securityUrl">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextReader.#ctor(System.String,System.IO.TextReader)">
    <parameter name="url">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextWriter.LookupPrefix(System.String)">
    <parameter name="ns">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
    <parameter name="buffer">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)">
    <parameter name="name">
    </parameter>
    <parameter name="pubid">
    </parameter>
    <parameter name="sysid">
    </parameter>
    <parameter name="subset">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextWriter.WriteEntityRef(System.String)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextWriter.WriteName(System.String)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextWriter.WriteNmToken(System.String)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextWriter.WriteQualifiedName(System.String,System.String)">
    <parameter name="localName">
    </parameter>
    <parameter name="ns">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
    <parameter name="buffer">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)">
    <parameter name="prefix">
    </parameter>
    <parameter name="localName">
    </parameter>
    <parameter name="ns">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextWriter.WriteStartElement(System.String,System.String,System.String)">
    <parameter name="prefix">
    </parameter>
    <parameter name="localName">
    </parameter>
    <parameter name="ns">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
    <parameter name="lowChar">
    </parameter>
    <parameter name="highChar">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlUrlResolver.GetEntity(System.Uri,System.String,System.Type)">
    <parameter name="role">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlUrlResolver.ResolveUri(System.Uri,System.String)">
    <parameter name="relativeUri">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)">
    <parameter name="ch">
    </parameter>
  </member>
  <member name="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
    <parameter name="lowChar">
    </parameter>
    <parameter name="highChar">
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaCollection.Contains(System.String)">
    <parameter name="ns">
    </parameter>
  </member>
  <member name="P:System.Xml.Schema.XmlSchemaCollection.Item(System.String)">
    <parameter name="ns">
    </parameter>
  </member>
  <member name="M:System.Xml.Schema.XmlSchemaSet.Contains(System.String)">
    <parameter name="targetNamespace">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.Xml.Serialization.SoapAttributeOverrides,System.String)">
    <parameter name="defaultNamespace">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SoapReflectionImporter.#ctor(System.String)">
    <parameter name="defaultNamespace">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String,System.String)">
    <parameter name="typeName">
    </parameter>
    <parameter name="ns">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SoapTypeAttribute.#ctor(System.String)">
    <parameter name="typeName">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String,System.String)">
    <parameter name="name">
    </parameter>
    <parameter name="ns">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlAnyElementAttribute.#ctor(System.String)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlArrayAttribute.#ctor(System.String)">
    <parameter name="elementName">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String,System.Type)">
    <parameter name="elementName">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlArrayItemAttribute.#ctor(System.String)">
    <parameter name="elementName">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlAttributeAttribute.#ctor(System.String,System.Type)">
    <parameter name="attributeName">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlChoiceIdentifierAttribute.#ctor(System.String)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)">
    <parameter name="elementName">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)">
    <parameter name="elementName">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlEnumAttribute.#ctor(System.String)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlMapping.SetKey(System.String)">
    <parameter name="key">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.Xml.Serialization.XmlAttributeOverrides,System.String)">
    <parameter name="defaultNamespace">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.#ctor(System.String)">
    <parameter name="defaultNamespace">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlRootAttribute.#ctor(System.String)">
    <parameter name="elementName">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemaProviderAttribute.#ctor(System.String)">
    <parameter name="methodName">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSchemas.Contains(System.String)">
    <parameter name="targetNamespace">
    </parameter>
  </member>
  <member name="P:System.Xml.Serialization.XmlSchemas.Item(System.String)">
    <parameter name="ns">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.AddTarget(System.String,System.Object)">
    <parameter name="id">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.GetArrayLength(System.String,System.String)">
    <parameter name="name">
    </parameter>
    <parameter name="ns">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReference(System.String@)">
    <parameter name="fixupReference">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadReferencingElement(System.String@)">
    <parameter name="fixupReference">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.ToDate(System.String)">
    <parameter name="value">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.ToTime(System.String)">
    <parameter name="value">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownAttribute(System.Object,System.Xml.XmlAttribute,System.String)">
    <parameter name="qnames">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownElement(System.Object,System.Xml.XmlElement,System.String)">
    <parameter name="qnames">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.UnknownNode(System.Object,System.String)">
    <parameter name="qnames">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.UnreferencedObject(System.String,System.Object)">
    <parameter name="id">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.Fixup.#ctor(System.Object,System.Xml.Serialization.XmlSerializationFixupCallback,System.String[])">
    <parameter name="ids">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.FromChar(System.Char)">
    <parameter name="value">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String,System.String)">
    <parameter name="name">
    </parameter>
    <parameter name="ns">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String,System.String)">
    <parameter name="name">
    </parameter>
    <parameter name="ns">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String,System.String)">
    <parameter name="name">
    </parameter>
    <parameter name="ns">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String)">
    <parameter name="name">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteRpcResult(System.String,System.String)">
    <parameter name="name">
    </parameter>
    <parameter name="ns">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.String)">
    <parameter name="value">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.WriteXsiType(System.String,System.String)">
    <parameter name="name">
    </parameter>
    <parameter name="ns">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String,System.String)">
    <parameter name="assemblyName">
    </parameter>
    <parameter name="codeBase">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializerAssemblyAttribute.#ctor(System.String)">
    <parameter name="assemblyName">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlTypeAttribute.#ctor(System.String)">
    <parameter name="typeName">
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.MoveToChild(System.String,System.String)">
    <parameter name="localName">
    </parameter>
    <parameter name="namespaceURI">
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.String,System.String,System.Xml.XPath.XPathNavigator)">
    <parameter name="localName">
    </parameter>
    <parameter name="namespaceURI">
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.String,System.String)">
    <parameter name="localName">
    </parameter>
    <parameter name="namespaceURI">
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.MoveToNext(System.String,System.String)">
    <parameter name="localName">
    </parameter>
    <parameter name="namespaceURI">
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltArgumentList.GetParam(System.String,System.String)">
    <parameter name="name">
    </parameter>
    <parameter name="namespaceUri">
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltArgumentList.RemoveParam(System.String,System.String)">
    <parameter name="name">
    </parameter>
    <parameter name="namespaceUri">
    </parameter>
  </member>
  <member name="M:System.Xml.Xsl.XsltContext.CompareDocument(System.String,System.String)">
    <parameter name="baseUri">
    </parameter>
    <parameter name="nextbaseUri">
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.CreateAssemblyBuilder(System.AppDomain,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="appDomain">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.CreateModuleBuilder(System.Reflection.Emit.AssemblyBuilder,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="assemblyBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.CreateTypeBuilder(System.Reflection.Emit.ModuleBuilder,System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="moduleBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.DeclareLocal(System.Type,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.For(System.Reflection.Emit.LocalBuilder,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.LoadMember(System.Object,System.Reflection.MemberInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="memberInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.LoadMember(System.Reflection.MemberInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="memberInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.LoadMemberAddress(System.Reflection.MemberInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="memberInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.NotSupported(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.PopIfState">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Serialization.CodeGenerator.ReturnLocal">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Serialization.ConstantModel.Name">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Serialization.EnumModel.Constants">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.SourceInfo.CastTo(System.Xml.Serialization.TypeDesc)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="td">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.Serialization.TempAssembly.Contract">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.TempAssembly.GenerateAssembly(System.Xml.Serialization.XmlMapping[],System.Type[],System.String,System.Object,System.Reflection.Assembly)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="xmlMappings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TempAssembly.GetMethodFromType(System.Type,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="methodName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TypeScope.GetAllMembers(System.Xml.Serialization.StructMapping,System.Collections.Generic.Dictionary{System.String,System.Reflection.MemberInfo})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="mapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="memberInfos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.InnerList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Serialization.XmlAnyElementAttributes.List">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.InnerList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Serialization.XmlArrayItemAttributes.List">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlCustomFormatter.ToByteArrayBase64(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Serialization.XmlElementAttributes.InnerList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="P:System.Xml.Serialization.XmlElementAttributes.List">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.GetChoiceIdentifierType(,System.Xml.Serialization.StructModel,System.Boolean,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="structModel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.GetChoiceIdentifierType(,System.Xml.Serialization.XmlReflectionMember[],System.Boolean,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="xmlReflectionMembers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.GetMethodFromSchemaProvider(,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportElement(System.Xml.Serialization.TypeModel,,System.String,System.Xml.Serialization.RecursionLimiter)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="model">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="limiter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(System.Type,,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.CreateUnknownTypeException">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadTypedNull">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.ReadXmlNodes(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationWriter.ListUsedPrefixes(System.Collections.InternalHashtable,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.ToArray">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Extensions.ExtensionMethods.Contains(System.Collections.Generic.Dictionary{System.Object,System.Object},System.Object)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Extensions.ExtensionMethods.CopyTo(System.Collections.Generic.Dictionary{System.Object,System.Object}.ValueCollection,System.Array,System.Int32)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.BeginMethod(System.Type,System.String,System.Type[],System.String[],System.Reflection.MethodAttributes)">
    <parameter name="methodName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="argTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="argNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.BeginMethod(System.Type,System.Xml.Serialization.MethodBuilderInfo,System.Type[],System.String[],System.Reflection.MethodAttributes)">
    <parameter name="methodBuilderInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="argTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="argNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.Box(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.Call(System.Reflection.ConstructorInfo)">
    <parameter name="ctor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.Call(System.Reflection.MethodInfo)">
    <parameter name="methodInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.Castclass(System.Type)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.ConvertAddress(System.Type,System.Type)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.ConvertValue(System.Type,System.Type)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.DeclareOrGetLocal(System.Type,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.GetArg(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.GetLocal(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.GetTempLocal(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.GetVariable(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.InitILGeneration(System.Type[],System.String[],System.Boolean)">
    <parameter name="argTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="argNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.InitObj(System.Type)">
    <parameter name="valueType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.InternalConvert(System.Type,System.Type,System.Boolean)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.IsInst(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.IsNullableGenericType(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.IsStruct(System.Type)">
    <parameter name="objType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.IsValidLanguageIndependentIdentifier(System.String)">
    <parameter name="ident">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.Ldarg(System.String)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.Ldarg(System.Xml.Serialization.ArgBuilder)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.Ldarga(System.Xml.Serialization.ArgBuilder)">
    <parameter name="argBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.LdargAddress(System.Xml.Serialization.ArgBuilder)">
    <parameter name="argBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.Ldc(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.Ldelem(System.Type)">
    <parameter name="arrayElementType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.Ldelema(System.Type)">
    <parameter name="arrayElementType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.Ldloc(System.Reflection.Emit.LocalBuilder)">
    <parameter name="localBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.Ldloc(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.Ldloc(System.Type,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.Ldloca(System.Reflection.Emit.LocalBuilder)">
    <parameter name="localBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.LdlocAddress(System.Reflection.Emit.LocalBuilder)">
    <parameter name="localBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.Ldobj(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.Ldtoken(System.Type)">
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.New(System.Reflection.ConstructorInfo)">
    <parameter name="constructorInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.NewArray(System.Type,System.Object)">
    <parameter name="elementType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.Stelem(System.Type)">
    <parameter name="arrayElementType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.Stloc(System.Reflection.Emit.LocalBuilder)">
    <parameter name="local">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.Stloc(System.Type,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.Stobj(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.StoreMember(System.Reflection.MemberInfo)">
    <parameter name="memberInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.TryGetVariable(System.String,System.Object@)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.Unbox(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.CodeGenerator.WhileState.#ctor(System.Xml.Serialization.CodeGenerator)">
    <parameter name="ilg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.SourceInfo.Load(System.Type)">
    <parameter name="elementType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TempAssembly.#ctor(System.Xml.Serialization.XmlMapping[],System.Type[],System.String,System.String,System.Object)">
    <parameter name="xmlMappings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TempAssembly.InvokeReader(System.Xml.Serialization.XmlMapping,,System.Object,System.String)">
    <parameter name="mapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TempAssembly.InvokeWriter(System.Xml.Serialization.XmlMapping,,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.String,System.String)">
    <parameter name="mapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.TypeScope.AddNonXsdPrimitive(System.Type,System.String,System.String,System.String,,System.Object[],System.Xml.Serialization.TypeFlags)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Add">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Contains">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.CopyTo([],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.IndexOf">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Insert(System.Int32,)">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.Remove">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#IList#Add(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#IList#Contains(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlAnyElementAttributes.System#Collections#IList#Remove(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Add">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Contains">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.CopyTo([],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.IndexOf">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Insert(System.Int32,)">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.Remove">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Add(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Contains(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlArrayItemAttributes.System#Collections#IList#Remove(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlCustomFormatter.ToEnum(System.String,System.Collections.IDictionary,System.String,System.Boolean)">
    <parameter name="val">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="vals">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlElementAttributes.Add">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlElementAttributes.Contains">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlElementAttributes.CopyTo([],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlElementAttributes.IndexOf">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlElementAttributes.Insert(System.Int32,)">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlElementAttributes.Remove">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Add(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Contains(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlElementAttributes.System#Collections#IList#Remove(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlMapping.GenerateKey(System.Type,,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializationReader.ToEnum(System.String,System.Collections.IDictionary,System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="h">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="extraTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],,System.String,System.Object,System.Object)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="extraTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Serialization.XmlSerializerNamespaces.#ctor([])">
    <parameter name="namespaces">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.ByteArrayChunk.AsStream">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.StringData.AsStream">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.StringData.AsTextReader">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(,System.Byte[])">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(,System.Byte[],System.Int32,System.Int32)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(,System.IO.Stream)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(,System.String)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Add(,System.Xml.Resolvers.XmlPreloadedResolver.PreloadedData)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.AddKnownDtd(System.Xml.Resolvers.XmlPreloadedResolver.XmlKnownDtdData[])">
    <parameter name="dtdSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.ByteArrayChunk.#ctor(System.Byte[])">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(,System.String,System.Type)">
    <parameter name="absoluteUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.Remove">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(,System.Type)">
    <parameter name="absoluteUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:MS.Internal.Xml.XPath.CompiledXpathExpr.UndefinedXsltContext.DefaultNamespace">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:MS.Internal.Xml.XPath.FunctionQuery.Evaluate(System.Xml.XPath.XPathNodeIterator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:MS.Internal.Xml.XPath.QueryBuilder.ProcessArguments(System.Collections.Generic.List{System.Object},MS.Internal.Xml.XPath.QueryBuilder.Props@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XPath.XPathExpression.Compile(System.String,)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="xpath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.Evaluate(System.String,)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="xpath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.GetNamespaces">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.Select(System.String,)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    <parameter name="xpath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.String,)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
    <parameter name="xpath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="P:System.Xml.XPath.XPathNodeIterator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor"/>
  </member>
  <member name="M:MS.Internal.Xml.XPath.AttributeQuery.#ctor(MS.Internal.Xml.XPath.AttributeQuery)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.ChildrenQuery.#ctor(MS.Internal.Xml.XPath.ChildrenQuery)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.DescendantBaseQuery.#ctor(MS.Internal.Xml.XPath.DescendantBaseQuery)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.DocumentOrderQuery.#ctor(MS.Internal.Xml.XPath.DocumentOrderQuery)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.FilterQuery.#ctor(MS.Internal.Xml.XPath.FilterQuery)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.FollowingQuery.#ctor(MS.Internal.Xml.XPath.FollowingQuery)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.FollSiblingQuery.#ctor(MS.Internal.Xml.XPath.FollSiblingQuery)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.ForwardPositionQuery.#ctor(MS.Internal.Xml.XPath.ForwardPositionQuery)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.Function.#ctor(MS.Internal.Xml.XPath.Function.FunctionType,System.Collections.Generic.List{System.Object})">
    <parameter name="argumentList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.Function.#ctor(System.String,System.String,System.Collections.Generic.List{System.Object})">
    <parameter name="argumentList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.GroupQuery.#ctor(MS.Internal.Xml.XPath.GroupQuery)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.IDQuery.#ctor(MS.Internal.Xml.XPath.IDQuery)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.MergeFilterQuery.#ctor(MS.Internal.Xml.XPath.MergeFilterQuery)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.NamespaceQuery.#ctor(MS.Internal.Xml.XPath.NamespaceQuery)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.PrecedingQuery.#ctor(MS.Internal.Xml.XPath.PrecedingQuery)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.ReversePositionQuery.#ctor(MS.Internal.Xml.XPath.ReversePositionQuery)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:MS.Internal.Xml.XPath.XPathSelfQuery.#ctor(MS.Internal.Xml.XPath.XPathSelfQuery)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.AppendChild">
    <parameter name="newChild">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.InsertAfter">
    <parameter name="newSibling">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.InsertBefore">
    <parameter name="newSibling">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.PrependChild">
    <parameter name="newChild">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.ReplaceSelf">
    <parameter name="newNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigator.WriteSubtree">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigatorReader.GetAttribute(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
  <member name="M:System.Xml.XPath.XPathNavigatorReader.MoveToAttribute(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor"/>
    </parameter>
  </member>
</assembly>
